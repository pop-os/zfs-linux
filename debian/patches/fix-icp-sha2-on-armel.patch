Description: icp/asm-asm/sha2: Remove hardcoded __ARM_ARCH__.
 This patch avoids compilation error on early ARM architectures.
Author: Shengqi Chen <harry-chen@outlook.com>
Bug: https://github.com/openzfs/zfs/pull/15557
Last-Update: 2023-11-22

Index: zfs-linux/module/icp/asm-arm/sha2/sha256-armv7.S
===================================================================
--- zfs-linux.orig/module/icp/asm-arm/sha2/sha256-armv7.S
+++ zfs-linug/module/icp/asm-arm/sha2/sha256-armv7.S
@@ -21,8 +21,11 @@
 
 #if defined(__arm__)
 
+#ifndef __ARM_ARCH
 #define	__ARM_ARCH__      7
-#define	__ARM_MAX_ARCH__  7
+#else
+#define __ARM_ARCH__      __ARM_ARCH
+#endif
 
 #if defined(__thumb2__)
 .syntax unified
@@ -1846,7 +1849,11 @@
 	stmdb	sp!,{r4-r12,lr}
 
 	sub	r11,sp,#16*4+16
+#if __ARM_ARCH__>=7
 	adr	r14,K256
+#else
+	ldr	r14,=K256
+#endif
 	bic	r11,r11,#15		@ align for 128-bit stores
 	mov	r12,sp
 	mov	sp,r11			@ alloca

Index: zfs-linux/module/icp/asm-arm/sha2/sha512-armv7.S
===================================================================
--- zfs-linux.orig/module/icp/asm-arm/sha2/sha512-armv7.S
+++ zfs-linux/module/icp/asm-arm/sha2/sha512-armv7.S
@@ -21,8 +21,11 @@
 
 #if defined(__arm__)
 
+#ifndef __ARM_ARCH
 #define	__ARM_ARCH__      7
-#define	__ARM_MAX_ARCH__  7
+#else
+#define __ARM_ARCH__      __ARM_ARCH
+#endif
 
 #ifndef __KERNEL__
 # define VFP_ABI_PUSH	vstmdb	sp!,{d8-d15}
