/* zfs_config.h.in.  Generated from configure.ac by autoheader.  */

/* Define to 1 if translation of program messages to the user's native
   language is requested. */
#undef ENABLE_NLS

/* __assign_str() has one arg */
#undef HAVE_1ARG_ASSIGN_STR

/* lookup_bdev() wants 1 arg */
#undef HAVE_1ARG_LOOKUP_BDEV

/* kernel has access_ok with 'type' parameter */
#undef HAVE_ACCESS_OK_TYPE

/* add_disk() returns int */
#undef HAVE_ADD_DISK_RET

/* Define if host toolchain supports AES */
#undef HAVE_AES

/* Define if you have [rt] */
#undef HAVE_AIO_H

/* Define if host toolchain supports AVX */
#undef HAVE_AVX

/* Define if host toolchain supports AVX2 */
#undef HAVE_AVX2

/* Define if host toolchain supports AVX512BW */
#undef HAVE_AVX512BW

/* Define if host toolchain supports AVX512CD */
#undef HAVE_AVX512CD

/* Define if host toolchain supports AVX512DQ */
#undef HAVE_AVX512DQ

/* Define if host toolchain supports AVX512ER */
#undef HAVE_AVX512ER

/* Define if host toolchain supports AVX512F */
#undef HAVE_AVX512F

/* Define if host toolchain supports AVX512IFMA */
#undef HAVE_AVX512IFMA

/* Define if host toolchain supports AVX512PF */
#undef HAVE_AVX512PF

/* Define if host toolchain supports AVX512VBMI */
#undef HAVE_AVX512VBMI

/* Define if host toolchain supports AVX512VL */
#undef HAVE_AVX512VL

/* backtrace() is available */
#undef HAVE_BACKTRACE

/* bdevname() is available */
#undef HAVE_BDEVNAME

/* bdev_check_media_change() exists */
#undef HAVE_BDEV_CHECK_MEDIA_CHANGE

/* bdev_file_open_by_path() exists */
#undef HAVE_BDEV_FILE_OPEN_BY_PATH

/* bdev_*_io_acct() available */
#undef HAVE_BDEV_IO_ACCT_63

/* bdev_*_io_acct() available */
#undef HAVE_BDEV_IO_ACCT_OLD

/* bdev_kobj() exists */
#undef HAVE_BDEV_KOBJ

/* bdev_max_discard_sectors() is available */
#undef HAVE_BDEV_MAX_DISCARD_SECTORS

/* bdev_max_secure_erase_sectors() is available */
#undef HAVE_BDEV_MAX_SECURE_ERASE_SECTORS

/* bdev_nr_bytes() is available */
#undef HAVE_BDEV_NR_BYTES

/* bdev_open_by_path() exists */
#undef HAVE_BDEV_OPEN_BY_PATH

/* bdev_release() exists */
#undef HAVE_BDEV_RELEASE

/* block_device_operations->submit_bio() returns void */
#undef HAVE_BDEV_SUBMIT_BIO_RETURNS_VOID

/* bdev_whole() is available */
#undef HAVE_BDEV_WHOLE

/* bio_alloc() takes 4 arguments */
#undef HAVE_BIO_ALLOC_4ARG

/* bio->bi_bdev->bd_disk exists */
#undef HAVE_BIO_BDEV_DISK

/* bio_*_io_acct() available */
#undef HAVE_BIO_IO_ACCT

/* bio_max_segs() is implemented */
#undef HAVE_BIO_MAX_SEGS

/* bio_set_dev() GPL-only */
#undef HAVE_BIO_SET_DEV_GPL_ONLY

/* bio_set_dev() is a macro */
#undef HAVE_BIO_SET_DEV_MACRO

/* bio_set_op_attrs is available */
#undef HAVE_BIO_SET_OP_ATTRS

/* blkdev_get_by_path() exists and takes 4 args */
#undef HAVE_BLKDEV_GET_BY_PATH_4ARG

/* blkdev_get_by_path() handles ERESTARTSYS */
#undef HAVE_BLKDEV_GET_ERESTARTSYS

/* __blkdev_issue_discard(flags) is available */
#undef HAVE_BLKDEV_ISSUE_DISCARD_ASYNC_FLAGS

/* __blkdev_issue_discard() is available */
#undef HAVE_BLKDEV_ISSUE_DISCARD_ASYNC_NOFLAGS

/* blkdev_issue_discard(flags) is available */
#undef HAVE_BLKDEV_ISSUE_DISCARD_FLAGS

/* blkdev_issue_discard() is available */
#undef HAVE_BLKDEV_ISSUE_DISCARD_NOFLAGS

/* blkdev_issue_secure_erase() is available */
#undef HAVE_BLKDEV_ISSUE_SECURE_ERASE

/* blkdev_put() exists */
#undef HAVE_BLKDEV_PUT

/* blkdev_put() accepts void* as arg 2 */
#undef HAVE_BLKDEV_PUT_HOLDER

/* struct queue_limits has a features field */
#undef HAVE_BLKDEV_QUEUE_LIMITS_FEATURES

/* blkdev_reread_part() exists */
#undef HAVE_BLKDEV_REREAD_PART

/* blkg_tryget() is available */
#undef HAVE_BLKG_TRYGET

/* blkg_tryget() GPL-only */
#undef HAVE_BLKG_TRYGET_GPL_ONLY

/* blk_alloc_disk() exists */
#undef HAVE_BLK_ALLOC_DISK

/* blk_alloc_disk() exists and takes 2 args */
#undef HAVE_BLK_ALLOC_DISK_2ARG

/* blk_alloc_queue() expects request function */
#undef HAVE_BLK_ALLOC_QUEUE_REQUEST_FN

/* blk_alloc_queue_rh() expects request function */
#undef HAVE_BLK_ALLOC_QUEUE_REQUEST_FN_RH

/* blk_cleanup_disk() exists */
#undef HAVE_BLK_CLEANUP_DISK

/* blk_mode_t is defined */
#undef HAVE_BLK_MODE_T

/* block multiqueue hardware context is cached in struct request */
#undef HAVE_BLK_MQ_RQ_HCTX

/* blk queue backing_dev_info is dynamic */
#undef HAVE_BLK_QUEUE_BDI_DYNAMIC

/* blk_queue_discard() is available */
#undef HAVE_BLK_QUEUE_DISCARD

/* backing_dev_info is available through queue gendisk */
#undef HAVE_BLK_QUEUE_DISK_BDI

/* blk_queue_secure_erase() is available */
#undef HAVE_BLK_QUEUE_SECURE_ERASE

/* blk_queue_update_readahead() exists */
#undef HAVE_BLK_QUEUE_UPDATE_READAHEAD

/* BLK_STS_RESV_CONFLICT is defined */
#undef HAVE_BLK_STS_RESV_CONFLICT

/* Define if release() in block_device_operations takes 1 arg */
#undef HAVE_BLOCK_DEVICE_OPERATIONS_RELEASE_1ARG

/* Define if revalidate_disk() in block_device_operations */
#undef HAVE_BLOCK_DEVICE_OPERATIONS_REVALIDATE_DISK

/* Define to 1 if you have the Mac OS X function CFLocaleCopyCurrent in the
   CoreFoundation framework. */
#undef HAVE_CFLOCALECOPYCURRENT

/* Define to 1 if you have the Mac OS X function CFPreferencesCopyAppValue in
   the CoreFoundation framework. */
#undef HAVE_CFPREFERENCESCOPYAPPVALUE

/* check_disk_change() exists */
#undef HAVE_CHECK_DISK_CHANGE

/* copy_splice_read exists */
#undef HAVE_COPY_SPLICE_READ

/* cpu_has_feature() is GPL-only */
#undef HAVE_CPU_HAS_FEATURE_GPL_ONLY

/* Define if the GNU dcgettext() function is already present or preinstalled.
   */
#undef HAVE_DCGETTEXT

/* DECLARE_EVENT_CLASS() is available */
#undef HAVE_DECLARE_EVENT_CLASS

/* 3-arg dequeue_signal() takes a type argument */
#undef HAVE_DEQUEUE_SIGNAL_3ARG_TYPE

/* dequeue_signal() takes 4 arguments */
#undef HAVE_DEQUEUE_SIGNAL_4ARG

/* lookup_bdev() wants dev_t arg */
#undef HAVE_DEVT_LOOKUP_BDEV

/* disk_check_media_change() exists */
#undef HAVE_DISK_CHECK_MEDIA_CHANGE

/* disk_*_io_acct() available */
#undef HAVE_DISK_IO_ACCT

/* disk_update_readahead() exists */
#undef HAVE_DISK_UPDATE_READAHEAD

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if you have the `execvpe' function. */
#undef HAVE_EXECVPE

/* fault_in_iov_iter_readable() is available */
#undef HAVE_FAULT_IN_IOV_ITER_READABLE

/* file->f_version exists */
#undef HAVE_FILE_F_VERSION

/* flush_dcache_page() is GPL-only */
#undef HAVE_FLUSH_DCACHE_PAGE_GPL_ONLY

/* Define if compiler supports -Wformat-overflow */
#undef HAVE_FORMAT_OVERFLOW

/* fsync_bdev() is declared in include/blkdev.h */
#undef HAVE_FSYNC_BDEV

/* yes */
#undef HAVE_GENERIC_FADVISE

/* generic_fillattr requires struct mnt_idmap* */
#undef HAVE_GENERIC_FILLATTR_IDMAP

/* generic_fillattr requires struct mnt_idmap* and u32 request_mask */
#undef HAVE_GENERIC_FILLATTR_IDMAP_REQMASK

/* generic_fillattr requires struct user_namespace* */
#undef HAVE_GENERIC_FILLATTR_USERNS

/* generic_*_io_acct() 4 arg available */
#undef HAVE_GENERIC_IO_ACCT_4ARG

/* GENHD_FL_EXT_DEVT flag is available */
#undef HAVE_GENHD_FL_EXT_DEVT

/* GENHD_FL_NO_PART flag is available */
#undef HAVE_GENHD_FL_NO_PART

/* Define if the GNU gettext() function is already present or preinstalled. */
#undef HAVE_GETTEXT

/* Define to 1 if you have the `gettid' function. */
#undef HAVE_GETTID

/* iops->get_acl() exists */
#undef HAVE_GET_ACL

/* iops->get_acl() takes rcu */
#undef HAVE_GET_ACL_RCU

/* has iops->get_inode_acl() */
#undef HAVE_GET_INODE_ACL

/* iattr->ia_vfsuid and iattr->ia_vfsgid exist */
#undef HAVE_IATTR_VFSID

/* Define if you have the iconv() function and it works. */
#undef HAVE_ICONV

/* iops->getattr() takes struct mnt_idmap* */
#undef HAVE_IDMAP_IOPS_GETATTR

/* iops->setattr() takes struct mnt_idmap* */
#undef HAVE_IDMAP_IOPS_SETATTR

/* APIs for idmapped mount are present */
#undef HAVE_IDMAP_MNT_API

/* mnt_idmap does not have user_namespace */
#undef HAVE_IDMAP_NO_USERNS

/* Define if compiler supports -Wimplicit-fallthrough */
#undef HAVE_IMPLICIT_FALLTHROUGH

/* Define if compiler supports -Winfinite-recursion */
#undef HAVE_INFINITE_RECURSION

/* inode_get_atime() exists in linux/fs.h */
#undef HAVE_INODE_GET_ATIME

/* inode_get_ctime() exists in linux/fs.h */
#undef HAVE_INODE_GET_CTIME

/* inode_get_mtime() exists in linux/fs.h */
#undef HAVE_INODE_GET_MTIME

/* inode_owner_or_capable() exists */
#undef HAVE_INODE_OWNER_OR_CAPABLE

/* inode_owner_or_capable() takes mnt_idmap */
#undef HAVE_INODE_OWNER_OR_CAPABLE_IDMAP

/* inode_owner_or_capable() takes user_ns */
#undef HAVE_INODE_OWNER_OR_CAPABLE_USERNS

/* inode_set_atime_to_ts() exists in linux/fs.h */
#undef HAVE_INODE_SET_ATIME_TO_TS

/* inode_set_ctime_to_ts() exists in linux/fs.h */
#undef HAVE_INODE_SET_CTIME_TO_TS

/* inode_set_mtime_to_ts() exists in linux/fs.h */
#undef HAVE_INODE_SET_MTIME_TO_TS

/* timestamp_truncate() exists */
#undef HAVE_INODE_TIMESTAMP_TRUNCATE

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* iops->create() takes struct mnt_idmap* */
#undef HAVE_IOPS_CREATE_IDMAP

/* iops->create() takes struct user_namespace* */
#undef HAVE_IOPS_CREATE_USERNS

/* iops->mkdir() takes struct mnt_idmap* */
#undef HAVE_IOPS_MKDIR_IDMAP

/* iops->mkdir() takes struct user_namespace* */
#undef HAVE_IOPS_MKDIR_USERNS

/* iops->mknod() takes struct mnt_idmap* */
#undef HAVE_IOPS_MKNOD_IDMAP

/* iops->mknod() takes struct user_namespace* */
#undef HAVE_IOPS_MKNOD_USERNS

/* iops->permission() takes struct mnt_idmap* */
#undef HAVE_IOPS_PERMISSION_IDMAP

/* iops->permission() takes struct user_namespace* */
#undef HAVE_IOPS_PERMISSION_USERNS

/* iops->rename() takes struct mnt_idmap* */
#undef HAVE_IOPS_RENAME_IDMAP

/* iops->rename() takes struct user_namespace* */
#undef HAVE_IOPS_RENAME_USERNS

/* iops->symlink() takes struct mnt_idmap* */
#undef HAVE_IOPS_SYMLINK_IDMAP

/* iops->symlink() takes struct user_namespace* */
#undef HAVE_IOPS_SYMLINK_USERNS

/* iov_iter_type() is available */
#undef HAVE_IOV_ITER_TYPE

/* Define to 1 if you have the `issetugid' function. */
#undef HAVE_ISSETUGID

/* iter_iov() is available */
#undef HAVE_ITER_IOV

/* iter_is_ubuf() is available */
#undef HAVE_ITER_IS_UBUF

/* kernel has kernel_fpu_* functions */
#undef HAVE_KERNEL_FPU

/* kernel has asm/fpu/api.h */
#undef HAVE_KERNEL_FPU_API_HEADER

/* kernel fpu internal */
#undef HAVE_KERNEL_FPU_INTERNAL

/* kernel has asm/fpu/internal.h */
#undef HAVE_KERNEL_FPU_INTERNAL_HEADER

/* Define if compiler supports -Winfinite-recursion */
#undef HAVE_KERNEL_INFINITE_RECURSION

/* kernel defines intptr_t */
#undef HAVE_KERNEL_INTPTR_T

/* kernel has kernel_neon_* functions */
#undef HAVE_KERNEL_NEON

/* kernel does stack verification */
#undef HAVE_KERNEL_OBJTOOL

/* kernel has linux/objtool.h */
#undef HAVE_KERNEL_OBJTOOL_HEADER

/* strlcpy() exists */
#undef HAVE_KERNEL_STRLCPY

/* kernel has kmap_local_page */
#undef HAVE_KMAP_LOCAL_PAGE

/* Define if you have [aio] */
#undef HAVE_LIBAIO

/* Define if you have [blkid] */
#undef HAVE_LIBBLKID

/* Define if you have [crypto] */
#undef HAVE_LIBCRYPTO

/* Define if you have [tirpc] */
#undef HAVE_LIBTIRPC

/* Define if you have [udev] */
#undef HAVE_LIBUDEV

/* Define if you have [unwind] */
#undef HAVE_LIBUNWIND

/* libunwind has unw_get_elf_filename */
#undef HAVE_LIBUNWIND_ELF

/* Define if you have [uuid] */
#undef HAVE_LIBUUID

/* building against unsupported kernel version */
#undef HAVE_LINUX_EXPERIMENTAL

/* makedev() is declared in sys/mkdev.h */
#undef HAVE_MAKEDEV_IN_MKDEV

/* makedev() is declared in sys/sysmacros.h */
#undef HAVE_MAKEDEV_IN_SYSMACROS

/* Noting that make_request_fn() returns blk_qc_t */
#undef HAVE_MAKE_REQUEST_FN_RET_QC

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `mlockall' function. */
#undef HAVE_MLOCKALL

/* PG_error flag is available */
#undef HAVE_MM_PAGE_FLAG_ERROR

/* page_mapping() is available */
#undef HAVE_MM_PAGE_MAPPING

/* page_size() is available */
#undef HAVE_MM_PAGE_SIZE

/* Define if host toolchain supports MOVBE */
#undef HAVE_MOVBE

/* folio_wait_bit() exists */
#undef HAVE_PAGEMAP_FOLIO_WAIT_BIT

/* part_to_dev() exists */
#undef HAVE_PART_TO_DEV

/* iops->getattr() takes a path */
#undef HAVE_PATH_IOPS_GETATTR

/* Define if host toolchain supports PCLMULQDQ */
#undef HAVE_PCLMULQDQ

/* pin_user_pages_unlocked() is available */
#undef HAVE_PIN_USER_PAGES_UNLOCKED

/* proc_handler ctl_table arg is const */
#undef HAVE_PROC_HANDLER_CTL_TABLE_CONST

/* proc_ops structure exists */
#undef HAVE_PROC_OPS_STRUCT

/* If available, contains the Python version number currently in use. */
#undef HAVE_PYTHON

/* qat is enabled and existed */
#undef HAVE_QAT

/* struct reclaim_state has reclaimed */
#undef HAVE_RECLAIM_STATE_RECLAIMED

/* register_shrinker is vararg */
#undef HAVE_REGISTER_SHRINKER_VARARG

/* register_sysctl_sz exists */
#undef HAVE_REGISTER_SYSCTL_SZ

/* register_sysctl_table exists */
#undef HAVE_REGISTER_SYSCTL_TABLE

/* iops->rename() wants flags */
#undef HAVE_RENAME_WANTS_FLAGS

/* revalidate_disk() is available */
#undef HAVE_REVALIDATE_DISK

/* revalidate_disk_size() is available */
#undef HAVE_REVALIDATE_DISK_SIZE

/* Define to 1 if you have the <security/pam_modules.h> header file. */
#undef HAVE_SECURITY_PAM_MODULES_H

/* setattr_prepare() accepts mnt_idmap */
#undef HAVE_SETATTR_PREPARE_IDMAP

/* setattr_prepare() is available, doesn't accept user_namespace */
#undef HAVE_SETATTR_PREPARE_NO_USERNS

/* setattr_prepare() accepts user_namespace */
#undef HAVE_SETATTR_PREPARE_USERNS

/* iops->set_acl() takes 4 args, arg1 is struct mnt_idmap * */
#undef HAVE_SET_ACL_IDMAP_DENTRY

/* iops->set_acl() takes 4 args */
#undef HAVE_SET_ACL_USERNS

/* iops->set_acl() takes 4 args, arg2 is struct dentry * */
#undef HAVE_SET_ACL_USERNS_DENTRY_ARG2

/* shrinker_register exists */
#undef HAVE_SHRINKER_REGISTER

/* kernel_siginfo_t exists */
#undef HAVE_SIGINFO

/* Define if host toolchain supports SSE */
#undef HAVE_SSE

/* Define if host toolchain supports SSE2 */
#undef HAVE_SSE2

/* Define if host toolchain supports SSE3 */
#undef HAVE_SSE3

/* Define if host toolchain supports SSE4.1 */
#undef HAVE_SSE4_1

/* Define if host toolchain supports SSE4.2 */
#undef HAVE_SSE4_2

/* Define if host toolchain supports SSSE3 */
#undef HAVE_SSSE3

/* STACK_FRAME_NON_STANDARD is defined */
#undef HAVE_STACK_FRAME_NON_STANDARD

/* standalone <linux/stdarg.h> exists */
#undef HAVE_STANDALONE_LINUX_STDARG

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the `strlcat' function. */
#undef HAVE_STRLCAT

/* Define to 1 if you have the `strlcpy' function. */
#undef HAVE_STRLCPY

/* submit_bio is member of struct block_device_operations */
#undef HAVE_SUBMIT_BIO_IN_BLOCK_DEVICE_OPERATIONS

/* have super_block s_shrink */
#undef HAVE_SUPER_BLOCK_S_SHRINK

/* have super_block s_shrink pointer */
#undef HAVE_SUPER_BLOCK_S_SHRINK_PTR

/* sync_blockdev() is declared in include/blkdev.h */
#undef HAVE_SYNC_BLOCKDEV

/* struct kobj_type has default_groups */
#undef HAVE_SYSFS_DEFAULT_GROUPS

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* i_op->tmpfile() uses old dentry signature */
#undef HAVE_TMPFILE_DENTRY

/* i_op->tmpfile() has mnt_idmap */
#undef HAVE_TMPFILE_IDMAP

/* i_op->tmpfile() has userns */
#undef HAVE_TMPFILE_USERNS

/* totalhigh_pages() exists */
#undef HAVE_TOTALHIGH_PAGES

/* kernel has totalram_pages() */
#undef HAVE_TOTALRAM_PAGES_FUNC

/* Define to 1 if you have the `udev_device_get_is_initialized' function. */
#undef HAVE_UDEV_DEVICE_GET_IS_INITIALIZED

/* kernel has __kernel_fpu_* functions */
#undef HAVE_UNDERSCORE_KERNEL_FPU

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* iops->getattr() takes struct user_namespace* */
#undef HAVE_USERNS_IOPS_GETATTR

/* iops->setattr() takes struct user_namespace* */
#undef HAVE_USERNS_IOPS_SETATTR

/* fops->clone_file_range() is available */
#undef HAVE_VFS_CLONE_FILE_RANGE

/* fops->dedupe_file_range() is available */
#undef HAVE_VFS_DEDUPE_FILE_RANGE

/* filemap_dirty_folio exists */
#undef HAVE_VFS_FILEMAP_DIRTY_FOLIO

/* generic_copy_file_range() is available */
#undef HAVE_VFS_GENERIC_COPY_FILE_RANGE

/* migrate_folio exists */
#undef HAVE_VFS_MIGRATE_FOLIO

/* address_space_operations->readpages exists */
#undef HAVE_VFS_READPAGES

/* read_folio exists */
#undef HAVE_VFS_READ_FOLIO

/* fops->remap_file_range() is available */
#undef HAVE_VFS_REMAP_FILE_RANGE

/* __set_page_dirty_nobuffers exists */
#undef HAVE_VFS_SET_PAGE_DIRTY_NOBUFFERS

/* splice_copy_file_range() is available */
#undef HAVE_VFS_SPLICE_COPY_FILE_RANGE

/* __vmalloc page flags exists */
#undef HAVE_VMALLOC_PAGE_KERNEL

/* int (*writepage_t)() takes struct folio* */
#undef HAVE_WRITEPAGE_T_FOLIO

/* xattr_handler->get() wants dentry and inode and flags */
#undef HAVE_XATTR_GET_DENTRY_INODE_FLAGS

/* xattr_handler->set() wants both dentry and inode */
#undef HAVE_XATTR_SET_DENTRY_INODE

/* xattr_handler->set() takes mnt_idmap */
#undef HAVE_XATTR_SET_IDMAP

/* xattr_handler->set() takes user_namespace */
#undef HAVE_XATTR_SET_USERNS

/* Define if host toolchain supports XSAVE */
#undef HAVE_XSAVE

/* Define if host toolchain supports XSAVEOPT */
#undef HAVE_XSAVEOPT

/* Define if host toolchain supports XSAVES */
#undef HAVE_XSAVES

/* ZERO_PAGE() is GPL-only */
#undef HAVE_ZERO_PAGE_GPL_ONLY

/* Define if you have [z] */
#undef HAVE_ZLIB

/* kernel exports FPU functions */
#undef KERNEL_EXPORTS_X86_FPU

/* whether the chosen libfetch is to be loaded at run-time */
#undef LIBFETCH_DYNAMIC

/* libfetch is fetch(3) */
#undef LIBFETCH_IS_FETCH

/* libfetch is libcurl */
#undef LIBFETCH_IS_LIBCURL

/* soname of chosen libfetch */
#undef LIBFETCH_SONAME

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* make_request_fn() return type */
#undef MAKE_REQUEST_FN_RET

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* using complete_and_exit() instead */
#undef SPL_KTHREAD_COMPLETE_AND_EXIT

/* Defined for legacy compatibility. */
#undef SPL_META_ALIAS

/* Defined for legacy compatibility. */
#undef SPL_META_RELEASE

/* Defined for legacy compatibility. */
#undef SPL_META_VERSION

/* pde_data() is PDE_DATA() */
#undef SPL_PDE_DATA

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* True if ZFS is to be compiled for a FreeBSD system */
#undef SYSTEM_FREEBSD

/* True if ZFS is to be compiled for a Linux system */
#undef SYSTEM_LINUX

/* Version number of package */
#undef VERSION

/* zfs debugging enabled */
#undef ZFS_DEBUG

/* /dev/zfs minor */
#undef ZFS_DEVICE_MINOR

/* Define the project alias string. */
#undef ZFS_META_ALIAS

/* Define the project author. */
#undef ZFS_META_AUTHOR

/* Define the project release date. */
#undef ZFS_META_DATA

/* Define the maximum compatible kernel version. */
#undef ZFS_META_KVER_MAX

/* Define the minimum compatible kernel version. */
#undef ZFS_META_KVER_MIN

/* Define the project license. */
#undef ZFS_META_LICENSE

/* Define the libtool library 'age' version information. */
#undef ZFS_META_LT_AGE

/* Define the libtool library 'current' version information. */
#undef ZFS_META_LT_CURRENT

/* Define the libtool library 'revision' version information. */
#undef ZFS_META_LT_REVISION

/* Define the project name. */
#undef ZFS_META_NAME

/* Define the project release. */
#undef ZFS_META_RELEASE

/* Define the project version. */
#undef ZFS_META_VERSION

/* count is located in percpu_ref.data */
#undef ZFS_PERCPU_REF_COUNT_IN_DATA


#undef PACKAGE
#undef PACKAGE_BUGREPORT
#undef PACKAGE_NAME
#undef PACKAGE_STRING
#undef PACKAGE_TARNAME
#undef PACKAGE_VERSION
#undef STDC_HEADERS
#undef VERSION
