#! /bin/sh
# Guess values for system-dependent variables and create Makefiles.
# Generated by GNU Autoconf 2.71 for zfs 2.2.0.
#
#
# Copyright (C) 1992-1996, 1998-2017, 2020-2021 Free Software Foundation,
# Inc.
#
#
# This configure script is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi


# Use a proper internal environment variable to ensure we don't fall
  # into an infinite loop, continuously re-executing ourselves.
  if test x"${_as_can_reexec}" != xno && test "x$CONFIG_SHELL" != x; then
    _as_can_reexec=no; export _as_can_reexec;
    # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
printf "%s\n" "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
  fi
  # We don't want this to propagate to other subprocesses.
          { _as_can_reexec=; unset _as_can_reexec;}
if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="as_nop=:
if test \${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else \$as_nop
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" )
then :

else \$as_nop
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
blah=\$(echo \$(echo blah))
test x\"\$blah\" = xblah || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1

  test -n \"\${ZSH_VERSION+set}\${BASH_VERSION+set}\" || (
    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
    ECHO=\$ECHO\$ECHO\$ECHO\$ECHO\$ECHO
    ECHO=\$ECHO\$ECHO\$ECHO\$ECHO\$ECHO\$ECHO
    PATH=/empty FPATH=/empty; export PATH FPATH
    test \"X\`printf %s \$ECHO\`\" = \"X\$ECHO\" \\
      || test \"X\`print -r -- \$ECHO\`\" = \"X\$ECHO\" ) || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null
then :
  as_have_required=yes
else $as_nop
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null
then :

else $as_nop
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    as_run=a "$as_shell" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if as_run=a "$as_shell" -c "$as_bourne_compatible""$as_suggested" 2>/dev/null
then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
IFS=$as_save_IFS
if $as_found
then :

else $as_nop
  if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      as_run=a "$SHELL" -c "$as_bourne_compatible""$as_required" 2>/dev/null
then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi
fi


      if test "x$CONFIG_SHELL" != x
then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
printf "%s\n" "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno
then :
  printf "%s\n" "$0: This script requires a shell more modern than all"
  printf "%s\n" "$0: the shells that I found on your system."
  if test ${ZSH_VERSION+y} ; then
    printf "%s\n" "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    printf "%s\n" "$0: be upgraded to zsh 4.3.4 or later."
  else
    printf "%s\n" "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit
# as_fn_nop
# ---------
# Do nothing but, unlike ":", preserve the value of $?.
as_fn_nop ()
{
  return $?
}
as_nop=as_fn_nop

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith

# as_fn_nop
# ---------
# Do nothing but, unlike ":", preserve the value of $?.
as_fn_nop ()
{
  return $?
}
as_nop=as_fn_nop

# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { printf "%s\n" "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'


rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"

SHELL=${CONFIG_SHELL-/bin/sh}

as_awk_strverscmp='
  # Use only awk features that work with 7th edition Unix awk (1978).
  # My, what an old awk you have, Mr. Solaris!
  END {
    while (length(v1) && length(v2)) {
      # Set d1 to be the next thing to compare from v1, and likewise for d2.
      # Normally this is a single character, but if v1 and v2 contain digits,
      # compare them as integers and fractions as strverscmp does.
      if (v1 ~ /^[0-9]/ && v2 ~ /^[0-9]/) {
	# Split v1 and v2 into their leading digit string components d1 and d2,
	# and advance v1 and v2 past the leading digit strings.
	for (len1 = 1; substr(v1, len1 + 1) ~ /^[0-9]/; len1++) continue
	for (len2 = 1; substr(v2, len2 + 1) ~ /^[0-9]/; len2++) continue
	d1 = substr(v1, 1, len1); v1 = substr(v1, len1 + 1)
	d2 = substr(v2, 1, len2); v2 = substr(v2, len2 + 1)
	if (d1 ~ /^0/) {
	  if (d2 ~ /^0/) {
	    # Compare two fractions.
	    while (d1 ~ /^0/ && d2 ~ /^0/) {
	      d1 = substr(d1, 2); len1--
	      d2 = substr(d2, 2); len2--
	    }
	    if (len1 != len2 && ! (len1 && len2 && substr(d1, 1, 1) == substr(d2, 1, 1))) {
	      # The two components differ in length, and the common prefix
	      # contains only leading zeros.  Consider the longer to be less.
	      d1 = -len1
	      d2 = -len2
	    } else {
	      # Otherwise, compare as strings.
	      d1 = "x" d1
	      d2 = "x" d2
	    }
	  } else {
	    # A fraction is less than an integer.
	    exit 1
	  }
	} else {
	  if (d2 ~ /^0/) {
	    # An integer is greater than a fraction.
	    exit 2
	  } else {
	    # Compare two integers.
	    d1 += 0
	    d2 += 0
	  }
	}
      } else {
	# The normal case, without worrying about digits.
	d1 = substr(v1, 1, 1); v1 = substr(v1, 2)
	d2 = substr(v2, 1, 1); v2 = substr(v2, 2)
      }
      if (d1 < d2) exit 1
      if (d1 > d2) exit 2
    }
    # Beware Solaris /usr/xgp4/bin/awk (at least through Solaris 10),
    # which mishandles some comparisons of empty strings to integers.
    if (length(v2)) exit 1
    if (length(v1)) exit 2
  }
'

test -n "$DJDIR" || exec 7<&0 </dev/null
exec 6>&1

# Name of the host.
# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,
# so uname gets run too.
ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`

#
# Initializations.
#
ac_default_prefix=/usr/local
ac_clean_files=
ac_config_libobj_dir=.
LIBOBJS=
cross_compiling=no
subdirs=
MFLAGS=
MAKEFLAGS=

# Identity of this package.
PACKAGE_NAME='zfs'
PACKAGE_TARNAME='zfs'
PACKAGE_VERSION='2.2.0'
PACKAGE_STRING='zfs 2.2.0'
PACKAGE_BUGREPORT=''
PACKAGE_URL=''

# Factoring default headers for most tests.
ac_includes_default="\
#include <stddef.h>
#ifdef HAVE_STDIO_H
# include <stdio.h>
#endif
#ifdef HAVE_STDLIB_H
# include <stdlib.h>
#endif
#ifdef HAVE_STRING_H
# include <string.h>
#endif
#ifdef HAVE_INTTYPES_H
# include <inttypes.h>
#endif
#ifdef HAVE_STDINT_H
# include <stdint.h>
#endif
#ifdef HAVE_STRINGS_H
# include <strings.h>
#endif
#ifdef HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#ifdef HAVE_SYS_STAT_H
# include <sys/stat.h>
#endif
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif"

ac_header_c_list=
gt_needs=
ac_subst_vars='am__EXEEXT_FALSE
am__EXEEXT_TRUE
LTLIBOBJS
LIBOBJS
WITH_INVARIANTS
DEBUG_KMEM_TRACKING_ZFS
DEBUG_KMEM_ZFS
DEBUGINFO_ZFS
KERNEL_DEBUG_CPPFLAGS
KERNEL_DEBUG_CFLAGS
WITH_DEBUG
DEBUG_ZFS
DEBUG_LDFLAGS
DEBUG_CPPFLAGS
DEBUG_CFLAGS
ALIEN_POINT
ALIEN_MINOR
ALIEN_MAJOR
ALIEN_VERSION
ALIEN
HAVE_ALIEN
CFGOPTS
DPKGBUILD_VERSION
DPKGBUILD
HAVE_DPKGBUILD
DPKG_VERSION
DPKG
HAVE_DPKG
SRPM_DEFINE_COMMON
SRPM_DEFINE_DKMS
SRPM_DEFINE_KMOD
SRPM_DEFINE_UTIL
RPM_DEFINE_COMMON
RPM_DEFINE_DKMS
RPM_DEFINE_KMOD
RPM_DEFINE_UTIL
RPM_SPEC_DIR
RPMBUILD_VERSION
RPMBUILD
HAVE_RPMBUILD
RPM_VERSION
RPM
HAVE_RPM
MULTIARCH_LIBDIR
bashcompletiondir
RPM_DEFINE_INITRAMFS
initconfdir
DEFAULT_INIT_NFS_SERVER
DEFAULT_INIT_SHELL
initdir
DEFAULT_PACKAGE
VENDOR
PAM_ZFS_ENABLED_FALSE
PAM_ZFS_ENABLED_TRUE
WANT_MMAP_LIBAIO_FALSE
WANT_MMAP_LIBAIO_TRUE
WANT_DEVNAME2DEVID_FALSE
WANT_DEVNAME2DEVID_TRUE
CONFIG_QAT_FALSE
CONFIG_QAT_TRUE
CONFIG_KERNEL_FALSE
CONFIG_KERNEL_TRUE
CONFIG_USER_FALSE
CONFIG_USER_TRUE
WANT_MODULES_LOAD_D_FALSE
WANT_MODULES_LOAD_D_TRUE
INIT_SYSTEMD_FALSE
INIT_SYSTEMD_TRUE
INIT_SYSV_FALSE
INIT_SYSV_TRUE
RM
zfsexecdir
pamconfigsdir
pammoduledir
DEFINE_PAM
LIBCLOCK_GETTIME
AIO_H_PC
AIO_H_LIBS
AIO_H_CFLAGS
LIBFETCH_SONAME
LIBFETCH_DYNAMIC
LIBFETCH_LIBS
LIBATOMIC_LIBS
LIBAIO_PC
LIBAIO_LIBS
LIBAIO_CFLAGS
LIBCRYPTO_PC
LIBCRYPTO_LIBS
LIBCRYPTO_CFLAGS
LIBTIRPC_PC
LIBTIRPC_LIBS
LIBTIRPC_CFLAGS
LIBBLKID_PC
LIBBLKID_LIBS
LIBBLKID_CFLAGS
LIBUUID_PC
LIBUUID_LIBS
LIBUUID_CFLAGS
LIBUDEV_PC
LIBUDEV_LIBS
LIBUDEV_CFLAGS
modulesloaddir
systemdgeneratordir
systemdpresetdir
systemdunitdir
DEFINE_SYSTEMD
udevruledir
udevdir
ZLIB_PC
ZLIB_LIBS
ZLIB_CFLAGS
pkgconfigdir
dracutdir
mounthelperdir
POSUB
LTLIBINTL
LIBINTL
INTLLIBS
LTLIBICONV
LIBICONV
INTL_MACOSX_LIBS
XGETTEXT_EXTRA_OPTIONS
MSGMERGE_FOR_MSGFMT_OPTION
MSGMERGE
XGETTEXT_015
XGETTEXT
GMSGFMT_015
GMSGFMT
MSGFMT
GETTEXT_MACRO_VERSION
USE_NLS
KERNEL_MAKE
LINUX_SYMBOLS
KERNEL_LLVM
KERNEL_LD
KERNEL_CC
QAT_SYMBOLS
QAT_OBJ
QAT_SRC
LINUX_VERSION
LINUX_OBJ
LINUX
TEST_JOBS
HAVE_PARALLEL_FALSE
HAVE_PARALLEL_TRUE
PARALLEL
HAVE_CHECKBASHISMS_FALSE
HAVE_CHECKBASHISMS_TRUE
HAVE_SHELLCHECK_FALSE
HAVE_SHELLCHECK_TRUE
CHECKBASHISMS
SHELLCHECK
CPPCHECK
ac_inplace
pythonsitedir
PYZFS_ENABLED
PYZFS_ENABLED_FALSE
PYZFS_ENABLED_TRUE
PYTHON_EXTRA_LDFLAGS
PYTHON_EXTRA_LIBS
PYTHON_SITE_PKG
PYTHON_LIBS
PYTHON_CPPFLAGS
DEFINE_PYZFS
DEFINE_PYTHON_PKG_VERSION
DEFINE_PYTHON_VERSION
PYTHON_SHEBANG
USING_PYTHON_FALSE
USING_PYTHON_TRUE
pkgpyexecdir
pyexecdir
pkgpythondir
pythondir
PYTHON_EXEC_PREFIX
PYTHON_PREFIX
PYTHON_PLATFORM
PYTHON_VERSION
PYTHON
TARGET_CPU_ARM_FALSE
TARGET_CPU_ARM_TRUE
TARGET_CPU_SPARC64_FALSE
TARGET_CPU_SPARC64_TRUE
TARGET_CPU_POWERPC_FALSE
TARGET_CPU_POWERPC_TRUE
TARGET_CPU_X86_64_FALSE
TARGET_CPU_X86_64_TRUE
TARGET_CPU_AARCH64_FALSE
TARGET_CPU_AARCH64_TRUE
BUILD_FREEBSD_FALSE
BUILD_FREEBSD_TRUE
BUILD_LINUX_FALSE
BUILD_LINUX_TRUE
ac_system_l
ac_system
UBSAN_ZFS
UBSAN_LDFLAGS
UBSAN_CFLAGS
UBSAN_ENABLED
UBSAN_ENABLED_FALSE
UBSAN_ENABLED_TRUE
ASAN_ZFS
ASAN_LDFLAGS
ASAN_CFLAGS
ASAN_ENABLED
ASAN_ENABLED_FALSE
ASAN_ENABLED_TRUE
KERNEL_NO_IPA_SRA
NO_IPA_SRA
NO_OMIT_FRAME_POINTER
FORMAT_OVERFLOW
NO_FORMAT_ZERO_LENGTH
NO_FORMAT_TRUNCATION
FRAME_LARGER_THAN
IMPLICIT_FALLTHROUGH
KERNEL_INFINITE_RECURSION
INFINITE_RECURSION
NO_CLOBBERED
CPU_COUNT
ZFS_CONFIG
CODE_COVERAGE_RULES
CODE_COVERAGE_LDFLAGS
CODE_COVERAGE_LIBS
CODE_COVERAGE_CXXFLAGS
CODE_COVERAGE_CFLAGS
CODE_COVERAGE_CPPFLAGS
GENHTML
LCOV
GCOV
CODE_COVERAGE_ENABLED
CODE_COVERAGE_ENABLED_FALSE
CODE_COVERAGE_ENABLED_TRUE
am__fastdepCCAS_FALSE
am__fastdepCCAS_TRUE
CCASDEPMODE
CCASFLAGS
CCAS
PKG_CONFIG_LIBDIR
PKG_CONFIG_PATH
PKG_CONFIG
LT_SYS_LIBRARY_PATH
OTOOL64
OTOOL
LIPO
NMEDIT
DSYMUTIL
MANIFEST_TOOL
RANLIB
ac_ct_AR
AR
DLLTOOL
OBJDUMP
FILECMD
LN_S
NM
ac_ct_DUMPBIN
DUMPBIN
LD
FGREP
EGREP
GREP
SED
am__fastdepCC_FALSE
am__fastdepCC_TRUE
CCDEPMODE
am__nodep
AMDEPBACKSLASH
AMDEP_FALSE
AMDEP_TRUE
am__include
DEPDIR
OBJEXT
EXEEXT
ac_ct_CC
CPPFLAGS
LDFLAGS
CFLAGS
CC
LIBTOOL
CSCOPE
ETAGS
CTAGS
am__untar
am__tar
AMTAR
am__leading_dot
SET_MAKE
mkdir_p
MKDIR_P
INSTALL_STRIP_PROGRAM
STRIP
install_sh
MAKEINFO
AUTOHEADER
AUTOMAKE
AUTOCONF
ACLOCAL
VERSION
PACKAGE
CYGPATH_W
am__isrc
INSTALL_DATA
INSTALL_SCRIPT
INSTALL_PROGRAM
AM_BACKSLASH
AM_DEFAULT_VERBOSITY
AM_DEFAULT_V
AM_V
MAINT
MAINTAINER_MODE_FALSE
MAINTAINER_MODE_TRUE
target_os
target_vendor
target_cpu
target
host_os
host_vendor
host_cpu
host
build_os
build_vendor
build_cpu
build
ZFS_META_LT_AGE
ZFS_META_LT_REVISION
ZFS_META_LT_CURRENT
ZFS_META_KVER_MAX
ZFS_META_KVER_MIN
ZFS_META_AUTHOR
ZFS_META_DATA
ZFS_META_ALIAS
ZFS_META_LICENSE
RELEASE
ZFS_META_RELEASE
ZFS_META_VERSION
ZFS_META_NAME
AWK
target_alias
host_alias
build_alias
LIBS
ECHO_T
ECHO_N
ECHO_C
DEFS
mandir
localedir
libdir
psdir
pdfdir
dvidir
htmldir
infodir
docdir
oldincludedir
includedir
runstatedir
localstatedir
sharedstatedir
sysconfdir
datadir
datarootdir
libexecdir
sbindir
bindir
program_transform_name
prefix
exec_prefix
PACKAGE_URL
PACKAGE_BUGREPORT
PACKAGE_STRING
PACKAGE_VERSION
PACKAGE_TARNAME
PACKAGE_NAME
PATH_SEPARATOR
SHELL
am__quote'
ac_subst_files=''
ac_user_opts='
enable_option_checking
enable_maintainer_mode
enable_silent_rules
enable_shared
enable_static
with_pic
enable_fast_install
with_aix_soname
enable_dependency_tracking
with_gnu_ld
with_sysroot
enable_libtool_lock
with_gcov
enable_code_coverage
with_config
enable_linux_builtin
enable_asan
enable_ubsan
with_python
with_python_sys_prefix
with_python_prefix
with_python_exec_prefix
enable_pyzfs
with_linux
with_linux_obj
with_qat
with_qat_obj
enable_nls
enable_rpath
with_libiconv_prefix
with_libintl_prefix
with_mounthelperdir
enable_sysvinit
with_dracutdir
with_pkgconfigdir
with_udevdir
with_udevruledir
enable_systemd
with_systemdunitdir
with_systemdpresetdir
with_systemdmodulesloaddir
with_systemdgeneratordir
with_tirpc
enable_pam
with_pammoduledir
with_pamconfigsdir
with_zfsexecdir
with_vendor
with_spec
enable_debug
enable_debuginfo
enable_debug_kmem
enable_debug_kmem_tracking
enable_invariants
'
      ac_precious_vars='build_alias
host_alias
target_alias
CC
CFLAGS
LDFLAGS
LIBS
CPPFLAGS
LT_SYS_LIBRARY_PATH
PKG_CONFIG
PKG_CONFIG_PATH
PKG_CONFIG_LIBDIR
CCAS
CCASFLAGS
PYTHON
PYTHON_VERSION
TEST_JOBS
KERNEL_CC
KERNEL_LD
KERNEL_LLVM
ZLIB_CFLAGS
ZLIB_LIBS
LIBUDEV_CFLAGS
LIBUDEV_LIBS
LIBUUID_CFLAGS
LIBUUID_LIBS
LIBBLKID_CFLAGS
LIBBLKID_LIBS
LIBTIRPC_CFLAGS
LIBTIRPC_LIBS
LIBCRYPTO_CFLAGS
LIBCRYPTO_LIBS
LIBAIO_CFLAGS
LIBAIO_LIBS
AIO_H_CFLAGS
AIO_H_LIBS'


# Initialize some variables set by options.
ac_init_help=
ac_init_version=false
ac_unrecognized_opts=
ac_unrecognized_sep=
# The variables have the same names as the options, with
# dashes changed to underlines.
cache_file=/dev/null
exec_prefix=NONE
no_create=
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
verbose=
x_includes=NONE
x_libraries=NONE

# Installation directory options.
# These are left unexpanded so users can "make install exec_prefix=/foo"
# and all the variables that are supposed to be based on exec_prefix
# by default will actually change.
# Use braces instead of parens because sh, perl, etc. also accept them.
# (The list follows the same order as the GNU Coding Standards.)
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datarootdir='${prefix}/share'
datadir='${datarootdir}'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
runstatedir='${localstatedir}/run'
includedir='${prefix}/include'
oldincludedir='/usr/include'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
infodir='${datarootdir}/info'
htmldir='${docdir}'
dvidir='${docdir}'
pdfdir='${docdir}'
psdir='${docdir}'
libdir='${exec_prefix}/lib'
localedir='${datarootdir}/locale'
mandir='${datarootdir}/man'

ac_prev=
ac_dashdash=
for ac_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval $ac_prev=\$ac_option
    ac_prev=
    continue
  fi

  case $ac_option in
  *=?*) ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
  *=)   ac_optarg= ;;
  *)    ac_optarg=yes ;;
  esac

  case $ac_dashdash$ac_option in
  --)
    ac_dashdash=yes ;;

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir=$ac_optarg ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build_alias ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build_alias=$ac_optarg ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file=$ac_optarg ;;

  --config-cache | -C)
    cache_file=config.cache ;;

  -datadir | --datadir | --datadi | --datad)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=*)
    datadir=$ac_optarg ;;

  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
  | --dataroo | --dataro | --datar)
    ac_prev=datarootdir ;;
  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
    datarootdir=$ac_optarg ;;

  -disable-* | --disable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=no ;;

  -docdir | --docdir | --docdi | --doc | --do)
    ac_prev=docdir ;;
  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
    docdir=$ac_optarg ;;

  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
    ac_prev=dvidir ;;
  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
    dvidir=$ac_optarg ;;

  -enable-* | --enable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=\$ac_optarg ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix=$ac_optarg ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he | -h)
    ac_init_help=long ;;
  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
    ac_init_help=recursive ;;
  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
    ac_init_help=short ;;

  -host | --host | --hos | --ho)
    ac_prev=host_alias ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host_alias=$ac_optarg ;;

  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
    ac_prev=htmldir ;;
  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
  | --ht=*)
    htmldir=$ac_optarg ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir=$ac_optarg ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir=$ac_optarg ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir=$ac_optarg ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir=$ac_optarg ;;

  -localedir | --localedir | --localedi | --localed | --locale)
    ac_prev=localedir ;;
  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
    localedir=$ac_optarg ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst | --locals)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
    localstatedir=$ac_optarg ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir=$ac_optarg ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c | -n)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir=$ac_optarg ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix=$ac_optarg ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix=$ac_optarg ;;

  -program-suffix | --program-suffix | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-suffix=* | --program-suffix=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix=$ac_optarg ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name=$ac_optarg ;;

  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
    ac_prev=pdfdir ;;
  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
    pdfdir=$ac_optarg ;;

  -psdir | --psdir | --psdi | --psd | --ps)
    ac_prev=psdir ;;
  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
    psdir=$ac_optarg ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -runstatedir | --runstatedir | --runstatedi | --runstated \
  | --runstate | --runstat | --runsta | --runst | --runs \
  | --run | --ru | --r)
    ac_prev=runstatedir ;;
  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \
  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \
  | --run=* | --ru=* | --r=*)
    runstatedir=$ac_optarg ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir=$ac_optarg ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir=$ac_optarg ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site=$ac_optarg ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir=$ac_optarg ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir=$ac_optarg ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target_alias ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target_alias=$ac_optarg ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers | -V)
    ac_init_version=: ;;

  -with-* | --with-*)
    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=\$ac_optarg ;;

  -without-* | --without-*)
    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: \`$ac_useropt'"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`printf "%s\n" "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=no ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes=$ac_optarg ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries=$ac_optarg ;;

  -*) as_fn_error $? "unrecognized option: \`$ac_option'
Try \`$0 --help' for more information"
    ;;

  *=*)
    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
    # Reject names that are not valid shell variable names.
    case $ac_envvar in #(
      '' | [0-9]* | *[!_$as_cr_alnum]* )
      as_fn_error $? "invalid variable name: \`$ac_envvar'" ;;
    esac
    eval $ac_envvar=\$ac_optarg
    export $ac_envvar ;;

  *)
    # FIXME: should be removed in autoconf 3.0.
    printf "%s\n" "$as_me: WARNING: you should use --build, --host, --target" >&2
    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
      printf "%s\n" "$as_me: WARNING: invalid host type: $ac_option" >&2
    : "${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}"
    ;;

  esac
done

if test -n "$ac_prev"; then
  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
  as_fn_error $? "missing argument to $ac_option"
fi

if test -n "$ac_unrecognized_opts"; then
  case $enable_option_checking in
    no) ;;
    fatal) as_fn_error $? "unrecognized options: $ac_unrecognized_opts" ;;
    *)     printf "%s\n" "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
  esac
fi

# Check all directory arguments for consistency.
for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
		datadir sysconfdir sharedstatedir localstatedir includedir \
		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
		libdir localedir mandir runstatedir
do
  eval ac_val=\$$ac_var
  # Remove trailing slashes.
  case $ac_val in
    */ )
      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
      eval $ac_var=\$ac_val;;
  esac
  # Be sure to have absolute directory names.
  case $ac_val in
    [\\/$]* | ?:[\\/]* )  continue;;
    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
  esac
  as_fn_error $? "expected an absolute directory name for --$ac_var: $ac_val"
done

# There might be people who depend on the old broken behavior: `$host'
# used to hold the argument of --host etc.
# FIXME: To remove some day.
build=$build_alias
host=$host_alias
target=$target_alias

# FIXME: To remove some day.
if test "x$host_alias" != x; then
  if test "x$build_alias" = x; then
    cross_compiling=maybe
  elif test "x$build_alias" != "x$host_alias"; then
    cross_compiling=yes
  fi
fi

ac_tool_prefix=
test -n "$host_alias" && ac_tool_prefix=$host_alias-

test "$silent" = yes && exec 6>/dev/null


ac_pwd=`pwd` && test -n "$ac_pwd" &&
ac_ls_di=`ls -di .` &&
ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
  as_fn_error $? "working directory cannot be determined"
test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
  as_fn_error $? "pwd does not report name of working directory"


# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then the parent directory.
  ac_confdir=`$as_dirname -- "$as_myself" ||
$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_myself" : 'X\(//\)[^/]' \| \
	 X"$as_myself" : 'X\(//\)$' \| \
	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_myself" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  srcdir=$ac_confdir
  if test ! -r "$srcdir/$ac_unique_file"; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r "$srcdir/$ac_unique_file"; then
  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
  as_fn_error $? "cannot find sources ($ac_unique_file) in $srcdir"
fi
ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
ac_abs_confdir=`(
	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error $? "$ac_msg"
	pwd)`
# When building in place, set srcdir=.
if test "$ac_abs_confdir" = "$ac_pwd"; then
  srcdir=.
fi
# Remove unnecessary trailing slashes from srcdir.
# Double slashes in file names in object file debugging info
# mess up M-x gdb in Emacs.
case $srcdir in
*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
esac
for ac_var in $ac_precious_vars; do
  eval ac_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_env_${ac_var}_value=\$${ac_var}
  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_cv_env_${ac_var}_value=\$${ac_var}
done

#
# Report the --help message.
#
if test "$ac_init_help" = "long"; then
  # Omit some internal or obsolete options to make the list less imposing.
  # This message is too long to be a string in the A/UX 3.1 sh.
  cat <<_ACEOF
\`configure' configures zfs 2.2.0 to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print \`checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for \`--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or \`..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [$ac_default_prefix]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, \`make install' will install all the files in
\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
an installation prefix other than \`$ac_default_prefix' using \`--prefix',
for instance \`--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/zfs]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]
_ACEOF

  cat <<\_ACEOF

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]
_ACEOF
fi

if test -n "$ac_init_help"; then
  case $ac_init_help in
     short | recursive ) echo "Configuration of zfs 2.2.0:";;
   esac
  cat <<\_ACEOF

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-maintainer-mode
                          enable make rules and dependencies not useful (and
                          sometimes confusing) to the casual installer
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-code-coverage  Whether to enable code coverage support
  --enable-linux-builtin  Configure for builtin in-tree kernel modules
                          [default=no]
  --enable-asan           Enable -fsanitize=address support [default=no]
  --enable-ubsan          Enable -fsanitize=undefined support [default=no]
  --enable-pyzfs          install libzfs_core python bindings [default=check]
  --disable-nls           do not use Native Language Support
  --disable-rpath         do not hardcode runtime library paths
  --enable-sysvinit       install SysV init scripts [default: yes]
  --enable-systemd        install systemd unit/preset files [[default: yes]]
  --enable-pam            install pam_zfs_key module [[default: check]]
  --enable-debug          Enable compiler and code assertions [default=no]
  --enable-debuginfo      Force generation of debuginfo [default=no]
  --enable-debug-kmem     Enable basic kmem accounting [default=no]
  --enable-debug-kmem-tracking
                          Enable detailed kmem tracking [default=no]
  --enable-invariants     Enable FreeBSD kernel INVARIANTS checks [[default:
                          detect]]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --with-gcov=GCOV        use given GCOV for coverage (GCOV=gcov).
  --with-config=CONFIG    Config file 'kernel|user|all|srpm'
  --with-python=VERSION   default system python version [default=check]
  --with-python-sys-prefix
                          use Python's sys.prefix and sys.exec_prefix values
  --with-python_prefix    override the default PYTHON_PREFIX
  --with-python_exec_prefix
                          override the default PYTHON_EXEC_PREFIX
  --with-linux=PATH       Path to kernel source
  --with-linux-obj=PATH   Path to kernel build objects
  --with-qat=PATH         Path to qat source
  --with-qat-obj=PATH     Path to qat build objects
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir
  --with-mounthelperdir=DIR
                          install mount.zfs in dir [[/sbin]]
  --with-dracutdir=DIR    install dracut helpers [default=check]
  --with-pkgconfigdir     pkg-config installation directory
                          ['${prefix}/libdata/pkgconfig']
  --with-udevdir=DIR      install udev helpers [default=check]
  --with-udevruledir=DIR  install udev rules [[UDEVDIR/rules.d]]
  --with-systemdunitdir=DIR
                          install systemd unit files in dir
                          [[/usr/lib/systemd/system]]
  --with-systemdpresetdir=DIR
                          install systemd preset files in dir
                          [[/usr/lib/systemd/system-preset]]
  --with-systemdmodulesloaddir=DIR
                          install systemd module load files into dir
                          [[/usr/lib/modules-load.d]]
  --with-systemdgeneratordir=DIR
                          install systemd generators in dir
                          [[/usr/lib/systemd/system-generators]]
  --with-tirpc            use tirpc for xdr encoding [default=check]
  --with-pammoduledir=DIR install pam module in dir [[$libdir/security]]
  --with-pamconfigsdir=DIR
                          install pam-config files in dir
                          [DATADIR/pam-configs]
  --with-zfsexecdir=DIR   install scripts [[[libexecdir]/zfs]]
  --with-vendor           Distribution vendor [default=check]
  --with-spec=SPEC        Spec files 'generic|redhat'

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  CCAS        assembler compiler command (defaults to CC)
  CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
  PYTHON      the Python interpreter
  PYTHON_VERSION
              The installed Python version to use, for example '2.3'. This
              string will be appended to the Python interpreter canonical
              name.
  TEST_JOBS   simultaneous jobs during configure
  KERNEL_CC   C compiler for building kernel modules
  KERNEL_LD   Linker for building kernel modules
  KERNEL_LLVM Binary option to build kernel modules with LLVM/CLANG toolchain
  ZLIB_CFLAGS C compiler flags for ZLIB, overriding pkg-config
  ZLIB_LIBS   linker flags for ZLIB, overriding pkg-config
  LIBUDEV_CFLAGS
              C compiler flags for LIBUDEV, overriding pkg-config
  LIBUDEV_LIBS
              linker flags for LIBUDEV, overriding pkg-config
  LIBUUID_CFLAGS
              C compiler flags for LIBUUID, overriding pkg-config
  LIBUUID_LIBS
              linker flags for LIBUUID, overriding pkg-config
  LIBBLKID_CFLAGS
              C compiler flags for LIBBLKID, overriding pkg-config
  LIBBLKID_LIBS
              linker flags for LIBBLKID, overriding pkg-config
  LIBTIRPC_CFLAGS
              C compiler flags for LIBTIRPC, overriding pkg-config
  LIBTIRPC_LIBS
              linker flags for LIBTIRPC, overriding pkg-config
  LIBCRYPTO_CFLAGS
              C compiler flags for LIBCRYPTO, overriding pkg-config
  LIBCRYPTO_LIBS
              linker flags for LIBCRYPTO, overriding pkg-config
  LIBAIO_CFLAGS
              C compiler flags for LIBAIO, overriding pkg-config
  LIBAIO_LIBS linker flags for LIBAIO, overriding pkg-config
  AIO_H_CFLAGS
              C compiler flags for AIO_H, overriding pkg-config
  AIO_H_LIBS  linker flags for AIO_H, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
_ACEOF
ac_status=$?
fi

if test "$ac_init_help" = "recursive"; then
  # If there are subdirs, report their specific --help.
  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
    test -d "$ac_dir" ||
      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
      continue
    ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix

    cd "$ac_dir" || { ac_status=$?; continue; }
    # Check for configure.gnu first; this name is used for a wrapper for
    # Metaconfig's "Configure" on case-insensitive file systems.
    if test -f "$ac_srcdir/configure.gnu"; then
      echo &&
      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
    elif test -f "$ac_srcdir/configure"; then
      echo &&
      $SHELL "$ac_srcdir/configure" --help=recursive
    else
      printf "%s\n" "$as_me: WARNING: no configuration information is in $ac_dir" >&2
    fi || ac_status=$?
    cd "$ac_pwd" || { ac_status=$?; break; }
  done
fi

test -n "$ac_init_help" && exit $ac_status
if $ac_init_version; then
  cat <<\_ACEOF
zfs configure 2.2.0
generated by GNU Autoconf 2.71

Copyright (C) 2021 Free Software Foundation, Inc.
This configure script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it.
_ACEOF
  exit
fi

## ------------------------ ##
## Autoconf initialization. ##
## ------------------------ ##

# ac_fn_c_try_compile LINENO
# --------------------------
# Try to compile conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext conftest.beam
  if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest.$ac_objext
then :
  ac_retval=0
else $as_nop
  printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_try_compile

# ac_fn_c_try_link LINENO
# -----------------------
# Try to link conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_link ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext conftest.beam conftest$ac_exeext
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest$ac_exeext && {
	 test "$cross_compiling" = yes ||
	 test -x conftest$ac_exeext
       }
then :
  ac_retval=0
else $as_nop
  printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
  # interfere with the next link command; also delete a directory that is
  # left behind by Apple's compiler.  We do this before executing the actions.
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_try_link

# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
# -------------------------------------------------------
# Tests whether HEADER exists and can be compiled using the include files in
# INCLUDES, setting the cache variable VAR accordingly.
ac_fn_c_check_header_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
printf %s "checking for $2... " >&6; }
if eval test \${$3+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
#include <$2>
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  eval "$3=yes"
else $as_nop
  eval "$3=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
eval ac_res=\$$3
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} # ac_fn_c_check_header_compile

# ac_fn_c_check_func LINENO FUNC VAR
# ----------------------------------
# Tests whether FUNC exists, setting the cache variable VAR accordingly
ac_fn_c_check_func ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
printf %s "checking for $2... " >&6; }
if eval test \${$3+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
/* Define $2 to an innocuous variant, in case <limits.h> declares $2.
   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
#define $2 innocuous_$2

/* System header to define __stub macros and hopefully few prototypes,
   which can conflict with char $2 (); below.  */

#include <limits.h>
#undef $2

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char $2 ();
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined __stub_$2 || defined __stub___$2
choke me
#endif

int
main (void)
{
return $2 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  eval "$3=yes"
else $as_nop
  eval "$3=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
fi
eval ac_res=\$$3
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} # ac_fn_c_check_func

# ac_fn_c_try_run LINENO
# ----------------------
# Try to run conftest.$ac_ext, and return whether this succeeded. Assumes that
# executables *can* be run.
ac_fn_c_try_run ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :
  ac_retval=0
else $as_nop
  printf "%s\n" "$as_me: program exited with status $ac_status" >&5
       printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

       ac_retval=$ac_status
fi
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_try_run
ac_configure_args_raw=
for ac_arg
do
  case $ac_arg in
  *\'*)
    ac_arg=`printf "%s\n" "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
  esac
  as_fn_append ac_configure_args_raw " '$ac_arg'"
done

case $ac_configure_args_raw in
  *$as_nl*)
    ac_safe_unquote= ;;
  *)
    ac_unsafe_z='|&;<>()$`\\"*?[ ''	' # This string ends in space, tab.
    ac_unsafe_a="$ac_unsafe_z#~"
    ac_safe_unquote="s/ '\\([^$ac_unsafe_a][^$ac_unsafe_z]*\\)'/ \\1/g"
    ac_configure_args_raw=`      printf "%s\n" "$ac_configure_args_raw" | sed "$ac_safe_unquote"`;;
esac

cat >config.log <<_ACEOF
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by zfs $as_me 2.2.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ $0$ac_configure_args_raw

_ACEOF
exec 5>>config.log
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    printf "%s\n" "PATH: $as_dir"
  done
IFS=$as_save_IFS

} >&5

cat >&5 <<_ACEOF


## ----------- ##
## Core tests. ##
## ----------- ##

_ACEOF


# Keep a trace of the command line.
# Strip out --no-create and --no-recursion so they do not pile up.
# Strip out --silent because we don't want to record it for future runs.
# Also quote any args containing shell meta-characters.
# Make two passes to allow for proper duplicate-argument suppression.
ac_configure_args=
ac_configure_args0=
ac_configure_args1=
ac_must_keep_next=false
for ac_pass in 1 2
do
  for ac_arg
  do
    case $ac_arg in
    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
    | -silent | --silent | --silen | --sile | --sil)
      continue ;;
    *\'*)
      ac_arg=`printf "%s\n" "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    case $ac_pass in
    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
    2)
      as_fn_append ac_configure_args1 " '$ac_arg'"
      if test $ac_must_keep_next = true; then
	ac_must_keep_next=false # Got value, back to normal.
      else
	case $ac_arg in
	  *=* | --config-cache | -C | -disable-* | --disable-* \
	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
	  | -with-* | --with-* | -without-* | --without-* | --x)
	    case "$ac_configure_args0 " in
	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
	    esac
	    ;;
	  -* ) ac_must_keep_next=true ;;
	esac
      fi
      as_fn_append ac_configure_args " '$ac_arg'"
      ;;
    esac
  done
done
{ ac_configure_args0=; unset ac_configure_args0;}
{ ac_configure_args1=; unset ac_configure_args1;}

# When interrupted or exit'd, cleanup temporary files, and complete
# config.log.  We remove comments because anyway the quotes in there
# would cause problems or look ugly.
# WARNING: Use '\'' to represent an apostrophe within the trap.
# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
trap 'exit_status=$?
  # Sanitize IFS.
  IFS=" ""	$as_nl"
  # Save into config.log some information that might help in debugging.
  {
    echo

    printf "%s\n" "## ---------------- ##
## Cache variables. ##
## ---------------- ##"
    echo
    # The following way of writing the cache mishandles newlines in values,
(
  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
printf "%s\n" "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done
  (set) 2>&1 |
    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      sed -n \
	"s/'\''/'\''\\\\'\'''\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
      ;; #(
    *)
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
)
    echo

    printf "%s\n" "## ----------------- ##
## Output variables. ##
## ----------------- ##"
    echo
    for ac_var in $ac_subst_vars
    do
      eval ac_val=\$$ac_var
      case $ac_val in
      *\'\''*) ac_val=`printf "%s\n" "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
      esac
      printf "%s\n" "$ac_var='\''$ac_val'\''"
    done | sort
    echo

    if test -n "$ac_subst_files"; then
      printf "%s\n" "## ------------------- ##
## File substitutions. ##
## ------------------- ##"
      echo
      for ac_var in $ac_subst_files
      do
	eval ac_val=\$$ac_var
	case $ac_val in
	*\'\''*) ac_val=`printf "%s\n" "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
	esac
	printf "%s\n" "$ac_var='\''$ac_val'\''"
      done | sort
      echo
    fi

    if test -s confdefs.h; then
      printf "%s\n" "## ----------- ##
## confdefs.h. ##
## ----------- ##"
      echo
      cat confdefs.h
      echo
    fi
    test "$ac_signal" != 0 &&
      printf "%s\n" "$as_me: caught signal $ac_signal"
    printf "%s\n" "$as_me: exit $exit_status"
  } >&5
  rm -f core *.core core.conftest.* &&
    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
    exit $exit_status
' 0
for ac_signal in 1 2 13 15; do
  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
done
ac_signal=0

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -f -r conftest* confdefs.h

printf "%s\n" "/* confdefs.h */" > confdefs.h

# Predefined preprocessor variables.

printf "%s\n" "#define PACKAGE_NAME \"$PACKAGE_NAME\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_TARNAME \"$PACKAGE_TARNAME\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_VERSION \"$PACKAGE_VERSION\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_STRING \"$PACKAGE_STRING\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_BUGREPORT \"$PACKAGE_BUGREPORT\"" >>confdefs.h

printf "%s\n" "#define PACKAGE_URL \"$PACKAGE_URL\"" >>confdefs.h


# Let the site file select an alternate cache file if it wants to.
# Prefer an explicitly selected file to automatically selected ones.
if test -n "$CONFIG_SITE"; then
  ac_site_files="$CONFIG_SITE"
elif test "x$prefix" != xNONE; then
  ac_site_files="$prefix/share/config.site $prefix/etc/config.site"
else
  ac_site_files="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
fi

for ac_site_file in $ac_site_files
do
  case $ac_site_file in #(
  */*) :
     ;; #(
  *) :
    ac_site_file=./$ac_site_file ;;
esac
  if test -f "$ac_site_file" && test -r "$ac_site_file"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
printf "%s\n" "$as_me: loading site script $ac_site_file" >&6;}
    sed 's/^/| /' "$ac_site_file" >&5
    . "$ac_site_file" \
      || { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "failed to load site script $ac_site_file
See \`config.log' for more details" "$LINENO" 5; }
  fi
done

if test -r "$cache_file"; then
  # Some versions of bash will fail to source /dev/null (special files
  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.
  if test /dev/null != "$cache_file" && test -f "$cache_file"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
printf "%s\n" "$as_me: loading cache $cache_file" >&6;}
    case $cache_file in
      [\\/]* | ?:[\\/]* ) . "$cache_file";;
      *)                      . "./$cache_file";;
    esac
  fi
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
printf "%s\n" "$as_me: creating cache $cache_file" >&6;}
  >$cache_file
fi

# Test code for whether the C compiler supports C89 (global declarations)
ac_c_conftest_c89_globals='
/* Does the compiler advertise C89 conformance?
   Do not test the value of __STDC__, because some compilers set it to 0
   while being otherwise adequately conformant. */
#if !defined __STDC__
# error "Compiler does not advertise C89 conformance"
#endif

#include <stddef.h>
#include <stdarg.h>
struct stat;
/* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
struct buf { int x; };
struct buf * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not \xHH hex character constants.
   These do not provoke an error unfortunately, instead are silently treated
   as an "x".  The following induces an error, until -std is added to get
   proper ANSI mode.  Curiously \x00 != x always comes out true, for an
   array size at least.  It is necessary to write \x00 == 0 to get something
   that is true only with -std.  */
int osf4_cc_array ['\''\x00'\'' == 0 ? 1 : -1];

/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
   inside strings and character constants.  */
#define FOO(x) '\''x'\''
int xlc6_cc_array[FOO(a) == '\''x'\'' ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
               int, int);'

# Test code for whether the C compiler supports C89 (body of main).
ac_c_conftest_c89_main='
ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
'

# Test code for whether the C compiler supports C99 (global declarations)
ac_c_conftest_c99_globals='
// Does the compiler advertise C99 conformance?
#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
# error "Compiler does not advertise C99 conformance"
#endif

#include <stdbool.h>
extern int puts (const char *);
extern int printf (const char *, ...);
extern int dprintf (int, const char *, ...);
extern void *malloc (size_t);

// Check varargs macros.  These examples are taken from C99 6.10.3.5.
// dprintf is used instead of fprintf to avoid needing to declare
// FILE and stderr.
#define debug(...) dprintf (2, __VA_ARGS__)
#define showlist(...) puts (#__VA_ARGS__)
#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
static void
test_varargs_macros (void)
{
  int x = 1234;
  int y = 5678;
  debug ("Flag");
  debug ("X = %d\n", x);
  showlist (The first, second, and third items.);
  report (x>y, "x is %d but y is %d", x, y);
}

// Check long long types.
#define BIG64 18446744073709551615ull
#define BIG32 4294967295ul
#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
#if !BIG_OK
  #error "your preprocessor is broken"
#endif
#if BIG_OK
#else
  #error "your preprocessor is broken"
#endif
static long long int bignum = -9223372036854775807LL;
static unsigned long long int ubignum = BIG64;

struct incomplete_array
{
  int datasize;
  double data[];
};

struct named_init {
  int number;
  const wchar_t *name;
  double average;
};

typedef const char *ccp;

static inline int
test_restrict (ccp restrict text)
{
  // See if C++-style comments work.
  // Iterate through items via the restricted pointer.
  // Also check for declarations in for loops.
  for (unsigned int i = 0; *(text+i) != '\''\0'\''; ++i)
    continue;
  return 0;
}

// Check varargs and va_copy.
static bool
test_varargs (const char *format, ...)
{
  va_list args;
  va_start (args, format);
  va_list args_copy;
  va_copy (args_copy, args);

  const char *str = "";
  int number = 0;
  float fnumber = 0;

  while (*format)
    {
      switch (*format++)
	{
	case '\''s'\'': // string
	  str = va_arg (args_copy, const char *);
	  break;
	case '\''d'\'': // int
	  number = va_arg (args_copy, int);
	  break;
	case '\''f'\'': // float
	  fnumber = va_arg (args_copy, double);
	  break;
	default:
	  break;
	}
    }
  va_end (args_copy);
  va_end (args);

  return *str && number && fnumber;
}
'

# Test code for whether the C compiler supports C99 (body of main).
ac_c_conftest_c99_main='
  // Check bool.
  _Bool success = false;
  success |= (argc != 0);

  // Check restrict.
  if (test_restrict ("String literal") == 0)
    success = true;
  char *restrict newvar = "Another string";

  // Check varargs.
  success &= test_varargs ("s, d'\'' f .", "string", 65, 34.234);
  test_varargs_macros ();

  // Check flexible array members.
  struct incomplete_array *ia =
    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
  ia->datasize = 10;
  for (int i = 0; i < ia->datasize; ++i)
    ia->data[i] = i * 1.234;

  // Check named initializers.
  struct named_init ni = {
    .number = 34,
    .name = L"Test wide string",
    .average = 543.34343,
  };

  ni.number = 58;

  int dynamic_array[ni.number];
  dynamic_array[0] = argv[0][0];
  dynamic_array[ni.number - 1] = 543;

  // work around unused variable warnings
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == '\''x'\''
	 || dynamic_array[ni.number - 1] != 543);
'

# Test code for whether the C compiler supports C11 (global declarations)
ac_c_conftest_c11_globals='
// Does the compiler advertise C11 conformance?
#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L
# error "Compiler does not advertise C11 conformance"
#endif

// Check _Alignas.
char _Alignas (double) aligned_as_double;
char _Alignas (0) no_special_alignment;
extern char aligned_as_int;
char _Alignas (0) _Alignas (int) aligned_as_int;

// Check _Alignof.
enum
{
  int_alignment = _Alignof (int),
  int_array_alignment = _Alignof (int[100]),
  char_alignment = _Alignof (char)
};
_Static_assert (0 < -_Alignof (int), "_Alignof is signed");

// Check _Noreturn.
int _Noreturn does_not_return (void) { for (;;) continue; }

// Check _Static_assert.
struct test_static_assert
{
  int x;
  _Static_assert (sizeof (int) <= sizeof (long int),
                  "_Static_assert does not work in struct");
  long int y;
};

// Check UTF-8 literals.
#define u8 syntax error!
char const utf8_literal[] = u8"happens to be ASCII" "another string";

// Check duplicate typedefs.
typedef long *long_ptr;
typedef long int *long_ptr;
typedef long_ptr long_ptr;

// Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.
struct anonymous
{
  union {
    struct { int i; int j; };
    struct { int k; long int l; } w;
  };
  int m;
} v1;
'

# Test code for whether the C compiler supports C11 (body of main).
ac_c_conftest_c11_main='
  _Static_assert ((offsetof (struct anonymous, i)
		   == offsetof (struct anonymous, w.k)),
		  "Anonymous union alignment botch");
  v1.i = 2;
  v1.w.k = 5;
  ok |= v1.i != 5;
'

# Test code for whether the C compiler supports C11 (complete).
ac_c_conftest_c11_program="${ac_c_conftest_c89_globals}
${ac_c_conftest_c99_globals}
${ac_c_conftest_c11_globals}

int
main (int argc, char **argv)
{
  int ok = 0;
  ${ac_c_conftest_c89_main}
  ${ac_c_conftest_c99_main}
  ${ac_c_conftest_c11_main}
  return ok;
}
"

# Test code for whether the C compiler supports C99 (complete).
ac_c_conftest_c99_program="${ac_c_conftest_c89_globals}
${ac_c_conftest_c99_globals}

int
main (int argc, char **argv)
{
  int ok = 0;
  ${ac_c_conftest_c89_main}
  ${ac_c_conftest_c99_main}
  return ok;
}
"

# Test code for whether the C compiler supports C89 (complete).
ac_c_conftest_c89_program="${ac_c_conftest_c89_globals}

int
main (int argc, char **argv)
{
  int ok = 0;
  ${ac_c_conftest_c89_main}
  return ok;
}
"

as_fn_append ac_header_c_list " stdio.h stdio_h HAVE_STDIO_H"
as_fn_append ac_header_c_list " stdlib.h stdlib_h HAVE_STDLIB_H"
as_fn_append ac_header_c_list " string.h string_h HAVE_STRING_H"
as_fn_append ac_header_c_list " inttypes.h inttypes_h HAVE_INTTYPES_H"
as_fn_append ac_header_c_list " stdint.h stdint_h HAVE_STDINT_H"
as_fn_append ac_header_c_list " strings.h strings_h HAVE_STRINGS_H"
as_fn_append ac_header_c_list " sys/stat.h sys_stat_h HAVE_SYS_STAT_H"
as_fn_append ac_header_c_list " sys/types.h sys_types_h HAVE_SYS_TYPES_H"
as_fn_append ac_header_c_list " unistd.h unistd_h HAVE_UNISTD_H"
gt_needs="$gt_needs "
gt_needs="$gt_needs "

# Auxiliary files required by this configure script.
ac_aux_files="config.rpath compile ltmain.sh missing install-sh config.guess config.sub"

# Locations in which to look for auxiliary files.
ac_aux_dir_candidates="${srcdir}/config"

# Search for a directory containing all of the required auxiliary files,
# $ac_aux_files, from the $PATH-style list $ac_aux_dir_candidates.
# If we don't find one directory that contains all the files we need,
# we report the set of missing files from the *first* directory in
# $ac_aux_dir_candidates and give up.
ac_missing_aux_files=""
ac_first_candidate=:
printf "%s\n" "$as_me:${as_lineno-$LINENO}: looking for aux files: $ac_aux_files" >&5
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in $ac_aux_dir_candidates
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
  as_found=:

  printf "%s\n" "$as_me:${as_lineno-$LINENO}:  trying $as_dir" >&5
  ac_aux_dir_found=yes
  ac_install_sh=
  for ac_aux in $ac_aux_files
  do
    # As a special case, if "install-sh" is required, that requirement
    # can be satisfied by any of "install-sh", "install.sh", or "shtool",
    # and $ac_install_sh is set appropriately for whichever one is found.
    if test x"$ac_aux" = x"install-sh"
    then
      if test -f "${as_dir}install-sh"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}install-sh found" >&5
        ac_install_sh="${as_dir}install-sh -c"
      elif test -f "${as_dir}install.sh"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}install.sh found" >&5
        ac_install_sh="${as_dir}install.sh -c"
      elif test -f "${as_dir}shtool"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}shtool found" >&5
        ac_install_sh="${as_dir}shtool install -c"
      else
        ac_aux_dir_found=no
        if $ac_first_candidate; then
          ac_missing_aux_files="${ac_missing_aux_files} install-sh"
        else
          break
        fi
      fi
    else
      if test -f "${as_dir}${ac_aux}"; then
        printf "%s\n" "$as_me:${as_lineno-$LINENO}:   ${as_dir}${ac_aux} found" >&5
      else
        ac_aux_dir_found=no
        if $ac_first_candidate; then
          ac_missing_aux_files="${ac_missing_aux_files} ${ac_aux}"
        else
          break
        fi
      fi
    fi
  done
  if test "$ac_aux_dir_found" = yes; then
    ac_aux_dir="$as_dir"
    break
  fi
  ac_first_candidate=false

  as_found=false
done
IFS=$as_save_IFS
if $as_found
then :

else $as_nop
  as_fn_error $? "cannot find required auxiliary files:$ac_missing_aux_files" "$LINENO" 5
fi


# These three variables are undocumented and unsupported,
# and are intended to be withdrawn in a future Autoconf release.
# They can cause serious problems if a builder's source tree is in a directory
# whose full name contains unusual characters.
if test -f "${ac_aux_dir}config.guess"; then
  ac_config_guess="$SHELL ${ac_aux_dir}config.guess"
fi
if test -f "${ac_aux_dir}config.sub"; then
  ac_config_sub="$SHELL ${ac_aux_dir}config.sub"
fi
if test -f "$ac_aux_dir/configure"; then
  ac_configure="$SHELL ${ac_aux_dir}configure"
fi

# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in $ac_precious_vars; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val=\$ac_cv_env_${ac_var}_value
  eval ac_new_val=\$ac_env_${ac_var}_value
  case $ac_old_set,$ac_new_set in
    set,)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
printf "%s\n" "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,set)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
printf "%s\n" "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	# differences in whitespace do not lead to failure.
	ac_old_val_w=`echo x $ac_old_val`
	ac_new_val_w=`echo x $ac_new_val`
	if test "$ac_old_val_w" != "$ac_new_val_w"; then
	  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
printf "%s\n" "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
	  ac_cache_corrupted=:
	else
	  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
printf "%s\n" "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
	  eval $ac_var=\$ac_old_val
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
printf "%s\n" "$as_me:   former value:  \`$ac_old_val'" >&2;}
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
printf "%s\n" "$as_me:   current value: \`$ac_new_val'" >&2;}
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *\'*) ac_arg=$ac_var=`printf "%s\n" "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
printf "%s\n" "$as_me: error: changes in the environment can compromise the build" >&2;}
  as_fn_error $? "run \`${MAKE-make} distclean' and/or \`rm $cache_file'
	    and start over" "$LINENO" 5
fi
## -------------------- ##
## Main body of script. ##
## -------------------- ##

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


CFGOPTS="$*"
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu





	for ac_prog in gawk mawk nawk awk
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_AWK+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$AWK"; then
  ac_cv_prog_AWK="$AWK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_AWK="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AWK=$ac_cv_prog_AWK
if test -n "$AWK"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
printf "%s\n" "$AWK" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$AWK" && break
done

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking metadata" >&5
printf %s "checking metadata... " >&6; }

	META="$srcdir/META"
	_zfs_ac_meta_type="none"
	if test -f "$META"; then
		_zfs_ac_meta_type="META file"

		ZFS_META_NAME=`$AWK -F ':[ \t]+' '$1 ~ /^ *(Name|Project|Package)$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_NAME"; then

printf "%s\n" "#define ZFS_META_NAME \"$ZFS_META_NAME\"" >>confdefs.h


		fi

		ZFS_META_VERSION=`$AWK -F ':[ \t]+' '$1 ~ /^ *Version$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_VERSION"; then

printf "%s\n" "#define ZFS_META_VERSION \"$ZFS_META_VERSION\"" >>confdefs.h


printf "%s\n" "#define SPL_META_VERSION ZFS_META_VERSION" >>confdefs.h


		fi

		ZFS_META_RELEASE=`$AWK -F ':[ \t]+' '$1 ~ /^ *Release$/ { print $2; exit }' $META`;
		if test ! -f ".nogitrelease" && git rev-parse --git-dir > /dev/null 2>&1; then
			_match="${ZFS_META_NAME}-${ZFS_META_VERSION}"
			_alias=$(git describe --match=${_match} 2>/dev/null)
			_release=$(echo ${_alias}|sed "s/${ZFS_META_NAME}//"|cut -f3- -d'-'|tr - _)
			if test -n "${_release}"; then
				ZFS_META_RELEASE=${_release}
				_zfs_ac_meta_type="git describe"
			else
				_match="${ZFS_META_NAME}-${ZFS_META_VERSION}-${ZFS_META_RELEASE}"
	                        _alias=$(git describe --match=${_match} 2>/dev/null)
				_release=$(echo ${_alias}|sed 's/${ZFS_META_NAME}//'|cut -f3- -d'-'|tr - _)
				if test -n "${_release}"; then
					ZFS_META_RELEASE=${_release}
					_zfs_ac_meta_type="git describe"
				fi
			fi
		fi

		if test -n "$ZFS_META_RELEASE"; then

printf "%s\n" "#define ZFS_META_RELEASE \"$ZFS_META_RELEASE\"" >>confdefs.h


printf "%s\n" "#define SPL_META_RELEASE ZFS_META_RELEASE" >>confdefs.h



			RELEASE="$ZFS_META_RELEASE"

		fi

		ZFS_META_LICENSE=`$AWK -F ':[ \t]+' '$1 ~ /^ *License$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_LICENSE"; then

printf "%s\n" "#define ZFS_META_LICENSE \"$ZFS_META_LICENSE\"" >>confdefs.h


		fi

		if test -n "$ZFS_META_NAME" -a -n "$ZFS_META_VERSION"; then
				ZFS_META_ALIAS="$ZFS_META_NAME-$ZFS_META_VERSION"
				test -n "$ZFS_META_RELEASE" &&
				        ZFS_META_ALIAS="$ZFS_META_ALIAS-$ZFS_META_RELEASE"

printf "%s\n" "#define ZFS_META_ALIAS \"$ZFS_META_ALIAS\"" >>confdefs.h


printf "%s\n" "#define SPL_META_ALIAS ZFS_META_ALIAS" >>confdefs.h


		fi

		ZFS_META_DATA=`$AWK -F ':[ \t]+' '$1 ~ /^ *Date$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_DATA"; then

printf "%s\n" "#define ZFS_META_DATA \"$ZFS_META_DATA\"" >>confdefs.h


		fi

		ZFS_META_AUTHOR=`$AWK -F ':[ \t]+' '$1 ~ /^ *Author$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_AUTHOR"; then

printf "%s\n" "#define ZFS_META_AUTHOR \"$ZFS_META_AUTHOR\"" >>confdefs.h


		fi

		ZFS_META_KVER_MIN=`$AWK -F ':[ \t]+' '$1 ~ /^ *Linux-Minimum$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_KVER_MIN"; then

printf "%s\n" "#define ZFS_META_KVER_MIN \"$ZFS_META_KVER_MIN\"" >>confdefs.h


		fi

		ZFS_META_KVER_MAX=`$AWK -F ':[ \t]+' '$1 ~ /^ *Linux-Maximum$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_KVER_MAX"; then

printf "%s\n" "#define ZFS_META_KVER_MAX \"$ZFS_META_KVER_MAX\"" >>confdefs.h


		fi


		ZFS_META_LT_CURRENT=`$AWK -F ':[ \t]+' '$1 ~ /^ *LT_Current$/ { print $2; exit }' $META`;
		ZFS_META_LT_REVISION=`$AWK -F ':[ \t]+' '$1 ~ /^ *LT_Revision$/ { print $2; exit }' $META`;
		ZFS_META_LT_AGE=`$AWK -F ':[ \t]+' '$1 ~ /^ *LT_Age$/ { print $2; exit }' $META`;
		if test -n "$ZFS_META_LT_CURRENT" \
				 -o -n "$ZFS_META_LT_REVISION" \
				 -o -n "$ZFS_META_LT_AGE"; then
			test -n "$ZFS_META_LT_CURRENT" || ZFS_META_LT_CURRENT="0"
			test -n "$ZFS_META_LT_REVISION" || ZFS_META_LT_REVISION="0"
			test -n "$ZFS_META_LT_AGE" || ZFS_META_LT_AGE="0"

printf "%s\n" "#define ZFS_META_LT_CURRENT \"$ZFS_META_LT_CURRENT\"" >>confdefs.h


printf "%s\n" "#define ZFS_META_LT_REVISION \"$ZFS_META_LT_REVISION\"" >>confdefs.h


printf "%s\n" "#define ZFS_META_LT_AGE \"$ZFS_META_LT_AGE\"" >>confdefs.h




		fi
	fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $_zfs_ac_meta_type" >&5
printf "%s\n" "$_zfs_ac_meta_type" >&6; }







  # Make sure we can run config.sub.
$SHELL "${ac_aux_dir}config.sub" sun4 >/dev/null 2>&1 ||
  as_fn_error $? "cannot run $SHELL ${ac_aux_dir}config.sub" "$LINENO" 5

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
printf %s "checking build system type... " >&6; }
if test ${ac_cv_build+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_build_alias=$build_alias
test "x$ac_build_alias" = x &&
  ac_build_alias=`$SHELL "${ac_aux_dir}config.guess"`
test "x$ac_build_alias" = x &&
  as_fn_error $? "cannot guess build type; you must specify one" "$LINENO" 5
ac_cv_build=`$SHELL "${ac_aux_dir}config.sub" $ac_build_alias` ||
  as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $ac_build_alias failed" "$LINENO" 5

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
printf "%s\n" "$ac_cv_build" >&6; }
case $ac_cv_build in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical build" "$LINENO" 5;;
esac
build=$ac_cv_build
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_build
shift
build_cpu=$1
build_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
build_os=$*
IFS=$ac_save_IFS
case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
printf %s "checking host system type... " >&6; }
if test ${ac_cv_host+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test "x$host_alias" = x; then
  ac_cv_host=$ac_cv_build
else
  ac_cv_host=`$SHELL "${ac_aux_dir}config.sub" $host_alias` ||
    as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $host_alias failed" "$LINENO" 5
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
printf "%s\n" "$ac_cv_host" >&6; }
case $ac_cv_host in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical host" "$LINENO" 5;;
esac
host=$ac_cv_host
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_host
shift
host_cpu=$1
host_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
host_os=$*
IFS=$ac_save_IFS
case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking target system type" >&5
printf %s "checking target system type... " >&6; }
if test ${ac_cv_target+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test "x$target_alias" = x; then
  ac_cv_target=$ac_cv_host
else
  ac_cv_target=`$SHELL "${ac_aux_dir}config.sub" $target_alias` ||
    as_fn_error $? "$SHELL ${ac_aux_dir}config.sub $target_alias failed" "$LINENO" 5
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_target" >&5
printf "%s\n" "$ac_cv_target" >&6; }
case $ac_cv_target in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical target" "$LINENO" 5;;
esac
target=$ac_cv_target
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_target
shift
target_cpu=$1
target_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
target_os=$*
IFS=$ac_save_IFS
case $target_os in *\ *) target_os=`echo "$target_os" | sed 's/ /-/g'`;; esac


# The aliases save the names the user supplied, while $host etc.
# will get canonicalized.
test -n "$target_alias" &&
  test "$program_prefix$program_suffix$program_transform_name" = \
    NONENONEs,x,x, &&
  program_prefix=${target_alias}-

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles" >&5
printf %s "checking whether to enable maintainer-specific portions of Makefiles... " >&6; }
    # Check whether --enable-maintainer-mode was given.
if test ${enable_maintainer_mode+y}
then :
  enableval=$enable_maintainer_mode; USE_MAINTAINER_MODE=$enableval
else $as_nop
  USE_MAINTAINER_MODE=no
fi

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $USE_MAINTAINER_MODE" >&5
printf "%s\n" "$USE_MAINTAINER_MODE" >&6; }
   if test $USE_MAINTAINER_MODE = yes; then
  MAINTAINER_MODE_TRUE=
  MAINTAINER_MODE_FALSE='#'
else
  MAINTAINER_MODE_TRUE='#'
  MAINTAINER_MODE_FALSE=
fi

  MAINT=$MAINTAINER_MODE_TRUE


# Check whether --enable-silent-rules was given.
if test ${enable_silent_rules+y}
then :
  enableval=$enable_silent_rules;
fi

case $enable_silent_rules in # (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=0;;
esac
am_make=${MAKE-make}
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $am_make supports nested variables" >&5
printf %s "checking whether $am_make supports nested variables... " >&6; }
if test ${am_cv_make_support_nested_variables+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if printf "%s\n" 'TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit' | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_make_support_nested_variables" >&5
printf "%s\n" "$am_cv_make_support_nested_variables" >&6; }
if test $am_cv_make_support_nested_variables = yes; then
    AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AM_BACKSLASH='\'

am__api_version='1.16'


  # Find a good install program.  We prefer a C program (faster),
# so one script is as good as another.  But avoid the broken or
# incompatible versions:
# SysV /etc/install, /usr/sbin/install
# SunOS /usr/etc/install
# IRIX /sbin/install
# AIX /bin/install
# AmigaOS /C/install, which installs bootblocks on floppy discs
# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
# AFS /usr/afsws/bin/install, which mishandles nonexistent args
# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
# OS/2's system install, which has a completely different semantic
# ./install, which can be erroneously created by make from ./install.sh.
# Reject install programs that cannot install multiple files.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
printf %s "checking for a BSD-compatible install... " >&6; }
if test -z "$INSTALL"; then
if test ${ac_cv_path_install+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    # Account for fact that we put trailing slashes in our PATH walk.
case $as_dir in #((
  ./ | /[cC]/* | \
  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
  /usr/ucb/* ) ;;
  *)
    # OSF1 and SCO ODT 3.0 have their own names for install.
    # Don't use installbsd from OSF since it installs stuff as root
    # by default.
    for ac_prog in ginstall scoinst install; do
      for ac_exec_ext in '' $ac_executable_extensions; do
	if as_fn_executable_p "$as_dir$ac_prog$ac_exec_ext"; then
	  if test $ac_prog = install &&
	    grep dspmsg "$as_dir$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # AIX install.  It has an incompatible calling convention.
	    :
	  elif test $ac_prog = install &&
	    grep pwplus "$as_dir$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
	    # program-specific install script used by HP pwplus--don't use.
	    :
	  else
	    rm -rf conftest.one conftest.two conftest.dir
	    echo one > conftest.one
	    echo two > conftest.two
	    mkdir conftest.dir
	    if "$as_dir$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir/" &&
	      test -s conftest.one && test -s conftest.two &&
	      test -s conftest.dir/conftest.one &&
	      test -s conftest.dir/conftest.two
	    then
	      ac_cv_path_install="$as_dir$ac_prog$ac_exec_ext -c"
	      break 3
	    fi
	  fi
	fi
      done
    done
    ;;
esac

  done
IFS=$as_save_IFS

rm -rf conftest.one conftest.two conftest.dir

fi
  if test ${ac_cv_path_install+y}; then
    INSTALL=$ac_cv_path_install
  else
    # As a last resort, use the slow shell script.  Don't cache a
    # value for INSTALL within a source directory, because that will
    # break other packages using the cache if that directory is
    # removed, or if the value is a relative name.
    INSTALL=$ac_install_sh
  fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
printf "%s\n" "$INSTALL" >&6; }

# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
# It thinks the first close brace ends the variable substitution.
test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'

test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'

test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether build environment is sane" >&5
printf %s "checking whether build environment is sane... " >&6; }
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[\\\"\#\$\&\'\`$am_lf]*)
    as_fn_error $? "unsafe absolute working directory name" "$LINENO" 5;;
esac
case $srcdir in
  *[\\\"\#\$\&\'\`$am_lf\ \	]*)
    as_fn_error $? "unsafe srcdir value: '$srcdir'" "$LINENO" 5;;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$*" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$*" != "X $srcdir/configure conftest.file" \
	&& test "$*" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	as_fn_error $? "ls -t appears to fail.  Make sure there is not a broken
  alias in your environment" "$LINENO" 5
     fi
     if test "$2" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$2" = conftest.file
   )
then
   # Ok.
   :
else
   as_fn_error $? "newly created file is older than distributed files!
Check your system clock" "$LINENO" 5
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi

rm -f conftest.file

test "$program_prefix" != NONE &&
  program_transform_name="s&^&$program_prefix&;$program_transform_name"
# Use a double $ so make ignores it.
test "$program_suffix" != NONE &&
  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
# Double any \ or $.
# By default was `s,x,x', remove it if useless.
ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
program_transform_name=`printf "%s\n" "$program_transform_name" | sed "$ac_script"`


# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`


  if test x"${MISSING+set}" != xset; then
  MISSING="\${SHELL} '$am_aux_dir/missing'"
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: 'missing' script is too old or missing" >&5
printf "%s\n" "$as_me: WARNING: 'missing' script is too old or missing" >&2;}
fi

if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi

# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
if test "$cross_compiling" != no; then
  if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
set dummy ${ac_tool_prefix}strip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_STRIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$STRIP"; then
  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
STRIP=$ac_cv_prog_STRIP
if test -n "$STRIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
printf "%s\n" "$STRIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_STRIP"; then
  ac_ct_STRIP=$STRIP
  # Extract the first word of "strip", so it can be a program name with args.
set dummy strip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_STRIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_STRIP"; then
  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_STRIP="strip"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
if test -n "$ac_ct_STRIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
printf "%s\n" "$ac_ct_STRIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_STRIP" = x; then
    STRIP=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    STRIP=$ac_ct_STRIP
  fi
else
  STRIP="$ac_cv_prog_STRIP"
fi

fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"


  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a race-free mkdir -p" >&5
printf %s "checking for a race-free mkdir -p... " >&6; }
if test -z "$MKDIR_P"; then
  if test ${ac_cv_path_mkdir+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in mkdir gmkdir; do
	 for ac_exec_ext in '' $ac_executable_extensions; do
	   as_fn_executable_p "$as_dir$ac_prog$ac_exec_ext" || continue
	   case `"$as_dir$ac_prog$ac_exec_ext" --version 2>&1` in #(
	     'mkdir ('*'coreutils) '* | \
	     'BusyBox '* | \
	     'mkdir (fileutils) '4.1*)
	       ac_cv_path_mkdir=$as_dir$ac_prog$ac_exec_ext
	       break 3;;
	   esac
	 done
       done
  done
IFS=$as_save_IFS

fi

  test -d ./--version && rmdir ./--version
  if test ${ac_cv_path_mkdir+y}; then
    MKDIR_P="$ac_cv_path_mkdir -p"
  else
    # As a last resort, use the slow shell script.  Don't cache a
    # value for MKDIR_P within a source directory, because that will
    # break other packages using the cache if that directory is
    # removed, or if the value is a relative name.
    MKDIR_P="$ac_install_sh -d"
  fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $MKDIR_P" >&5
printf "%s\n" "$MKDIR_P" >&6; }

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
printf %s "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
set x ${MAKE-make}
ac_make=`printf "%s\n" "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
if eval test \${ac_cv_prog_make_${ac_make}_set+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat >conftest.make <<\_ACEOF
SHELL = /bin/sh
all:
	@echo '@@@%%%=$(MAKE)=@@@%%%'
_ACEOF
# GNU make sometimes prints "make[1]: Entering ...", which would confuse us.
case `${MAKE-make} -f conftest.make 2>/dev/null` in
  *@@@%%%=?*=@@@%%%*)
    eval ac_cv_prog_make_${ac_make}_set=yes;;
  *)
    eval ac_cv_prog_make_${ac_make}_set=no;;
esac
rm -f conftest.make
fi
if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
  SET_MAKE=
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
  SET_MAKE="MAKE=${MAKE-make}"
fi

rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null

if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  am__isrc=' -I$(srcdir)'
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    as_fn_error $? "source directory already configured; run \"make distclean\" there first" "$LINENO" 5
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi


# Define the identity of the package.
 PACKAGE='zfs'
 VERSION='2.2.0'


printf "%s\n" "#define PACKAGE \"$PACKAGE\"" >>confdefs.h


printf "%s\n" "#define VERSION \"$VERSION\"" >>confdefs.h

# Some tools Automake needs.

ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}


AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}


AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}


AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}


MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}

# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
mkdir_p='$(MKDIR_P)'

# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AMTAR='$${TAR-tar}'


# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar  pax cpio none'

am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'





# Variables for tags utilities; see am/tags.am
if test -z "$CTAGS"; then
  CTAGS=ctags
fi

if test -z "$ETAGS"; then
  ETAGS=etags
fi

if test -z "$CSCOPE"; then
  CSCOPE=cscope
fi



# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    as_fn_error $? "Your 'rm' program is bad, sorry." "$LINENO" 5
  fi
fi

# Remove default macros from config.h:
#   PACKAGE, PACKAGE_{BUGREPORT,NAME,STRING,TARNAME,VERSION}, STDC_HEADERS, VERSION
ac_config_headers="$ac_config_headers zfs_config.h"


case `pwd` in
  *\ * | *\	*)
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&5
printf "%s\n" "$as_me: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&2;} ;;
esac



macro_version='2.4.7'
macro_revision='2.4.7'














ltmain=$ac_aux_dir/ltmain.sh

# Backslashify metacharacters that are still active within
# double-quoted strings.
sed_quote_subst='s/\(["`$\\]\)/\\\1/g'

# Same as above, but do not quote variable references.
double_quote_subst='s/\(["`\\]\)/\\\1/g'

# Sed substitution to delay expansion of an escaped shell variable in a
# double_quote_subst'ed string.
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'

# Sed substitution to delay expansion of an escaped single quote.
delay_single_quote_subst='s/'\''/'\'\\\\\\\'\''/g'

# Sed substitution to avoid accidental globbing in evaled expressions
no_glob_subst='s/\*/\\\*/g'

ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO
ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to print strings" >&5
printf %s "checking how to print strings... " >&6; }
# Test print first, because it will be a builtin if present.
if test "X`( print -r -- -n ) 2>/dev/null`" = X-n && \
   test "X`print -r -- $ECHO 2>/dev/null`" = "X$ECHO"; then
  ECHO='print -r --'
elif test "X`printf %s $ECHO 2>/dev/null`" = "X$ECHO"; then
  ECHO='printf %s\n'
else
  # Use this function as a fallback that always works.
  func_fallback_echo ()
  {
    eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
  }
  ECHO='func_fallback_echo'
fi

# func_echo_all arg...
# Invoke $ECHO with all args, space-separated.
func_echo_all ()
{
    $ECHO ""
}

case $ECHO in
  printf*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: printf" >&5
printf "%s\n" "printf" >&6; } ;;
  print*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: print -r" >&5
printf "%s\n" "print -r" >&6; } ;;
  *) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: cat" >&5
printf "%s\n" "cat" >&6; } ;;
esac























DEPDIR="${am__leading_dot}deps"

ac_config_commands="$ac_config_commands depfiles"

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} supports the include directive" >&5
printf %s "checking whether ${MAKE-make} supports the include directive... " >&6; }
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  { echo "$as_me:$LINENO: ${MAKE-make} -f confmf.$s && cat confinc.out" >&5
   (${MAKE-make} -f confmf.$s && cat confinc.out) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
  case $?:`cat confinc.out 2>/dev/null` in #(
  '0:this is the am__doit target') :
    case $s in #(
  BSD) :
    am__include='.include' am__quote='"' ;; #(
  *) :
    am__include='include' am__quote='' ;;
esac ;; #(
  *) :
     ;;
esac
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: ${_am_result}" >&5
printf "%s\n" "${_am_result}" >&6; }

# Check whether --enable-dependency-tracking was given.
if test ${enable_dependency_tracking+y}
then :
  enableval=$enable_dependency_tracking;
fi

if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
 if test "x$enable_dependency_tracking" != xno; then
  AMDEP_TRUE=
  AMDEP_FALSE='#'
else
  AMDEP_TRUE='#'
  AMDEP_FALSE=
fi


ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
set dummy ${ac_tool_prefix}gcc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}gcc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="gcc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

if test -z "$CC"; then
          if test -n "$ac_tool_prefix"; then
    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
set dummy ${ac_tool_prefix}cc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}cc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  fi
fi
if test -z "$CC"; then
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  ac_prog_rejected=no
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    if test "$as_dir$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
       ac_prog_rejected=yes
       continue
     fi
    ac_cv_prog_CC="cc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

if test $ac_prog_rejected = yes; then
  # We found a bogon in the path, so make sure we never use it.
  set dummy $ac_cv_prog_CC
  shift
  if test $# != 0; then
    # We chose a different compiler from the bogus one.
    # However, it has the same basename, so the bogon will be chosen
    # first if we set CC to just the basename; use the full file name.
    shift
    ac_cv_prog_CC="$as_dir$ac_word${1+' '}$@"
  fi
fi
fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  for ac_prog in cl.exe
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cl.exe
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$ac_ct_CC" && break
done

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
fi

fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}clang", so it can be a program name with args.
set dummy ${ac_tool_prefix}clang; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}clang"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "clang", so it can be a program name with args.
set dummy clang; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="clang"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

fi


test -z "$CC" && { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "no acceptable C compiler found in \$PATH
See \`config.log' for more details" "$LINENO" 5; }

# Provide some information about the compiler.
printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion -version; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done

cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out"
# Try to create an executable without -o first, disregard a.out.
# It will help us diagnose broken compilers, and finding out an intuition
# of exeext.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
printf %s "checking whether the C compiler works... " >&6; }
ac_link_default=`printf "%s\n" "$ac_link" | sed 's/ -o *conftest[^ ]*//'`

# The possible output files:
ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"

ac_rmfiles=
for ac_file in $ac_files
do
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
  esac
done
rm -f $ac_rmfiles

if { { ac_try="$ac_link_default"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link_default") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
then :
  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
# in a Makefile.  We should not override ac_cv_exeext if it was cached,
# so that the user can short-circuit this test for compilers unknown to
# Autoconf.
for ac_file in $ac_files ''
do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
	;;
    [ab].out )
	# We found the default executable, but exeext='' is most
	# certainly right.
	break;;
    *.* )
	if test ${ac_cv_exeext+y} && test "$ac_cv_exeext" != no;
	then :; else
	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	fi
	# We set ac_cv_exeext here because the later test for it is not
	# safe: cross compilers may not add the suffix if given an `-o'
	# argument, so we may need to know it at that point already.
	# Even if this section looks crufty: it has the advantage of
	# actually working.
	break;;
    * )
	break;;
  esac
done
test "$ac_cv_exeext" = no && ac_cv_exeext=

else $as_nop
  ac_file=''
fi
if test -z "$ac_file"
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error 77 "C compiler cannot create executables
See \`config.log' for more details" "$LINENO" 5; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
printf %s "checking for C compiler default output file name... " >&6; }
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
printf "%s\n" "$ac_file" >&6; }
ac_exeext=$ac_cv_exeext

rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out
ac_clean_files=$ac_clean_files_save
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
printf %s "checking for suffix of executables... " >&6; }
if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
then :
  # If both `conftest.exe' and `conftest' are `present' (well, observable)
# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
# work properly (i.e., refer to `conftest.exe'), while it won't with
# `rm'.
for ac_file in conftest.exe conftest conftest.*; do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	  break;;
    * ) break;;
  esac
done
else $as_nop
  { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot compute suffix of executables: cannot compile and link
See \`config.log' for more details" "$LINENO" 5; }
fi
rm -f conftest conftest$ac_cv_exeext
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
printf "%s\n" "$ac_cv_exeext" >&6; }

rm -f conftest.$ac_ext
EXEEXT=$ac_cv_exeext
ac_exeext=$EXEEXT
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdio.h>
int
main (void)
{
FILE *f = fopen ("conftest.out", "w");
 return ferror (f) || fclose (f) != 0;

  ;
  return 0;
}
_ACEOF
ac_clean_files="$ac_clean_files conftest.out"
# Check that the compiler produces executables we can run.  If not, either
# the compiler is broken, or we cross compile.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
printf %s "checking whether we are cross compiling... " >&6; }
if test "$cross_compiling" != yes; then
  { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
  if { ac_try='./conftest$ac_cv_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }; then
    cross_compiling=no
  else
    if test "$cross_compiling" = maybe; then
	cross_compiling=yes
    else
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error 77 "cannot run C compiled programs.
If you meant to cross compile, use \`--host'.
See \`config.log' for more details" "$LINENO" 5; }
    fi
  fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
printf "%s\n" "$cross_compiling" >&6; }

rm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out
ac_clean_files=$ac_clean_files_save
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
printf %s "checking for suffix of object files... " >&6; }
if test ${ac_cv_objext+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.o conftest.obj
if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
then :
  for ac_file in conftest.o conftest.obj conftest.*; do
  test -f "$ac_file" || continue;
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
       break;;
  esac
done
else $as_nop
  printf "%s\n" "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot compute suffix of object files: cannot compile
See \`config.log' for more details" "$LINENO" 5; }
fi
rm -f conftest.$ac_cv_objext conftest.$ac_ext
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
printf "%s\n" "$ac_cv_objext" >&6; }
OBJEXT=$ac_cv_objext
ac_objext=$OBJEXT
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the compiler supports GNU C" >&5
printf %s "checking whether the compiler supports GNU C... " >&6; }
if test ${ac_cv_c_compiler_gnu+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_compiler_gnu=yes
else $as_nop
  ac_compiler_gnu=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
printf "%s\n" "$ac_cv_c_compiler_gnu" >&6; }
ac_compiler_gnu=$ac_cv_c_compiler_gnu

if test $ac_compiler_gnu = yes; then
  GCC=yes
else
  GCC=
fi
ac_test_CFLAGS=${CFLAGS+y}
ac_save_CFLAGS=$CFLAGS
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
printf %s "checking whether $CC accepts -g... " >&6; }
if test ${ac_cv_prog_cc_g+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_save_c_werror_flag=$ac_c_werror_flag
   ac_c_werror_flag=yes
   ac_cv_prog_cc_g=no
   CFLAGS="-g"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_g=yes
else $as_nop
  CFLAGS=""
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

else $as_nop
  ac_c_werror_flag=$ac_save_c_werror_flag
	 CFLAGS="-g"
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_g=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
   ac_c_werror_flag=$ac_save_c_werror_flag
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
printf "%s\n" "$ac_cv_prog_cc_g" >&6; }
if test $ac_test_CFLAGS; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
ac_prog_cc_stdc=no
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C11 features" >&5
printf %s "checking for $CC option to enable C11 features... " >&6; }
if test ${ac_cv_prog_cc_c11+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_cv_prog_cc_c11=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c11_program
_ACEOF
for ac_arg in '' -std=gnu11
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c11=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c11" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC
fi

if test "x$ac_cv_prog_cc_c11" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else $as_nop
  if test "x$ac_cv_prog_cc_c11" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c11" >&5
printf "%s\n" "$ac_cv_prog_cc_c11" >&6; }
     CC="$CC $ac_cv_prog_cc_c11"
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c11
  ac_prog_cc_stdc=c11
fi
fi
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C99 features" >&5
printf %s "checking for $CC option to enable C99 features... " >&6; }
if test ${ac_cv_prog_cc_c99+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_cv_prog_cc_c99=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c99_program
_ACEOF
for ac_arg in '' -std=gnu99 -std=c99 -c99 -qlanglvl=extc1x -qlanglvl=extc99 -AC99 -D_STDC_C99=
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c99=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c99" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC
fi

if test "x$ac_cv_prog_cc_c99" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else $as_nop
  if test "x$ac_cv_prog_cc_c99" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99" >&5
printf "%s\n" "$ac_cv_prog_cc_c99" >&6; }
     CC="$CC $ac_cv_prog_cc_c99"
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99
  ac_prog_cc_stdc=c99
fi
fi
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C89 features" >&5
printf %s "checking for $CC option to enable C89 features... " >&6; }
if test ${ac_cv_prog_cc_c89+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_cv_prog_cc_c89=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c89_program
_ACEOF
for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std -Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c89=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c89" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC
fi

if test "x$ac_cv_prog_cc_c89" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else $as_nop
  if test "x$ac_cv_prog_cc_c89" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
printf "%s\n" "$ac_cv_prog_cc_c89" >&6; }
     CC="$CC $ac_cv_prog_cc_c89"
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89
  ac_prog_cc_stdc=c89
fi
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


  ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together" >&5
printf %s "checking whether $CC understands -c and -o together... " >&6; }
if test ${am_cv_prog_cc_c_o+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if { echo "$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext" >&5
   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o" >&5
printf "%s\n" "$am_cv_prog_cc_c_o" >&6; }
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


depcc="$CC"   am_compiler_list=

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
printf %s "checking dependency style of $depcc... " >&6; }
if test ${am_cv_CC_dependencies_compiler_type+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_CC_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
  fi
  am__universal=false
  case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_CC_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_CC_dependencies_compiler_type=none
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type" >&5
printf "%s\n" "$am_cv_CC_dependencies_compiler_type" >&6; }
CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type

 if
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
  am__fastdepCC_TRUE=
  am__fastdepCC_FALSE='#'
else
  am__fastdepCC_TRUE='#'
  am__fastdepCC_FALSE=
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
printf %s "checking for a sed that does not truncate output... " >&6; }
if test ${ac_cv_path_SED+y}
then :
  printf %s "(cached) " >&6
else $as_nop
            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
     for ac_i in 1 2 3 4 5 6 7; do
       ac_script="$ac_script$as_nl$ac_script"
     done
     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
     { ac_script=; unset ac_script;}
     if test -z "$SED"; then
  ac_path_SED_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in sed gsed
   do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_SED="$as_dir$ac_prog$ac_exec_ext"
      as_fn_executable_p "$ac_path_SED" || continue
# Check for GNU ac_path_SED and select it if it is found.
  # Check for GNU $ac_path_SED
case `"$ac_path_SED" --version 2>&1` in
*GNU*)
  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
*)
  ac_count=0
  printf %s 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    printf "%s\n" '' >> "conftest.nl"
    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_SED_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_SED="$ac_path_SED"
      ac_path_SED_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_SED_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_SED"; then
    as_fn_error $? "no acceptable sed could be found in \$PATH" "$LINENO" 5
  fi
else
  ac_cv_path_SED=$SED
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
printf "%s\n" "$ac_cv_path_SED" >&6; }
 SED="$ac_cv_path_SED"
  rm -f conftest.sed

test -z "$SED" && SED=sed
Xsed="$SED -e 1s/^X//"











{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5
printf %s "checking for grep that handles long lines and -e... " >&6; }
if test ${ac_cv_path_GREP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -z "$GREP"; then
  ac_path_GREP_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in grep ggrep
   do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_GREP="$as_dir$ac_prog$ac_exec_ext"
      as_fn_executable_p "$ac_path_GREP" || continue
# Check for GNU ac_path_GREP and select it if it is found.
  # Check for GNU $ac_path_GREP
case `"$ac_path_GREP" --version 2>&1` in
*GNU*)
  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
*)
  ac_count=0
  printf %s 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    printf "%s\n" 'GREP' >> "conftest.nl"
    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_GREP_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_GREP="$ac_path_GREP"
      ac_path_GREP_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_GREP_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_GREP"; then
    as_fn_error $? "no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
  fi
else
  ac_cv_path_GREP=$GREP
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP" >&5
printf "%s\n" "$ac_cv_path_GREP" >&6; }
 GREP="$ac_cv_path_GREP"


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5
printf %s "checking for egrep... " >&6; }
if test ${ac_cv_path_EGREP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
   then ac_cv_path_EGREP="$GREP -E"
   else
     if test -z "$EGREP"; then
  ac_path_EGREP_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in egrep
   do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_EGREP="$as_dir$ac_prog$ac_exec_ext"
      as_fn_executable_p "$ac_path_EGREP" || continue
# Check for GNU ac_path_EGREP and select it if it is found.
  # Check for GNU $ac_path_EGREP
case `"$ac_path_EGREP" --version 2>&1` in
*GNU*)
  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
*)
  ac_count=0
  printf %s 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    printf "%s\n" 'EGREP' >> "conftest.nl"
    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_EGREP="$ac_path_EGREP"
      ac_path_EGREP_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_EGREP_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_EGREP"; then
    as_fn_error $? "no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
  fi
else
  ac_cv_path_EGREP=$EGREP
fi

   fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP" >&5
printf "%s\n" "$ac_cv_path_EGREP" >&6; }
 EGREP="$ac_cv_path_EGREP"


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for fgrep" >&5
printf %s "checking for fgrep... " >&6; }
if test ${ac_cv_path_FGREP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1
   then ac_cv_path_FGREP="$GREP -F"
   else
     if test -z "$FGREP"; then
  ac_path_FGREP_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in fgrep
   do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_FGREP="$as_dir$ac_prog$ac_exec_ext"
      as_fn_executable_p "$ac_path_FGREP" || continue
# Check for GNU ac_path_FGREP and select it if it is found.
  # Check for GNU $ac_path_FGREP
case `"$ac_path_FGREP" --version 2>&1` in
*GNU*)
  ac_cv_path_FGREP="$ac_path_FGREP" ac_path_FGREP_found=:;;
*)
  ac_count=0
  printf %s 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    printf "%s\n" 'FGREP' >> "conftest.nl"
    "$ac_path_FGREP" FGREP < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_FGREP_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_FGREP="$ac_path_FGREP"
      ac_path_FGREP_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_FGREP_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_FGREP"; then
    as_fn_error $? "no acceptable fgrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
  fi
else
  ac_cv_path_FGREP=$FGREP
fi

   fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_FGREP" >&5
printf "%s\n" "$ac_cv_path_FGREP" >&6; }
 FGREP="$ac_cv_path_FGREP"


test -z "$GREP" && GREP=grep



















# Check whether --with-gnu-ld was given.
if test ${with_gnu_ld+y}
then :
  withval=$with_gnu_ld; test no = "$withval" || with_gnu_ld=yes
else $as_nop
  with_gnu_ld=no
fi

ac_prog=ld
if test yes = "$GCC"; then
  # Check if gcc -print-prog-name=ld gives a path.
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
printf %s "checking for ld used by $CC... " >&6; }
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return, which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [\\/]* | ?:[\\/]*)
      re_direlt='/[^/][^/]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD=$ac_prog
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test yes = "$with_gnu_ld"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU ld" >&5
printf %s "checking for GNU ld... " >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for non-GNU ld" >&5
printf %s "checking for non-GNU ld... " >&6; }
fi
if test ${lt_cv_path_LD+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -z "$LD"; then
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD=$ac_dir/$ac_prog
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test no != "$with_gnu_ld" && break
	;;
      *)
	test yes != "$with_gnu_ld" && break
	;;
      esac
    fi
  done
  IFS=$lt_save_ifs
else
  lt_cv_path_LD=$LD # Let the user override the test with a path.
fi
fi

LD=$lt_cv_path_LD
if test -n "$LD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
printf "%s\n" "$LD" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi
test -z "$LD" && as_fn_error $? "no acceptable ld found in \$PATH" "$LINENO" 5
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
printf %s "checking if the linker ($LD) is GNU ld... " >&6; }
if test ${lt_cv_prog_gnu_ld+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  # I'd rather use --version here, but apparently some GNU lds only accept -v.
case `$LD -v 2>&1 </dev/null` in
*GNU* | *'with BFD'*)
  lt_cv_prog_gnu_ld=yes
  ;;
*)
  lt_cv_prog_gnu_ld=no
  ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld" >&5
printf "%s\n" "$lt_cv_prog_gnu_ld" >&6; }
with_gnu_ld=$lt_cv_prog_gnu_ld









{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for BSD- or MS-compatible name lister (nm)" >&5
printf %s "checking for BSD- or MS-compatible name lister (nm)... " >&6; }
if test ${lt_cv_path_NM+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM=$NM
else
  lt_nm_to_check=${ac_tool_prefix}nm
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS=$lt_save_ifs
      test -z "$ac_dir" && ac_dir=.
      tmp_nm=$ac_dir/$lt_tmp_nm
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext"; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the 'sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty
	case $build_os in
	mingw*) lt_bad_file=conftest.nm/nofile ;;
	*) lt_bad_file=/dev/null ;;
	esac
	case `"$tmp_nm" -B $lt_bad_file 2>&1 | $SED '1q'` in
	*$lt_bad_file* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break 2
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | $SED '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break 2
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS=$lt_save_ifs
  done
  : ${lt_cv_path_NM=no}
fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_NM" >&5
printf "%s\n" "$lt_cv_path_NM" >&6; }
if test no != "$lt_cv_path_NM"; then
  NM=$lt_cv_path_NM
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  if test -n "$DUMPBIN"; then :
    # Let the user override the test.
  else
    if test -n "$ac_tool_prefix"; then
  for ac_prog in dumpbin "link -dump"
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_DUMPBIN+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$DUMPBIN"; then
  ac_cv_prog_DUMPBIN="$DUMPBIN" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_DUMPBIN="$ac_tool_prefix$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
DUMPBIN=$ac_cv_prog_DUMPBIN
if test -n "$DUMPBIN"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DUMPBIN" >&5
printf "%s\n" "$DUMPBIN" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


    test -n "$DUMPBIN" && break
  done
fi
if test -z "$DUMPBIN"; then
  ac_ct_DUMPBIN=$DUMPBIN
  for ac_prog in dumpbin "link -dump"
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_DUMPBIN+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_DUMPBIN"; then
  ac_cv_prog_ac_ct_DUMPBIN="$ac_ct_DUMPBIN" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_DUMPBIN="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_DUMPBIN=$ac_cv_prog_ac_ct_DUMPBIN
if test -n "$ac_ct_DUMPBIN"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DUMPBIN" >&5
printf "%s\n" "$ac_ct_DUMPBIN" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$ac_ct_DUMPBIN" && break
done

  if test "x$ac_ct_DUMPBIN" = x; then
    DUMPBIN=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    DUMPBIN=$ac_ct_DUMPBIN
  fi
fi

    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | $SED '1q'` in
    *COFF*)
      DUMPBIN="$DUMPBIN -symbols -headers"
      ;;
    *)
      DUMPBIN=:
      ;;
    esac
  fi

  if test : != "$DUMPBIN"; then
    NM=$DUMPBIN
  fi
fi
test -z "$NM" && NM=nm






{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking the name lister ($NM) interface" >&5
printf %s "checking the name lister ($NM) interface... " >&6; }
if test ${lt_cv_nm_interface+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:$LINENO: $ac_compile\"" >&5)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&5
  (eval echo "\"\$as_me:$LINENO: $NM \\\"conftest.$ac_objext\\\"\"" >&5)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&5
  (eval echo "\"\$as_me:$LINENO: output\"" >&5)
  cat conftest.out >&5
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_nm_interface" >&5
printf "%s\n" "$lt_cv_nm_interface" >&6; }

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
printf %s "checking whether ln -s works... " >&6; }
LN_S=$as_ln_s
if test "$LN_S" = "ln -s"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no, using $LN_S" >&5
printf "%s\n" "no, using $LN_S" >&6; }
fi

# find the maximum length of command line arguments
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking the maximum length of command line arguments" >&5
printf %s "checking the maximum length of command line arguments... " >&6; }
if test ${lt_cv_sys_max_cmd_len+y}
then :
  printf %s "(cached) " >&6
else $as_nop
    i=0
  teststring=ABCD

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  mint*)
    # On MiNT this can take a long time and run out of memory.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  bitrig* | darwin* | dragonfly* | freebsd* | midnightbsd* | netbsd* | openbsd*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  os2*)
    # The test takes a long time on OS/2.
    lt_cv_sys_max_cmd_len=8192
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | $SED 's/.*[	 ]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len" && \
       test undefined != "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test X`env echo "$teststring$teststring" 2>/dev/null` \
	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
	      test 17 != "$i" # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac

fi

if test -n "$lt_cv_sys_max_cmd_len"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sys_max_cmd_len" >&5
printf "%s\n" "$lt_cv_sys_max_cmd_len" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none" >&5
printf "%s\n" "none" >&6; }
fi
max_cmd_len=$lt_cv_sys_max_cmd_len






: ${CP="cp -f"}
: ${MV="mv -f"}
: ${RM="rm -f"}

if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  lt_unset=unset
else
  lt_unset=false
fi





# test EBCDIC or ASCII
case `echo X|tr X '\101'` in
 A) # ASCII based system
    # \n is not interpreted correctly by Solaris 8 /usr/ucb/tr
  lt_SP2NL='tr \040 \012'
  lt_NL2SP='tr \015\012 \040\040'
  ;;
 *) # EBCDIC based system
  lt_SP2NL='tr \100 \n'
  lt_NL2SP='tr \r\n \100\100'
  ;;
esac









{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to convert $build file names to $host format" >&5
printf %s "checking how to convert $build file names to $host format... " >&6; }
if test ${lt_cv_to_host_file_cmd+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $host in
  *-*-mingw* )
    case $build in
      *-*-mingw* ) # actually msys
        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32
        ;;
      *-*-cygwin* )
        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32
        ;;
      * ) # otherwise, assume *nix
        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32
        ;;
    esac
    ;;
  *-*-cygwin* )
    case $build in
      *-*-mingw* ) # actually msys
        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin
        ;;
      *-*-cygwin* )
        lt_cv_to_host_file_cmd=func_convert_file_noop
        ;;
      * ) # otherwise, assume *nix
        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin
        ;;
    esac
    ;;
  * ) # unhandled hosts (and "normal" native builds)
    lt_cv_to_host_file_cmd=func_convert_file_noop
    ;;
esac

fi

to_host_file_cmd=$lt_cv_to_host_file_cmd
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_to_host_file_cmd" >&5
printf "%s\n" "$lt_cv_to_host_file_cmd" >&6; }





{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to convert $build file names to toolchain format" >&5
printf %s "checking how to convert $build file names to toolchain format... " >&6; }
if test ${lt_cv_to_tool_file_cmd+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  #assume ordinary cross tools, or native build.
lt_cv_to_tool_file_cmd=func_convert_file_noop
case $host in
  *-*-mingw* )
    case $build in
      *-*-mingw* ) # actually msys
        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32
        ;;
    esac
    ;;
esac

fi

to_tool_file_cmd=$lt_cv_to_tool_file_cmd
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_to_tool_file_cmd" >&5
printf "%s\n" "$lt_cv_to_tool_file_cmd" >&6; }





{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $LD option to reload object files" >&5
printf %s "checking for $LD option to reload object files... " >&6; }
if test ${lt_cv_ld_reload_flag+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_ld_reload_flag='-r'
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_reload_flag" >&5
printf "%s\n" "$lt_cv_ld_reload_flag" >&6; }
reload_flag=$lt_cv_ld_reload_flag
case $reload_flag in
"" | " "*) ;;
*) reload_flag=" $reload_flag" ;;
esac
reload_cmds='$LD$reload_flag -o $output$reload_objs'
case $host_os in
  cygwin* | mingw* | pw32* | cegcc*)
    if test yes != "$GCC"; then
      reload_cmds=false
    fi
    ;;
  darwin*)
    if test yes = "$GCC"; then
      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'
    else
      reload_cmds='$LD$reload_flag -o $output$reload_objs'
    fi
    ;;
esac









if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}file", so it can be a program name with args.
set dummy ${ac_tool_prefix}file; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_FILECMD+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$FILECMD"; then
  ac_cv_prog_FILECMD="$FILECMD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_FILECMD="${ac_tool_prefix}file"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
FILECMD=$ac_cv_prog_FILECMD
if test -n "$FILECMD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $FILECMD" >&5
printf "%s\n" "$FILECMD" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_FILECMD"; then
  ac_ct_FILECMD=$FILECMD
  # Extract the first word of "file", so it can be a program name with args.
set dummy file; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_FILECMD+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_FILECMD"; then
  ac_cv_prog_ac_ct_FILECMD="$ac_ct_FILECMD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_FILECMD="file"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_FILECMD=$ac_cv_prog_ac_ct_FILECMD
if test -n "$ac_ct_FILECMD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_FILECMD" >&5
printf "%s\n" "$ac_ct_FILECMD" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_FILECMD" = x; then
    FILECMD=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    FILECMD=$ac_ct_FILECMD
  fi
else
  FILECMD="$ac_cv_prog_FILECMD"
fi







if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}objdump", so it can be a program name with args.
set dummy ${ac_tool_prefix}objdump; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_OBJDUMP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$OBJDUMP"; then
  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_OBJDUMP="${ac_tool_prefix}objdump"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
OBJDUMP=$ac_cv_prog_OBJDUMP
if test -n "$OBJDUMP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
printf "%s\n" "$OBJDUMP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_OBJDUMP"; then
  ac_ct_OBJDUMP=$OBJDUMP
  # Extract the first word of "objdump", so it can be a program name with args.
set dummy objdump; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_OBJDUMP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_OBJDUMP"; then
  ac_cv_prog_ac_ct_OBJDUMP="$ac_ct_OBJDUMP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_OBJDUMP="objdump"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP
if test -n "$ac_ct_OBJDUMP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP" >&5
printf "%s\n" "$ac_ct_OBJDUMP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_OBJDUMP" = x; then
    OBJDUMP="false"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    OBJDUMP=$ac_ct_OBJDUMP
  fi
else
  OBJDUMP="$ac_cv_prog_OBJDUMP"
fi

test -z "$OBJDUMP" && OBJDUMP=objdump









{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to recognize dependent libraries" >&5
printf %s "checking how to recognize dependent libraries... " >&6; }
if test ${lt_cv_deplibs_check_method+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_deplibs_check_method='unknown'
# Need to set the preceding variable on all platforms that support
# interlibrary dependencies.
# 'none' -- dependencies not supported.
# 'unknown' -- same as none, but documents that we really don't know.
# 'pass_all' -- all dependencies passed with no checks.
# 'test_compile' -- check by making test program.
# 'file_magic [[regex]]' -- check by looking for files in library path
# that responds to the $file_magic_cmd with a given extended regex.
# If you have 'file' or equivalent on your system and you're not sure
# whether 'pass_all' will *always* work, you probably want this one.

case $host_os in
aix[4-9]*)
  lt_cv_deplibs_check_method=pass_all
  ;;

beos*)
  lt_cv_deplibs_check_method=pass_all
  ;;

bsdi[45]*)
  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
  lt_cv_file_magic_cmd='$FILECMD -L'
  lt_cv_file_magic_test_file=/shlib/libc.so
  ;;

cygwin*)
  # func_win32_libid is a shell function defined in ltmain.sh
  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
  lt_cv_file_magic_cmd='func_win32_libid'
  ;;

mingw* | pw32*)
  # Base MSYS/MinGW do not provide the 'file' command needed by
  # func_win32_libid shell function, so use a weaker test based on 'objdump',
  # unless we find 'file', for example because we are cross-compiling.
  if ( file / ) >/dev/null 2>&1; then
    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
    lt_cv_file_magic_cmd='func_win32_libid'
  else
    # Keep this pattern in sync with the one in func_win32_libid.
    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'
    lt_cv_file_magic_cmd='$OBJDUMP -f'
  fi
  ;;

cegcc*)
  # use the weaker test based on 'objdump'. See mingw*.
  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'
  lt_cv_file_magic_cmd='$OBJDUMP -f'
  ;;

darwin* | rhapsody*)
  lt_cv_deplibs_check_method=pass_all
  ;;

freebsd* | dragonfly* | midnightbsd*)
  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
    case $host_cpu in
    i*86 )
      # Not sure whether the presence of OpenBSD here was a mistake.
      # Let's accept both of them until this is cleared up.
      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[3-9]86 (compact )?demand paged shared library'
      lt_cv_file_magic_cmd=$FILECMD
      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
      ;;
    esac
  else
    lt_cv_deplibs_check_method=pass_all
  fi
  ;;

haiku*)
  lt_cv_deplibs_check_method=pass_all
  ;;

hpux10.20* | hpux11*)
  lt_cv_file_magic_cmd=$FILECMD
  case $host_cpu in
  ia64*)
    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
    ;;
  hppa*64*)
    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\.[0-9]'
    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl
    ;;
  *)
    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9]\.[0-9]) shared library'
    lt_cv_file_magic_test_file=/usr/lib/libc.sl
    ;;
  esac
  ;;

interix[3-9]*)
  # PIC code is broken on Interix 3.x, that's why |\.a not |_pic\.a here
  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|\.a)$'
  ;;

irix5* | irix6* | nonstopux*)
  case $LD in
  *-32|*"-32 ") libmagic=32-bit;;
  *-n32|*"-n32 ") libmagic=N32;;
  *-64|*"-64 ") libmagic=64-bit;;
  *) libmagic=never-match;;
  esac
  lt_cv_deplibs_check_method=pass_all
  ;;

# This must be glibc/ELF.
linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
  lt_cv_deplibs_check_method=pass_all
  ;;

netbsd*)
  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
  else
    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
  fi
  ;;

newos6*)
  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
  lt_cv_file_magic_cmd=$FILECMD
  lt_cv_file_magic_test_file=/usr/lib/libnls.so
  ;;

*nto* | *qnx*)
  lt_cv_deplibs_check_method=pass_all
  ;;

openbsd* | bitrig*)
  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
  else
    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
  fi
  ;;

osf3* | osf4* | osf5*)
  lt_cv_deplibs_check_method=pass_all
  ;;

rdos*)
  lt_cv_deplibs_check_method=pass_all
  ;;

solaris*)
  lt_cv_deplibs_check_method=pass_all
  ;;

sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
  lt_cv_deplibs_check_method=pass_all
  ;;

sysv4 | sysv4.3*)
  case $host_vendor in
  motorola)
    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
    ;;
  ncr)
    lt_cv_deplibs_check_method=pass_all
    ;;
  sequent)
    lt_cv_file_magic_cmd='/bin/file'
    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'
    ;;
  sni)
    lt_cv_file_magic_cmd='/bin/file'
    lt_cv_deplibs_check_method="file_magic ELF [0-9][0-9]*-bit [LM]SB dynamic lib"
    lt_cv_file_magic_test_file=/lib/libc.so
    ;;
  siemens)
    lt_cv_deplibs_check_method=pass_all
    ;;
  pc)
    lt_cv_deplibs_check_method=pass_all
    ;;
  esac
  ;;

tpf*)
  lt_cv_deplibs_check_method=pass_all
  ;;
os2*)
  lt_cv_deplibs_check_method=pass_all
  ;;
esac

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_deplibs_check_method" >&5
printf "%s\n" "$lt_cv_deplibs_check_method" >&6; }

file_magic_glob=
want_nocaseglob=no
if test "$build" = "$host"; then
  case $host_os in
  mingw* | pw32*)
    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then
      want_nocaseglob=yes
    else
      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e "s/\(..\)/s\/[\1]\/[\1]\/g;/g"`
    fi
    ;;
  esac
fi

file_magic_cmd=$lt_cv_file_magic_cmd
deplibs_check_method=$lt_cv_deplibs_check_method
test -z "$deplibs_check_method" && deplibs_check_method=unknown






















if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}dlltool", so it can be a program name with args.
set dummy ${ac_tool_prefix}dlltool; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_DLLTOOL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$DLLTOOL"; then
  ac_cv_prog_DLLTOOL="$DLLTOOL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_DLLTOOL="${ac_tool_prefix}dlltool"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
DLLTOOL=$ac_cv_prog_DLLTOOL
if test -n "$DLLTOOL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL" >&5
printf "%s\n" "$DLLTOOL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_DLLTOOL"; then
  ac_ct_DLLTOOL=$DLLTOOL
  # Extract the first word of "dlltool", so it can be a program name with args.
set dummy dlltool; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_DLLTOOL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_DLLTOOL"; then
  ac_cv_prog_ac_ct_DLLTOOL="$ac_ct_DLLTOOL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_DLLTOOL="dlltool"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_DLLTOOL=$ac_cv_prog_ac_ct_DLLTOOL
if test -n "$ac_ct_DLLTOOL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DLLTOOL" >&5
printf "%s\n" "$ac_ct_DLLTOOL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_DLLTOOL" = x; then
    DLLTOOL="false"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    DLLTOOL=$ac_ct_DLLTOOL
  fi
else
  DLLTOOL="$ac_cv_prog_DLLTOOL"
fi

test -z "$DLLTOOL" && DLLTOOL=dlltool










{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to associate runtime and link libraries" >&5
printf %s "checking how to associate runtime and link libraries... " >&6; }
if test ${lt_cv_sharedlib_from_linklib_cmd+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_sharedlib_from_linklib_cmd='unknown'

case $host_os in
cygwin* | mingw* | pw32* | cegcc*)
  # two different shell functions defined in ltmain.sh;
  # decide which one to use based on capabilities of $DLLTOOL
  case `$DLLTOOL --help 2>&1` in
  *--identify-strict*)
    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib
    ;;
  *)
    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback
    ;;
  esac
  ;;
*)
  # fallback: assume linklib IS sharedlib
  lt_cv_sharedlib_from_linklib_cmd=$ECHO
  ;;
esac

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sharedlib_from_linklib_cmd" >&5
printf "%s\n" "$lt_cv_sharedlib_from_linklib_cmd" >&6; }
sharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd
test -z "$sharedlib_from_linklib_cmd" && sharedlib_from_linklib_cmd=$ECHO








if test -n "$ac_tool_prefix"; then
  for ac_prog in ar
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_AR+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$AR"; then
  ac_cv_prog_AR="$AR" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_AR="$ac_tool_prefix$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AR=$ac_cv_prog_AR
if test -n "$AR"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
printf "%s\n" "$AR" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


    test -n "$AR" && break
  done
fi
if test -z "$AR"; then
  ac_ct_AR=$AR
  for ac_prog in ar
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_AR+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_AR"; then
  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_AR="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_AR=$ac_cv_prog_ac_ct_AR
if test -n "$ac_ct_AR"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
printf "%s\n" "$ac_ct_AR" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$ac_ct_AR" && break
done

  if test "x$ac_ct_AR" = x; then
    AR="false"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    AR=$ac_ct_AR
  fi
fi

: ${AR=ar}






# Use ARFLAGS variable as AR's operation code to sync the variable naming with
# Automake.  If both AR_FLAGS and ARFLAGS are specified, AR_FLAGS should have
# higher priority because thats what people were doing historically (setting
# ARFLAGS for automake and AR_FLAGS for libtool).  FIXME: Make the AR_FLAGS
# variable obsoleted/removed.

test ${AR_FLAGS+y} || AR_FLAGS=${ARFLAGS-cr}
lt_ar_flags=$AR_FLAGS






# Make AR_FLAGS overridable by 'make ARFLAGS='.  Don't try to run-time override
# by AR_FLAGS because that was never working and AR_FLAGS is about to die.






{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for archiver @FILE support" >&5
printf %s "checking for archiver @FILE support... " >&6; }
if test ${lt_cv_ar_at_file+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_ar_at_file=no
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  echo conftest.$ac_objext > conftest.lst
      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&5'
      { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$lt_ar_try\""; } >&5
  (eval $lt_ar_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
      if test 0 -eq "$ac_status"; then
	# Ensure the archiver fails upon bogus file names.
	rm -f conftest.$ac_objext libconftest.a
	{ { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$lt_ar_try\""; } >&5
  (eval $lt_ar_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
	if test 0 -ne "$ac_status"; then
          lt_cv_ar_at_file=@
        fi
      fi
      rm -f conftest.* libconftest.a

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ar_at_file" >&5
printf "%s\n" "$lt_cv_ar_at_file" >&6; }

if test no = "$lt_cv_ar_at_file"; then
  archiver_list_spec=
else
  archiver_list_spec=$lt_cv_ar_at_file
fi







if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
set dummy ${ac_tool_prefix}strip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_STRIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$STRIP"; then
  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
STRIP=$ac_cv_prog_STRIP
if test -n "$STRIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
printf "%s\n" "$STRIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_STRIP"; then
  ac_ct_STRIP=$STRIP
  # Extract the first word of "strip", so it can be a program name with args.
set dummy strip; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_STRIP+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_STRIP"; then
  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_STRIP="strip"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
if test -n "$ac_ct_STRIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
printf "%s\n" "$ac_ct_STRIP" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_STRIP" = x; then
    STRIP=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    STRIP=$ac_ct_STRIP
  fi
else
  STRIP="$ac_cv_prog_STRIP"
fi

test -z "$STRIP" && STRIP=:






if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
set dummy ${ac_tool_prefix}ranlib; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_RANLIB+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$RANLIB"; then
  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
RANLIB=$ac_cv_prog_RANLIB
if test -n "$RANLIB"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
printf "%s\n" "$RANLIB" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_RANLIB"; then
  ac_ct_RANLIB=$RANLIB
  # Extract the first word of "ranlib", so it can be a program name with args.
set dummy ranlib; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_RANLIB+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_RANLIB"; then
  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_RANLIB="ranlib"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
if test -n "$ac_ct_RANLIB"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB" >&5
printf "%s\n" "$ac_ct_RANLIB" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_RANLIB" = x; then
    RANLIB=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    RANLIB=$ac_ct_RANLIB
  fi
else
  RANLIB="$ac_cv_prog_RANLIB"
fi

test -z "$RANLIB" && RANLIB=:






# Determine commands to create old-style static archives.
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'
old_postinstall_cmds='chmod 644 $oldlib'
old_postuninstall_cmds=

if test -n "$RANLIB"; then
  case $host_os in
  bitrig* | openbsd*)
    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$tool_oldlib"
    ;;
  *)
    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB \$tool_oldlib"
    ;;
  esac
  old_archive_cmds="$old_archive_cmds~\$RANLIB \$tool_oldlib"
fi

case $host_os in
  darwin*)
    lock_old_archive_extraction=yes ;;
  *)
    lock_old_archive_extraction=no ;;
esac







































# If no C compiler was specified, use CC.
LTCC=${LTCC-"$CC"}

# If no C compiler flags were specified, use CFLAGS.
LTCFLAGS=${LTCFLAGS-"$CFLAGS"}

# Allow CC to be a program name with arguments.
compiler=$CC


# Check for command to grab the raw symbol name followed by C symbol from nm.
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking command to parse $NM output from $compiler object" >&5
printf %s "checking command to parse $NM output from $compiler object... " >&6; }
if test ${lt_cv_sys_global_symbol_pipe+y}
then :
  printf %s "(cached) " >&6
else $as_nop

# These are sane defaults that work on at least a few old systems.
# [They come from Ultrix.  What could be older than Ultrix?!! ;)]

# Character class describing NM global symbol codes.
symcode='[BCDEGRST]'

# Regexp to match symbols that can be accessed directly from C.
sympat='\([_A-Za-z][_A-Za-z0-9]*\)'

# Define system-specific variables.
case $host_os in
aix*)
  symcode='[BCDT]'
  ;;
cygwin* | mingw* | pw32* | cegcc*)
  symcode='[ABCDGISTW]'
  ;;
hpux*)
  if test ia64 = "$host_cpu"; then
    symcode='[ABCDEGRST]'
  fi
  ;;
irix* | nonstopux*)
  symcode='[BCDEGRST]'
  ;;
osf*)
  symcode='[BCDEGQRST]'
  ;;
solaris*)
  symcode='[BDRT]'
  ;;
sco3.2v5*)
  symcode='[DT]'
  ;;
sysv4.2uw2*)
  symcode='[DT]'
  ;;
sysv5* | sco5v6* | unixware* | OpenUNIX*)
  symcode='[ABDT]'
  ;;
sysv4)
  symcode='[DFNSTU]'
  ;;
esac

# If we're using GNU nm, then use its standard symbol codes.
case `$NM -V 2>&1` in
*GNU* | *'with BFD'*)
  symcode='[ABCDGIRSTW]' ;;
esac

if test "$lt_cv_nm_interface" = "MS dumpbin"; then
  # Gets list of data symbols to import.
  lt_cv_sys_global_symbol_to_import="$SED -n -e 's/^I .* \(.*\)$/\1/p'"
  # Adjust the below global symbol transforms to fixup imported variables.
  lt_cdecl_hook=" -e 's/^I .* \(.*\)$/extern __declspec(dllimport) char \1;/p'"
  lt_c_name_hook=" -e 's/^I .* \(.*\)$/  {\"\1\", (void *) 0},/p'"
  lt_c_name_lib_hook="\
  -e 's/^I .* \(lib.*\)$/  {\"\1\", (void *) 0},/p'\
  -e 's/^I .* \(.*\)$/  {\"lib\1\", (void *) 0},/p'"
else
  # Disable hooks by default.
  lt_cv_sys_global_symbol_to_import=
  lt_cdecl_hook=
  lt_c_name_hook=
  lt_c_name_lib_hook=
fi

# Transform an extracted symbol line into a proper C declaration.
# Some systems (esp. on ia64) link data and code symbols differently,
# so use this general approach.
lt_cv_sys_global_symbol_to_cdecl="$SED -n"\
$lt_cdecl_hook\
" -e 's/^T .* \(.*\)$/extern int \1();/p'"\
" -e 's/^$symcode$symcode* .* \(.*\)$/extern char \1;/p'"

# Transform an extracted symbol line into symbol name and symbol address
lt_cv_sys_global_symbol_to_c_name_address="$SED -n"\
$lt_c_name_hook\
" -e 's/^: \(.*\) .*$/  {\"\1\", (void *) 0},/p'"\
" -e 's/^$symcode$symcode* .* \(.*\)$/  {\"\1\", (void *) \&\1},/p'"

# Transform an extracted symbol line into symbol name with lib prefix and
# symbol address.
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="$SED -n"\
$lt_c_name_lib_hook\
" -e 's/^: \(.*\) .*$/  {\"\1\", (void *) 0},/p'"\
" -e 's/^$symcode$symcode* .* \(lib.*\)$/  {\"\1\", (void *) \&\1},/p'"\
" -e 's/^$symcode$symcode* .* \(.*\)$/  {\"lib\1\", (void *) \&\1},/p'"

# Handle CRLF in mingw tool chain
opt_cr=
case $build_os in
mingw*)
  opt_cr=`$ECHO 'x\{0,1\}' | tr x '\015'` # option cr in regexp
  ;;
esac

# Try without a prefix underscore, then with it.
for ac_symprfx in "" "_"; do

  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.
  symxfrm="\\1 $ac_symprfx\\2 \\2"

  # Write the raw and C identifiers.
  if test "$lt_cv_nm_interface" = "MS dumpbin"; then
    # Fake it for dumpbin and say T for any non-static function,
    # D for any global variable and I for any imported variable.
    # Also find C++ and __fastcall symbols from MSVC++ or ICC,
    # which start with @ or ?.
    lt_cv_sys_global_symbol_pipe="$AWK '"\
"     {last_section=section; section=\$ 3};"\
"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};"\
"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
"     /^ *Symbol name *: /{split(\$ 0,sn,\":\"); si=substr(sn[2],2)};"\
"     /^ *Type *: code/{print \"T\",si,substr(si,length(prfx))};"\
"     /^ *Type *: data/{print \"I\",si,substr(si,length(prfx))};"\
"     \$ 0!~/External *\|/{next};"\
"     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
"     {if(hide[section]) next};"\
"     {f=\"D\"}; \$ 0~/\(\).*\|/{f=\"T\"};"\
"     {split(\$ 0,a,/\||\r/); split(a[2],s)};"\
"     s[1]~/^[@?]/{print f,s[1],s[1]; next};"\
"     s[1]~prfx {split(s[1],t,\"@\"); print f,t[1],substr(t[1],length(prfx))}"\
"     ' prfx=^$ac_symprfx"
  else
    lt_cv_sys_global_symbol_pipe="$SED -n -e 's/^.*[	 ]\($symcode$symcode*\)[	 ][	 ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
  fi
  lt_cv_sys_global_symbol_pipe="$lt_cv_sys_global_symbol_pipe | $SED '/ __gnu_lto/d'"

  # Check to see that the pipe works correctly.
  pipe_works=no

  rm -f conftest*
  cat > conftest.$ac_ext <<_LT_EOF
#ifdef __cplusplus
extern "C" {
#endif
char nm_test_var;
void nm_test_func(void);
void nm_test_func(void){}
#ifdef __cplusplus
}
#endif
int main(){nm_test_var='a';nm_test_func();return(0);}
_LT_EOF

  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
    # Now try to grab the symbols.
    nlist=conftest.nm
    if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$NM conftest.$ac_objext \| "$lt_cv_sys_global_symbol_pipe" \> $nlist\""; } >&5
  (eval $NM conftest.$ac_objext \| "$lt_cv_sys_global_symbol_pipe" \> $nlist) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && test -s "$nlist"; then
      # Try sorting and uniquifying the output.
      if sort "$nlist" | uniq > "$nlist"T; then
	mv -f "$nlist"T "$nlist"
      else
	rm -f "$nlist"T
      fi

      # Make sure that we snagged all the symbols we need.
      if $GREP ' nm_test_var$' "$nlist" >/dev/null; then
	if $GREP ' nm_test_func$' "$nlist" >/dev/null; then
	  cat <<_LT_EOF > conftest.$ac_ext
/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */
#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE
/* DATA imports from DLLs on WIN32 can't be const, because runtime
   relocations are performed -- see ld's documentation on pseudo-relocs.  */
# define LT_DLSYM_CONST
#elif defined __osf__
/* This system does not cope well with relocations in const data.  */
# define LT_DLSYM_CONST
#else
# define LT_DLSYM_CONST const
#endif

#ifdef __cplusplus
extern "C" {
#endif

_LT_EOF
	  # Now generate the symbol file.
	  eval "$lt_cv_sys_global_symbol_to_cdecl"' < "$nlist" | $GREP -v main >> conftest.$ac_ext'

	  cat <<_LT_EOF >> conftest.$ac_ext

/* The mapping between symbol names and symbols.  */
LT_DLSYM_CONST struct {
  const char *name;
  void       *address;
}
lt__PROGRAM__LTX_preloaded_symbols[] =
{
  { "@PROGRAM@", (void *) 0 },
_LT_EOF
	  $SED "s/^$symcode$symcode* .* \(.*\)$/  {\"\1\", (void *) \&\1},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
	  cat <<\_LT_EOF >> conftest.$ac_ext
  {0, (void *) 0}
};

/* This works around a problem in FreeBSD linker */
#ifdef FREEBSD_WORKAROUND
static const void *lt_preloaded_setup() {
  return lt__PROGRAM__LTX_preloaded_symbols;
}
#endif

#ifdef __cplusplus
}
#endif
_LT_EOF
	  # Now try linking the two files.
	  mv conftest.$ac_objext conftstm.$ac_objext
	  lt_globsym_save_LIBS=$LIBS
	  lt_globsym_save_CFLAGS=$CFLAGS
	  LIBS=conftstm.$ac_objext
	  CFLAGS="$CFLAGS$lt_prog_compiler_no_builtin_flag"
	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
  (eval $ac_link) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && test -s conftest$ac_exeext; then
	    pipe_works=yes
	  fi
	  LIBS=$lt_globsym_save_LIBS
	  CFLAGS=$lt_globsym_save_CFLAGS
	else
	  echo "cannot find nm_test_func in $nlist" >&5
	fi
      else
	echo "cannot find nm_test_var in $nlist" >&5
      fi
    else
      echo "cannot run $lt_cv_sys_global_symbol_pipe" >&5
    fi
  else
    echo "$progname: failed program was:" >&5
    cat conftest.$ac_ext >&5
  fi
  rm -rf conftest* conftst*

  # Do not use the global_symbol_pipe unless it works.
  if test yes = "$pipe_works"; then
    break
  else
    lt_cv_sys_global_symbol_pipe=
  fi
done

fi

if test -z "$lt_cv_sys_global_symbol_pipe"; then
  lt_cv_sys_global_symbol_to_cdecl=
fi
if test -z "$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: failed" >&5
printf "%s\n" "failed" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: ok" >&5
printf "%s\n" "ok" >&6; }
fi

# Response file support.
if test "$lt_cv_nm_interface" = "MS dumpbin"; then
  nm_file_list_spec='@'
elif $NM --help 2>/dev/null | grep '[@]FILE' >/dev/null; then
  nm_file_list_spec='@'
fi





































{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for sysroot" >&5
printf %s "checking for sysroot... " >&6; }

# Check whether --with-sysroot was given.
if test ${with_sysroot+y}
then :
  withval=$with_sysroot;
else $as_nop
  with_sysroot=no
fi


lt_sysroot=
case $with_sysroot in #(
 yes)
   if test yes = "$GCC"; then
     lt_sysroot=`$CC --print-sysroot 2>/dev/null`
   fi
   ;; #(
 /*)
   lt_sysroot=`echo "$with_sysroot" | $SED -e "$sed_quote_subst"`
   ;; #(
 no|'')
   ;; #(
 *)
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $with_sysroot" >&5
printf "%s\n" "$with_sysroot" >&6; }
   as_fn_error $? "The sysroot must be an absolute path." "$LINENO" 5
   ;;
esac

 { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: ${lt_sysroot:-no}" >&5
printf "%s\n" "${lt_sysroot:-no}" >&6; }





{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a working dd" >&5
printf %s "checking for a working dd... " >&6; }
if test ${ac_cv_path_lt_DD+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  printf 0123456789abcdef0123456789abcdef >conftest.i
cat conftest.i conftest.i >conftest2.i
: ${lt_DD:=$DD}
if test -z "$lt_DD"; then
  ac_path_lt_DD_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_prog in dd
   do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_lt_DD="$as_dir$ac_prog$ac_exec_ext"
      as_fn_executable_p "$ac_path_lt_DD" || continue
if "$ac_path_lt_DD" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then
  cmp -s conftest.i conftest.out \
  && ac_cv_path_lt_DD="$ac_path_lt_DD" ac_path_lt_DD_found=:
fi
      $ac_path_lt_DD_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_lt_DD"; then
    :
  fi
else
  ac_cv_path_lt_DD=$lt_DD
fi

rm -f conftest.i conftest2.i conftest.out
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_lt_DD" >&5
printf "%s\n" "$ac_cv_path_lt_DD" >&6; }


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to truncate binary pipes" >&5
printf %s "checking how to truncate binary pipes... " >&6; }
if test ${lt_cv_truncate_bin+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  printf 0123456789abcdef0123456789abcdef >conftest.i
cat conftest.i conftest.i >conftest2.i
lt_cv_truncate_bin=
if "$ac_cv_path_lt_DD" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then
  cmp -s conftest.i conftest.out \
  && lt_cv_truncate_bin="$ac_cv_path_lt_DD bs=4096 count=1"
fi
rm -f conftest.i conftest2.i conftest.out
test -z "$lt_cv_truncate_bin" && lt_cv_truncate_bin="$SED -e 4q"
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_truncate_bin" >&5
printf "%s\n" "$lt_cv_truncate_bin" >&6; }







# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
func_cc_basename ()
{
    for cc_temp in $*""; do
      case $cc_temp in
        compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
        distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
        \-*) ;;
        *) break;;
      esac
    done
    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
}

# Check whether --enable-libtool-lock was given.
if test ${enable_libtool_lock+y}
then :
  enableval=$enable_libtool_lock;
fi

test no = "$enable_libtool_lock" || enable_libtool_lock=yes

# Some flags need to be propagated to the compiler or linker for good
# libtool support.
case $host in
ia64-*-hpux*)
  # Find out what ABI is being produced by ac_compile, and set mode
  # options accordingly.
  echo 'int i;' > conftest.$ac_ext
  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
    case `$FILECMD conftest.$ac_objext` in
      *ELF-32*)
	HPUX_IA64_MODE=32
	;;
      *ELF-64*)
	HPUX_IA64_MODE=64
	;;
    esac
  fi
  rm -rf conftest*
  ;;
*-*-irix6*)
  # Find out what ABI is being produced by ac_compile, and set linker
  # options accordingly.
  echo '#line '$LINENO' "configure"' > conftest.$ac_ext
  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
    if test yes = "$lt_cv_prog_gnu_ld"; then
      case `$FILECMD conftest.$ac_objext` in
	*32-bit*)
	  LD="${LD-ld} -melf32bsmip"
	  ;;
	*N32*)
	  LD="${LD-ld} -melf32bmipn32"
	  ;;
	*64-bit*)
	  LD="${LD-ld} -melf64bmip"
	;;
      esac
    else
      case `$FILECMD conftest.$ac_objext` in
	*32-bit*)
	  LD="${LD-ld} -32"
	  ;;
	*N32*)
	  LD="${LD-ld} -n32"
	  ;;
	*64-bit*)
	  LD="${LD-ld} -64"
	  ;;
      esac
    fi
  fi
  rm -rf conftest*
  ;;

mips64*-*linux*)
  # Find out what ABI is being produced by ac_compile, and set linker
  # options accordingly.
  echo '#line '$LINENO' "configure"' > conftest.$ac_ext
  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
    emul=elf
    case `$FILECMD conftest.$ac_objext` in
      *32-bit*)
	emul="${emul}32"
	;;
      *64-bit*)
	emul="${emul}64"
	;;
    esac
    case `$FILECMD conftest.$ac_objext` in
      *MSB*)
	emul="${emul}btsmip"
	;;
      *LSB*)
	emul="${emul}ltsmip"
	;;
    esac
    case `$FILECMD conftest.$ac_objext` in
      *N32*)
	emul="${emul}n32"
	;;
    esac
    LD="${LD-ld} -m $emul"
  fi
  rm -rf conftest*
  ;;

x86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \
s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
  # Find out what ABI is being produced by ac_compile, and set linker
  # options accordingly.  Note that the listed cases only cover the
  # situations where additional linker options are needed (such as when
  # doing 32-bit compilation for a host where ld defaults to 64-bit, or
  # vice versa); the common cases where no linker options are needed do
  # not appear in the list.
  echo 'int i;' > conftest.$ac_ext
  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
    case `$FILECMD conftest.o` in
      *32-bit*)
	case $host in
	  x86_64-*kfreebsd*-gnu)
	    LD="${LD-ld} -m elf_i386_fbsd"
	    ;;
	  x86_64-*linux*)
	    case `$FILECMD conftest.o` in
	      *x86-64*)
		LD="${LD-ld} -m elf32_x86_64"
		;;
	      *)
		LD="${LD-ld} -m elf_i386"
		;;
	    esac
	    ;;
	  powerpc64le-*linux*)
	    LD="${LD-ld} -m elf32lppclinux"
	    ;;
	  powerpc64-*linux*)
	    LD="${LD-ld} -m elf32ppclinux"
	    ;;
	  s390x-*linux*)
	    LD="${LD-ld} -m elf_s390"
	    ;;
	  sparc64-*linux*)
	    LD="${LD-ld} -m elf32_sparc"
	    ;;
	esac
	;;
      *64-bit*)
	case $host in
	  x86_64-*kfreebsd*-gnu)
	    LD="${LD-ld} -m elf_x86_64_fbsd"
	    ;;
	  x86_64-*linux*)
	    LD="${LD-ld} -m elf_x86_64"
	    ;;
	  powerpcle-*linux*)
	    LD="${LD-ld} -m elf64lppc"
	    ;;
	  powerpc-*linux*)
	    LD="${LD-ld} -m elf64ppc"
	    ;;
	  s390*-*linux*|s390*-*tpf*)
	    LD="${LD-ld} -m elf64_s390"
	    ;;
	  sparc*-*linux*)
	    LD="${LD-ld} -m elf64_sparc"
	    ;;
	esac
	;;
    esac
  fi
  rm -rf conftest*
  ;;

*-*-sco3.2v5*)
  # On SCO OpenServer 5, we need -belf to get full-featured binaries.
  SAVE_CFLAGS=$CFLAGS
  CFLAGS="$CFLAGS -belf"
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the C compiler needs -belf" >&5
printf %s "checking whether the C compiler needs -belf... " >&6; }
if test ${lt_cv_cc_needs_belf+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  lt_cv_cc_needs_belf=yes
else $as_nop
  lt_cv_cc_needs_belf=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
     ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_cc_needs_belf" >&5
printf "%s\n" "$lt_cv_cc_needs_belf" >&6; }
  if test yes != "$lt_cv_cc_needs_belf"; then
    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
    CFLAGS=$SAVE_CFLAGS
  fi
  ;;
*-*solaris*)
  # Find out what ABI is being produced by ac_compile, and set linker
  # options accordingly.
  echo 'int i;' > conftest.$ac_ext
  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
    case `$FILECMD conftest.o` in
    *64-bit*)
      case $lt_cv_prog_gnu_ld in
      yes*)
        case $host in
        i?86-*-solaris*|x86_64-*-solaris*)
          LD="${LD-ld} -m elf_x86_64"
          ;;
        sparc*-*-solaris*)
          LD="${LD-ld} -m elf64_sparc"
          ;;
        esac
        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.
        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then
          LD=${LD-ld}_sol2
        fi
        ;;
      *)
	if ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then
	  LD="${LD-ld} -64"
	fi
	;;
      esac
      ;;
    esac
  fi
  rm -rf conftest*
  ;;
esac

need_locks=$enable_libtool_lock

if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}mt", so it can be a program name with args.
set dummy ${ac_tool_prefix}mt; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_MANIFEST_TOOL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$MANIFEST_TOOL"; then
  ac_cv_prog_MANIFEST_TOOL="$MANIFEST_TOOL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_MANIFEST_TOOL="${ac_tool_prefix}mt"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
MANIFEST_TOOL=$ac_cv_prog_MANIFEST_TOOL
if test -n "$MANIFEST_TOOL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $MANIFEST_TOOL" >&5
printf "%s\n" "$MANIFEST_TOOL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_MANIFEST_TOOL"; then
  ac_ct_MANIFEST_TOOL=$MANIFEST_TOOL
  # Extract the first word of "mt", so it can be a program name with args.
set dummy mt; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_MANIFEST_TOOL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_MANIFEST_TOOL"; then
  ac_cv_prog_ac_ct_MANIFEST_TOOL="$ac_ct_MANIFEST_TOOL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_MANIFEST_TOOL="mt"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_MANIFEST_TOOL=$ac_cv_prog_ac_ct_MANIFEST_TOOL
if test -n "$ac_ct_MANIFEST_TOOL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_MANIFEST_TOOL" >&5
printf "%s\n" "$ac_ct_MANIFEST_TOOL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_MANIFEST_TOOL" = x; then
    MANIFEST_TOOL=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    MANIFEST_TOOL=$ac_ct_MANIFEST_TOOL
  fi
else
  MANIFEST_TOOL="$ac_cv_prog_MANIFEST_TOOL"
fi

test -z "$MANIFEST_TOOL" && MANIFEST_TOOL=mt
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $MANIFEST_TOOL is a manifest tool" >&5
printf %s "checking if $MANIFEST_TOOL is a manifest tool... " >&6; }
if test ${lt_cv_path_mainfest_tool+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_path_mainfest_tool=no
  echo "$as_me:$LINENO: $MANIFEST_TOOL '-?'" >&5
  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out
  cat conftest.err >&5
  if $GREP 'Manifest Tool' conftest.out > /dev/null; then
    lt_cv_path_mainfest_tool=yes
  fi
  rm -f conftest*
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_mainfest_tool" >&5
printf "%s\n" "$lt_cv_path_mainfest_tool" >&6; }
if test yes != "$lt_cv_path_mainfest_tool"; then
  MANIFEST_TOOL=:
fi






  case $host_os in
    rhapsody* | darwin*)
    if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}dsymutil", so it can be a program name with args.
set dummy ${ac_tool_prefix}dsymutil; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_DSYMUTIL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$DSYMUTIL"; then
  ac_cv_prog_DSYMUTIL="$DSYMUTIL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_DSYMUTIL="${ac_tool_prefix}dsymutil"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
DSYMUTIL=$ac_cv_prog_DSYMUTIL
if test -n "$DSYMUTIL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL" >&5
printf "%s\n" "$DSYMUTIL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_DSYMUTIL"; then
  ac_ct_DSYMUTIL=$DSYMUTIL
  # Extract the first word of "dsymutil", so it can be a program name with args.
set dummy dsymutil; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_DSYMUTIL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_DSYMUTIL"; then
  ac_cv_prog_ac_ct_DSYMUTIL="$ac_ct_DSYMUTIL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_DSYMUTIL="dsymutil"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_DSYMUTIL=$ac_cv_prog_ac_ct_DSYMUTIL
if test -n "$ac_ct_DSYMUTIL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DSYMUTIL" >&5
printf "%s\n" "$ac_ct_DSYMUTIL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_DSYMUTIL" = x; then
    DSYMUTIL=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    DSYMUTIL=$ac_ct_DSYMUTIL
  fi
else
  DSYMUTIL="$ac_cv_prog_DSYMUTIL"
fi

    if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}nmedit", so it can be a program name with args.
set dummy ${ac_tool_prefix}nmedit; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_NMEDIT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$NMEDIT"; then
  ac_cv_prog_NMEDIT="$NMEDIT" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_NMEDIT="${ac_tool_prefix}nmedit"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
NMEDIT=$ac_cv_prog_NMEDIT
if test -n "$NMEDIT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $NMEDIT" >&5
printf "%s\n" "$NMEDIT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_NMEDIT"; then
  ac_ct_NMEDIT=$NMEDIT
  # Extract the first word of "nmedit", so it can be a program name with args.
set dummy nmedit; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_NMEDIT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_NMEDIT"; then
  ac_cv_prog_ac_ct_NMEDIT="$ac_ct_NMEDIT" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_NMEDIT="nmedit"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_NMEDIT=$ac_cv_prog_ac_ct_NMEDIT
if test -n "$ac_ct_NMEDIT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_NMEDIT" >&5
printf "%s\n" "$ac_ct_NMEDIT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_NMEDIT" = x; then
    NMEDIT=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    NMEDIT=$ac_ct_NMEDIT
  fi
else
  NMEDIT="$ac_cv_prog_NMEDIT"
fi

    if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}lipo", so it can be a program name with args.
set dummy ${ac_tool_prefix}lipo; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_LIPO+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$LIPO"; then
  ac_cv_prog_LIPO="$LIPO" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_LIPO="${ac_tool_prefix}lipo"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
LIPO=$ac_cv_prog_LIPO
if test -n "$LIPO"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LIPO" >&5
printf "%s\n" "$LIPO" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_LIPO"; then
  ac_ct_LIPO=$LIPO
  # Extract the first word of "lipo", so it can be a program name with args.
set dummy lipo; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_LIPO+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_LIPO"; then
  ac_cv_prog_ac_ct_LIPO="$ac_ct_LIPO" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_LIPO="lipo"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_LIPO=$ac_cv_prog_ac_ct_LIPO
if test -n "$ac_ct_LIPO"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_LIPO" >&5
printf "%s\n" "$ac_ct_LIPO" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_LIPO" = x; then
    LIPO=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    LIPO=$ac_ct_LIPO
  fi
else
  LIPO="$ac_cv_prog_LIPO"
fi

    if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}otool", so it can be a program name with args.
set dummy ${ac_tool_prefix}otool; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_OTOOL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$OTOOL"; then
  ac_cv_prog_OTOOL="$OTOOL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_OTOOL="${ac_tool_prefix}otool"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
OTOOL=$ac_cv_prog_OTOOL
if test -n "$OTOOL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $OTOOL" >&5
printf "%s\n" "$OTOOL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_OTOOL"; then
  ac_ct_OTOOL=$OTOOL
  # Extract the first word of "otool", so it can be a program name with args.
set dummy otool; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_OTOOL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_OTOOL"; then
  ac_cv_prog_ac_ct_OTOOL="$ac_ct_OTOOL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_OTOOL="otool"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_OTOOL=$ac_cv_prog_ac_ct_OTOOL
if test -n "$ac_ct_OTOOL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL" >&5
printf "%s\n" "$ac_ct_OTOOL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_OTOOL" = x; then
    OTOOL=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    OTOOL=$ac_ct_OTOOL
  fi
else
  OTOOL="$ac_cv_prog_OTOOL"
fi

    if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}otool64", so it can be a program name with args.
set dummy ${ac_tool_prefix}otool64; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_OTOOL64+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$OTOOL64"; then
  ac_cv_prog_OTOOL64="$OTOOL64" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_OTOOL64="${ac_tool_prefix}otool64"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
OTOOL64=$ac_cv_prog_OTOOL64
if test -n "$OTOOL64"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $OTOOL64" >&5
printf "%s\n" "$OTOOL64" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_OTOOL64"; then
  ac_ct_OTOOL64=$OTOOL64
  # Extract the first word of "otool64", so it can be a program name with args.
set dummy otool64; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_OTOOL64+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_OTOOL64"; then
  ac_cv_prog_ac_ct_OTOOL64="$ac_ct_OTOOL64" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_OTOOL64="otool64"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_OTOOL64=$ac_cv_prog_ac_ct_OTOOL64
if test -n "$ac_ct_OTOOL64"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL64" >&5
printf "%s\n" "$ac_ct_OTOOL64" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_OTOOL64" = x; then
    OTOOL64=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    OTOOL64=$ac_ct_OTOOL64
  fi
else
  OTOOL64="$ac_cv_prog_OTOOL64"
fi



























    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag" >&5
printf %s "checking for -single_module linker flag... " >&6; }
if test ${lt_cv_apple_cc_single_mod+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_apple_cc_single_mod=no
      if test -z "$LT_MULTI_MODULE"; then
	# By default we will add the -single_module flag. You can override
	# by either setting the environment variable LT_MULTI_MODULE
	# non-empty at configure time, or by adding -multi_module to the
	# link flags.
	rm -rf libconftest.dylib*
	echo "int foo(void){return 1;}" > conftest.c
	echo "$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
-dynamiclib -Wl,-single_module conftest.c" >&5
	$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
	  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err
        _lt_result=$?
	# If there is a non-empty error log, and "single_module"
	# appears in it, assume the flag caused a linker warning
        if test -s conftest.err && $GREP single_module conftest.err; then
	  cat conftest.err >&5
	# Otherwise, if the output was created with a 0 exit code from
	# the compiler, it worked.
	elif test -f libconftest.dylib && test 0 = "$_lt_result"; then
	  lt_cv_apple_cc_single_mod=yes
	else
	  cat conftest.err >&5
	fi
	rm -rf libconftest.dylib*
	rm -f conftest.*
      fi
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_apple_cc_single_mod" >&5
printf "%s\n" "$lt_cv_apple_cc_single_mod" >&6; }

    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag" >&5
printf %s "checking for -exported_symbols_list linker flag... " >&6; }
if test ${lt_cv_ld_exported_symbols_list+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_ld_exported_symbols_list=no
      save_LDFLAGS=$LDFLAGS
      echo "_main" > conftest.sym
      LDFLAGS="$LDFLAGS -Wl,-exported_symbols_list,conftest.sym"
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  lt_cv_ld_exported_symbols_list=yes
else $as_nop
  lt_cv_ld_exported_symbols_list=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
	LDFLAGS=$save_LDFLAGS

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_exported_symbols_list" >&5
printf "%s\n" "$lt_cv_ld_exported_symbols_list" >&6; }

    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for -force_load linker flag" >&5
printf %s "checking for -force_load linker flag... " >&6; }
if test ${lt_cv_ld_force_load+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_ld_force_load=no
      cat > conftest.c << _LT_EOF
int forced_loaded() { return 2;}
_LT_EOF
      echo "$LTCC $LTCFLAGS -c -o conftest.o conftest.c" >&5
      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&5
      echo "$AR $AR_FLAGS libconftest.a conftest.o" >&5
      $AR $AR_FLAGS libconftest.a conftest.o 2>&5
      echo "$RANLIB libconftest.a" >&5
      $RANLIB libconftest.a 2>&5
      cat > conftest.c << _LT_EOF
int main() { return 0;}
_LT_EOF
      echo "$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a" >&5
      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err
      _lt_result=$?
      if test -s conftest.err && $GREP force_load conftest.err; then
	cat conftest.err >&5
      elif test -f conftest && test 0 = "$_lt_result" && $GREP forced_load conftest >/dev/null 2>&1; then
	lt_cv_ld_force_load=yes
      else
	cat conftest.err >&5
      fi
        rm -f conftest.err libconftest.a conftest conftest.c
        rm -rf conftest.dSYM

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_force_load" >&5
printf "%s\n" "$lt_cv_ld_force_load" >&6; }
    case $host_os in
    rhapsody* | darwin1.[012])
      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;
    darwin1.*)
      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;
    darwin*)
      case $MACOSX_DEPLOYMENT_TARGET,$host in
        10.[012],*|,*powerpc*-darwin[5-8]*)
          _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;
        *)
          _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;
      esac
    ;;
  esac
    if test yes = "$lt_cv_apple_cc_single_mod"; then
      _lt_dar_single_mod='$single_module'
    fi
    if test yes = "$lt_cv_ld_exported_symbols_list"; then
      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'
    else
      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'
    fi
    if test : != "$DSYMUTIL" && test no = "$lt_cv_ld_force_load"; then
      _lt_dsymutil='~$DSYMUTIL $lib || :'
    else
      _lt_dsymutil=
    fi
    ;;
  esac

# func_munge_path_list VARIABLE PATH
# -----------------------------------
# VARIABLE is name of variable containing _space_ separated list of
# directories to be munged by the contents of PATH, which is string
# having a format:
# "DIR[:DIR]:"
#       string "DIR[ DIR]" will be prepended to VARIABLE
# ":DIR[:DIR]"
#       string "DIR[ DIR]" will be appended to VARIABLE
# "DIRP[:DIRP]::[DIRA:]DIRA"
#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
#       "DIRA[ DIRA]" will be appended to VARIABLE
# "DIR[:DIR]"
#       VARIABLE will be replaced by "DIR[ DIR]"
func_munge_path_list ()
{
    case x$2 in
    x)
        ;;
    *:)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'` \$$1\"
        ;;
    x:*)
        eval $1=\"\$$1 `$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    *::*)
        eval $1=\"\$$1\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
        eval $1=\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \$$1\"
        ;;
    *)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    esac
}

ac_header= ac_cache=
for ac_item in $ac_header_c_list
do
  if test $ac_cache; then
    ac_fn_c_check_header_compile "$LINENO" $ac_header ac_cv_header_$ac_cache "$ac_includes_default"
    if eval test \"x\$ac_cv_header_$ac_cache\" = xyes; then
      printf "%s\n" "#define $ac_item 1" >> confdefs.h
    fi
    ac_header= ac_cache=
  elif test $ac_header; then
    ac_cache=$ac_item
  else
    ac_header=$ac_item
  fi
done








if test $ac_cv_header_stdlib_h = yes && test $ac_cv_header_string_h = yes
then :

printf "%s\n" "#define STDC_HEADERS 1" >>confdefs.h

fi
ac_fn_c_check_header_compile "$LINENO" "dlfcn.h" "ac_cv_header_dlfcn_h" "$ac_includes_default
"
if test "x$ac_cv_header_dlfcn_h" = xyes
then :
  printf "%s\n" "#define HAVE_DLFCN_H 1" >>confdefs.h

fi





# Set options



        enable_dlopen=no


  enable_win32_dll=no


            # Check whether --enable-shared was given.
if test ${enable_shared+y}
then :
  enableval=$enable_shared; p=${PACKAGE-default}
    case $enableval in
    yes) enable_shared=yes ;;
    no) enable_shared=no ;;
    *)
      enable_shared=no
      # Look at the argument we got.  We use all the common list separators.
      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
      for pkg in $enableval; do
	IFS=$lt_save_ifs
	if test "X$pkg" = "X$p"; then
	  enable_shared=yes
	fi
      done
      IFS=$lt_save_ifs
      ;;
    esac
else $as_nop
  enable_shared=yes
fi









  # Check whether --enable-static was given.
if test ${enable_static+y}
then :
  enableval=$enable_static; p=${PACKAGE-default}
    case $enableval in
    yes) enable_static=yes ;;
    no) enable_static=no ;;
    *)
     enable_static=no
      # Look at the argument we got.  We use all the common list separators.
      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
      for pkg in $enableval; do
	IFS=$lt_save_ifs
	if test "X$pkg" = "X$p"; then
	  enable_static=yes
	fi
      done
      IFS=$lt_save_ifs
      ;;
    esac
else $as_nop
  enable_static=yes
fi










# Check whether --with-pic was given.
if test ${with_pic+y}
then :
  withval=$with_pic; lt_p=${PACKAGE-default}
    case $withval in
    yes|no) pic_mode=$withval ;;
    *)
      pic_mode=default
      # Look at the argument we got.  We use all the common list separators.
      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
      for lt_pkg in $withval; do
	IFS=$lt_save_ifs
	if test "X$lt_pkg" = "X$lt_p"; then
	  pic_mode=yes
	fi
      done
      IFS=$lt_save_ifs
      ;;
    esac
else $as_nop
  pic_mode=default
fi








  # Check whether --enable-fast-install was given.
if test ${enable_fast_install+y}
then :
  enableval=$enable_fast_install; p=${PACKAGE-default}
    case $enableval in
    yes) enable_fast_install=yes ;;
    no) enable_fast_install=no ;;
    *)
      enable_fast_install=no
      # Look at the argument we got.  We use all the common list separators.
      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
      for pkg in $enableval; do
	IFS=$lt_save_ifs
	if test "X$pkg" = "X$p"; then
	  enable_fast_install=yes
	fi
      done
      IFS=$lt_save_ifs
      ;;
    esac
else $as_nop
  enable_fast_install=yes
fi








  shared_archive_member_spec=
case $host,$enable_shared in
power*-*-aix[5-9]*,yes)
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking which variant of shared library versioning to provide" >&5
printf %s "checking which variant of shared library versioning to provide... " >&6; }

# Check whether --with-aix-soname was given.
if test ${with_aix_soname+y}
then :
  withval=$with_aix_soname; case $withval in
    aix|svr4|both)
      ;;
    *)
      as_fn_error $? "Unknown argument to --with-aix-soname" "$LINENO" 5
      ;;
    esac
    lt_cv_with_aix_soname=$with_aix_soname
else $as_nop
  if test ${lt_cv_with_aix_soname+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_with_aix_soname=aix
fi

    with_aix_soname=$lt_cv_with_aix_soname
fi

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $with_aix_soname" >&5
printf "%s\n" "$with_aix_soname" >&6; }
  if test aix != "$with_aix_soname"; then
    # For the AIX way of multilib, we name the shared archive member
    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',
    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.
    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,
    # the AIX toolchain works better with OBJECT_MODE set (default 32).
    if test 64 = "${OBJECT_MODE-32}"; then
      shared_archive_member_spec=shr_64
    else
      shared_archive_member_spec=shr
    fi
  fi
  ;;
*)
  with_aix_soname=aix
  ;;
esac










# This can be used to rebuild libtool when needed
LIBTOOL_DEPS=$ltmain

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'






























test -z "$LN_S" && LN_S="ln -s"














if test -n "${ZSH_VERSION+set}"; then
   setopt NO_GLOB_SUBST
fi

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for objdir" >&5
printf %s "checking for objdir... " >&6; }
if test ${lt_cv_objdir+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  rm -f .libs 2>/dev/null
mkdir .libs 2>/dev/null
if test -d .libs; then
  lt_cv_objdir=.libs
else
  # MS-DOS does not allow filenames that begin with a dot.
  lt_cv_objdir=_libs
fi
rmdir .libs 2>/dev/null
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_objdir" >&5
printf "%s\n" "$lt_cv_objdir" >&6; }
objdir=$lt_cv_objdir





printf "%s\n" "#define LT_OBJDIR \"$lt_cv_objdir/\"" >>confdefs.h




case $host_os in
aix3*)
  # AIX sometimes has problems with the GCC collect2 program.  For some
  # reason, if we set the COLLECT_NAMES environment variable, the problems
  # vanish in a puff of smoke.
  if test set != "${COLLECT_NAMES+set}"; then
    COLLECT_NAMES=
    export COLLECT_NAMES
  fi
  ;;
esac

# Global variables:
ofile=libtool
can_build_shared=yes

# All known linkers require a '.a' archive for static linking (except MSVC and
# ICC, which need '.lib').
libext=a

with_gnu_ld=$lt_cv_prog_gnu_ld

old_CC=$CC
old_CFLAGS=$CFLAGS

# Set sane defaults for various variables
test -z "$CC" && CC=cc
test -z "$LTCC" && LTCC=$CC
test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
test -z "$LD" && LD=ld
test -z "$ac_objext" && ac_objext=o

func_cc_basename $compiler
cc_basename=$func_cc_basename_result


# Only perform the check for file, if the check method requires it
test -z "$MAGIC_CMD" && MAGIC_CMD=file
case $deplibs_check_method in
file_magic*)
  if test "$file_magic_cmd" = '$MAGIC_CMD'; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for ${ac_tool_prefix}file" >&5
printf %s "checking for ${ac_tool_prefix}file... " >&6; }
if test ${lt_cv_path_MAGIC_CMD+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $MAGIC_CMD in
[\\/*] |  ?:[\\/]*)
  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD=$MAGIC_CMD
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
  for ac_dir in $ac_dummy; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/${ac_tool_prefix}file"; then
      lt_cv_path_MAGIC_CMD=$ac_dir/"${ac_tool_prefix}file"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS=$lt_save_ifs
  MAGIC_CMD=$lt_save_MAGIC_CMD
  ;;
esac
fi

MAGIC_CMD=$lt_cv_path_MAGIC_CMD
if test -n "$MAGIC_CMD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
printf "%s\n" "$MAGIC_CMD" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi





if test -z "$lt_cv_path_MAGIC_CMD"; then
  if test -n "$ac_tool_prefix"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for file" >&5
printf %s "checking for file... " >&6; }
if test ${lt_cv_path_MAGIC_CMD+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $MAGIC_CMD in
[\\/*] |  ?:[\\/]*)
  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD=$MAGIC_CMD
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
  for ac_dir in $ac_dummy; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/file"; then
      lt_cv_path_MAGIC_CMD=$ac_dir/"file"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS=$lt_save_ifs
  MAGIC_CMD=$lt_save_MAGIC_CMD
  ;;
esac
fi

MAGIC_CMD=$lt_cv_path_MAGIC_CMD
if test -n "$MAGIC_CMD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
printf "%s\n" "$MAGIC_CMD" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  else
    MAGIC_CMD=:
  fi
fi

  fi
  ;;
esac

# Use C for the default configuration in the libtool script

lt_save_CC=$CC
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


# Source file extension for C test sources.
ac_ext=c

# Object file extension for compiled C test sources.
objext=o
objext=$objext

# Code to be used in simple compile tests
lt_simple_compile_test_code="int some_variable = 0;"

# Code to be used in simple link tests
lt_simple_link_test_code='int main(){return(0);}'







# If no C compiler was specified, use CC.
LTCC=${LTCC-"$CC"}

# If no C compiler flags were specified, use CFLAGS.
LTCFLAGS=${LTCFLAGS-"$CFLAGS"}

# Allow CC to be a program name with arguments.
compiler=$CC

# Save the default compiler, since it gets overwritten when the other
# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.
compiler_DEFAULT=$CC

# save warnings/boilerplate of simple test code
ac_outfile=conftest.$ac_objext
echo "$lt_simple_compile_test_code" >conftest.$ac_ext
eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
_lt_compiler_boilerplate=`cat conftest.err`
$RM conftest*

ac_outfile=conftest.$ac_objext
echo "$lt_simple_link_test_code" >conftest.$ac_ext
eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
_lt_linker_boilerplate=`cat conftest.err`
$RM -r conftest*


## CAVEAT EMPTOR:
## There is no encapsulation within the following macros, do not change
## the running order or otherwise move them around unless you know exactly
## what you are doing...
if test -n "$compiler"; then

lt_prog_compiler_no_builtin_flag=

if test yes = "$GCC"; then
  case $cc_basename in
  nvcc*)
    lt_prog_compiler_no_builtin_flag=' -Xcompiler -fno-builtin' ;;
  *)
    lt_prog_compiler_no_builtin_flag=' -fno-builtin' ;;
  esac

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -fno-rtti -fno-exceptions" >&5
printf %s "checking if $compiler supports -fno-rtti -fno-exceptions... " >&6; }
if test ${lt_cv_prog_compiler_rtti_exceptions+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_prog_compiler_rtti_exceptions=no
   ac_outfile=conftest.$ac_objext
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="-fno-rtti -fno-exceptions"  ## exclude from sc_useless_quotes_in_assignment
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&5)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       lt_cv_prog_compiler_rtti_exceptions=yes
     fi
   fi
   $RM conftest*

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_rtti_exceptions" >&5
printf "%s\n" "$lt_cv_prog_compiler_rtti_exceptions" >&6; }

if test yes = "$lt_cv_prog_compiler_rtti_exceptions"; then
    lt_prog_compiler_no_builtin_flag="$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions"
else
    :
fi

fi






  lt_prog_compiler_wl=
lt_prog_compiler_pic=
lt_prog_compiler_static=


  if test yes = "$GCC"; then
    lt_prog_compiler_wl='-Wl,'
    lt_prog_compiler_static='-static'

    case $host_os in
      aix*)
      # All AIX code is PIC.
      if test ia64 = "$host_cpu"; then
	# AIX 5 now supports IA64 processor
	lt_prog_compiler_static='-Bstatic'
      fi
      lt_prog_compiler_pic='-fPIC'
      ;;

    amigaos*)
      case $host_cpu in
      powerpc)
            # see comment about AmigaOS4 .so support
            lt_prog_compiler_pic='-fPIC'
        ;;
      m68k)
            # FIXME: we need at least 68020 code to build shared libraries, but
            # adding the '-m68020' flag to GCC prevents building anything better,
            # like '-m68040'.
            lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'
        ;;
      esac
      ;;

    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
      # PIC is the default for these OSes.
      ;;

    mingw* | cygwin* | pw32* | os2* | cegcc*)
      # This hack is so that the source file can tell whether it is being
      # built for inclusion in a dll (and should export symbols for example).
      # Although the cygwin gcc ignores -fPIC, still need this for old-style
      # (--disable-auto-import) libraries
      lt_prog_compiler_pic='-DDLL_EXPORT'
      case $host_os in
      os2*)
	lt_prog_compiler_static='$wl-static'
	;;
      esac
      ;;

    darwin* | rhapsody*)
      # PIC is the default on this platform
      # Common symbols not allowed in MH_DYLIB files
      lt_prog_compiler_pic='-fno-common'
      ;;

    haiku*)
      # PIC is the default for Haiku.
      # The "-static" flag exists, but is broken.
      lt_prog_compiler_static=
      ;;

    hpux*)
      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit
      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag
      # sets the default TLS model and affects inlining.
      case $host_cpu in
      hppa*64*)
	# +Z the default
	;;
      *)
	lt_prog_compiler_pic='-fPIC'
	;;
      esac
      ;;

    interix[3-9]*)
      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
      # Instead, we relocate shared libraries at runtime.
      ;;

    msdosdjgpp*)
      # Just because we use GCC doesn't mean we suddenly get shared libraries
      # on systems that don't support them.
      lt_prog_compiler_can_build_shared=no
      enable_shared=no
      ;;

    *nto* | *qnx*)
      # QNX uses GNU C++, but need to define -shared option too, otherwise
      # it will coredump.
      lt_prog_compiler_pic='-fPIC -shared'
      ;;

    sysv4*MP*)
      if test -d /usr/nec; then
	lt_prog_compiler_pic=-Kconform_pic
      fi
      ;;

    *)
      lt_prog_compiler_pic='-fPIC'
      ;;
    esac

    case $cc_basename in
    nvcc*) # Cuda Compiler Driver 2.2
      lt_prog_compiler_wl='-Xlinker '
      if test -n "$lt_prog_compiler_pic"; then
        lt_prog_compiler_pic="-Xcompiler $lt_prog_compiler_pic"
      fi
      ;;
    esac
  else
    # PORTME Check for flag to pass linker flags through the system compiler.
    case $host_os in
    aix*)
      lt_prog_compiler_wl='-Wl,'
      if test ia64 = "$host_cpu"; then
	# AIX 5 now supports IA64 processor
	lt_prog_compiler_static='-Bstatic'
      else
	lt_prog_compiler_static='-bnso -bI:/lib/syscalls.exp'
      fi
      ;;

    darwin* | rhapsody*)
      # PIC is the default on this platform
      # Common symbols not allowed in MH_DYLIB files
      lt_prog_compiler_pic='-fno-common'
      case $cc_basename in
      nagfor*)
        # NAG Fortran compiler
        lt_prog_compiler_wl='-Wl,-Wl,,'
        lt_prog_compiler_pic='-PIC'
        lt_prog_compiler_static='-Bstatic'
        ;;
      esac
      ;;

    mingw* | cygwin* | pw32* | os2* | cegcc*)
      # This hack is so that the source file can tell whether it is being
      # built for inclusion in a dll (and should export symbols for example).
      lt_prog_compiler_pic='-DDLL_EXPORT'
      case $host_os in
      os2*)
	lt_prog_compiler_static='$wl-static'
	;;
      esac
      ;;

    hpux9* | hpux10* | hpux11*)
      lt_prog_compiler_wl='-Wl,'
      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
      # not for PA HP-UX.
      case $host_cpu in
      hppa*64*|ia64*)
	# +Z the default
	;;
      *)
	lt_prog_compiler_pic='+Z'
	;;
      esac
      # Is there a better lt_prog_compiler_static that works with the bundled CC?
      lt_prog_compiler_static='$wl-a ${wl}archive'
      ;;

    irix5* | irix6* | nonstopux*)
      lt_prog_compiler_wl='-Wl,'
      # PIC (with -KPIC) is the default.
      lt_prog_compiler_static='-non_shared'
      ;;

    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
      case $cc_basename in
      # old Intel for x86_64, which still supported -KPIC.
      ecc*)
	lt_prog_compiler_wl='-Wl,'
	lt_prog_compiler_pic='-KPIC'
	lt_prog_compiler_static='-static'
        ;;
      # icc used to be incompatible with GCC.
      # ICC 10 doesn't accept -KPIC any more.
      icc* | ifort*)
	lt_prog_compiler_wl='-Wl,'
	lt_prog_compiler_pic='-fPIC'
	lt_prog_compiler_static='-static'
        ;;
      # Lahey Fortran 8.1.
      lf95*)
	lt_prog_compiler_wl='-Wl,'
	lt_prog_compiler_pic='--shared'
	lt_prog_compiler_static='--static'
	;;
      nagfor*)
	# NAG Fortran compiler
	lt_prog_compiler_wl='-Wl,-Wl,,'
	lt_prog_compiler_pic='-PIC'
	lt_prog_compiler_static='-Bstatic'
	;;
      tcc*)
	# Fabrice Bellard et al's Tiny C Compiler
	lt_prog_compiler_wl='-Wl,'
	lt_prog_compiler_pic='-fPIC'
	lt_prog_compiler_static='-static'
	;;
      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)
        # Portland Group compilers (*not* the Pentium gcc compiler,
	# which looks to be a dead project)
	lt_prog_compiler_wl='-Wl,'
	lt_prog_compiler_pic='-fpic'
	lt_prog_compiler_static='-Bstatic'
        ;;
      ccc*)
        lt_prog_compiler_wl='-Wl,'
        # All Alpha code is PIC.
        lt_prog_compiler_static='-non_shared'
        ;;
      xl* | bgxl* | bgf* | mpixl*)
	# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene
	lt_prog_compiler_wl='-Wl,'
	lt_prog_compiler_pic='-qpic'
	lt_prog_compiler_static='-qstaticlink'
	;;
      *)
	case `$CC -V 2>&1 | $SED 5q` in
	*Sun\ Ceres\ Fortran* | *Sun*Fortran*\ [1-7].* | *Sun*Fortran*\ 8.[0-3]*)
	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
	  lt_prog_compiler_pic='-KPIC'
	  lt_prog_compiler_static='-Bstatic'
	  lt_prog_compiler_wl=''
	  ;;
	*Sun\ F* | *Sun*Fortran*)
	  lt_prog_compiler_pic='-KPIC'
	  lt_prog_compiler_static='-Bstatic'
	  lt_prog_compiler_wl='-Qoption ld '
	  ;;
	*Sun\ C*)
	  # Sun C 5.9
	  lt_prog_compiler_pic='-KPIC'
	  lt_prog_compiler_static='-Bstatic'
	  lt_prog_compiler_wl='-Wl,'
	  ;;
        *Intel*\ [CF]*Compiler*)
	  lt_prog_compiler_wl='-Wl,'
	  lt_prog_compiler_pic='-fPIC'
	  lt_prog_compiler_static='-static'
	  ;;
	*Portland\ Group*)
	  lt_prog_compiler_wl='-Wl,'
	  lt_prog_compiler_pic='-fpic'
	  lt_prog_compiler_static='-Bstatic'
	  ;;
	esac
	;;
      esac
      ;;

    newsos6)
      lt_prog_compiler_pic='-KPIC'
      lt_prog_compiler_static='-Bstatic'
      ;;

    *nto* | *qnx*)
      # QNX uses GNU C++, but need to define -shared option too, otherwise
      # it will coredump.
      lt_prog_compiler_pic='-fPIC -shared'
      ;;

    osf3* | osf4* | osf5*)
      lt_prog_compiler_wl='-Wl,'
      # All OSF/1 code is PIC.
      lt_prog_compiler_static='-non_shared'
      ;;

    rdos*)
      lt_prog_compiler_static='-non_shared'
      ;;

    solaris*)
      lt_prog_compiler_pic='-KPIC'
      lt_prog_compiler_static='-Bstatic'
      case $cc_basename in
      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)
	lt_prog_compiler_wl='-Qoption ld ';;
      *)
	lt_prog_compiler_wl='-Wl,';;
      esac
      ;;

    sunos4*)
      lt_prog_compiler_wl='-Qoption ld '
      lt_prog_compiler_pic='-PIC'
      lt_prog_compiler_static='-Bstatic'
      ;;

    sysv4 | sysv4.2uw2* | sysv4.3*)
      lt_prog_compiler_wl='-Wl,'
      lt_prog_compiler_pic='-KPIC'
      lt_prog_compiler_static='-Bstatic'
      ;;

    sysv4*MP*)
      if test -d /usr/nec; then
	lt_prog_compiler_pic='-Kconform_pic'
	lt_prog_compiler_static='-Bstatic'
      fi
      ;;

    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
      lt_prog_compiler_wl='-Wl,'
      lt_prog_compiler_pic='-KPIC'
      lt_prog_compiler_static='-Bstatic'
      ;;

    unicos*)
      lt_prog_compiler_wl='-Wl,'
      lt_prog_compiler_can_build_shared=no
      ;;

    uts4*)
      lt_prog_compiler_pic='-pic'
      lt_prog_compiler_static='-Bstatic'
      ;;

    *)
      lt_prog_compiler_can_build_shared=no
      ;;
    esac
  fi

case $host_os in
  # For platforms that do not support PIC, -DPIC is meaningless:
  *djgpp*)
    lt_prog_compiler_pic=
    ;;
  *)
    lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
    ;;
esac

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC" >&5
printf %s "checking for $compiler option to produce PIC... " >&6; }
if test ${lt_cv_prog_compiler_pic+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_prog_compiler_pic=$lt_prog_compiler_pic
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic" >&5
printf "%s\n" "$lt_cv_prog_compiler_pic" >&6; }
lt_prog_compiler_pic=$lt_cv_prog_compiler_pic

#
# Check to make sure the PIC flag actually works.
#
if test -n "$lt_prog_compiler_pic"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic works" >&5
printf %s "checking if $compiler PIC flag $lt_prog_compiler_pic works... " >&6; }
if test ${lt_cv_prog_compiler_pic_works+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_prog_compiler_pic_works=no
   ac_outfile=conftest.$ac_objext
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$lt_prog_compiler_pic -DPIC"  ## exclude from sc_useless_quotes_in_assignment
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&5)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       lt_cv_prog_compiler_pic_works=yes
     fi
   fi
   $RM conftest*

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works" >&5
printf "%s\n" "$lt_cv_prog_compiler_pic_works" >&6; }

if test yes = "$lt_cv_prog_compiler_pic_works"; then
    case $lt_prog_compiler_pic in
     "" | " "*) ;;
     *) lt_prog_compiler_pic=" $lt_prog_compiler_pic" ;;
     esac
else
    lt_prog_compiler_pic=
     lt_prog_compiler_can_build_shared=no
fi

fi











#
# Check to make sure the static flag actually works.
#
wl=$lt_prog_compiler_wl eval lt_tmp_static_flag=\"$lt_prog_compiler_static\"
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works" >&5
printf %s "checking if $compiler static flag $lt_tmp_static_flag works... " >&6; }
if test ${lt_cv_prog_compiler_static_works+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_prog_compiler_static_works=no
   save_LDFLAGS=$LDFLAGS
   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&5
       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         lt_cv_prog_compiler_static_works=yes
       fi
     else
       lt_cv_prog_compiler_static_works=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS=$save_LDFLAGS

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works" >&5
printf "%s\n" "$lt_cv_prog_compiler_static_works" >&6; }

if test yes = "$lt_cv_prog_compiler_static_works"; then
    :
else
    lt_prog_compiler_static=
fi







  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
printf %s "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
if test ${lt_cv_prog_compiler_c_o+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_prog_compiler_c_o=no
   $RM -r conftest 2>/dev/null
   mkdir conftest
   cd conftest
   mkdir out
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext

   lt_compiler_flag="-o out/conftest2.$ac_objext"
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&5)
   (eval "$lt_compile" 2>out/conftest.err)
   ac_status=$?
   cat out/conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   if (exit $ac_status) && test -s out/conftest2.$ac_objext
   then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' > out/conftest.exp
     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
       lt_cv_prog_compiler_c_o=yes
     fi
   fi
   chmod u+w . 2>&5
   $RM conftest*
   # SGI C++ compiler will create directory out/ii_files/ for
   # template instantiation
   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
   $RM out/* && rmdir out
   cd ..
   $RM -r conftest
   $RM conftest*

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
printf "%s\n" "$lt_cv_prog_compiler_c_o" >&6; }






  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
printf %s "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
if test ${lt_cv_prog_compiler_c_o+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_prog_compiler_c_o=no
   $RM -r conftest 2>/dev/null
   mkdir conftest
   cd conftest
   mkdir out
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext

   lt_compiler_flag="-o out/conftest2.$ac_objext"
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&5)
   (eval "$lt_compile" 2>out/conftest.err)
   ac_status=$?
   cat out/conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   if (exit $ac_status) && test -s out/conftest2.$ac_objext
   then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' > out/conftest.exp
     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
       lt_cv_prog_compiler_c_o=yes
     fi
   fi
   chmod u+w . 2>&5
   $RM conftest*
   # SGI C++ compiler will create directory out/ii_files/ for
   # template instantiation
   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
   $RM out/* && rmdir out
   cd ..
   $RM -r conftest
   $RM conftest*

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
printf "%s\n" "$lt_cv_prog_compiler_c_o" >&6; }




hard_links=nottested
if test no = "$lt_cv_prog_compiler_c_o" && test no != "$need_locks"; then
  # do not overwrite the value of need_locks provided by the user
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
printf %s "checking if we can lock with hard links... " >&6; }
  hard_links=yes
  $RM conftest*
  ln conftest.a conftest.b 2>/dev/null && hard_links=no
  touch conftest.a
  ln conftest.a conftest.b 2>&5 || hard_links=no
  ln conftest.a conftest.b 2>/dev/null && hard_links=no
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
printf "%s\n" "$hard_links" >&6; }
  if test no = "$hard_links"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe" >&5
printf "%s\n" "$as_me: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe" >&2;}
    need_locks=warn
  fi
else
  need_locks=no
fi






  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
printf %s "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }

  runpath_var=
  allow_undefined_flag=
  always_export_symbols=no
  archive_cmds=
  archive_expsym_cmds=
  compiler_needs_object=no
  enable_shared_with_static_runtimes=no
  export_dynamic_flag_spec=
  export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
  hardcode_automatic=no
  hardcode_direct=no
  hardcode_direct_absolute=no
  hardcode_libdir_flag_spec=
  hardcode_libdir_separator=
  hardcode_minus_L=no
  hardcode_shlibpath_var=unsupported
  inherit_rpath=no
  link_all_deplibs=unknown
  module_cmds=
  module_expsym_cmds=
  old_archive_from_new_cmds=
  old_archive_from_expsyms_cmds=
  thread_safe_flag_spec=
  whole_archive_flag_spec=
  # include_expsyms should be a list of space-separated symbols to be *always*
  # included in the symbol list
  include_expsyms=
  # exclude_expsyms can be an extended regexp of symbols to exclude
  # it will be wrapped by ' (' and ')$', so one must not match beginning or
  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',
  # as well as any symbol that contains 'd'.
  exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
  # platforms (ab)use it in PIC code, but their linkers get confused if
  # the symbol is explicitly referenced.  Since portable code cannot
  # rely on this symbol name, it's probably fine to never include it in
  # preloaded symbol tables.
  # Exclude shared library initialization/finalization symbols.
  extract_expsyms_cmds=

  case $host_os in
  cygwin* | mingw* | pw32* | cegcc*)
    # FIXME: the MSVC++ and ICC port hasn't been tested in a loooong time
    # When not using gcc, we currently assume that we are using
    # Microsoft Visual C++ or Intel C++ Compiler.
    if test yes != "$GCC"; then
      with_gnu_ld=no
    fi
    ;;
  interix*)
    # we just hope/assume this is gcc and not c89 (= MSVC++ or ICC)
    with_gnu_ld=yes
    ;;
  openbsd* | bitrig*)
    with_gnu_ld=no
    ;;
  esac

  ld_shlibs=yes

  # On some targets, GNU ld is compatible enough with the native linker
  # that we're better off using the native interface for both.
  lt_use_gnu_ld_interface=no
  if test yes = "$with_gnu_ld"; then
    case $host_os in
      aix*)
	# The AIX port of GNU ld has always aspired to compatibility
	# with the native linker.  However, as the warning in the GNU ld
	# block says, versions before 2.19.5* couldn't really create working
	# shared libraries, regardless of the interface used.
	case `$LD -v 2>&1` in
	  *\ \(GNU\ Binutils\)\ 2.19.5*) ;;
	  *\ \(GNU\ Binutils\)\ 2.[2-9]*) ;;
	  *\ \(GNU\ Binutils\)\ [3-9]*) ;;
	  *)
	    lt_use_gnu_ld_interface=yes
	    ;;
	esac
	;;
      *)
	lt_use_gnu_ld_interface=yes
	;;
    esac
  fi

  if test yes = "$lt_use_gnu_ld_interface"; then
    # If archive_cmds runs LD, not CC, wlarc should be empty
    wlarc='$wl'

    # Set some defaults for GNU ld with shared library support. These
    # are reset later if shared libraries are not supported. Putting them
    # here allows them to be overridden if necessary.
    runpath_var=LD_RUN_PATH
    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
    export_dynamic_flag_spec='$wl--export-dynamic'
    # ancient GNU ld didn't support --whole-archive et. al.
    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
      whole_archive_flag_spec=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'
    else
      whole_archive_flag_spec=
    fi
    supports_anon_versioning=no
    case `$LD -v | $SED -e 's/([^)]\+)\s\+//' 2>&1` in
      *GNU\ gold*) supports_anon_versioning=yes ;;
      *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
      *\ 2.11.*) ;; # other 2.11 versions
      *) supports_anon_versioning=yes ;;
    esac

    # See if GNU ld supports shared libraries.
    case $host_os in
    aix[3-9]*)
      # On AIX/PPC, the GNU linker is very broken
      if test ia64 != "$host_cpu"; then
	ld_shlibs=no
	cat <<_LT_EOF 1>&2

*** Warning: the GNU linker, at least up to release 2.19, is reported
*** to be unable to reliably create shared libraries on AIX.
*** Therefore, libtool is disabling shared libraries support.  If you
*** really care for shared libraries, you may want to install binutils
*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.
*** You will then need to restart the configuration process.

_LT_EOF
      fi
      ;;

    amigaos*)
      case $host_cpu in
      powerpc)
            # see comment about AmigaOS4 .so support
            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
            archive_expsym_cmds=''
        ;;
      m68k)
            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
            hardcode_libdir_flag_spec='-L$libdir'
            hardcode_minus_L=yes
        ;;
      esac
      ;;

    beos*)
      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
	allow_undefined_flag=unsupported
	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
	# support --undefined.  This deserves some investigation.  FIXME
	archive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
      else
	ld_shlibs=no
      fi
      ;;

    cygwin* | mingw* | pw32* | cegcc*)
      # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
      # as there is no search path for DLLs.
      hardcode_libdir_flag_spec='-L$libdir'
      export_dynamic_flag_spec='$wl--export-all-symbols'
      allow_undefined_flag=unsupported
      always_export_symbols=no
      enable_shared_with_static_runtimes=yes
      export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS][ ]/s/.*[ ]\([^ ]*\)/\1 DATA/;s/^.*[ ]__nm__\([^ ]*\)[ ][^ ]*/\1 DATA/;/^I[ ]/d;/^[AITW][ ]/s/.* //'\'' | sort | uniq > $export_symbols'
      exclude_expsyms='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'

      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
	# If the export-symbols file already is a .def file, use it as
	# is; otherwise, prepend EXPORTS...
	archive_expsym_cmds='if   test DEF = "`$SED -n     -e '\''s/^[	 ]*//'\''     -e '\''/^\(;.*\)*$/d'\''     -e '\''s/^\(EXPORTS\|LIBRARY\)\([	 ].*\)*$/DEF/p'\''     -e q     $export_symbols`" ; then
          cp $export_symbols $output_objdir/$soname.def;
        else
          echo EXPORTS > $output_objdir/$soname.def;
          cat $export_symbols >> $output_objdir/$soname.def;
        fi~
        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
      else
	ld_shlibs=no
      fi
      ;;

    haiku*)
      archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
      link_all_deplibs=yes
      ;;

    os2*)
      hardcode_libdir_flag_spec='-L$libdir'
      hardcode_minus_L=yes
      allow_undefined_flag=unsupported
      shrext_cmds=.dll
      archive_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
	$ECHO EXPORTS >> $output_objdir/$libname.def~
	emxexp $libobjs | $SED /"_DLL_InitTerm"/d >> $output_objdir/$libname.def~
	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
	emximp -o $lib $output_objdir/$libname.def'
      archive_expsym_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
	$ECHO EXPORTS >> $output_objdir/$libname.def~
	prefix_cmds="$SED"~
	if test EXPORTS = "`$SED 1q $export_symbols`"; then
	  prefix_cmds="$prefix_cmds -e 1d";
	fi~
	prefix_cmds="$prefix_cmds -e \"s/^\(.*\)$/_\1/g\""~
	cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~
	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
	emximp -o $lib $output_objdir/$libname.def'
      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
      enable_shared_with_static_runtimes=yes
      file_list_spec='@'
      ;;

    interix[3-9]*)
      hardcode_direct=no
      hardcode_shlibpath_var=no
      hardcode_libdir_flag_spec='$wl-rpath,$libdir'
      export_dynamic_flag_spec='$wl-E'
      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
      # Instead, shared libraries are loaded at an image base (0x10000000 by
      # default) and relocated if they conflict, which is a slow very memory
      # consuming and fragmenting process.  To avoid this, we pick a random,
      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
      archive_expsym_cmds='$SED "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
      ;;

    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
      tmp_diet=no
      if test linux-dietlibc = "$host_os"; then
	case $cc_basename in
	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
	esac
      fi
      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \
	 && test no = "$tmp_diet"
      then
	tmp_addflag=' $pic_flag'
	tmp_sharedflag='-shared'
	case $cc_basename,$host_cpu in
        pgcc*)				# Portland Group C compiler
	  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
	  tmp_addflag=' $pic_flag'
	  ;;
	pgf77* | pgf90* | pgf95* | pgfortran*)
					# Portland Group f77 and f90 compilers
	  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
	  tmp_addflag=' $pic_flag -Mnomain' ;;
	ecc*,ia64* | icc*,ia64*)	# Intel C compiler on ia64
	  tmp_addflag=' -i_dynamic' ;;
	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
	  tmp_addflag=' -i_dynamic -nofor_main' ;;
	ifc* | ifort*)			# Intel Fortran compiler
	  tmp_addflag=' -nofor_main' ;;
	lf95*)				# Lahey Fortran 8.1
	  whole_archive_flag_spec=
	  tmp_sharedflag='--shared' ;;
        nagfor*)                        # NAGFOR 5.3
          tmp_sharedflag='-Wl,-shared' ;;
	xl[cC]* | bgxl[cC]* | mpixl[cC]*) # IBM XL C 8.0 on PPC (deal with xlf below)
	  tmp_sharedflag='-qmkshrobj'
	  tmp_addflag= ;;
	nvcc*)	# Cuda Compiler Driver 2.2
	  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
	  compiler_needs_object=yes
	  ;;
	esac
	case `$CC -V 2>&1 | $SED 5q` in
	*Sun\ C*)			# Sun C 5.9
	  whole_archive_flag_spec='$wl--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
	  compiler_needs_object=yes
	  tmp_sharedflag='-G' ;;
	*Sun\ F*)			# Sun Fortran 8.3
	  tmp_sharedflag='-G' ;;
	esac
	archive_cmds='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'

        if test yes = "$supports_anon_versioning"; then
          archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
            cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
            echo "local: *; };" >> $output_objdir/$libname.ver~
            $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
        fi

	case $cc_basename in
	tcc*)
	  export_dynamic_flag_spec='-rdynamic'
	  ;;
	xlf* | bgf* | bgxlf* | mpixlf*)
	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
	  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'
	  hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
	  archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
	  if test yes = "$supports_anon_versioning"; then
	    archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
              cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
              echo "local: *; };" >> $output_objdir/$libname.ver~
              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
	  fi
	  ;;
	esac
      else
        ld_shlibs=no
      fi
      ;;

    netbsd*)
      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
	wlarc=
      else
	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
      fi
      ;;

    solaris*)
      if $LD -v 2>&1 | $GREP 'BFD 2\.8' > /dev/null; then
	ld_shlibs=no
	cat <<_LT_EOF 1>&2

*** Warning: The releases 2.8.* of the GNU linker cannot reliably
*** create shared libraries on Solaris systems.  Therefore, libtool
*** is disabling shared libraries support.  We urge you to upgrade GNU
*** binutils to release 2.9.1 or newer.  Another option is to modify
*** your PATH or compiler configuration so that the native linker is
*** used, and then restart.

_LT_EOF
      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
      else
	ld_shlibs=no
      fi
      ;;

    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
      case `$LD -v 2>&1` in
        *\ [01].* | *\ 2.[0-9].* | *\ 2.1[0-5].*)
	ld_shlibs=no
	cat <<_LT_EOF 1>&2

*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot
*** reliably create shared libraries on SCO systems.  Therefore, libtool
*** is disabling shared libraries support.  We urge you to upgrade GNU
*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
*** your PATH or compiler configuration so that the native linker is
*** used, and then restart.

_LT_EOF
	;;
	*)
	  # For security reasons, it is highly recommended that you always
	  # use absolute paths for naming shared libraries, and exclude the
	  # DT_RUNPATH tag from executables and libraries.  But doing so
	  # requires that you compile everything twice, which is a pain.
	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
	    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
	  else
	    ld_shlibs=no
	  fi
	;;
      esac
      ;;

    sunos4*)
      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
      wlarc=
      hardcode_direct=yes
      hardcode_shlibpath_var=no
      ;;

    *)
      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
      else
	ld_shlibs=no
      fi
      ;;
    esac

    if test no = "$ld_shlibs"; then
      runpath_var=
      hardcode_libdir_flag_spec=
      export_dynamic_flag_spec=
      whole_archive_flag_spec=
    fi
  else
    # PORTME fill in a description of your system's linker (not GNU ld)
    case $host_os in
    aix3*)
      allow_undefined_flag=unsupported
      always_export_symbols=yes
      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
      # Note: this linker hardcodes the directories in LIBPATH if there
      # are no directories specified by -L.
      hardcode_minus_L=yes
      if test yes = "$GCC" && test -z "$lt_prog_compiler_static"; then
	# Neither direct hardcoding nor static linking is supported with a
	# broken collect2.
	hardcode_direct=unsupported
      fi
      ;;

    aix[4-9]*)
      if test ia64 = "$host_cpu"; then
	# On IA64, the linker does run time linking by default, so we don't
	# have to do anything special.
	aix_use_runtimelinking=no
	exp_sym_flag='-Bexport'
	no_entry_flag=
      else
	# If we're using GNU nm, then we don't want the "-C" option.
	# -C means demangle to GNU nm, but means don't demangle to AIX nm.
	# Without the "-l" option, or with the "-B" option, AIX nm treats
	# weak defined symbols like other global defined symbols, whereas
	# GNU nm marks them as "W".
	# While the 'weak' keyword is ignored in the Export File, we need
	# it in the Import File for the 'aix-soname' feature, so we have
	# to replace the "-B" option with "-P" for AIX nm.
	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && (substr(\$ 3,1,1) != ".")) { if (\$ 2 == "W") { print \$ 3 " weak" } else { print \$ 3 } } }'\'' | sort -u > $export_symbols'
	else
	  export_symbols_cmds='`func_echo_all $NM | $SED -e '\''s/B\([^B]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "L") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && (substr(\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
	fi
	aix_use_runtimelinking=no

	# Test if we are trying to use run time linking or normal
	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
	# have runtime linking enabled, and use it for executables.
	# For shared libraries, we enable/disable runtime linking
	# depending on the kind of the shared library created -
	# when "with_aix_soname,aix_use_runtimelinking" is:
	# "aix,no"   lib.a(lib.so.V) shared, rtl:no,  for executables
	# "aix,yes"  lib.so          shared, rtl:yes, for executables
	#            lib.a           static archive
	# "both,no"  lib.so.V(shr.o) shared, rtl:yes
	#            lib.a(lib.so.V) shared, rtl:no,  for executables
	# "both,yes" lib.so.V(shr.o) shared, rtl:yes, for executables
	#            lib.a(lib.so.V) shared, rtl:no
	# "svr4,*"   lib.so.V(shr.o) shared, rtl:yes, for executables
	#            lib.a           static archive
	case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)
	  for ld_flag in $LDFLAGS; do
	  if (test x-brtl = "x$ld_flag" || test x-Wl,-brtl = "x$ld_flag"); then
	    aix_use_runtimelinking=yes
	    break
	  fi
	  done
	  if test svr4,no = "$with_aix_soname,$aix_use_runtimelinking"; then
	    # With aix-soname=svr4, we create the lib.so.V shared archives only,
	    # so we don't have lib.a shared libs to link our executables.
	    # We have to force runtime linking in this case.
	    aix_use_runtimelinking=yes
	    LDFLAGS="$LDFLAGS -Wl,-brtl"
	  fi
	  ;;
	esac

	exp_sym_flag='-bexport'
	no_entry_flag='-bnoentry'
      fi

      # When large executables or shared objects are built, AIX ld can
      # have problems creating the table of contents.  If linking a library
      # or program results in "error TOC overflow" add -mminimal-toc to
      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.

      archive_cmds=''
      hardcode_direct=yes
      hardcode_direct_absolute=yes
      hardcode_libdir_separator=':'
      link_all_deplibs=yes
      file_list_spec='$wl-f,'
      case $with_aix_soname,$aix_use_runtimelinking in
      aix,*) ;; # traditional, no import file
      svr4,* | *,yes) # use import file
	# The Import File defines what to hardcode.
	hardcode_direct=no
	hardcode_direct_absolute=no
	;;
      esac

      if test yes = "$GCC"; then
	case $host_os in aix4.[012]|aix4.[012].*)
	# We only want to do this on AIX 4.2 and lower, the check
	# below for broken collect2 doesn't work under 4.3+
	  collect2name=`$CC -print-prog-name=collect2`
	  if test -f "$collect2name" &&
	   strings "$collect2name" | $GREP resolve_lib_name >/dev/null
	  then
	  # We have reworked collect2
	  :
	  else
	  # We have old collect2
	  hardcode_direct=unsupported
	  # It fails to find uninstalled libraries when the uninstalled
	  # path is not listed in the libpath.  Setting hardcode_minus_L
	  # to unsupported forces relinking
	  hardcode_minus_L=yes
	  hardcode_libdir_flag_spec='-L$libdir'
	  hardcode_libdir_separator=
	  fi
	  ;;
	esac
	shared_flag='-shared'
	if test yes = "$aix_use_runtimelinking"; then
	  shared_flag="$shared_flag "'$wl-G'
	fi
	# Need to ensure runtime linking is disabled for the traditional
	# shared library, or the linker may eventually find shared libraries
	# /with/ Import File - we do not want to mix them.
	shared_flag_aix='-shared'
	shared_flag_svr4='-shared $wl-G'
      else
	# not using gcc
	if test ia64 = "$host_cpu"; then
	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
	# chokes on -Wl,-G. The following line is correct:
	  shared_flag='-G'
	else
	  if test yes = "$aix_use_runtimelinking"; then
	    shared_flag='$wl-G'
	  else
	    shared_flag='$wl-bM:SRE'
	  fi
	  shared_flag_aix='$wl-bM:SRE'
	  shared_flag_svr4='$wl-G'
	fi
      fi

      export_dynamic_flag_spec='$wl-bexpall'
      # It seems that -bexpall does not export symbols beginning with
      # underscore (_), so it is better to generate a list of symbols to export.
      always_export_symbols=yes
      if test aix,yes = "$with_aix_soname,$aix_use_runtimelinking"; then
	# Warning - without using the other runtime loading flags (-brtl),
	# -berok will link without error, but may produce a broken library.
	allow_undefined_flag='-berok'
        # Determine the default libpath from the value encoded in an
        # empty executable.
        if test set = "${lt_cv_aix_libpath+set}"; then
  aix_libpath=$lt_cv_aix_libpath
else
  if test ${lt_cv_aix_libpath_+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

  lt_aix_libpath_sed='
      /Import File Strings/,/^$/ {
	  /^0/ {
	      s/^0  *\([^ ]*\) *$/\1/
	      p
	  }
      }'
  lt_cv_aix_libpath_=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
  # Check for a 64-bit object if we didn't find anything.
  if test -z "$lt_cv_aix_libpath_"; then
    lt_cv_aix_libpath_=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
  fi
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
  if test -z "$lt_cv_aix_libpath_"; then
    lt_cv_aix_libpath_=/usr/lib:/lib
  fi

fi

  aix_libpath=$lt_cv_aix_libpath_
fi

        hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'"$aix_libpath"
        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n "$allow_undefined_flag"; then func_echo_all "$wl$allow_undefined_flag"; else :; fi` $wl'$exp_sym_flag:\$export_symbols' '$shared_flag
      else
	if test ia64 = "$host_cpu"; then
	  hardcode_libdir_flag_spec='$wl-R $libdir:/usr/lib:/lib'
	  allow_undefined_flag="-z nodefs"
	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\$wl$no_entry_flag"' $compiler_flags $wl$allow_undefined_flag '"\$wl$exp_sym_flag:\$export_symbols"
	else
	 # Determine the default libpath from the value encoded in an
	 # empty executable.
	 if test set = "${lt_cv_aix_libpath+set}"; then
  aix_libpath=$lt_cv_aix_libpath
else
  if test ${lt_cv_aix_libpath_+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

  lt_aix_libpath_sed='
      /Import File Strings/,/^$/ {
	  /^0/ {
	      s/^0  *\([^ ]*\) *$/\1/
	      p
	  }
      }'
  lt_cv_aix_libpath_=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
  # Check for a 64-bit object if we didn't find anything.
  if test -z "$lt_cv_aix_libpath_"; then
    lt_cv_aix_libpath_=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
  fi
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
  if test -z "$lt_cv_aix_libpath_"; then
    lt_cv_aix_libpath_=/usr/lib:/lib
  fi

fi

  aix_libpath=$lt_cv_aix_libpath_
fi

	 hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'"$aix_libpath"
	  # Warning - without using the other run time loading flags,
	  # -berok will link without error, but may produce a broken library.
	  no_undefined_flag=' $wl-bernotok'
	  allow_undefined_flag=' $wl-berok'
	  if test yes = "$with_gnu_ld"; then
	    # We only use this code for GNU lds that support --whole-archive.
	    whole_archive_flag_spec='$wl--whole-archive$convenience $wl--no-whole-archive'
	  else
	    # Exported symbols can be pulled into shared objects from archives
	    whole_archive_flag_spec='$convenience'
	  fi
	  archive_cmds_need_lc=yes
	  archive_expsym_cmds='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'
	  # -brtl affects multiple linker settings, -berok does not and is overridden later
	  compiler_flags_filtered='`func_echo_all "$compiler_flags " | $SED -e "s%-brtl\\([, ]\\)%-berok\\1%g"`'
	  if test svr4 != "$with_aix_soname"; then
	    # This is similar to how AIX traditionally builds its shared libraries.
	    archive_expsym_cmds="$archive_expsym_cmds"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'
	  fi
	  if test aix != "$with_aix_soname"; then
	    archive_expsym_cmds="$archive_expsym_cmds"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all "#! $soname($shared_archive_member_spec.o)"; if test shr_64 = "$shared_archive_member_spec"; then func_echo_all "# 64"; else func_echo_all "# 32"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'
	  else
	    # used by -dlpreopen to get the symbols
	    archive_expsym_cmds="$archive_expsym_cmds"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'
	  fi
	  archive_expsym_cmds="$archive_expsym_cmds"'~$RM -r $output_objdir/$realname.d'
	fi
      fi
      ;;

    amigaos*)
      case $host_cpu in
      powerpc)
            # see comment about AmigaOS4 .so support
            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
            archive_expsym_cmds=''
        ;;
      m68k)
            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
            hardcode_libdir_flag_spec='-L$libdir'
            hardcode_minus_L=yes
        ;;
      esac
      ;;

    bsdi[45]*)
      export_dynamic_flag_spec=-rdynamic
      ;;

    cygwin* | mingw* | pw32* | cegcc*)
      # When not using gcc, we currently assume that we are using
      # Microsoft Visual C++ or Intel C++ Compiler.
      # hardcode_libdir_flag_spec is actually meaningless, as there is
      # no search path for DLLs.
      case $cc_basename in
      cl* | icl*)
	# Native MSVC or ICC
	hardcode_libdir_flag_spec=' '
	allow_undefined_flag=unsupported
	always_export_symbols=yes
	file_list_spec='@'
	# Tell ltmain to make .lib files, not .a files.
	libext=lib
	# Tell ltmain to make .dll files, not .so files.
	shrext_cmds=.dll
	# FIXME: Setting linknames here is a bad hack.
	archive_cmds='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~linknames='
	archive_expsym_cmds='if   test DEF = "`$SED -n     -e '\''s/^[	 ]*//'\''     -e '\''/^\(;.*\)*$/d'\''     -e '\''s/^\(EXPORTS\|LIBRARY\)\([	 ].*\)*$/DEF/p'\''     -e q     $export_symbols`" ; then
            cp "$export_symbols" "$output_objdir/$soname.def";
            echo "$tool_output_objdir$soname.def" > "$output_objdir/$soname.exp";
          else
            $SED -e '\''s/^/-link -EXPORT:/'\'' < $export_symbols > $output_objdir/$soname.exp;
          fi~
          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs "@$tool_output_objdir$soname.exp" -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~
          linknames='
	# The linker will not automatically build a static lib if we build a DLL.
	# _LT_TAGVAR(old_archive_from_new_cmds, )='true'
	enable_shared_with_static_runtimes=yes
	exclude_expsyms='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'
	export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS][ ]/s/.*[ ]\([^ ]*\)/\1,DATA/'\'' | $SED -e '\''/^[AITW][ ]/s/.*[ ]//'\'' | sort | uniq > $export_symbols'
	# Don't use ranlib
	old_postinstall_cmds='chmod 644 $oldlib'
	postlink_cmds='lt_outputfile="@OUTPUT@"~
          lt_tool_outputfile="@TOOL_OUTPUT@"~
          case $lt_outputfile in
            *.exe|*.EXE) ;;
            *)
              lt_outputfile=$lt_outputfile.exe
              lt_tool_outputfile=$lt_tool_outputfile.exe
              ;;
          esac~
          if test : != "$MANIFEST_TOOL" && test -f "$lt_outputfile.manifest"; then
            $MANIFEST_TOOL -manifest "$lt_tool_outputfile.manifest" -outputresource:"$lt_tool_outputfile" || exit 1;
            $RM "$lt_outputfile.manifest";
          fi'
	;;
      *)
	# Assume MSVC and ICC wrapper
	hardcode_libdir_flag_spec=' '
	allow_undefined_flag=unsupported
	# Tell ltmain to make .lib files, not .a files.
	libext=lib
	# Tell ltmain to make .dll files, not .so files.
	shrext_cmds=.dll
	# FIXME: Setting linknames here is a bad hack.
	archive_cmds='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
	# The linker will automatically build a .lib file if we build a DLL.
	old_archive_from_new_cmds='true'
	# FIXME: Should let the user specify the lib program.
	old_archive_cmds='lib -OUT:$oldlib$oldobjs$old_deplibs'
	enable_shared_with_static_runtimes=yes
	;;
      esac
      ;;

    darwin* | rhapsody*)


  archive_cmds_need_lc=no
  hardcode_direct=no
  hardcode_automatic=yes
  hardcode_shlibpath_var=unsupported
  if test yes = "$lt_cv_ld_force_load"; then
    whole_archive_flag_spec='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience $wl-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'

  else
    whole_archive_flag_spec=''
  fi
  link_all_deplibs=yes
  allow_undefined_flag=$_lt_dar_allow_undefined
  case $cc_basename in
     ifort*|nagfor*) _lt_dar_can_shared=yes ;;
     *) _lt_dar_can_shared=$GCC ;;
  esac
  if test yes = "$_lt_dar_can_shared"; then
    output_verbose_link_cmd=func_echo_all
    archive_cmds="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod$_lt_dsymutil"
    module_cmds="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags$_lt_dsymutil"
    archive_expsym_cmds="$SED 's|^|_|' < \$export_symbols > \$output_objdir/\$libname-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil"
    module_expsym_cmds="$SED -e 's|^|_|' < \$export_symbols > \$output_objdir/\$libname-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags$_lt_dar_export_syms$_lt_dsymutil"

  else
  ld_shlibs=no
  fi

      ;;

    dgux*)
      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
      hardcode_libdir_flag_spec='-L$libdir'
      hardcode_shlibpath_var=no
      ;;

    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
    # support.  Future versions do this automatically, but an explicit c++rt0.o
    # does not break anything, and helps significantly (at the cost of a little
    # extra space).
    freebsd2.2*)
      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
      hardcode_libdir_flag_spec='-R$libdir'
      hardcode_direct=yes
      hardcode_shlibpath_var=no
      ;;

    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
    freebsd2.*)
      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
      hardcode_direct=yes
      hardcode_minus_L=yes
      hardcode_shlibpath_var=no
      ;;

    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
    freebsd* | dragonfly* | midnightbsd*)
      archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
      hardcode_libdir_flag_spec='-R$libdir'
      hardcode_direct=yes
      hardcode_shlibpath_var=no
      ;;

    hpux9*)
      if test yes = "$GCC"; then
	archive_cmds='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
      else
	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
      fi
      hardcode_libdir_flag_spec='$wl+b $wl$libdir'
      hardcode_libdir_separator=:
      hardcode_direct=yes

      # hardcode_minus_L: Not really in the search PATH,
      # but as the default location of the library.
      hardcode_minus_L=yes
      export_dynamic_flag_spec='$wl-E'
      ;;

    hpux10*)
      if test yes,no = "$GCC,$with_gnu_ld"; then
	archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
      else
	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
      fi
      if test no = "$with_gnu_ld"; then
	hardcode_libdir_flag_spec='$wl+b $wl$libdir'
	hardcode_libdir_separator=:
	hardcode_direct=yes
	hardcode_direct_absolute=yes
	export_dynamic_flag_spec='$wl-E'
	# hardcode_minus_L: Not really in the search PATH,
	# but as the default location of the library.
	hardcode_minus_L=yes
      fi
      ;;

    hpux11*)
      if test yes,no = "$GCC,$with_gnu_ld"; then
	case $host_cpu in
	hppa*64*)
	  archive_cmds='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
	  ;;
	ia64*)
	  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
	  ;;
	*)
	  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
	  ;;
	esac
      else
	case $host_cpu in
	hppa*64*)
	  archive_cmds='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
	  ;;
	ia64*)
	  archive_cmds='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
	  ;;
	*)

	  # Older versions of the 11.00 compiler do not understand -b yet
	  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)
	  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if $CC understands -b" >&5
printf %s "checking if $CC understands -b... " >&6; }
if test ${lt_cv_prog_compiler__b+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_prog_compiler__b=no
   save_LDFLAGS=$LDFLAGS
   LDFLAGS="$LDFLAGS -b"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&5
       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         lt_cv_prog_compiler__b=yes
       fi
     else
       lt_cv_prog_compiler__b=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS=$save_LDFLAGS

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler__b" >&5
printf "%s\n" "$lt_cv_prog_compiler__b" >&6; }

if test yes = "$lt_cv_prog_compiler__b"; then
    archive_cmds='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
else
    archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
fi

	  ;;
	esac
      fi
      if test no = "$with_gnu_ld"; then
	hardcode_libdir_flag_spec='$wl+b $wl$libdir'
	hardcode_libdir_separator=:

	case $host_cpu in
	hppa*64*|ia64*)
	  hardcode_direct=no
	  hardcode_shlibpath_var=no
	  ;;
	*)
	  hardcode_direct=yes
	  hardcode_direct_absolute=yes
	  export_dynamic_flag_spec='$wl-E'

	  # hardcode_minus_L: Not really in the search PATH,
	  # but as the default location of the library.
	  hardcode_minus_L=yes
	  ;;
	esac
      fi
      ;;

    irix5* | irix6* | nonstopux*)
      if test yes = "$GCC"; then
	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
	# Try to use the -exported_symbol ld option, if it does not
	# work, assume that -exports_file does not work either and
	# implicitly export all symbols.
	# This should be the same for all languages, so no per-tag cache variable.
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the $host_os linker accepts -exported_symbol" >&5
printf %s "checking whether the $host_os linker accepts -exported_symbol... " >&6; }
if test ${lt_cv_irix_exported_symbol+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  save_LDFLAGS=$LDFLAGS
	   LDFLAGS="$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null"
	   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
int foo (void) { return 0; }
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  lt_cv_irix_exported_symbol=yes
else $as_nop
  lt_cv_irix_exported_symbol=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
           LDFLAGS=$save_LDFLAGS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_irix_exported_symbol" >&5
printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
	if test yes = "$lt_cv_irix_exported_symbol"; then
          archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'
	fi
      else
	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'
      fi
      archive_cmds_need_lc='no'
      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
      hardcode_libdir_separator=:
      inherit_rpath=yes
      link_all_deplibs=yes
      ;;

    linux*)
      case $cc_basename in
      tcc*)
	# Fabrice Bellard et al's Tiny C Compiler
	ld_shlibs=yes
	archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
	;;
      esac
      ;;

    netbsd*)
      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
      else
	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
      fi
      hardcode_libdir_flag_spec='-R$libdir'
      hardcode_direct=yes
      hardcode_shlibpath_var=no
      ;;

    newsos6)
      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
      hardcode_direct=yes
      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
      hardcode_libdir_separator=:
      hardcode_shlibpath_var=no
      ;;

    *nto* | *qnx*)
      ;;

    openbsd* | bitrig*)
      if test -f /usr/libexec/ld.so; then
	hardcode_direct=yes
	hardcode_shlibpath_var=no
	hardcode_direct_absolute=yes
	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
	  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'
	  hardcode_libdir_flag_spec='$wl-rpath,$libdir'
	  export_dynamic_flag_spec='$wl-E'
	else
	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
	  hardcode_libdir_flag_spec='$wl-rpath,$libdir'
	fi
      else
	ld_shlibs=no
      fi
      ;;

    os2*)
      hardcode_libdir_flag_spec='-L$libdir'
      hardcode_minus_L=yes
      allow_undefined_flag=unsupported
      shrext_cmds=.dll
      archive_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
	$ECHO EXPORTS >> $output_objdir/$libname.def~
	emxexp $libobjs | $SED /"_DLL_InitTerm"/d >> $output_objdir/$libname.def~
	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
	emximp -o $lib $output_objdir/$libname.def'
      archive_expsym_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
	$ECHO EXPORTS >> $output_objdir/$libname.def~
	prefix_cmds="$SED"~
	if test EXPORTS = "`$SED 1q $export_symbols`"; then
	  prefix_cmds="$prefix_cmds -e 1d";
	fi~
	prefix_cmds="$prefix_cmds -e \"s/^\(.*\)$/_\1/g\""~
	cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~
	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
	emximp -o $lib $output_objdir/$libname.def'
      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
      enable_shared_with_static_runtimes=yes
      file_list_spec='@'
      ;;

    osf3*)
      if test yes = "$GCC"; then
	allow_undefined_flag=' $wl-expect_unresolved $wl\*'
	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
      else
	allow_undefined_flag=' -expect_unresolved \*'
	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
      fi
      archive_cmds_need_lc='no'
      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
      hardcode_libdir_separator=:
      ;;

    osf4* | osf5*)	# as osf3* with the addition of -msym flag
      if test yes = "$GCC"; then
	allow_undefined_flag=' $wl-expect_unresolved $wl\*'
	archive_cmds='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
	hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
      else
	allow_undefined_flag=' -expect_unresolved \*'
	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
	archive_expsym_cmds='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; printf "%s\\n" "-hidden">> $lib.exp~
          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'

	# Both c and cxx compiler support -rpath directly
	hardcode_libdir_flag_spec='-rpath $libdir'
      fi
      archive_cmds_need_lc='no'
      hardcode_libdir_separator=:
      ;;

    solaris*)
      no_undefined_flag=' -z defs'
      if test yes = "$GCC"; then
	wlarc='$wl'
	archive_cmds='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
	archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
      else
	case `$CC -V 2>&1` in
	*"Compilers 5.0"*)
	  wlarc=''
	  archive_cmds='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'
	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
	  ;;
	*)
	  wlarc='$wl'
	  archive_cmds='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'
	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
	  ;;
	esac
      fi
      hardcode_libdir_flag_spec='-R$libdir'
      hardcode_shlibpath_var=no
      case $host_os in
      solaris2.[0-5] | solaris2.[0-5].*) ;;
      *)
	# The compiler driver will combine and reorder linker options,
	# but understands '-z linker_flag'.  GCC discards it without '$wl',
	# but is careful enough not to reorder.
	# Supported since Solaris 2.6 (maybe 2.5.1?)
	if test yes = "$GCC"; then
	  whole_archive_flag_spec='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'
	else
	  whole_archive_flag_spec='-z allextract$convenience -z defaultextract'
	fi
	;;
      esac
      link_all_deplibs=yes
      ;;

    sunos4*)
      if test sequent = "$host_vendor"; then
	# Use $CC to link under sequent, because it throws in some extra .o
	# files that make .init and .fini sections work.
	archive_cmds='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'
      else
	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
      fi
      hardcode_libdir_flag_spec='-L$libdir'
      hardcode_direct=yes
      hardcode_minus_L=yes
      hardcode_shlibpath_var=no
      ;;

    sysv4)
      case $host_vendor in
	sni)
	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
	  hardcode_direct=yes # is this really true???
	;;
	siemens)
	  ## LD is ld it makes a PLAMLIB
	  ## CC just makes a GrossModule.
	  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'
	  reload_cmds='$CC -r -o $output$reload_objs'
	  hardcode_direct=no
        ;;
	motorola)
	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
	  hardcode_direct=no #Motorola manual says yes, but my tests say they lie
	;;
      esac
      runpath_var='LD_RUN_PATH'
      hardcode_shlibpath_var=no
      ;;

    sysv4.3*)
      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
      hardcode_shlibpath_var=no
      export_dynamic_flag_spec='-Bexport'
      ;;

    sysv4*MP*)
      if test -d /usr/nec; then
	archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
	hardcode_shlibpath_var=no
	runpath_var=LD_RUN_PATH
	hardcode_runpath_var=yes
	ld_shlibs=yes
      fi
      ;;

    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)
      no_undefined_flag='$wl-z,text'
      archive_cmds_need_lc=no
      hardcode_shlibpath_var=no
      runpath_var='LD_RUN_PATH'

      if test yes = "$GCC"; then
	archive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
	archive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
      else
	archive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
	archive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
      fi
      ;;

    sysv5* | sco3.2v5* | sco5v6*)
      # Note: We CANNOT use -z defs as we might desire, because we do not
      # link with -lc, and that would cause any symbols used from libc to
      # always be unresolved, which means just about no library would
      # ever link correctly.  If we're not using GNU ld we use -z text
      # though, which does catch some bad symbols but isn't as heavy-handed
      # as -z defs.
      no_undefined_flag='$wl-z,text'
      allow_undefined_flag='$wl-z,nodefs'
      archive_cmds_need_lc=no
      hardcode_shlibpath_var=no
      hardcode_libdir_flag_spec='$wl-R,$libdir'
      hardcode_libdir_separator=':'
      link_all_deplibs=yes
      export_dynamic_flag_spec='$wl-Bexport'
      runpath_var='LD_RUN_PATH'

      if test yes = "$GCC"; then
	archive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
	archive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
      else
	archive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
	archive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
      fi
      ;;

    uts4*)
      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
      hardcode_libdir_flag_spec='-L$libdir'
      hardcode_shlibpath_var=no
      ;;

    *)
      ld_shlibs=no
      ;;
    esac

    if test sni = "$host_vendor"; then
      case $host in
      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)
	export_dynamic_flag_spec='$wl-Blargedynsym'
	;;
      esac
    fi
  fi

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ld_shlibs" >&5
printf "%s\n" "$ld_shlibs" >&6; }
test no = "$ld_shlibs" && can_build_shared=no

with_gnu_ld=$with_gnu_ld















#
# Do we need to explicitly link libc?
#
case "x$archive_cmds_need_lc" in
x|xyes)
  # Assume -lc should be added
  archive_cmds_need_lc=yes

  if test yes,yes = "$GCC,$enable_shared"; then
    case $archive_cmds in
    *'~'*)
      # FIXME: we may have to deal with multi-command sequences.
      ;;
    '$CC '*)
      # Test whether the compiler implicitly links with -lc since on some
      # systems, -lgcc has to come before -lc. If gcc already passes -lc
      # to ld, don't add -lc before -lgcc.
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
printf %s "checking whether -lc should be explicitly linked in... " >&6; }
if test ${lt_cv_archive_cmds_need_lc+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  $RM conftest*
	echo "$lt_simple_compile_test_code" > conftest.$ac_ext

	if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } 2>conftest.err; then
	  soname=conftest
	  lib=conftest
	  libobjs=conftest.$ac_objext
	  deplibs=
	  wl=$lt_prog_compiler_wl
	  pic_flag=$lt_prog_compiler_pic
	  compiler_flags=-v
	  linker_flags=-v
	  verstring=
	  output_objdir=.
	  libname=conftest
	  lt_save_allow_undefined_flag=$allow_undefined_flag
	  allow_undefined_flag=
	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1\""; } >&5
  (eval $archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
	  then
	    lt_cv_archive_cmds_need_lc=no
	  else
	    lt_cv_archive_cmds_need_lc=yes
	  fi
	  allow_undefined_flag=$lt_save_allow_undefined_flag
	else
	  cat conftest.err 1>&5
	fi
	$RM conftest*

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_archive_cmds_need_lc" >&5
printf "%s\n" "$lt_cv_archive_cmds_need_lc" >&6; }
      archive_cmds_need_lc=$lt_cv_archive_cmds_need_lc
      ;;
    esac
  fi
  ;;
esac
























































































































































  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
printf %s "checking dynamic linker characteristics... " >&6; }

if test yes = "$GCC"; then
  case $host_os in
    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;
    *) lt_awk_arg='/^libraries:/' ;;
  esac
  case $host_os in
    mingw* | cegcc*) lt_sed_strip_eq='s|=\([A-Za-z]:\)|\1|g' ;;
    *) lt_sed_strip_eq='s|=/|/|g' ;;
  esac
  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e "s/^libraries://" -e $lt_sed_strip_eq`
  case $lt_search_path_spec in
  *\;*)
    # if the path contains ";" then we assume it to be the separator
    # otherwise default to the standard path separator (i.e. ":") - it is
    # assumed that no part of a normal pathname contains ";" but that should
    # okay in the real world where ";" in dirpaths is itself problematic.
    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED 's/;/ /g'`
    ;;
  *)
    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED "s/$PATH_SEPARATOR/ /g"`
    ;;
  esac
  # Ok, now we have the path, separated by spaces, we can step through it
  # and add multilib dir if necessary...
  lt_tmp_lt_search_path_spec=
  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
  # ...but if some path component already ends with the multilib dir we assume
  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).
  case "$lt_multi_os_dir; $lt_search_path_spec " in
  "/; "* | "/.; "* | "/./; "* | *"$lt_multi_os_dir "* | *"$lt_multi_os_dir/ "*)
    lt_multi_os_dir=
    ;;
  esac
  for lt_sys_path in $lt_search_path_spec; do
    if test -d "$lt_sys_path$lt_multi_os_dir"; then
      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir"
    elif test -n "$lt_multi_os_dir"; then
      test -d "$lt_sys_path" && \
	lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path"
    fi
  done
  lt_search_path_spec=`$ECHO "$lt_tmp_lt_search_path_spec" | awk '
BEGIN {RS = " "; FS = "/|\n";} {
  lt_foo = "";
  lt_count = 0;
  for (lt_i = NF; lt_i > 0; lt_i--) {
    if ($lt_i != "" && $lt_i != ".") {
      if ($lt_i == "..") {
        lt_count++;
      } else {
        if (lt_count == 0) {
          lt_foo = "/" $lt_i lt_foo;
        } else {
          lt_count--;
        }
      }
    }
  }
  if (lt_foo != "") { lt_freq[lt_foo]++; }
  if (lt_freq[lt_foo] == 1) { print lt_foo; }
}'`
  # AWK program above erroneously prepends '/' to C:/dos/paths
  # for these hosts.
  case $host_os in
    mingw* | cegcc*) lt_search_path_spec=`$ECHO "$lt_search_path_spec" |\
      $SED 's|/\([A-Za-z]:\)|\1|g'` ;;
  esac
  sys_lib_search_path_spec=`$ECHO "$lt_search_path_spec" | $lt_NL2SP`
else
  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
fi
library_names_spec=
libname_spec='lib$name'
soname_spec=
shrext_cmds=.so
postinstall_cmds=
postuninstall_cmds=
finish_cmds=
finish_eval=
shlibpath_var=
shlibpath_overrides_runpath=unknown
version_type=none
dynamic_linker="$host_os ld.so"
sys_lib_dlsearch_path_spec="/lib /usr/lib"
need_lib_prefix=unknown
hardcode_into_libs=no

# when you set need_version to no, make sure it does not cause -set_version
# flags to be left without arguments
need_version=unknown



case $host_os in
aix3*)
  version_type=linux # correct to gnu/linux during the next big refactor
  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'
  shlibpath_var=LIBPATH

  # AIX 3 has no versioning support, so we append a major version to the name.
  soname_spec='$libname$release$shared_ext$major'
  ;;

aix[4-9]*)
  version_type=linux # correct to gnu/linux during the next big refactor
  need_lib_prefix=no
  need_version=no
  hardcode_into_libs=yes
  if test ia64 = "$host_cpu"; then
    # AIX 5 supports IA64
    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'
    shlibpath_var=LD_LIBRARY_PATH
  else
    # With GCC up to 2.95.x, collect2 would create an import file
    # for dependence libraries.  The import file would start with
    # the line '#! .'.  This would cause the generated library to
    # depend on '.', always an invalid library.  This was fixed in
    # development snapshots of GCC prior to 3.0.
    case $host_os in
      aix4 | aix4.[01] | aix4.[01].*)
      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
	   echo ' yes '
	   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then
	:
      else
	can_build_shared=no
      fi
      ;;
    esac
    # Using Import Files as archive members, it is possible to support
    # filename-based versioning of shared library archives on AIX. While
    # this would work for both with and without runtime linking, it will
    # prevent static linking of such archives. So we do filename-based
    # shared library versioning with .so extension only, which is used
    # when both runtime linking and shared linking is enabled.
    # Unfortunately, runtime linking may impact performance, so we do
    # not want this to be the default eventually. Also, we use the
    # versioned .so libs for executables only if there is the -brtl
    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.
    # To allow for filename-based versioning support, we need to create
    # libNAME.so.V as an archive file, containing:
    # *) an Import File, referring to the versioned filename of the
    #    archive as well as the shared archive member, telling the
    #    bitwidth (32 or 64) of that shared object, and providing the
    #    list of exported symbols of that shared object, eventually
    #    decorated with the 'weak' keyword
    # *) the shared object with the F_LOADONLY flag set, to really avoid
    #    it being seen by the linker.
    # At run time we better use the real file rather than another symlink,
    # but for link time we create the symlink libNAME.so -> libNAME.so.V

    case $with_aix_soname,$aix_use_runtimelinking in
    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct
    # soname into executable. Probably we can add versioning support to
    # collect2, so additional links can be useful in future.
    aix,yes) # traditional libtool
      dynamic_linker='AIX unversionable lib.so'
      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
      # instead of lib<name>.a to let people know that these are not
      # typical AIX shared libraries.
      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
      ;;
    aix,no) # traditional AIX only
      dynamic_linker='AIX lib.a(lib.so.V)'
      # We preserve .a as extension for shared libraries through AIX4.2
      # and later when we are not doing run time linking.
      library_names_spec='$libname$release.a $libname.a'
      soname_spec='$libname$release$shared_ext$major'
      ;;
    svr4,*) # full svr4 only
      dynamic_linker="AIX lib.so.V($shared_archive_member_spec.o)"
      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'
      # We do not specify a path in Import Files, so LIBPATH fires.
      shlibpath_overrides_runpath=yes
      ;;
    *,yes) # both, prefer svr4
      dynamic_linker="AIX lib.so.V($shared_archive_member_spec.o), lib.a(lib.so.V)"
      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'
      # unpreferred sharedlib libNAME.a needs extra handling
      postinstall_cmds='test -n "$linkname" || linkname="$realname"~func_stripname "" ".so" "$linkname"~$install_shared_prog "$dir/$func_stripname_result.$libext" "$destdir/$func_stripname_result.$libext"~test -z "$tstripme" || test -z "$striplib" || $striplib "$destdir/$func_stripname_result.$libext"'
      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname "" ".so" "$n"~test "$func_stripname_result" = "$n" || func_append rmfiles " $odir/$func_stripname_result.$libext"'
      # We do not specify a path in Import Files, so LIBPATH fires.
      shlibpath_overrides_runpath=yes
      ;;
    *,no) # both, prefer aix
      dynamic_linker="AIX lib.a(lib.so.V), lib.so.V($shared_archive_member_spec.o)"
      library_names_spec='$libname$release.a $libname.a'
      soname_spec='$libname$release$shared_ext$major'
      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling
      postinstall_cmds='test -z "$dlname" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z "$tstripme" || test -z "$striplib" || $striplib $destdir/$dlname~test -n "$linkname" || linkname=$realname~func_stripname "" ".a" "$linkname"~(cd "$destdir" && $LN_S -f $dlname $func_stripname_result.so)'
      postuninstall_cmds='test -z "$dlname" || func_append rmfiles " $odir/$dlname"~for n in $old_library $library_names; do :; done~func_stripname "" ".a" "$n"~func_append rmfiles " $odir/$func_stripname_result.so"'
      ;;
    esac
    shlibpath_var=LIBPATH
  fi
  ;;

amigaos*)
  case $host_cpu in
  powerpc)
    # Since July 2007 AmigaOS4 officially supports .so libraries.
    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.
    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
    ;;
  m68k)
    library_names_spec='$libname.ixlibrary $libname.a'
    # Create ${libname}_ixlibrary.a entries in /sys/libs.
    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all "$lib" | $SED '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
    ;;
  esac
  ;;

beos*)
  library_names_spec='$libname$shared_ext'
  dynamic_linker="$host_os ld.so"
  shlibpath_var=LIBRARY_PATH
  ;;

bsdi[45]*)
  version_type=linux # correct to gnu/linux during the next big refactor
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
  shlibpath_var=LD_LIBRARY_PATH
  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
  # the default ld.so.conf also contains /usr/contrib/lib and
  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
  # libtool to hard-code these into programs
  ;;

cygwin* | mingw* | pw32* | cegcc*)
  version_type=windows
  shrext_cmds=.dll
  need_version=no
  need_lib_prefix=no

  case $GCC,$cc_basename in
  yes,*)
    # gcc
    library_names_spec='$libname.dll.a'
    # DLL is installed to $(libdir)/../bin by postinstall_cmds
    postinstall_cmds='base_file=`basename \$file`~
      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; echo \$dlname'\''`~
      dldir=$destdir/`dirname \$dlpath`~
      test -d \$dldir || mkdir -p \$dldir~
      $install_prog $dir/$dlname \$dldir/$dlname~
      chmod a+x \$dldir/$dlname~
      if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
        eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
      fi'
    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
      dlpath=$dir/\$dldll~
       $RM \$dlpath'
    shlibpath_overrides_runpath=yes

    case $host_os in
    cygwin*)
      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
      soname_spec='`echo $libname | $SED -e 's/^lib/cyg/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'

      sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
      ;;
    mingw* | cegcc*)
      # MinGW DLLs use traditional 'lib' prefix
      soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'
      ;;
    pw32*)
      # pw32 DLLs use 'pw' prefix rather than 'lib'
      library_names_spec='`echo $libname | $SED -e 's/^lib/pw/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'
      ;;
    esac
    dynamic_linker='Win32 ld.exe'
    ;;

  *,cl* | *,icl*)
    # Native MSVC or ICC
    libname_spec='$name'
    soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'
    library_names_spec='$libname.dll.lib'

    case $build_os in
    mingw*)
      sys_lib_search_path_spec=
      lt_save_ifs=$IFS
      IFS=';'
      for lt_path in $LIB
      do
        IFS=$lt_save_ifs
        # Let DOS variable expansion print the short 8.3 style file name.
        lt_path=`cd "$lt_path" 2>/dev/null && cmd //C "for %i in (".") do @echo %~si"`
        sys_lib_search_path_spec="$sys_lib_search_path_spec $lt_path"
      done
      IFS=$lt_save_ifs
      # Convert to MSYS style.
      sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's|\\\\|/|g' -e 's| \\([a-zA-Z]\\):| /\\1|g' -e 's|^ ||'`
      ;;
    cygwin*)
      # Convert to unix form, then to dos form, then back to unix form
      # but this time dos style (no spaces!) so that the unix form looks
      # like /cygdrive/c/PROGRA~1:/cygdr...
      sys_lib_search_path_spec=`cygpath --path --unix "$LIB"`
      sys_lib_search_path_spec=`cygpath --path --dos "$sys_lib_search_path_spec" 2>/dev/null`
      sys_lib_search_path_spec=`cygpath --path --unix "$sys_lib_search_path_spec" | $SED -e "s/$PATH_SEPARATOR/ /g"`
      ;;
    *)
      sys_lib_search_path_spec=$LIB
      if $ECHO "$sys_lib_search_path_spec" | $GREP ';[c-zC-Z]:/' >/dev/null; then
        # It is most probably a Windows format PATH.
        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
      else
        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e "s/$PATH_SEPARATOR/ /g"`
      fi
      # FIXME: find the short name or the path components, as spaces are
      # common. (e.g. "Program Files" -> "PROGRA~1")
      ;;
    esac

    # DLL is installed to $(libdir)/../bin by postinstall_cmds
    postinstall_cmds='base_file=`basename \$file`~
      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; echo \$dlname'\''`~
      dldir=$destdir/`dirname \$dlpath`~
      test -d \$dldir || mkdir -p \$dldir~
      $install_prog $dir/$dlname \$dldir/$dlname'
    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
      dlpath=$dir/\$dldll~
       $RM \$dlpath'
    shlibpath_overrides_runpath=yes
    dynamic_linker='Win32 link.exe'
    ;;

  *)
    # Assume MSVC and ICC wrapper
    library_names_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext $libname.lib'
    dynamic_linker='Win32 ld.exe'
    ;;
  esac
  # FIXME: first we should search . and the directory the executable is in
  shlibpath_var=PATH
  ;;

darwin* | rhapsody*)
  dynamic_linker="$host_os dyld"
  version_type=darwin
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'
  soname_spec='$libname$release$major$shared_ext'
  shlibpath_overrides_runpath=yes
  shlibpath_var=DYLD_LIBRARY_PATH
  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'

  sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/local/lib"
  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
  ;;

dgux*)
  version_type=linux # correct to gnu/linux during the next big refactor
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  shlibpath_var=LD_LIBRARY_PATH
  ;;

freebsd* | dragonfly* | midnightbsd*)
  # DragonFly does not have aout.  When/if they implement a new
  # versioning mechanism, adjust this.
  if test -x /usr/bin/objformat; then
    objformat=`/usr/bin/objformat`
  else
    case $host_os in
    freebsd[23].*) objformat=aout ;;
    *) objformat=elf ;;
    esac
  fi
  version_type=freebsd-$objformat
  case $version_type in
    freebsd-elf*)
      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
      soname_spec='$libname$release$shared_ext$major'
      need_version=no
      need_lib_prefix=no
      ;;
    freebsd-*)
      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
      need_version=yes
      ;;
  esac
  shlibpath_var=LD_LIBRARY_PATH
  case $host_os in
  freebsd2.*)
    shlibpath_overrides_runpath=yes
    ;;
  freebsd3.[01]* | freebsdelf3.[01]*)
    shlibpath_overrides_runpath=yes
    hardcode_into_libs=yes
    ;;
  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
    shlibpath_overrides_runpath=no
    hardcode_into_libs=yes
    ;;
  *) # from 4.6 on, and DragonFly
    shlibpath_overrides_runpath=yes
    hardcode_into_libs=yes
    ;;
  esac
  ;;

haiku*)
  version_type=linux # correct to gnu/linux during the next big refactor
  need_lib_prefix=no
  need_version=no
  dynamic_linker="$host_os runtime_loader"
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  shlibpath_var=LIBRARY_PATH
  shlibpath_overrides_runpath=no
  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'
  hardcode_into_libs=yes
  ;;

hpux9* | hpux10* | hpux11*)
  # Give a soname corresponding to the major version so that dld.sl refuses to
  # link against other versions.
  version_type=sunos
  need_lib_prefix=no
  need_version=no
  case $host_cpu in
  ia64*)
    shrext_cmds='.so'
    hardcode_into_libs=yes
    dynamic_linker="$host_os dld.so"
    shlibpath_var=LD_LIBRARY_PATH
    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
    soname_spec='$libname$release$shared_ext$major'
    if test 32 = "$HPUX_IA64_MODE"; then
      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
      sys_lib_dlsearch_path_spec=/usr/lib/hpux32
    else
      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
      sys_lib_dlsearch_path_spec=/usr/lib/hpux64
    fi
    ;;
  hppa*64*)
    shrext_cmds='.sl'
    hardcode_into_libs=yes
    dynamic_linker="$host_os dld.sl"
    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
    soname_spec='$libname$release$shared_ext$major'
    sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
    ;;
  *)
    shrext_cmds='.sl'
    dynamic_linker="$host_os dld.sl"
    shlibpath_var=SHLIB_PATH
    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
    soname_spec='$libname$release$shared_ext$major'
    ;;
  esac
  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...
  postinstall_cmds='chmod 555 $lib'
  # or fails outright, so override atomically:
  install_override_mode=555
  ;;

interix[3-9]*)
  version_type=linux # correct to gnu/linux during the next big refactor
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=no
  hardcode_into_libs=yes
  ;;

irix5* | irix6* | nonstopux*)
  case $host_os in
    nonstopux*) version_type=nonstopux ;;
    *)
	if test yes = "$lt_cv_prog_gnu_ld"; then
		version_type=linux # correct to gnu/linux during the next big refactor
	else
		version_type=irix
	fi ;;
  esac
  need_lib_prefix=no
  need_version=no
  soname_spec='$libname$release$shared_ext$major'
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'
  case $host_os in
  irix5* | nonstopux*)
    libsuff= shlibsuff=
    ;;
  *)
    case $LD in # libtool.m4 will add one of these switches to LD
    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
      libsuff= shlibsuff= libmagic=32-bit;;
    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
      libsuff=32 shlibsuff=N32 libmagic=N32;;
    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
      libsuff=64 shlibsuff=64 libmagic=64-bit;;
    *) libsuff= shlibsuff= libmagic=never-match;;
    esac
    ;;
  esac
  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
  shlibpath_overrides_runpath=no
  sys_lib_search_path_spec="/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff"
  sys_lib_dlsearch_path_spec="/usr/lib$libsuff /lib$libsuff"
  hardcode_into_libs=yes
  ;;

# No shared lib support for Linux oldld, aout, or coff.
linux*oldld* | linux*aout* | linux*coff*)
  dynamic_linker=no
  ;;

linux*android*)
  version_type=none # Android doesn't support versioned libraries.
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext'
  soname_spec='$libname$release$shared_ext'
  finish_cmds=
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=yes

  # This implies no fast_install, which is unacceptable.
  # Some rework will be needed to allow for fast_install
  # before this can be enabled.
  hardcode_into_libs=yes

  dynamic_linker='Android linker'
  # Don't embed -rpath directories since the linker doesn't support them.
  hardcode_libdir_flag_spec='-L$libdir'
  ;;

# This must be glibc/ELF.
linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
  version_type=linux # correct to gnu/linux during the next big refactor
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=no

  # Some binutils ld are patched to set DT_RUNPATH
  if test ${lt_cv_shlibpath_overrides_runpath+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  lt_cv_shlibpath_overrides_runpath=no
    save_LDFLAGS=$LDFLAGS
    save_libdir=$libdir
    eval "libdir=/foo; wl=\"$lt_prog_compiler_wl\"; \
	 LDFLAGS=\"\$LDFLAGS $hardcode_libdir_flag_spec\""
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep "RUNPATH.*$libdir" >/dev/null
then :
  lt_cv_shlibpath_overrides_runpath=yes
fi
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
    LDFLAGS=$save_LDFLAGS
    libdir=$save_libdir

fi

  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath

  # This implies no fast_install, which is unacceptable.
  # Some rework will be needed to allow for fast_install
  # before this can be enabled.
  hardcode_into_libs=yes

  # Add ABI-specific directories to the system library path.
  sys_lib_dlsearch_path_spec="/lib64 /usr/lib64 /lib /usr/lib"

  # Ideally, we could use ldconfig to report *all* directores which are
  # searched for libraries, however this is still not possible.  Aside from not
  # being certain /sbin/ldconfig is available, command
  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,
  # even though it is searched at run-time.  Try to do the best guess by
  # appending ld.so.conf contents (and includes) to the search path.
  if test -f /etc/ld.so.conf; then
    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s 2>/dev/null", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[	 ]*hwcap[	 ]/d;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/"//g;/^$/d' | tr '\n' ' '`
    sys_lib_dlsearch_path_spec="$sys_lib_dlsearch_path_spec $lt_ld_extra"
  fi

  # We used to test for /lib/ld.so.1 and disable shared libraries on
  # powerpc, because MkLinux only supported shared libraries with the
  # GNU dynamic linker.  Since this was broken with cross compilers,
  # most powerpc-linux boxes support dynamic linking these days and
  # people can always --disable-shared, the test was removed, and we
  # assume the GNU/Linux dynamic linker is in use.
  dynamic_linker='GNU/Linux ld.so'
  ;;

netbsd*)
  version_type=sunos
  need_lib_prefix=no
  need_version=no
  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
    dynamic_linker='NetBSD (a.out) ld.so'
  else
    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
    soname_spec='$libname$release$shared_ext$major'
    dynamic_linker='NetBSD ld.elf_so'
  fi
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=yes
  hardcode_into_libs=yes
  ;;

newsos6)
  version_type=linux # correct to gnu/linux during the next big refactor
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=yes
  ;;

*nto* | *qnx*)
  version_type=qnx
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=no
  hardcode_into_libs=yes
  dynamic_linker='ldqnx.so'
  ;;

openbsd* | bitrig*)
  version_type=sunos
  sys_lib_dlsearch_path_spec=/usr/lib
  need_lib_prefix=no
  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
    need_version=no
  else
    need_version=yes
  fi
  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=yes
  ;;

os2*)
  libname_spec='$name'
  version_type=windows
  shrext_cmds=.dll
  need_version=no
  need_lib_prefix=no
  # OS/2 can only load a DLL with a base name of 8 characters or less.
  soname_spec='`test -n "$os2dllname" && libname="$os2dllname";
    v=$($ECHO $release$versuffix | tr -d .-);
    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);
    $ECHO $n$v`$shared_ext'
  library_names_spec='${libname}_dll.$libext'
  dynamic_linker='OS/2 ld.exe'
  shlibpath_var=BEGINLIBPATH
  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
  postinstall_cmds='base_file=`basename \$file`~
    dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; $ECHO \$dlname'\''`~
    dldir=$destdir/`dirname \$dlpath`~
    test -d \$dldir || mkdir -p \$dldir~
    $install_prog $dir/$dlname \$dldir/$dlname~
    chmod a+x \$dldir/$dlname~
    if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
      eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
    fi'
  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; $ECHO \$dlname'\''`~
    dlpath=$dir/\$dldll~
    $RM \$dlpath'
  ;;

osf3* | osf4* | osf5*)
  version_type=osf
  need_lib_prefix=no
  need_version=no
  soname_spec='$libname$release$shared_ext$major'
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  shlibpath_var=LD_LIBRARY_PATH
  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
  ;;

rdos*)
  dynamic_linker=no
  ;;

solaris*)
  version_type=linux # correct to gnu/linux during the next big refactor
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=yes
  hardcode_into_libs=yes
  # ldd complains unless libraries are executable
  postinstall_cmds='chmod +x $lib'
  ;;

sunos4*)
  version_type=sunos
  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=yes
  if test yes = "$with_gnu_ld"; then
    need_lib_prefix=no
  fi
  need_version=yes
  ;;

sysv4 | sysv4.3*)
  version_type=linux # correct to gnu/linux during the next big refactor
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  shlibpath_var=LD_LIBRARY_PATH
  case $host_vendor in
    sni)
      shlibpath_overrides_runpath=no
      need_lib_prefix=no
      runpath_var=LD_RUN_PATH
      ;;
    siemens)
      need_lib_prefix=no
      ;;
    motorola)
      need_lib_prefix=no
      need_version=no
      shlibpath_overrides_runpath=no
      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
      ;;
  esac
  ;;

sysv4*MP*)
  if test -d /usr/nec; then
    version_type=linux # correct to gnu/linux during the next big refactor
    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'
    soname_spec='$libname$shared_ext.$major'
    shlibpath_var=LD_LIBRARY_PATH
  fi
  ;;

sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
  version_type=sco
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=yes
  hardcode_into_libs=yes
  if test yes = "$with_gnu_ld"; then
    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
  else
    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
    case $host_os in
      sco3.2v5*)
        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
	;;
    esac
  fi
  sys_lib_dlsearch_path_spec='/usr/lib'
  ;;

tpf*)
  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.
  version_type=linux # correct to gnu/linux during the next big refactor
  need_lib_prefix=no
  need_version=no
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  shlibpath_var=LD_LIBRARY_PATH
  shlibpath_overrides_runpath=no
  hardcode_into_libs=yes
  ;;

uts4*)
  version_type=linux # correct to gnu/linux during the next big refactor
  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
  soname_spec='$libname$release$shared_ext$major'
  shlibpath_var=LD_LIBRARY_PATH
  ;;

*)
  dynamic_linker=no
  ;;
esac
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
printf "%s\n" "$dynamic_linker" >&6; }
test no = "$dynamic_linker" && can_build_shared=no

variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
if test yes = "$GCC"; then
  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
fi

if test set = "${lt_cv_sys_lib_search_path_spec+set}"; then
  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec
fi

if test set = "${lt_cv_sys_lib_dlsearch_path_spec+set}"; then
  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec
fi

# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...
configure_time_dlsearch_path=$sys_lib_dlsearch_path_spec

# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code
func_munge_path_list sys_lib_dlsearch_path_spec "$LT_SYS_LIBRARY_PATH"

# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool
configure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH

































































































  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs" >&5
printf %s "checking how to hardcode library paths into programs... " >&6; }
hardcode_action=
if test -n "$hardcode_libdir_flag_spec" ||
   test -n "$runpath_var" ||
   test yes = "$hardcode_automatic"; then

  # We can hardcode non-existent directories.
  if test no != "$hardcode_direct" &&
     # If the only mechanism to avoid hardcoding is shlibpath_var, we
     # have to relink, otherwise we might link with an installed library
     # when we should be linking with a yet-to-be-installed one
     ## test no != "$_LT_TAGVAR(hardcode_shlibpath_var, )" &&
     test no != "$hardcode_minus_L"; then
    # Linking always hardcodes the temporary library directory.
    hardcode_action=relink
  else
    # We can link without hardcoding, and we can hardcode nonexisting dirs.
    hardcode_action=immediate
  fi
else
  # We cannot hardcode anything, or else we can only hardcode existing
  # directories.
  hardcode_action=unsupported
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $hardcode_action" >&5
printf "%s\n" "$hardcode_action" >&6; }

if test relink = "$hardcode_action" ||
   test yes = "$inherit_rpath"; then
  # Fast installation is not supported
  enable_fast_install=no
elif test yes = "$shlibpath_overrides_runpath" ||
     test no = "$enable_shared"; then
  # Fast installation is not necessary
  enable_fast_install=needless
fi






  if test yes != "$enable_dlopen"; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen=load_add_on
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen=LoadLibrary
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    ;;

  darwin*)
    # if libdl is installed we need to link against it
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
printf %s "checking for dlopen in -ldl... " >&6; }
if test ${ac_cv_lib_dl_dlopen+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ldl  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char dlopen ();
int
main (void)
{
return dlopen ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_dl_dlopen=yes
else $as_nop
  ac_cv_lib_dl_dlopen=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
printf "%s\n" "$ac_cv_lib_dl_dlopen" >&6; }
if test "x$ac_cv_lib_dl_dlopen" = xyes
then :
  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl
else $as_nop

    lt_cv_dlopen=dyld
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes

fi

    ;;

  tpf*)
    # Don't try to run any link tests for TPF.  We know it's impossible
    # because TPF is a cross-compiler, and we know how we open DSOs.
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=no
    ;;

  *)
    ac_fn_c_check_func "$LINENO" "shl_load" "ac_cv_func_shl_load"
if test "x$ac_cv_func_shl_load" = xyes
then :
  lt_cv_dlopen=shl_load
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for shl_load in -ldld" >&5
printf %s "checking for shl_load in -ldld... " >&6; }
if test ${ac_cv_lib_dld_shl_load+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ldld  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char shl_load ();
int
main (void)
{
return shl_load ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_dld_shl_load=yes
else $as_nop
  ac_cv_lib_dld_shl_load=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load" >&5
printf "%s\n" "$ac_cv_lib_dld_shl_load" >&6; }
if test "x$ac_cv_lib_dld_shl_load" = xyes
then :
  lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld
else $as_nop
  ac_fn_c_check_func "$LINENO" "dlopen" "ac_cv_func_dlopen"
if test "x$ac_cv_func_dlopen" = xyes
then :
  lt_cv_dlopen=dlopen
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
printf %s "checking for dlopen in -ldl... " >&6; }
if test ${ac_cv_lib_dl_dlopen+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ldl  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char dlopen ();
int
main (void)
{
return dlopen ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_dl_dlopen=yes
else $as_nop
  ac_cv_lib_dl_dlopen=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
printf "%s\n" "$ac_cv_lib_dl_dlopen" >&6; }
if test "x$ac_cv_lib_dl_dlopen" = xyes
then :
  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld" >&5
printf %s "checking for dlopen in -lsvld... " >&6; }
if test ${ac_cv_lib_svld_dlopen+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lsvld  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char dlopen ();
int
main (void)
{
return dlopen ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_svld_dlopen=yes
else $as_nop
  ac_cv_lib_svld_dlopen=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen" >&5
printf "%s\n" "$ac_cv_lib_svld_dlopen" >&6; }
if test "x$ac_cv_lib_svld_dlopen" = xyes
then :
  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
printf %s "checking for dld_link in -ldld... " >&6; }
if test ${ac_cv_lib_dld_dld_link+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ldld  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char dld_link ();
int
main (void)
{
return dld_link ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_dld_dld_link=yes
else $as_nop
  ac_cv_lib_dld_dld_link=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
printf "%s\n" "$ac_cv_lib_dld_dld_link" >&6; }
if test "x$ac_cv_lib_dld_dld_link" = xyes
then :
  lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld
fi


fi


fi


fi


fi


fi

    ;;
  esac

  if test no = "$lt_cv_dlopen"; then
    enable_dlopen=no
  else
    enable_dlopen=yes
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS=$CPPFLAGS
    test yes = "$ac_cv_header_dlfcn_h" && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS=$LDFLAGS
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS=$LIBS
    LIBS="$lt_cv_dlopen_libs $LIBS"

    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself" >&5
printf %s "checking whether a program can dlopen itself... " >&6; }
if test ${lt_cv_dlopen_self+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  	  if test yes = "$cross_compiling"; then :
  lt_cv_dlopen_self=cross
else
  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
  lt_status=$lt_dlunknown
  cat > conftest.$ac_ext <<_LT_EOF
#line $LINENO "configure"
#include "confdefs.h"

#if HAVE_DLFCN_H
#include <dlfcn.h>
#endif

#include <stdio.h>

#ifdef RTLD_GLOBAL
#  define LT_DLGLOBAL		RTLD_GLOBAL
#else
#  ifdef DL_GLOBAL
#    define LT_DLGLOBAL		DL_GLOBAL
#  else
#    define LT_DLGLOBAL		0
#  endif
#endif

/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
   find out it does not work in some platform. */
#ifndef LT_DLLAZY_OR_NOW
#  ifdef RTLD_LAZY
#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
#  else
#    ifdef DL_LAZY
#      define LT_DLLAZY_OR_NOW		DL_LAZY
#    else
#      ifdef RTLD_NOW
#        define LT_DLLAZY_OR_NOW	RTLD_NOW
#      else
#        ifdef DL_NOW
#          define LT_DLLAZY_OR_NOW	DL_NOW
#        else
#          define LT_DLLAZY_OR_NOW	0
#        endif
#      endif
#    endif
#  endif
#endif

/* When -fvisibility=hidden is used, assume the code has been annotated
   correspondingly for the symbols needed.  */
#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
int fnord () __attribute__((visibility("default")));
#endif

int fnord () { return 42; }
int main ()
{
  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
  int status = $lt_dlunknown;

  if (self)
    {
      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
      else
        {
	  if (dlsym( self,"_fnord"))  status = $lt_dlneed_uscore;
          else puts (dlerror ());
	}
      /* dlclose (self); */
    }
  else
    puts (dlerror ());

  return status;
}
_LT_EOF
  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
  (eval $ac_link) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && test -s "conftest$ac_exeext" 2>/dev/null; then
    (./conftest; exit; ) >&5 2>/dev/null
    lt_status=$?
    case x$lt_status in
      x$lt_dlno_uscore) lt_cv_dlopen_self=yes ;;
      x$lt_dlneed_uscore) lt_cv_dlopen_self=yes ;;
      x$lt_dlunknown|x*) lt_cv_dlopen_self=no ;;
    esac
  else :
    # compilation failed
    lt_cv_dlopen_self=no
  fi
fi
rm -fr conftest*


fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self" >&5
printf "%s\n" "$lt_cv_dlopen_self" >&6; }

    if test yes = "$lt_cv_dlopen_self"; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself" >&5
printf %s "checking whether a statically linked program can dlopen itself... " >&6; }
if test ${lt_cv_dlopen_self_static+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  	  if test yes = "$cross_compiling"; then :
  lt_cv_dlopen_self_static=cross
else
  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
  lt_status=$lt_dlunknown
  cat > conftest.$ac_ext <<_LT_EOF
#line $LINENO "configure"
#include "confdefs.h"

#if HAVE_DLFCN_H
#include <dlfcn.h>
#endif

#include <stdio.h>

#ifdef RTLD_GLOBAL
#  define LT_DLGLOBAL		RTLD_GLOBAL
#else
#  ifdef DL_GLOBAL
#    define LT_DLGLOBAL		DL_GLOBAL
#  else
#    define LT_DLGLOBAL		0
#  endif
#endif

/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
   find out it does not work in some platform. */
#ifndef LT_DLLAZY_OR_NOW
#  ifdef RTLD_LAZY
#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
#  else
#    ifdef DL_LAZY
#      define LT_DLLAZY_OR_NOW		DL_LAZY
#    else
#      ifdef RTLD_NOW
#        define LT_DLLAZY_OR_NOW	RTLD_NOW
#      else
#        ifdef DL_NOW
#          define LT_DLLAZY_OR_NOW	DL_NOW
#        else
#          define LT_DLLAZY_OR_NOW	0
#        endif
#      endif
#    endif
#  endif
#endif

/* When -fvisibility=hidden is used, assume the code has been annotated
   correspondingly for the symbols needed.  */
#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
int fnord () __attribute__((visibility("default")));
#endif

int fnord () { return 42; }
int main ()
{
  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
  int status = $lt_dlunknown;

  if (self)
    {
      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
      else
        {
	  if (dlsym( self,"_fnord"))  status = $lt_dlneed_uscore;
          else puts (dlerror ());
	}
      /* dlclose (self); */
    }
  else
    puts (dlerror ());

  return status;
}
_LT_EOF
  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
  (eval $ac_link) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && test -s "conftest$ac_exeext" 2>/dev/null; then
    (./conftest; exit; ) >&5 2>/dev/null
    lt_status=$?
    case x$lt_status in
      x$lt_dlno_uscore) lt_cv_dlopen_self_static=yes ;;
      x$lt_dlneed_uscore) lt_cv_dlopen_self_static=yes ;;
      x$lt_dlunknown|x*) lt_cv_dlopen_self_static=no ;;
    esac
  else :
    # compilation failed
    lt_cv_dlopen_self_static=no
  fi
fi
rm -fr conftest*


fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self_static" >&5
printf "%s\n" "$lt_cv_dlopen_self_static" >&6; }
    fi

    CPPFLAGS=$save_CPPFLAGS
    LDFLAGS=$save_LDFLAGS
    LIBS=$save_LIBS
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi

















striplib=
old_striplib=
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible" >&5
printf %s "checking whether stripping libraries is possible... " >&6; }
if test -z "$STRIP"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
else
  if $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
    old_striplib="$STRIP --strip-debug"
    striplib="$STRIP --strip-unneeded"
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
  else
    case $host_os in
    darwin*)
      # FIXME - insert some real tests, host_os isn't really good enough
      striplib="$STRIP -x"
      old_striplib="$STRIP -S"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
      ;;
    freebsd*)
      if $STRIP -V 2>&1 | $GREP "elftoolchain" >/dev/null; then
        old_striplib="$STRIP --strip-debug"
        striplib="$STRIP --strip-unneeded"
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
      else
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
      fi
      ;;
    *)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
      ;;
    esac
  fi
fi












  # Report what library types will actually be built
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries" >&5
printf %s "checking if libtool supports shared libraries... " >&6; }
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $can_build_shared" >&5
printf "%s\n" "$can_build_shared" >&6; }

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries" >&5
printf %s "checking whether to build shared libraries... " >&6; }
  test no = "$can_build_shared" && enable_shared=no

  # On AIX, shared libraries and static libraries use the same namespace, and
  # are all built from PIC.
  case $host_os in
  aix3*)
    test yes = "$enable_shared" && enable_static=no
    if test -n "$RANLIB"; then
      archive_cmds="$archive_cmds~\$RANLIB \$lib"
      postinstall_cmds='$RANLIB $lib'
    fi
    ;;

  aix[4-9]*)
    if test ia64 != "$host_cpu"; then
      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in
      yes,aix,yes) ;;			# shared object as lib.so file only
      yes,svr4,*) ;;			# shared object as lib.so archive member only
      yes,*) enable_static=no ;;	# shared object in lib.a archive as well
      esac
    fi
    ;;
  esac
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_shared" >&5
printf "%s\n" "$enable_shared" >&6; }

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries" >&5
printf %s "checking whether to build static libraries... " >&6; }
  # Make sure either enable_shared or enable_static is yes.
  test yes = "$enable_shared" || enable_static=yes
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_static" >&5
printf "%s\n" "$enable_static" >&6; }




fi
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

CC=$lt_save_CC















        ac_config_commands="$ac_config_commands libtool"




# Only expand once:



ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
set dummy ${ac_tool_prefix}gcc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}gcc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="gcc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

if test -z "$CC"; then
          if test -n "$ac_tool_prefix"; then
    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
set dummy ${ac_tool_prefix}cc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}cc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  fi
fi
if test -z "$CC"; then
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  ac_prog_rejected=no
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    if test "$as_dir$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
       ac_prog_rejected=yes
       continue
     fi
    ac_cv_prog_CC="cc"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

if test $ac_prog_rejected = yes; then
  # We found a bogon in the path, so make sure we never use it.
  set dummy $ac_cv_prog_CC
  shift
  if test $# != 0; then
    # We chose a different compiler from the bogus one.
    # However, it has the same basename, so the bogon will be chosen
    # first if we set CC to just the basename; use the full file name.
    shift
    ac_cv_prog_CC="$as_dir$ac_word${1+' '}$@"
  fi
fi
fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  for ac_prog in cl.exe
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cl.exe
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$ac_ct_CC" && break
done

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
fi

fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}clang", so it can be a program name with args.
set dummy ${ac_tool_prefix}clang; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}clang"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
printf "%s\n" "$CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "clang", so it can be a program name with args.
set dummy clang; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_CC+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="clang"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
printf "%s\n" "$ac_ct_CC" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

fi


test -z "$CC" && { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "no acceptable C compiler found in \$PATH
See \`config.log' for more details" "$LINENO" 5; }

# Provide some information about the compiler.
printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion -version; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
printf "%s\n" "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether the compiler supports GNU C" >&5
printf %s "checking whether the compiler supports GNU C... " >&6; }
if test ${ac_cv_c_compiler_gnu+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_compiler_gnu=yes
else $as_nop
  ac_compiler_gnu=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
printf "%s\n" "$ac_cv_c_compiler_gnu" >&6; }
ac_compiler_gnu=$ac_cv_c_compiler_gnu

if test $ac_compiler_gnu = yes; then
  GCC=yes
else
  GCC=
fi
ac_test_CFLAGS=${CFLAGS+y}
ac_save_CFLAGS=$CFLAGS
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
printf %s "checking whether $CC accepts -g... " >&6; }
if test ${ac_cv_prog_cc_g+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_save_c_werror_flag=$ac_c_werror_flag
   ac_c_werror_flag=yes
   ac_cv_prog_cc_g=no
   CFLAGS="-g"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_g=yes
else $as_nop
  CFLAGS=""
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

else $as_nop
  ac_c_werror_flag=$ac_save_c_werror_flag
	 CFLAGS="-g"
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_g=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
   ac_c_werror_flag=$ac_save_c_werror_flag
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
printf "%s\n" "$ac_cv_prog_cc_g" >&6; }
if test $ac_test_CFLAGS; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
ac_prog_cc_stdc=no
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C11 features" >&5
printf %s "checking for $CC option to enable C11 features... " >&6; }
if test ${ac_cv_prog_cc_c11+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_cv_prog_cc_c11=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c11_program
_ACEOF
for ac_arg in '' -std=gnu11
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c11=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c11" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC
fi

if test "x$ac_cv_prog_cc_c11" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else $as_nop
  if test "x$ac_cv_prog_cc_c11" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c11" >&5
printf "%s\n" "$ac_cv_prog_cc_c11" >&6; }
     CC="$CC $ac_cv_prog_cc_c11"
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c11
  ac_prog_cc_stdc=c11
fi
fi
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C99 features" >&5
printf %s "checking for $CC option to enable C99 features... " >&6; }
if test ${ac_cv_prog_cc_c99+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_cv_prog_cc_c99=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c99_program
_ACEOF
for ac_arg in '' -std=gnu99 -std=c99 -c99 -qlanglvl=extc1x -qlanglvl=extc99 -AC99 -D_STDC_C99=
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c99=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c99" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC
fi

if test "x$ac_cv_prog_cc_c99" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else $as_nop
  if test "x$ac_cv_prog_cc_c99" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99" >&5
printf "%s\n" "$ac_cv_prog_cc_c99" >&6; }
     CC="$CC $ac_cv_prog_cc_c99"
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99
  ac_prog_cc_stdc=c99
fi
fi
if test x$ac_prog_cc_stdc = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C89 features" >&5
printf %s "checking for $CC option to enable C89 features... " >&6; }
if test ${ac_cv_prog_cc_c89+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_cv_prog_cc_c89=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$ac_c_conftest_c89_program
_ACEOF
for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std -Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"
then :
  ac_cv_prog_cc_c89=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam
  test "x$ac_cv_prog_cc_c89" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC
fi

if test "x$ac_cv_prog_cc_c89" = xno
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
printf "%s\n" "unsupported" >&6; }
else $as_nop
  if test "x$ac_cv_prog_cc_c89" = x
then :
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
printf "%s\n" "none needed" >&6; }
else $as_nop
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
printf "%s\n" "$ac_cv_prog_cc_c89" >&6; }
     CC="$CC $ac_cv_prog_cc_c89"
fi
  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89
  ac_prog_cc_stdc=c89
fi
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


  ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC understands -c and -o together" >&5
printf %s "checking whether $CC understands -c and -o together... " >&6; }
if test ${am_cv_prog_cc_c_o+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if { echo "$as_me:$LINENO: $CC -c conftest.$ac_ext -o conftest2.$ac_objext" >&5
   ($CC -c conftest.$ac_ext -o conftest2.$ac_objext) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_cc_c_o" >&5
printf "%s\n" "$am_cv_prog_cc_c_o" >&6; }
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


depcc="$CC"   am_compiler_list=

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
printf %s "checking dependency style of $depcc... " >&6; }
if test ${am_cv_CC_dependencies_compiler_type+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_CC_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
  fi
  am__universal=false
  case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_CC_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_CC_dependencies_compiler_type=none
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type" >&5
printf "%s\n" "$am_cv_CC_dependencies_compiler_type" >&6; }
CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type

 if
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
  am__fastdepCC_TRUE=
  am__fastdepCC_FALSE='#'
else
  am__fastdepCC_TRUE='#'
  am__fastdepCC_FALSE=
fi


{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
printf %s "checking whether ln -s works... " >&6; }
LN_S=$as_ln_s
if test "$LN_S" = "ln -s"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no, using $LN_S" >&5
printf "%s\n" "no, using $LN_S" >&6; }
fi








if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}pkg-config", so it can be a program name with args.
set dummy ${ac_tool_prefix}pkg-config; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PKG_CONFIG+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PKG_CONFIG in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PKG_CONFIG="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PKG_CONFIG=$ac_cv_path_PKG_CONFIG
if test -n "$PKG_CONFIG"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PKG_CONFIG" >&5
printf "%s\n" "$PKG_CONFIG" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_path_PKG_CONFIG"; then
  ac_pt_PKG_CONFIG=$PKG_CONFIG
  # Extract the first word of "pkg-config", so it can be a program name with args.
set dummy pkg-config; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_ac_pt_PKG_CONFIG+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $ac_pt_PKG_CONFIG in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_ac_pt_PKG_CONFIG="$ac_pt_PKG_CONFIG" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_ac_pt_PKG_CONFIG="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
ac_pt_PKG_CONFIG=$ac_cv_path_ac_pt_PKG_CONFIG
if test -n "$ac_pt_PKG_CONFIG"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_pt_PKG_CONFIG" >&5
printf "%s\n" "$ac_pt_PKG_CONFIG" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_pt_PKG_CONFIG" = x; then
    PKG_CONFIG=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    PKG_CONFIG=$ac_pt_PKG_CONFIG
  fi
else
  PKG_CONFIG="$ac_cv_path_PKG_CONFIG"
fi

fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=0.9.0
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking pkg-config is at least version $_pkg_min_version" >&5
printf %s "checking pkg-config is at least version $_pkg_min_version... " >&6; }
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
	else
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		PKG_CONFIG=""
	fi
fi
# By default we simply use the C compiler to build assembly code.

test "${CCAS+set}" = set || CCAS=$CC
test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS



depcc="$CCAS"   am_compiler_list=

{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
printf %s "checking dependency style of $depcc... " >&6; }
if test ${am_cv_CCAS_dependencies_compiler_type+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_CCAS_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
  fi
  am__universal=false


  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_CCAS_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_CCAS_dependencies_compiler_type=none
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_CCAS_dependencies_compiler_type" >&5
printf "%s\n" "$am_cv_CCAS_dependencies_compiler_type" >&6; }
CCASDEPMODE=depmode=$am_cv_CCAS_dependencies_compiler_type

 if
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3; then
  am__fastdepCCAS_TRUE=
  am__fastdepCCAS_FALSE='#'
else
  am__fastdepCCAS_TRUE='#'
  am__fastdepCCAS_FALSE=
fi






	# allow to override gcov location

# Check whether --with-gcov was given.
if test ${with_gcov+y}
then :
  withval=$with_gcov; _AX_CODE_COVERAGE_GCOV_PROG_WITH=$with_gcov
else $as_nop
  _AX_CODE_COVERAGE_GCOV_PROG_WITH=gcov
fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to build with code coverage support" >&5
printf %s "checking whether to build with code coverage support... " >&6; }
	# Check whether --enable-code-coverage was given.
if test ${enable_code_coverage+y}
then :
  enableval=$enable_code_coverage;
else $as_nop
  enable_code_coverage=no
fi


	 if test x$enable_code_coverage = xyes; then
  CODE_COVERAGE_ENABLED_TRUE=
  CODE_COVERAGE_ENABLED_FALSE='#'
else
  CODE_COVERAGE_ENABLED_TRUE='#'
  CODE_COVERAGE_ENABLED_FALSE=
fi

	CODE_COVERAGE_ENABLED=$enable_code_coverage

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_code_coverage" >&5
printf "%s\n" "$enable_code_coverage" >&6; }

	if  test "$enable_code_coverage" = "yes"
then :

		# check for gcov
		if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}$_AX_CODE_COVERAGE_GCOV_PROG_WITH", so it can be a program name with args.
set dummy ${ac_tool_prefix}$_AX_CODE_COVERAGE_GCOV_PROG_WITH; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_GCOV+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$GCOV"; then
  ac_cv_prog_GCOV="$GCOV" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_GCOV="${ac_tool_prefix}$_AX_CODE_COVERAGE_GCOV_PROG_WITH"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
GCOV=$ac_cv_prog_GCOV
if test -n "$GCOV"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GCOV" >&5
printf "%s\n" "$GCOV" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_GCOV"; then
  ac_ct_GCOV=$GCOV
  # Extract the first word of "$_AX_CODE_COVERAGE_GCOV_PROG_WITH", so it can be a program name with args.
set dummy $_AX_CODE_COVERAGE_GCOV_PROG_WITH; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_ac_ct_GCOV+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$ac_ct_GCOV"; then
  ac_cv_prog_ac_ct_GCOV="$ac_ct_GCOV" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_GCOV="$_AX_CODE_COVERAGE_GCOV_PROG_WITH"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_GCOV=$ac_cv_prog_ac_ct_GCOV
if test -n "$ac_ct_GCOV"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_ct_GCOV" >&5
printf "%s\n" "$ac_ct_GCOV" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  if test "x$ac_ct_GCOV" = x; then
    GCOV=":"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
printf "%s\n" "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    GCOV=$ac_ct_GCOV
  fi
else
  GCOV="$ac_cv_prog_GCOV"
fi

		if test "X$GCOV" = "X:"
then :
  as_fn_error $? "gcov is needed to do coverage" "$LINENO" 5
fi


				if  test "$GCC" = "no"
then :

			as_fn_error $? "not compiling with gcc, which is required for gcov code coverage" "$LINENO" 5

fi

		# Extract the first word of "lcov", so it can be a program name with args.
set dummy lcov; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_LCOV+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$LCOV"; then
  ac_cv_prog_LCOV="$LCOV" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_LCOV="lcov"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
LCOV=$ac_cv_prog_LCOV
if test -n "$LCOV"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LCOV" >&5
printf "%s\n" "$LCOV" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


		# Extract the first word of "genhtml", so it can be a program name with args.
set dummy genhtml; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_GENHTML+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$GENHTML"; then
  ac_cv_prog_GENHTML="$GENHTML" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_GENHTML="genhtml"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
GENHTML=$ac_cv_prog_GENHTML
if test -n "$GENHTML"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GENHTML" >&5
printf "%s\n" "$GENHTML" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



		if  test -z "$LCOV"
then :

			as_fn_error $? "To enable code coverage reporting you must have lcov installed" "$LINENO" 5

fi

		if  test -z "$GENHTML"
then :

			as_fn_error $? "Could not find genhtml from the lcov package" "$LINENO" 5

fi

						CODE_COVERAGE_CPPFLAGS=""
		CODE_COVERAGE_CFLAGS="-O0 -g -fprofile-arcs -ftest-coverage"
		CODE_COVERAGE_CXXFLAGS="-O0 -g -fprofile-arcs -ftest-coverage"
		CODE_COVERAGE_LIBS="-lgcov"
		CODE_COVERAGE_LDFLAGS="$CODE_COVERAGE_LIBS"







		CODE_COVERAGE_RULES_CHECK='
	-$(A''M_V_at)$(MAKE) $(AM_MAKEFLAGS) -k check
	$(A''M_V_at)$(MAKE) $(AM_MAKEFLAGS) code-coverage-capture
'
		CODE_COVERAGE_RULES_CAPTURE='
	$(code_coverage_v_lcov_cap)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --capture --output-file "$(CODE_COVERAGE_OUTPUT_FILE).tmp" --test-name "$(call code_coverage_sanitize,$(PACKAGE_NAME)-$(PACKAGE_VERSION))" --no-checksum --compat-libtool $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_OPTIONS)
	$(code_coverage_v_lcov_ign)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --remove "$(CODE_COVERAGE_OUTPUT_FILE).tmp" $(CODE_COVERAGE_IGNORE_PATTERN) --output-file "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_RMOPTS)
	-@rm -f $(CODE_COVERAGE_OUTPUT_FILE).tmp
	$(code_coverage_v_genhtml)LANG=C $(GENHTML) $(code_coverage_quiet) $(addprefix --prefix ,$(CODE_COVERAGE_DIRECTORY)) --output-directory "$(CODE_COVERAGE_OUTPUT_DIRECTORY)" --title "$(PACKAGE_NAME)-$(PACKAGE_VERSION) Code Coverage" --legend --show-details "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_GENHTML_OPTIONS)
	@echo "file://$(abs_builddir)/$(CODE_COVERAGE_OUTPUT_DIRECTORY)/index.html"
'
		CODE_COVERAGE_RULES_CLEAN='
clean: code-coverage-clean
distclean: code-coverage-clean
code-coverage-clean:
	-$(LCOV) --directory $(top_builddir) -z
	-rm -rf $(CODE_COVERAGE_OUTPUT_FILE) $(CODE_COVERAGE_OUTPUT_FILE).tmp $(CODE_COVERAGE_OUTPUT_DIRECTORY)
	-find . \( -name "*.gcda" -o -name "*.gcno" -o -name "*.gcov" \) -delete
'

else $as_nop

		CODE_COVERAGE_RULES_CHECK='
	@echo "Need to reconfigure with --enable-code-coverage"
'
		CODE_COVERAGE_RULES_CAPTURE="$CODE_COVERAGE_RULES_CHECK"
		CODE_COVERAGE_RULES_CLEAN=''

fi

CODE_COVERAGE_RULES='
# Code coverage
#
# Optional:
#  - CODE_COVERAGE_DIRECTORY: Top-level directory for code coverage reporting.
#    Multiple directories may be specified, separated by whitespace.
#    (Default: $(top_builddir))
#  - CODE_COVERAGE_OUTPUT_FILE: Filename and path for the .info file generated
#    by lcov for code coverage. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info)
#  - CODE_COVERAGE_OUTPUT_DIRECTORY: Directory for generated code coverage
#    reports to be created. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage)
#  - CODE_COVERAGE_BRANCH_COVERAGE: Set to 1 to enforce branch coverage,
#    set to 0 to disable it and leave empty to stay with the default.
#    (Default: empty)
#  - CODE_COVERAGE_LCOV_SHOPTS_DEFAULT: Extra options shared between both lcov
#    instances. (Default: based on $CODE_COVERAGE_BRANCH_COVERAGE)
#  - CODE_COVERAGE_LCOV_SHOPTS: Extra options to shared between both lcov
#    instances. (Default: $CODE_COVERAGE_LCOV_SHOPTS_DEFAULT)
#  - CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH: --gcov-tool pathtogcov
#  - CODE_COVERAGE_LCOV_OPTIONS_DEFAULT: Extra options to pass to the
#    collecting lcov instance. (Default: $CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH)
#  - CODE_COVERAGE_LCOV_OPTIONS: Extra options to pass to the collecting lcov
#    instance. (Default: $CODE_COVERAGE_LCOV_OPTIONS_DEFAULT)
#  - CODE_COVERAGE_LCOV_RMOPTS_DEFAULT: Extra options to pass to the filtering
#    lcov instance. (Default: empty)
#  - CODE_COVERAGE_LCOV_RMOPTS: Extra options to pass to the filtering lcov
#    instance. (Default: $CODE_COVERAGE_LCOV_RMOPTS_DEFAULT)
#  - CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT: Extra options to pass to the
#    genhtml instance. (Default: based on $CODE_COVERAGE_BRANCH_COVERAGE)
#  - CODE_COVERAGE_GENHTML_OPTIONS: Extra options to pass to the genhtml
#    instance. (Default: $CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT)
#  - CODE_COVERAGE_IGNORE_PATTERN: Extra glob pattern of files to ignore
#
# The generated report will be titled using the $(PACKAGE_NAME) and
# $(PACKAGE_VERSION). In order to add the current git hash to the title,
# use the git-version-gen script, available online.

# Optional variables
CODE_COVERAGE_DIRECTORY ?= $(top_builddir)
CODE_COVERAGE_OUTPUT_FILE ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info
CODE_COVERAGE_OUTPUT_DIRECTORY ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage
CODE_COVERAGE_BRANCH_COVERAGE ?=
CODE_COVERAGE_LCOV_SHOPTS_DEFAULT ?= $(if $(CODE_COVERAGE_BRANCH_COVERAGE),\
--rc lcov_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
CODE_COVERAGE_LCOV_SHOPTS ?= $(CODE_COVERAGE_LCOV_SHOPTS_DEFAULT)
CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH ?= --gcov-tool "$(GCOV)"
CODE_COVERAGE_LCOV_OPTIONS_DEFAULT ?= $(CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH)
CODE_COVERAGE_LCOV_OPTIONS ?= $(CODE_COVERAGE_LCOV_OPTIONS_DEFAULT)
CODE_COVERAGE_LCOV_RMOPTS_DEFAULT ?=
CODE_COVERAGE_LCOV_RMOPTS ?= $(CODE_COVERAGE_LCOV_RMOPTS_DEFAULT)
CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT ?=\
$(if $(CODE_COVERAGE_BRANCH_COVERAGE),\
--rc genhtml_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
CODE_COVERAGE_GENHTML_OPTIONS ?= $(CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT)

# Add any folders you want to ignore here
# Ignore tmp and tests themselves
CODE_COVERAGE_IGNORE_PATTERN ?= "/tmp/*" "*/tests/*"
CODE_COVERAGE_IGNORE_PATTERN += "*/module/zstd/lib/*"
CODE_COVERAGE_IGNORE_PATTERN += "*/module/zfs/lz4.c"

GITIGNOREFILES ?=
GITIGNOREFILES += $(CODE_COVERAGE_OUTPUT_FILE) $(CODE_COVERAGE_OUTPUT_DIRECTORY)

code_coverage_v_lcov_cap = $(code_coverage_v_lcov_cap_$(V))
code_coverage_v_lcov_cap_ = $(code_coverage_v_lcov_cap_$(AM_DEFAULT_VERBOSITY))
code_coverage_v_lcov_cap_0 = @echo "  LCOV   --capture"\
 $(CODE_COVERAGE_OUTPUT_FILE);
code_coverage_v_lcov_ign = $(code_coverage_v_lcov_ign_$(V))
code_coverage_v_lcov_ign_ = $(code_coverage_v_lcov_ign_$(AM_DEFAULT_VERBOSITY))
code_coverage_v_lcov_ign_0 = @echo "  LCOV   --remove /tmp/*"\
 $(CODE_COVERAGE_IGNORE_PATTERN);
code_coverage_v_genhtml = $(code_coverage_v_genhtml_$(V))
code_coverage_v_genhtml_ = $(code_coverage_v_genhtml_$(AM_DEFAULT_VERBOSITY))
code_coverage_v_genhtml_0 = @echo "  GEN   " $(CODE_COVERAGE_OUTPUT_DIRECTORY);
code_coverage_quiet = $(code_coverage_quiet_$(V))
code_coverage_quiet_ = $(code_coverage_quiet_$(AM_DEFAULT_VERBOSITY))
code_coverage_quiet_0 = --quiet

# sanitizes the test-name: replaces with underscores: dashes and dots
code_coverage_sanitize = $(subst -,_,$(subst .,_,$(1)))

# Use recursive makes in order to ignore errors during check
check-code-coverage:'"$CODE_COVERAGE_RULES_CHECK"'

# Capture code coverage data
code-coverage-capture: code-coverage-capture-hook'"$CODE_COVERAGE_RULES_CAPTURE"'

# Hook rule executed before code-coverage-capture, overridable by the user
code-coverage-capture-hook:

'"$CODE_COVERAGE_RULES_CLEAN"'

A''M_DISTCHECK_CONFIGURE_FLAGS ?=
A''M_DISTCHECK_CONFIGURE_FLAGS += --disable-code-coverage

.PHONY: check-code-coverage code-coverage-capture code-coverage-capture-hook code-coverage-clean
'




# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AMTAR='$${TAR-tar}'


# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar  pax cpio none'



  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to create a pax tar archive" >&5
printf %s "checking how to create a pax tar archive... " >&6; }

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_pax-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        { echo "$as_me:$LINENO: $_am_tar --version" >&5
   ($_am_tar --version) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } && break
      done
      am__tar="$_am_tar --format=posix -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=posix -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x pax -w "$$tardir"'
      am__tar_='pax -L -x pax -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H pax -L'
      am__tar_='find "$tardir" -print | cpio -o -H pax -L'
      am__untar='cpio -i -H pax -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_pax}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    { echo "$as_me:$LINENO: tardir=conftest.dir && eval $am__tar_ >conftest.tar" >&5
   (tardir=conftest.dir && eval $am__tar_ >conftest.tar) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
    rm -rf conftest.dir
    if test -s conftest.tar; then
      { echo "$as_me:$LINENO: $am__untar <conftest.tar" >&5
   ($am__untar <conftest.tar) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
      { echo "$as_me:$LINENO: cat conftest.dir/file" >&5
   (cat conftest.dir/file) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  if test ${am_cv_prog_tar_pax+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_prog_tar_pax=$_am_tool
fi

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_prog_tar_pax" >&5
printf "%s\n" "$am_cv_prog_tar_pax" >&6; }






	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking zfs author" >&5
printf %s "checking zfs author... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ZFS_META_AUTHOR" >&5
printf "%s\n" "$ZFS_META_AUTHOR" >&6; }

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking zfs license" >&5
printf %s "checking zfs license... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ZFS_META_LICENSE" >&5
printf "%s\n" "$ZFS_META_LICENSE" >&6; }


  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether NLS is requested" >&5
printf %s "checking whether NLS is requested... " >&6; }
    # Check whether --enable-nls was given.
if test ${enable_nls+y}
then :
  enableval=$enable_nls; USE_NLS=$enableval
else $as_nop
  USE_NLS=yes
fi

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $USE_NLS" >&5
printf "%s\n" "$USE_NLS" >&6; }




      GETTEXT_MACRO_VERSION=0.20




# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

# Find out how to test for executable files. Don't use a zero-byte file,
# as systems may use methods other than mode bits to determine executability.
cat >conf$$.file <<_ASEOF
#! /bin/sh
exit 0
_ASEOF
chmod +x conf$$.file
if test -x conf$$.file >/dev/null 2>&1; then
  ac_executable_p="test -x"
else
  ac_executable_p="test -f"
fi
rm -f conf$$.file

# Extract the first word of "msgfmt", so it can be a program name with args.
set dummy msgfmt; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_MSGFMT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case "$MSGFMT" in
  [\\/]* | ?:[\\/]*)
    ac_cv_path_MSGFMT="$MSGFMT" # Let the user override the test with a path.
    ;;
  *)
    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH; do
      IFS="$ac_save_IFS"
      test -z "$ac_dir" && ac_dir=.
      for ac_exec_ext in '' $ac_executable_extensions; do
        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
          echo "$as_me: trying $ac_dir/$ac_word..." >&5
          if $ac_dir/$ac_word --statistics /dev/null >&5 2>&1 &&
     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
            ac_cv_path_MSGFMT="$ac_dir/$ac_word$ac_exec_ext"
            break 2
          fi
        fi
      done
    done
    IFS="$ac_save_IFS"
  test -z "$ac_cv_path_MSGFMT" && ac_cv_path_MSGFMT=":"
    ;;
esac
fi
MSGFMT="$ac_cv_path_MSGFMT"
if test "$MSGFMT" != ":"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $MSGFMT" >&5
printf "%s\n" "$MSGFMT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

  # Extract the first word of "gmsgfmt", so it can be a program name with args.
set dummy gmsgfmt; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_GMSGFMT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $GMSGFMT in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GMSGFMT="$GMSGFMT" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_GMSGFMT="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_GMSGFMT" && ac_cv_path_GMSGFMT="$MSGFMT"
  ;;
esac
fi
GMSGFMT=$ac_cv_path_GMSGFMT
if test -n "$GMSGFMT"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $GMSGFMT" >&5
printf "%s\n" "$GMSGFMT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



    case `$GMSGFMT --version | sed 1q | sed -e 's,^[^0-9]*,,'` in
    '' | 0.[0-9] | 0.[0-9].* | 0.1[0-4] | 0.1[0-4].*) GMSGFMT_015=: ;;
    *) GMSGFMT_015=$GMSGFMT ;;
  esac



# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

# Find out how to test for executable files. Don't use a zero-byte file,
# as systems may use methods other than mode bits to determine executability.
cat >conf$$.file <<_ASEOF
#! /bin/sh
exit 0
_ASEOF
chmod +x conf$$.file
if test -x conf$$.file >/dev/null 2>&1; then
  ac_executable_p="test -x"
else
  ac_executable_p="test -f"
fi
rm -f conf$$.file

# Extract the first word of "xgettext", so it can be a program name with args.
set dummy xgettext; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_XGETTEXT+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case "$XGETTEXT" in
  [\\/]* | ?:[\\/]*)
    ac_cv_path_XGETTEXT="$XGETTEXT" # Let the user override the test with a path.
    ;;
  *)
    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH; do
      IFS="$ac_save_IFS"
      test -z "$ac_dir" && ac_dir=.
      for ac_exec_ext in '' $ac_executable_extensions; do
        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
          echo "$as_me: trying $ac_dir/$ac_word..." >&5
          if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >&5 2>&1 &&
     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
            ac_cv_path_XGETTEXT="$ac_dir/$ac_word$ac_exec_ext"
            break 2
          fi
        fi
      done
    done
    IFS="$ac_save_IFS"
  test -z "$ac_cv_path_XGETTEXT" && ac_cv_path_XGETTEXT=":"
    ;;
esac
fi
XGETTEXT="$ac_cv_path_XGETTEXT"
if test "$XGETTEXT" != ":"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $XGETTEXT" >&5
printf "%s\n" "$XGETTEXT" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi

    rm -f messages.po

    case `$XGETTEXT --version | sed 1q | sed -e 's,^[^0-9]*,,'` in
    '' | 0.[0-9] | 0.[0-9].* | 0.1[0-4] | 0.1[0-4].*) XGETTEXT_015=: ;;
    *) XGETTEXT_015=$XGETTEXT ;;
  esac



# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

# Find out how to test for executable files. Don't use a zero-byte file,
# as systems may use methods other than mode bits to determine executability.
cat >conf$$.file <<_ASEOF
#! /bin/sh
exit 0
_ASEOF
chmod +x conf$$.file
if test -x conf$$.file >/dev/null 2>&1; then
  ac_executable_p="test -x"
else
  ac_executable_p="test -f"
fi
rm -f conf$$.file

# Extract the first word of "msgmerge", so it can be a program name with args.
set dummy msgmerge; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_MSGMERGE+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case "$MSGMERGE" in
  [\\/]* | ?:[\\/]*)
    ac_cv_path_MSGMERGE="$MSGMERGE" # Let the user override the test with a path.
    ;;
  *)
    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH; do
      IFS="$ac_save_IFS"
      test -z "$ac_dir" && ac_dir=.
      for ac_exec_ext in '' $ac_executable_extensions; do
        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
          echo "$as_me: trying $ac_dir/$ac_word..." >&5
          if $ac_dir/$ac_word --update -q /dev/null /dev/null >&5 2>&1; then
            ac_cv_path_MSGMERGE="$ac_dir/$ac_word$ac_exec_ext"
            break 2
          fi
        fi
      done
    done
    IFS="$ac_save_IFS"
  test -z "$ac_cv_path_MSGMERGE" && ac_cv_path_MSGMERGE=":"
    ;;
esac
fi
MSGMERGE="$ac_cv_path_MSGMERGE"
if test "$MSGMERGE" != ":"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $MSGMERGE" >&5
printf "%s\n" "$MSGMERGE" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


    if LC_ALL=C $MSGMERGE --help | grep ' --for-msgfmt ' >/dev/null; then
    MSGMERGE_FOR_MSGFMT_OPTION='--for-msgfmt'
  else
        if LC_ALL=C $MSGMERGE --help | grep ' --no-fuzzy-matching ' >/dev/null; then
      MSGMERGE_FOR_MSGFMT_OPTION='--no-fuzzy-matching --no-location --quiet'
    else
                        MSGMERGE_FOR_MSGFMT_OPTION='--no-location --quiet'
    fi
  fi


    test -n "${XGETTEXT_EXTRA_OPTIONS+set}" || XGETTEXT_EXTRA_OPTIONS=


  ac_config_commands="$ac_config_commands po-directories"



      if test "X$prefix" = "XNONE"; then
    acl_final_prefix="$ac_default_prefix"
  else
    acl_final_prefix="$prefix"
  fi
  if test "X$exec_prefix" = "XNONE"; then
    acl_final_exec_prefix='${prefix}'
  else
    acl_final_exec_prefix="$exec_prefix"
  fi
  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  eval acl_final_exec_prefix=\"$acl_final_exec_prefix\"
  prefix="$acl_save_prefix"



# Check whether --with-gnu-ld was given.
if test ${with_gnu_ld+y}
then :
  withval=$with_gnu_ld; test "$withval" = no || with_gnu_ld=yes
else $as_nop
  with_gnu_ld=no
fi

# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

if test -n "$LD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for ld" >&5
printf %s "checking for ld... " >&6; }
elif test "$GCC" = yes; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
printf %s "checking for ld used by $CC... " >&6; }
elif test "$with_gnu_ld" = yes; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU ld" >&5
printf %s "checking for GNU ld... " >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for non-GNU ld" >&5
printf %s "checking for non-GNU ld... " >&6; }
fi
if test -n "$LD"; then
  # Let the user override the test with a path.
  :
else
  if test ${acl_cv_path_LD+y}
then :
  printf %s "(cached) " >&6
else $as_nop

    acl_cv_path_LD= # Final result of this test
    ac_prog=ld # Program to search in $PATH
    if test "$GCC" = yes; then
      # Check if gcc -print-prog-name=ld gives a path.
      case $host in
        *-*-mingw*)
          # gcc leaves a trailing carriage return which upsets mingw
          acl_output=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
        *)
          acl_output=`($CC -print-prog-name=ld) 2>&5` ;;
      esac
      case $acl_output in
        # Accept absolute paths.
        [\\/]* | ?:[\\/]*)
          re_direlt='/[^/][^/]*/\.\./'
          # Canonicalize the pathname of ld
          acl_output=`echo "$acl_output" | sed 's%\\\\%/%g'`
          while echo "$acl_output" | grep "$re_direlt" > /dev/null 2>&1; do
            acl_output=`echo $acl_output | sed "s%$re_direlt%/%"`
          done
          # Got the pathname. No search in PATH is needed.
          acl_cv_path_LD="$acl_output"
          ac_prog=
          ;;
        "")
          # If it fails, then pretend we aren't using GCC.
          ;;
        *)
          # If it is relative, then search for the first ld in PATH.
          with_gnu_ld=unknown
          ;;
      esac
    fi
    if test -n "$ac_prog"; then
      # Search for $ac_prog in $PATH.
      acl_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
      for ac_dir in $PATH; do
        IFS="$acl_save_ifs"
        test -z "$ac_dir" && ac_dir=.
        if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
          acl_cv_path_LD="$ac_dir/$ac_prog"
          # Check to see if the program is GNU ld.  I'd rather use --version,
          # but apparently some variants of GNU ld only accept -v.
          # Break only if it was the GNU/non-GNU ld that we prefer.
          case `"$acl_cv_path_LD" -v 2>&1 </dev/null` in
            *GNU* | *'with BFD'*)
              test "$with_gnu_ld" != no && break
              ;;
            *)
              test "$with_gnu_ld" != yes && break
              ;;
          esac
        fi
      done
      IFS="$acl_save_ifs"
    fi
    case $host in
      *-*-aix*)
        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined __powerpc64__ || defined _ARCH_PPC64
                int ok;
               #else
                error fail
               #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  # The compiler produces 64-bit code. Add option '-b64' so that the
           # linker groks 64-bit object files.
           case "$acl_cv_path_LD " in
             *" -b64 "*) ;;
             *) acl_cv_path_LD="$acl_cv_path_LD -b64" ;;
           esac

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
        ;;
      sparc64-*-netbsd*)
        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined __sparcv9 || defined __arch64__
                int ok;
               #else
                error fail
               #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

else $as_nop
  # The compiler produces 32-bit code. Add option '-m elf32_sparc'
           # so that the linker groks 32-bit object files.
           case "$acl_cv_path_LD " in
             *" -m elf32_sparc "*) ;;
             *) acl_cv_path_LD="$acl_cv_path_LD -m elf32_sparc" ;;
           esac

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
        ;;
    esac

fi

  LD="$acl_cv_path_LD"
fi
if test -n "$LD"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
printf "%s\n" "$LD" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
  as_fn_error $? "no acceptable ld found in \$PATH" "$LINENO" 5
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
printf %s "checking if the linker ($LD) is GNU ld... " >&6; }
if test ${acl_cv_prog_gnu_ld+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  # I'd rather use --version here, but apparently some GNU lds only accept -v.
case `$LD -v 2>&1 </dev/null` in
*GNU* | *'with BFD'*)
  acl_cv_prog_gnu_ld=yes
  ;;
*)
  acl_cv_prog_gnu_ld=no
  ;;
esac
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $acl_cv_prog_gnu_ld" >&5
printf "%s\n" "$acl_cv_prog_gnu_ld" >&6; }
with_gnu_ld=$acl_cv_prog_gnu_ld





                                                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for shared library run path origin" >&5
printf %s "checking for shared library run path origin... " >&6; }
if test ${acl_cv_rpath+y}
then :
  printf %s "(cached) " >&6
else $as_nop

    CC="$CC" GCC="$GCC" LDFLAGS="$LDFLAGS" LD="$LD" with_gnu_ld="$with_gnu_ld" \
    ${CONFIG_SHELL-/bin/sh} "$ac_aux_dir/config.rpath" "$host" > conftest.sh
    . ./conftest.sh
    rm -f ./conftest.sh
    acl_cv_rpath=done

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $acl_cv_rpath" >&5
printf "%s\n" "$acl_cv_rpath" >&6; }
  wl="$acl_cv_wl"
  acl_libext="$acl_cv_libext"
  acl_shlibext="$acl_cv_shlibext"
  acl_libname_spec="$acl_cv_libname_spec"
  acl_library_names_spec="$acl_cv_library_names_spec"
  acl_hardcode_libdir_flag_spec="$acl_cv_hardcode_libdir_flag_spec"
  acl_hardcode_libdir_separator="$acl_cv_hardcode_libdir_separator"
  acl_hardcode_direct="$acl_cv_hardcode_direct"
  acl_hardcode_minus_L="$acl_cv_hardcode_minus_L"
    # Check whether --enable-rpath was given.
if test ${enable_rpath+y}
then :
  enableval=$enable_rpath; :
else $as_nop
  enable_rpath=yes
fi




  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking 32-bit host C ABI" >&5
printf %s "checking 32-bit host C ABI... " >&6; }
if test ${gl_cv_host_cpu_c_abi_32bit+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$gl_cv_host_cpu_c_abi"; then
       case "$gl_cv_host_cpu_c_abi" in
         i386 | x86_64-x32 | arm | armhf | arm64-ilp32 | hppa | ia64-ilp32 | mips | mipsn32 | powerpc | riscv*-ilp32* | s390 | sparc)
           gl_cv_host_cpu_c_abi_32bit=yes ;;
         *)
           gl_cv_host_cpu_c_abi_32bit=no ;;
       esac
     else
       case "$host_cpu" in

         i[4567]86 )
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         x86_64 )
           # On x86_64 systems, the C compiler may be generating code in one of
           # these ABIs:
           # - 64-bit instruction set, 64-bit pointers, 64-bit 'long': x86_64.
           # - 64-bit instruction set, 64-bit pointers, 32-bit 'long': x86_64
           #   with native Windows (mingw, MSVC).
           # - 64-bit instruction set, 32-bit pointers, 32-bit 'long': x86_64-x32.
           # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': i386.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if (defined __x86_64__ || defined __amd64__ \
                       || defined _M_X64 || defined _M_AMD64) \
                      && !(defined __ILP32__ || defined _ILP32)
                   int ok;
                  #else
                   error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         arm* | aarch64 )
           # Assume arm with EABI.
           # On arm64 systems, the C compiler may be generating code in one of
           # these ABIs:
           # - aarch64 instruction set, 64-bit pointers, 64-bit 'long': arm64.
           # - aarch64 instruction set, 32-bit pointers, 32-bit 'long': arm64-ilp32.
           # - 32-bit instruction set, 32-bit pointers, 32-bit 'long': arm or armhf.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined __aarch64__ && !(defined __ILP32__ || defined _ILP32)
                   int ok;
                  #else
                   error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         hppa1.0 | hppa1.1 | hppa2.0* | hppa64 )
           # On hppa, the C compiler may be generating 32-bit code or 64-bit
           # code. In the latter case, it defines _LP64 and __LP64__.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __LP64__
                   int ok;
                  #else
                   error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         ia64* )
           # On ia64 on HP-UX, the C compiler may be generating 64-bit code or
           # 32-bit code. In the latter case, it defines _ILP32.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef _ILP32
                   int ok;
                  #else
                   error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=yes
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         mips* )
           # We should also check for (_MIPS_SZPTR == 64), but gcc keeps this
           # at 32.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined _MIPS_SZLONG && (_MIPS_SZLONG == 64)
                   int ok;
                  #else
                   error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         powerpc* )
           # Different ABIs are in use on AIX vs. Mac OS X vs. Linux,*BSD.
           # No need to distinguish them here; the caller may distinguish
           # them based on the OS.
           # On powerpc64 systems, the C compiler may still be generating
           # 32-bit code. And on powerpc-ibm-aix systems, the C compiler may
           # be generating 64-bit code.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined __powerpc64__ || defined _ARCH_PPC64
                   int ok;
                  #else
                   error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         rs6000 )
           gl_cv_host_cpu_c_abi_32bit=yes
           ;;

         riscv32 | riscv64 )
           # There are 6 ABIs: ilp32, ilp32f, ilp32d, lp64, lp64f, lp64d.
           # Size of 'long' and 'void *':
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined __LP64__
                    int ok;
                  #else
                    error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         s390* )
           # On s390x, the C compiler may be generating 64-bit (= s390x) code
           # or 31-bit (= s390) code.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined __LP64__ || defined __s390x__
                    int ok;
                  #else
                    error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         sparc | sparc64 )
           # UltraSPARCs running Linux have `uname -m` = "sparc64", but the
           # C compiler still generates 32-bit code.
           cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#if defined __sparcv9 || defined __arch64__
                   int ok;
                  #else
                   error fail
                  #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_host_cpu_c_abi_32bit=no
else $as_nop
  gl_cv_host_cpu_c_abi_32bit=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
           ;;

         *)
           gl_cv_host_cpu_c_abi_32bit=no
           ;;
       esac
     fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gl_cv_host_cpu_c_abi_32bit" >&5
printf "%s\n" "$gl_cv_host_cpu_c_abi_32bit" >&6; }

  HOST_CPU_C_ABI_32BIT="$gl_cv_host_cpu_c_abi_32bit"





  case "$host_os" in
    solaris*)
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for 64-bit host" >&5
printf %s "checking for 64-bit host... " >&6; }
if test ${gl_cv_solaris_64bit+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef _LP64
                 int ok;
                #else
                 error fail
                #endif

_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :
  gl_cv_solaris_64bit=yes
else $as_nop
  gl_cv_solaris_64bit=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gl_cv_solaris_64bit" >&5
printf "%s\n" "$gl_cv_solaris_64bit" >&6; };;
  esac

    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for the common suffixes of directories in the library search path" >&5
printf %s "checking for the common suffixes of directories in the library search path... " >&6; }
if test ${acl_cv_libdirstems+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  acl_libdirstem=lib
     acl_libdirstem2=
     case "$host_os" in
       solaris*)
                                                      if test $gl_cv_solaris_64bit = yes; then
           acl_libdirstem=lib/64
           case "$host_cpu" in
             sparc*)        acl_libdirstem2=lib/sparcv9 ;;
             i*86 | x86_64) acl_libdirstem2=lib/amd64 ;;
           esac
         fi
         ;;
       *)
                           if test "$HOST_CPU_C_ABI_32BIT" != yes; then
                                            searchpath=`(if test -f /usr/bin/gcc \
                           && LC_ALL=C /usr/bin/gcc -print-search-dirs >/dev/null 2>/dev/null; then \
                          LC_ALL=C /usr/bin/gcc -print-search-dirs; \
                        else \
                          LC_ALL=C $CC -print-search-dirs; \
                        fi) 2>/dev/null \
                       | sed -n -e 's,^libraries: ,,p' | sed -e 's,^=,,'`
           if test -n "$searchpath"; then
             acl_save_IFS="${IFS= 	}"; IFS=":"
             for searchdir in $searchpath; do
               if test -d "$searchdir"; then
                 case "$searchdir" in
                   */lib64/ | */lib64 ) acl_libdirstem=lib64 ;;
                   */../ | */.. )
                     # Better ignore directories of this form. They are misleading.
                     ;;
                   *) searchdir=`cd "$searchdir" && pwd`
                      case "$searchdir" in
                        */lib64 ) acl_libdirstem=lib64 ;;
                      esac ;;
                 esac
               fi
             done
             IFS="$acl_save_IFS"
           fi
         fi
         ;;
     esac
     test -n "$acl_libdirstem2" || acl_libdirstem2="$acl_libdirstem"
     acl_cv_libdirstems="$acl_libdirstem,$acl_libdirstem2"

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $acl_cv_libdirstems" >&5
printf "%s\n" "$acl_cv_libdirstems" >&6; }
  # Decompose acl_cv_libdirstems into acl_libdirstem and acl_libdirstem2.
  acl_libdirstem=`echo "$acl_cv_libdirstems" | sed -e 's/,.*//'`
  acl_libdirstem2=`echo "$acl_cv_libdirstems" | sed -e '/,/s/.*,//'`











    use_additional=yes

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"

    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"

  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"


# Check whether --with-libiconv-prefix was given.
if test ${with_libiconv_prefix+y}
then :
  withval=$with_libiconv_prefix;
    if test "X$withval" = "Xno"; then
      use_additional=no
    else
      if test "X$withval" = "X"; then

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"

          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"

  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

      else
        additional_includedir="$withval/include"
        additional_libdir="$withval/$acl_libdirstem"
        if test "$acl_libdirstem2" != "$acl_libdirstem" \
           && test ! -d "$withval/$acl_libdirstem"; then
          additional_libdir="$withval/$acl_libdirstem2"
        fi
      fi
    fi

fi

      LIBICONV=
  LTLIBICONV=
  INCICONV=
  LIBICONV_PREFIX=
      HAVE_LIBICONV=
  rpathdirs=
  ltrpathdirs=
  names_already_handled=
  names_next_round='iconv '
  while test -n "$names_next_round"; do
    names_this_round="$names_next_round"
    names_next_round=
    for name in $names_this_round; do
      already_handled=
      for n in $names_already_handled; do
        if test "$n" = "$name"; then
          already_handled=yes
          break
        fi
      done
      if test -z "$already_handled"; then
        names_already_handled="$names_already_handled $name"
                        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
        eval value=\"\$HAVE_LIB$uppername\"
        if test -n "$value"; then
          if test "$value" = yes; then
            eval value=\"\$LIB$uppername\"
            test -z "$value" || LIBICONV="${LIBICONV}${LIBICONV:+ }$value"
            eval value=\"\$LTLIB$uppername\"
            test -z "$value" || LTLIBICONV="${LTLIBICONV}${LTLIBICONV:+ }$value"
          else
                                    :
          fi
        else
                              found_dir=
          found_la=
          found_so=
          found_a=
          eval libname=\"$acl_libname_spec\"    # typically: libname=lib$name
          if test -n "$acl_shlibext"; then
            shrext=".$acl_shlibext"             # typically: shrext=.so
          else
            shrext=
          fi
          if test $use_additional = yes; then
            dir="$additional_libdir"
                                    if test -n "$acl_shlibext"; then
              if test -f "$dir/$libname$shrext"; then
                found_dir="$dir"
                found_so="$dir/$libname$shrext"
              else
                if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                  ver=`(cd "$dir" && \
                        for f in "$libname$shrext".*; do echo "$f"; done \
                        | sed -e "s,^$libname$shrext\\\\.,," \
                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                        | sed 1q ) 2>/dev/null`
                  if test -n "$ver" && test -f "$dir/$libname$shrext.$ver"; then
                    found_dir="$dir"
                    found_so="$dir/$libname$shrext.$ver"
                  fi
                else
                  eval library_names=\"$acl_library_names_spec\"
                  for f in $library_names; do
                    if test -f "$dir/$f"; then
                      found_dir="$dir"
                      found_so="$dir/$f"
                      break
                    fi
                  done
                fi
              fi
            fi
                        if test "X$found_dir" = "X"; then
              if test -f "$dir/$libname.$acl_libext"; then
                found_dir="$dir"
                found_a="$dir/$libname.$acl_libext"
              fi
            fi
            if test "X$found_dir" != "X"; then
              if test -f "$dir/$libname.la"; then
                found_la="$dir/$libname.la"
              fi
            fi
          fi
          if test "X$found_dir" = "X"; then
            for x in $LDFLAGS $LTLIBICONV; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

              case "$x" in
                -L*)
                  dir=`echo "X$x" | sed -e 's/^X-L//'`
                                    if test -n "$acl_shlibext"; then
                    if test -f "$dir/$libname$shrext"; then
                      found_dir="$dir"
                      found_so="$dir/$libname$shrext"
                    else
                      if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                        ver=`(cd "$dir" && \
                              for f in "$libname$shrext".*; do echo "$f"; done \
                              | sed -e "s,^$libname$shrext\\\\.,," \
                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                              | sed 1q ) 2>/dev/null`
                        if test -n "$ver" && test -f "$dir/$libname$shrext.$ver"; then
                          found_dir="$dir"
                          found_so="$dir/$libname$shrext.$ver"
                        fi
                      else
                        eval library_names=\"$acl_library_names_spec\"
                        for f in $library_names; do
                          if test -f "$dir/$f"; then
                            found_dir="$dir"
                            found_so="$dir/$f"
                            break
                          fi
                        done
                      fi
                    fi
                  fi
                                    if test "X$found_dir" = "X"; then
                    if test -f "$dir/$libname.$acl_libext"; then
                      found_dir="$dir"
                      found_a="$dir/$libname.$acl_libext"
                    fi
                  fi
                  if test "X$found_dir" != "X"; then
                    if test -f "$dir/$libname.la"; then
                      found_la="$dir/$libname.la"
                    fi
                  fi
                  ;;
              esac
              if test "X$found_dir" != "X"; then
                break
              fi
            done
          fi
          if test "X$found_dir" != "X"; then
                        LTLIBICONV="${LTLIBICONV}${LTLIBICONV:+ }-L$found_dir -l$name"
            if test "X$found_so" != "X"; then
                                                        if test "$enable_rpath" = no \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem" \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem2"; then
                                LIBICONV="${LIBICONV}${LIBICONV:+ }$found_so"
              else
                                                                                haveit=
                for x in $ltrpathdirs; do
                  if test "X$x" = "X$found_dir"; then
                    haveit=yes
                    break
                  fi
                done
                if test -z "$haveit"; then
                  ltrpathdirs="$ltrpathdirs $found_dir"
                fi
                                if test "$acl_hardcode_direct" = yes; then
                                                      LIBICONV="${LIBICONV}${LIBICONV:+ }$found_so"
                else
                  if test -n "$acl_hardcode_libdir_flag_spec" && test "$acl_hardcode_minus_L" = no; then
                                                            LIBICONV="${LIBICONV}${LIBICONV:+ }$found_so"
                                                            haveit=
                    for x in $rpathdirs; do
                      if test "X$x" = "X$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      rpathdirs="$rpathdirs $found_dir"
                    fi
                  else
                                                                                haveit=
                    for x in $LDFLAGS $LIBICONV; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                      if test "X$x" = "X-L$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      LIBICONV="${LIBICONV}${LIBICONV:+ }-L$found_dir"
                    fi
                    if test "$acl_hardcode_minus_L" != no; then
                                                                                        LIBICONV="${LIBICONV}${LIBICONV:+ }$found_so"
                    else
                                                                                                                                                                                LIBICONV="${LIBICONV}${LIBICONV:+ }-l$name"
                    fi
                  fi
                fi
              fi
            else
              if test "X$found_a" != "X"; then
                                LIBICONV="${LIBICONV}${LIBICONV:+ }$found_a"
              else
                                                LIBICONV="${LIBICONV}${LIBICONV:+ }-L$found_dir -l$name"
              fi
            fi
                        additional_includedir=
            case "$found_dir" in
              */$acl_libdirstem | */$acl_libdirstem/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem/"'*$,,'`
                if test "$name" = 'iconv'; then
                  LIBICONV_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
              */$acl_libdirstem2 | */$acl_libdirstem2/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem2/"'*$,,'`
                if test "$name" = 'iconv'; then
                  LIBICONV_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
            esac
            if test "X$additional_includedir" != "X"; then
                                                                                                                if test "X$additional_includedir" != "X/usr/include"; then
                haveit=
                if test "X$additional_includedir" = "X/usr/local/include"; then
                  if test -n "$GCC"; then
                    case $host_os in
                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                    esac
                  fi
                fi
                if test -z "$haveit"; then
                  for x in $CPPFLAGS $INCICONV; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                    if test "X$x" = "X-I$additional_includedir"; then
                      haveit=yes
                      break
                    fi
                  done
                  if test -z "$haveit"; then
                    if test -d "$additional_includedir"; then
                                            INCICONV="${INCICONV}${INCICONV:+ }-I$additional_includedir"
                    fi
                  fi
                fi
              fi
            fi
                        if test -n "$found_la"; then
                                                        save_libdir="$libdir"
              case "$found_la" in
                */* | *\\*) . "$found_la" ;;
                *) . "./$found_la" ;;
              esac
              libdir="$save_libdir"
                            for dep in $dependency_libs; do
                case "$dep" in
                  -L*)
                    additional_libdir=`echo "X$dep" | sed -e 's/^X-L//'`
                                                                                                                                                                if test "X$additional_libdir" != "X/usr/$acl_libdirstem" \
                       && test "X$additional_libdir" != "X/usr/$acl_libdirstem2"; then
                      haveit=
                      if test "X$additional_libdir" = "X/usr/local/$acl_libdirstem" \
                         || test "X$additional_libdir" = "X/usr/local/$acl_libdirstem2"; then
                        if test -n "$GCC"; then
                          case $host_os in
                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                          esac
                        fi
                      fi
                      if test -z "$haveit"; then
                        haveit=
                        for x in $LDFLAGS $LIBICONV; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                          if test "X$x" = "X-L$additional_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$additional_libdir"; then
                                                        LIBICONV="${LIBICONV}${LIBICONV:+ }-L$additional_libdir"
                          fi
                        fi
                        haveit=
                        for x in $LDFLAGS $LTLIBICONV; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                          if test "X$x" = "X-L$additional_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$additional_libdir"; then
                                                        LTLIBICONV="${LTLIBICONV}${LTLIBICONV:+ }-L$additional_libdir"
                          fi
                        fi
                      fi
                    fi
                    ;;
                  -R*)
                    dir=`echo "X$dep" | sed -e 's/^X-R//'`
                    if test "$enable_rpath" != no; then
                                                                  haveit=
                      for x in $rpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        rpathdirs="$rpathdirs $dir"
                      fi
                                                                  haveit=
                      for x in $ltrpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        ltrpathdirs="$ltrpathdirs $dir"
                      fi
                    fi
                    ;;
                  -l*)
                                        names_next_round="$names_next_round "`echo "X$dep" | sed -e 's/^X-l//'`
                    ;;
                  *.la)
                                                                                names_next_round="$names_next_round "`echo "X$dep" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\.la$,,'`
                    ;;
                  *)
                                        LIBICONV="${LIBICONV}${LIBICONV:+ }$dep"
                    LTLIBICONV="${LTLIBICONV}${LTLIBICONV:+ }$dep"
                    ;;
                esac
              done
            fi
          else
                                                            LIBICONV="${LIBICONV}${LIBICONV:+ }-l$name"
            LTLIBICONV="${LTLIBICONV}${LTLIBICONV:+ }-l$name"
          fi
        fi
      fi
    done
  done
  if test "X$rpathdirs" != "X"; then
    if test -n "$acl_hardcode_libdir_separator"; then
                        alldirs=
      for found_dir in $rpathdirs; do
        alldirs="${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir"
      done
            acl_save_libdir="$libdir"
      libdir="$alldirs"
      eval flag=\"$acl_hardcode_libdir_flag_spec\"
      libdir="$acl_save_libdir"
      LIBICONV="${LIBICONV}${LIBICONV:+ }$flag"
    else
            for found_dir in $rpathdirs; do
        acl_save_libdir="$libdir"
        libdir="$found_dir"
        eval flag=\"$acl_hardcode_libdir_flag_spec\"
        libdir="$acl_save_libdir"
        LIBICONV="${LIBICONV}${LIBICONV:+ }$flag"
      done
    fi
  fi
  if test "X$ltrpathdirs" != "X"; then
            for found_dir in $ltrpathdirs; do
      LTLIBICONV="${LTLIBICONV}${LTLIBICONV:+ }-R$found_dir"
    done
  fi








                rm -Rf build

	ZFS_CONFIG=all

# Check whether --with-config was given.
if test ${with_config+y}
then :
  withval=$with_config; ZFS_CONFIG="$withval"
fi

	# Check whether --enable-linux-builtin was given.
if test ${enable_linux_builtin+y}
then :
  enableval=$enable_linux_builtin;
else $as_nop
  enable_linux_builtin=no
fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking zfs config" >&5
printf %s "checking zfs config... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ZFS_CONFIG" >&5
printf "%s\n" "$ZFS_CONFIG" >&6; };



	                  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking the number of available CPUs" >&5
printf %s "checking the number of available CPUs... " >&6; }
      CPU_COUNT="0"

      # Try generic methods

      # 'getconf' is POSIX utility, but '_NPROCESSORS_ONLN' and
      # 'NPROCESSORS_ONLN' are platform-specific
      command -v getconf >/dev/null 2>&1 && \
        CPU_COUNT=`getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null` || CPU_COUNT="0"
      if test "$CPU_COUNT" -gt "0" 2>/dev/null || ! command -v nproc >/dev/null 2>&1
then :
  : # empty
else $as_nop
          # 'nproc' is part of GNU Coreutils and is widely available
        CPU_COUNT=`OMP_NUM_THREADS='' nproc 2>/dev/null` || CPU_COUNT=`nproc 2>/dev/null` || CPU_COUNT="0"

fi
      if test "$CPU_COUNT" -gt "0" 2>/dev/null
then :
  : # empty
else $as_nop
          # Try platform-specific preferred methods
        case $host_os in #(
            *linux*) :
    CPU_COUNT=`lscpu -p 2>/dev/null | $EGREP -e '^[0-9]+,' -c` || CPU_COUNT="0" ;; #(
            *darwin*) :
    CPU_COUNT=`sysctl -n hw.logicalcpu 2>/dev/null` || CPU_COUNT="0" ;; #(
            freebsd*) :
    command -v sysctl >/dev/null 2>&1 && CPU_COUNT=`sysctl -n kern.smp.cpus 2>/dev/null` || CPU_COUNT="0" ;; #(
            netbsd*) :
    command -v sysctl >/dev/null 2>&1 && CPU_COUNT=`sysctl -n hw.ncpuonline 2>/dev/null` || CPU_COUNT="0" ;; #(
            solaris*) :
    command -v psrinfo >/dev/null 2>&1 && CPU_COUNT=`psrinfo 2>/dev/null | $EGREP -e '^[0-9].*on-line' -c 2>/dev/null` || CPU_COUNT="0" ;; #(
            mingw*) :
    CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^[0-9]+/' -c` || CPU_COUNT="0" ;; #(
            msys*) :
    CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^[0-9]+/' -c` || CPU_COUNT="0" ;; #(
            cygwin*) :
    CPU_COUNT=`ls -qpU1 /proc/registry/HKEY_LOCAL_MACHINE/HARDWARE/DESCRIPTION/System/CentralProcessor/ 2>/dev/null | $EGREP -e '^[0-9]+/' -c` || CPU_COUNT="0"         ;; #(
  *) :
     ;;
esac
fi
      if test "$CPU_COUNT" -gt "0" 2>/dev/null || ! command -v sysctl >/dev/null 2>&1
then :
  : # empty
else $as_nop
          # Try less preferred generic method
        # 'hw.ncpu' exist on many platforms, but not on GNU/Linux
        CPU_COUNT=`sysctl -n hw.ncpu 2>/dev/null` || CPU_COUNT="0"

fi
      if test "$CPU_COUNT" -gt "0" 2>/dev/null
then :
  : # empty
else $as_nop
        # Try platform-specific fallback methods
      # They can be less accurate and slower then preferred methods
        case $host_os in #(
            *linux*) :
    CPU_COUNT=`$EGREP -e '^processor' -c /proc/cpuinfo 2>/dev/null` || CPU_COUNT="0" ;; #(
            *darwin*) :
    CPU_COUNT=`system_profiler SPHardwareDataType 2>/dev/null | $EGREP -i -e 'number of cores:'|cut -d : -f 2 -s|tr -d ' '` || CPU_COUNT="0" ;; #(
            freebsd*) :
    CPU_COUNT=`dmesg 2>/dev/null| $EGREP -e '^cpu[0-9]+: '|sort -u|$EGREP -e '^' -c` || CPU_COUNT="0" ;; #(
            netbsd*) :
    CPU_COUNT=`command -v cpuctl >/dev/null 2>&1 && cpuctl list 2>/dev/null| $EGREP -e '^[0-9]+ .* online ' -c` || \
                           CPU_COUNT=`dmesg 2>/dev/null| $EGREP -e '^cpu[0-9]+ at'|sort -u|$EGREP -e '^' -c` || CPU_COUNT="0" ;; #(
            solaris*) :
    command -v kstat >/dev/null 2>&1 && CPU_COUNT=`kstat -m cpu_info -s state -p 2>/dev/null | $EGREP -c -e 'on-line'` || \
                           CPU_COUNT=`kstat -m cpu_info 2>/dev/null | $EGREP -c -e 'module: cpu_info'` || CPU_COUNT="0" ;; #(
            mingw*) :
    if CPU_COUNT=`reg query 'HKLM\\Hardware\\Description\\System\\CentralProcessor' 2>/dev/null | $EGREP -e '\\\\[0-9]+$' -c`
then :
                          : # empty
else $as_nop
  test "$NUMBER_OF_PROCESSORS" -gt "0" 2>/dev/null && CPU_COUNT="$NUMBER_OF_PROCESSORS"
fi ;; #(
            msys*) :
    test "$NUMBER_OF_PROCESSORS" -gt "0" 2>/dev/null && CPU_COUNT="$NUMBER_OF_PROCESSORS" ;; #(
            cygwin*) :
    test "$NUMBER_OF_PROCESSORS" -gt "0" 2>/dev/null && CPU_COUNT="$NUMBER_OF_PROCESSORS"         ;; #(
  *) :
     ;;
esac
fi
      if test "x$CPU_COUNT" != "x0" && test "$CPU_COUNT" -gt 0 2>/dev/null
then :
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CPU_COUNT" >&5
printf "%s\n" "$CPU_COUNT" >&6; }

else $as_nop
                        CPU_COUNT="1"
            { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: unable to detect (assuming 1)" >&5
printf "%s\n" "unable to detect (assuming 1)" >&6; }

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-clobbered" >&5
printf %s "checking whether $CC supports -Wno-clobbered... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -Wclobbered"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		NO_CLOBBERED=-Wno-clobbered
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		NO_CLOBBERED=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Winfinite-recursion" >&5
printf %s "checking whether $CC supports -Winfinite-recursion... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -Winfinite-recursion"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		INFINITE_RECURSION=-Winfinite-recursion

printf "%s\n" "#define HAVE_INFINITE_RECURSION 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		INFINITE_RECURSION=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $KERNEL_CC supports -Winfinite-recursion" >&5
printf %s "checking whether $KERNEL_CC supports -Winfinite-recursion... " >&6; }

	saved_cc="$CC"
	saved_flags="$CFLAGS"
	CC="gcc"
	CFLAGS="$CFLAGS -Werror -Winfinite-recursion"

	if  test -n "$KERNEL_CC"
then :

		CC="$KERNEL_CC"

fi
	if  test -n "$KERNEL_LLVM"
then :

		CC="clang"

fi

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		KERNEL_INFINITE_RECURSION=-Winfinite-recursion

printf "%s\n" "#define HAVE_KERNEL_INFINITE_RECURSION 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		KERNEL_INFINITE_RECURSION=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CC="$saved_cc"
	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wimplicit-fallthrough" >&5
printf %s "checking whether $CC supports -Wimplicit-fallthrough... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -Wimplicit-fallthrough"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		IMPLICIT_FALLTHROUGH=-Wimplicit-fallthrough

printf "%s\n" "#define HAVE_IMPLICIT_FALLTHROUGH 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		IMPLICIT_FALLTHROUGH=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wframe-larger-than=<size>" >&5
printf %s "checking whether $CC supports -Wframe-larger-than=<size>... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -Wframe-larger-than=4096"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		FRAME_LARGER_THAN="-Wframe-larger-than=4096"
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		FRAME_LARGER_THAN=""
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-format-truncation" >&5
printf %s "checking whether $CC supports -Wno-format-truncation... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -Wno-format-truncation"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		NO_FORMAT_TRUNCATION=-Wno-format-truncation
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		NO_FORMAT_TRUNCATION=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-format-zero-length" >&5
printf %s "checking whether $CC supports -Wno-format-zero-length... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -Wno-format-zero-length"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		NO_FORMAT_ZERO_LENGTH=-Wno-format-zero-length
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		NO_FORMAT_ZERO_LENGTH=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wformat-overflow" >&5
printf %s "checking whether $CC supports -Wformat-overflow... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -Wformat-overflow"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		FORMAT_OVERFLOW=-Wformat-overflow

printf "%s\n" "#define HAVE_FORMAT_OVERFLOW 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		FORMAT_OVERFLOW=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -fno-omit-frame-pointer" >&5
printf %s "checking whether $CC supports -fno-omit-frame-pointer... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -fno-omit-frame-pointer"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		NO_OMIT_FRAME_POINTER=-fno-omit-frame-pointer
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		NO_OMIT_FRAME_POINTER=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -fno-ipa-sra" >&5
printf %s "checking whether $CC supports -fno-ipa-sra... " >&6; }

	saved_flags="$CFLAGS"
	CFLAGS="$CFLAGS -Werror -fno-ipa-sra"

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		NO_IPA_SRA=-fno-ipa-sra
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		NO_IPA_SRA=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $KERNEL_CC supports -fno-ipa-sra" >&5
printf %s "checking whether $KERNEL_CC supports -fno-ipa-sra... " >&6; }

	saved_cc="$CC"
	saved_flags="$CFLAGS"
	CC="gcc"
	CFLAGS="$CFLAGS -Werror -fno-ipa-sra"

	if  test -n "$KERNEL_CC"
then :

		CC="$KERNEL_CC"

fi
	if  test -n "$KERNEL_LLVM"
then :

		CC="clang"

fi

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		KERNEL_NO_IPA_SRA=-fno-ipa-sra
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		KERNEL_NO_IPA_SRA=
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext

	CC="$saved_cc"
	CFLAGS="$saved_flags"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to build with -fsanitize=address support" >&5
printf %s "checking whether to build with -fsanitize=address support... " >&6; }
	# Check whether --enable-asan was given.
if test ${enable_asan+y}
then :
  enableval=$enable_asan;
else $as_nop
  enable_asan=no
fi


	 if test x$enable_asan = xyes; then
  ASAN_ENABLED_TRUE=
  ASAN_ENABLED_FALSE='#'
else
  ASAN_ENABLED_TRUE='#'
  ASAN_ENABLED_FALSE=
fi

	ASAN_ENABLED=$enable_asan

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_asan" >&5
printf "%s\n" "$enable_asan" >&6; }

	if  test "$enable_asan" = "yes"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -fsanitize=address" >&5
printf %s "checking whether $CC supports -fsanitize=address... " >&6; }
		saved_cflags="$CFLAGS"
		CFLAGS="$CFLAGS -Werror -fsanitize=address"
		cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

			 int main() { return 0; }

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

			ASAN_CFLAGS="-fsanitize=address"
			ASAN_LDFLAGS="-fsanitize=address"
			ASAN_ZFS="_with_asan"
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

			as_fn_error $? "$CC does not support -fsanitize=address" "$LINENO" 5

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
		CFLAGS="$saved_cflags"

else $as_nop

		ASAN_CFLAGS=""
		ASAN_LDFLAGS=""
		ASAN_ZFS="_without_asan"

fi






	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to build with -fsanitize=undefined support" >&5
printf %s "checking whether to build with -fsanitize=undefined support... " >&6; }
	# Check whether --enable-ubsan was given.
if test ${enable_ubsan+y}
then :
  enableval=$enable_ubsan;
else $as_nop
  enable_ubsan=no
fi


	 if test x$enable_ubsan = xyes; then
  UBSAN_ENABLED_TRUE=
  UBSAN_ENABLED_FALSE='#'
else
  UBSAN_ENABLED_TRUE='#'
  UBSAN_ENABLED_FALSE=
fi

	UBSAN_ENABLED=$enable_ubsan

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_ubsan" >&5
printf "%s\n" "$enable_ubsan" >&6; }

	if  test "$enable_ubsan" = "yes"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $CC supports -fsanitize=undefined" >&5
printf %s "checking whether $CC supports -fsanitize=undefined... " >&6; }
		saved_cflags="$CFLAGS"
		CFLAGS="$CFLAGS -Werror -fsanitize=undefined"
		cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

			 int main() { return 0; }

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

			UBSAN_CFLAGS="-fsanitize=undefined"
			UBSAN_LDFLAGS="-fsanitize=undefined"
			UBSAN_ZFS="_with_ubsan"
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

			as_fn_error $? "$CC does not support -fsanitize=undefined" "$LINENO" 5

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
		CFLAGS="$saved_cflags"

else $as_nop

		UBSAN_CFLAGS=""
		UBSAN_LDFLAGS=""
		UBSAN_ZFS="_without_ubsan"

fi






	case "$host_cpu" in
		amd64 | x86_64 | x86 | i686)

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports SSE" >&5
printf %s "checking whether host toolchain supports SSE... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		void main()
		{
			__asm__ __volatile__("xorps %xmm0, %xmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :


printf "%s\n" "#define HAVE_SSE 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports SSE2" >&5
printf %s "checking whether host toolchain supports SSE2... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		void main()
		{
			__asm__ __volatile__("pxor %xmm0, %xmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :


printf "%s\n" "#define HAVE_SSE2 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports SSE3" >&5
printf %s "checking whether host toolchain supports SSE3... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		void main()
		{
			char v[16];
			__asm__ __volatile__("lddqu %0,%%xmm0" :: "m"(v[0]));
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :


printf "%s\n" "#define HAVE_SSE3 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports SSSE3" >&5
printf %s "checking whether host toolchain supports SSSE3... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		void main()
		{
			__asm__ __volatile__("pshufb %xmm0,%xmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :


printf "%s\n" "#define HAVE_SSSE3 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports SSE4.1" >&5
printf %s "checking whether host toolchain supports SSE4.1... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		void main()
		{
			__asm__ __volatile__("pmaxsb %xmm0,%xmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :


printf "%s\n" "#define HAVE_SSE4_1 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports SSE4.2" >&5
printf %s "checking whether host toolchain supports SSE4.2... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		void main()
		{
			__asm__ __volatile__("pcmpgtq %xmm0, %xmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :


printf "%s\n" "#define HAVE_SSE4_2 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX" >&5
printf %s "checking whether host toolchain supports AVX... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		void main()
		{
			char v[32];
			__asm__ __volatile__("vmovdqa %0,%%ymm0" :: "m"(v[0]));
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX2" >&5
printf %s "checking whether host toolchain supports AVX2... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vpshufb %ymm0,%ymm1,%ymm2");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX2 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512F" >&5
printf %s "checking whether host toolchain supports AVX512F... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vpandd %zmm0,%zmm1,%zmm2");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512F 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512CD" >&5
printf %s "checking whether host toolchain supports AVX512CD... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vplzcntd %zmm0,%zmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512CD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512DQ" >&5
printf %s "checking whether host toolchain supports AVX512DQ... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vandpd %zmm0,%zmm1,%zmm2");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512DQ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512BW" >&5
printf %s "checking whether host toolchain supports AVX512BW... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vpshufb %zmm0,%zmm1,%zmm2");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512BW 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512IFMA" >&5
printf %s "checking whether host toolchain supports AVX512IFMA... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vpmadd52luq %zmm0,%zmm1,%zmm2");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512IFMA 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512VBMI" >&5
printf %s "checking whether host toolchain supports AVX512VBMI... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vpermb %zmm0,%zmm1,%zmm2");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512VBMI 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512PF" >&5
printf %s "checking whether host toolchain supports AVX512PF... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vgatherpf0dps (%rsi,%zmm0,4){%k1}");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512PF 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512ER" >&5
printf %s "checking whether host toolchain supports AVX512ER... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vexp2pd %zmm0,%zmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512ER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AVX512VL" >&5
printf %s "checking whether host toolchain supports AVX512VL... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("vpabsq %zmm0,%zmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AVX512VL 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports AES" >&5
printf %s "checking whether host toolchain supports AES... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("aesenc %xmm0, %xmm1");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_AES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports PCLMULQDQ" >&5
printf %s "checking whether host toolchain supports PCLMULQDQ... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("pclmulqdq %0, %%xmm0, %%xmm1" :: "i"(0));
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PCLMULQDQ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports MOVBE" >&5
printf %s "checking whether host toolchain supports MOVBE... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
			__asm__ __volatile__("movbe 0(%eax), %eax");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MOVBE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports XSAVE" >&5
printf %s "checking whether host toolchain supports XSAVE... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
		  char b[4096] __attribute__ ((aligned (64)));
		  __asm__ __volatile__("xsave %[b]\n" : : [b] "m" (*b) : "memory");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XSAVE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports XSAVEOPT" >&5
printf %s "checking whether host toolchain supports XSAVEOPT... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
		  char b[4096] __attribute__ ((aligned (64)));
		  __asm__ __volatile__("xsaveopt %[b]\n" : : [b] "m" (*b) : "memory");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XSAVEOPT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether host toolchain supports XSAVES" >&5
printf %s "checking whether host toolchain supports XSAVES... " >&6; }

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


		void main()
		{
		  char b[4096] __attribute__ ((aligned (64)));
		  __asm__ __volatile__("xsaves %[b]\n" : : [b] "m" (*b) : "memory");
		}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XSAVES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

			;;
	esac


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for system type ($host_os)" >&5
printf %s "checking for system type ($host_os)... " >&6; }
	case $host_os in
		*linux*)

printf "%s\n" "#define SYSTEM_LINUX 1" >>confdefs.h

			ac_system="Linux"
			ac_system_l="linux"
			;;
		*freebsd*)

printf "%s\n" "#define SYSTEM_FREEBSD 1" >>confdefs.h

			ac_system="FreeBSD"
			ac_system_l="freebsd"
			;;
		*)
			ac_system="unknown"
			ac_system_l="unknown"
			;;
	esac
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_system" >&5
printf "%s\n" "$ac_system" >&6; }



	 if test "x$ac_system" = "xLinux"; then
  BUILD_LINUX_TRUE=
  BUILD_LINUX_FALSE='#'
else
  BUILD_LINUX_TRUE='#'
  BUILD_LINUX_FALSE=
fi

	 if test "x$ac_system" = "xFreeBSD"; then
  BUILD_FREEBSD_TRUE=
  BUILD_FREEBSD_FALSE='#'
else
  BUILD_FREEBSD_TRUE='#'
  BUILD_FREEBSD_FALSE=
fi



	case $target_cpu in
	i?86)
		TARGET_CPU=i386
		;;
	amd64|x86_64)
		TARGET_CPU=x86_64
		;;
	powerpc*)
		TARGET_CPU=powerpc
		;;
	aarch64*)
		TARGET_CPU=aarch64
		;;
	armv*)
		TARGET_CPU=arm
		;;
	sparc64)
		TARGET_CPU=sparc64
		;;
	*)
		TARGET_CPU=$target_cpu
		;;
	esac

	 if test $TARGET_CPU = aarch64; then
  TARGET_CPU_AARCH64_TRUE=
  TARGET_CPU_AARCH64_FALSE='#'
else
  TARGET_CPU_AARCH64_TRUE='#'
  TARGET_CPU_AARCH64_FALSE=
fi

	 if test $TARGET_CPU = x86_64; then
  TARGET_CPU_X86_64_TRUE=
  TARGET_CPU_X86_64_FALSE='#'
else
  TARGET_CPU_X86_64_TRUE='#'
  TARGET_CPU_X86_64_FALSE=
fi

	 if test $TARGET_CPU = powerpc; then
  TARGET_CPU_POWERPC_TRUE=
  TARGET_CPU_POWERPC_FALSE='#'
else
  TARGET_CPU_POWERPC_TRUE='#'
  TARGET_CPU_POWERPC_FALSE=
fi

	 if test $TARGET_CPU = sparc64; then
  TARGET_CPU_SPARC64_TRUE=
  TARGET_CPU_SPARC64_FALSE='#'
else
  TARGET_CPU_SPARC64_TRUE='#'
  TARGET_CPU_SPARC64_FALSE=
fi

	 if test $TARGET_CPU = arm; then
  TARGET_CPU_ARM_TRUE=
  TARGET_CPU_ARM_FALSE='#'
else
  TARGET_CPU_ARM_TRUE='#'
  TARGET_CPU_ARM_FALSE=
fi




# Check whether --with-python was given.
if test ${with_python+y}
then :
  withval=$with_python; with_python=$withval
else $as_nop
  with_python=check
fi


	case $with_python in #(
  check) :
    for ac_prog in python3
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_PYTHON+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$PYTHON"; then
  ac_cv_prog_PYTHON="$PYTHON" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_PYTHON="$ac_prog"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
PYTHON=$ac_cv_prog_PYTHON
if test -n "$PYTHON"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON" >&5
printf "%s\n" "$PYTHON" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$PYTHON" && break
done
test -n "$PYTHON" || PYTHON=":"
 ;; #(
  3*) :
    PYTHON="python${with_python}" ;; #(
  *python3*) :
    PYTHON="${with_python}" ;; #(
  no) :
    PYTHON=":" ;; #(
  *) :
    as_fn_error $? "Unknown --with-python value '$with_python'" "$LINENO" 5
	 ;;
esac







        # Find any Python interpreter.
    if test -z "$PYTHON"; then
      for ac_prog in python python2 python3  python3.9 python3.8 python3.7 python3.6 python3.5 python3.4 python3.3  python3.2 python3.1 python3.0  python2.7 python2.6 python2.5 python2.4 python2.3 python2.2 python2.1  python2.0
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PYTHON+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PYTHON in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PYTHON="$PYTHON" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PYTHON="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PYTHON=$ac_cv_path_PYTHON
if test -n "$PYTHON"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON" >&5
printf "%s\n" "$PYTHON" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


  test -n "$PYTHON" && break
done
test -n "$PYTHON" || PYTHON=":"

    fi
    am_display_PYTHON=python


  if test "$PYTHON" = :; then
        :
  else

              { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON version" >&5
printf %s "checking for $am_display_PYTHON version... " >&6; }
if test ${am_cv_python_version+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_python_version=`$PYTHON -c "import sys; print ('%u.%u' % sys.version_info[:2])"`
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
printf "%s\n" "$am_cv_python_version" >&6; }
  PYTHON_VERSION=$am_cv_python_version


        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON platform" >&5
printf %s "checking for $am_display_PYTHON platform... " >&6; }
if test ${am_cv_python_platform+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_python_platform=`$PYTHON -c "import sys; sys.stdout.write(sys.platform)"`
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_platform" >&5
printf "%s\n" "$am_cv_python_platform" >&6; }
  PYTHON_PLATFORM=$am_cv_python_platform


                            if test "x$prefix" = xNONE; then
    am__usable_prefix=$ac_default_prefix
  else
    am__usable_prefix=$prefix
  fi

  # Allow user to request using sys.* values from Python,
  # instead of the GNU $prefix values.

# Check whether --with-python-sys-prefix was given.
if test ${with_python_sys_prefix+y}
then :
  withval=$with_python_sys_prefix; am_use_python_sys=:
else $as_nop
  am_use_python_sys=false
fi


  # Allow user to override whatever the default Python prefix is.

# Check whether --with-python_prefix was given.
if test ${with_python_prefix+y}
then :
  withval=$with_python_prefix; am_python_prefix_subst=$withval
   am_cv_python_prefix=$withval
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for explicit $am_display_PYTHON prefix" >&5
printf %s "checking for explicit $am_display_PYTHON prefix... " >&6; }
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_prefix" >&5
printf "%s\n" "$am_cv_python_prefix" >&6; }
else $as_nop

   if $am_use_python_sys; then
     # using python sys.prefix value, not GNU
     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for python default $am_display_PYTHON prefix" >&5
printf %s "checking for python default $am_display_PYTHON prefix... " >&6; }
if test ${am_cv_python_prefix+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_python_prefix=`$PYTHON -c "import sys; sys.stdout.write(sys.prefix)"`
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_prefix" >&5
printf "%s\n" "$am_cv_python_prefix" >&6; }

               case $am_cv_python_prefix in
     $am__usable_prefix*)
       am__strip_prefix=`echo "$am__usable_prefix" | sed 's|.|.|g'`
       am_python_prefix_subst=`echo "$am_cv_python_prefix" | sed "s,^$am__strip_prefix,\\${prefix},"`
       ;;
     *)
       am_python_prefix_subst=$am_cv_python_prefix
       ;;
     esac
   else # using GNU prefix value, not python sys.prefix
     am_python_prefix_subst='${prefix}'
     am_python_prefix=$am_python_prefix_subst
     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU default $am_display_PYTHON prefix" >&5
printf %s "checking for GNU default $am_display_PYTHON prefix... " >&6; }
     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_python_prefix" >&5
printf "%s\n" "$am_python_prefix" >&6; }
   fi
fi

  # Substituting python_prefix_subst value.
  PYTHON_PREFIX=$am_python_prefix_subst


  # emacs-page Now do it all over again for Python exec_prefix, but with yet
  # another conditional: fall back to regular prefix if that was specified.

# Check whether --with-python_exec_prefix was given.
if test ${with_python_exec_prefix+y}
then :
  withval=$with_python_exec_prefix; am_python_exec_prefix_subst=$withval
   am_cv_python_exec_prefix=$withval
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for explicit $am_display_PYTHON exec_prefix" >&5
printf %s "checking for explicit $am_display_PYTHON exec_prefix... " >&6; }
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_exec_prefix" >&5
printf "%s\n" "$am_cv_python_exec_prefix" >&6; }
else $as_nop

   # no explicit --with-python_exec_prefix, but if
   # --with-python_prefix was given, use its value for python_exec_prefix too.
   if test -n "$with_python_prefix"
then :
  am_python_exec_prefix_subst=$with_python_prefix
    am_cv_python_exec_prefix=$with_python_prefix
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for python_prefix-given $am_display_PYTHON exec_prefix" >&5
printf %s "checking for python_prefix-given $am_display_PYTHON exec_prefix... " >&6; }
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_exec_prefix" >&5
printf "%s\n" "$am_cv_python_exec_prefix" >&6; }
else $as_nop

    # Set am__usable_exec_prefix whether using GNU or Python values,
    # since we use that variable for pyexecdir.
    if test "x$exec_prefix" = xNONE; then
      am__usable_exec_prefix=$am__usable_prefix
    else
      am__usable_exec_prefix=$exec_prefix
    fi
    #
    if $am_use_python_sys; then # using python sys.exec_prefix, not GNU
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for python default $am_display_PYTHON exec_prefix" >&5
printf %s "checking for python default $am_display_PYTHON exec_prefix... " >&6; }
if test ${am_cv_python_exec_prefix+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  am_cv_python_exec_prefix=`$PYTHON -c "import sys; sys.stdout.write(sys.exec_prefix)"`
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_exec_prefix" >&5
printf "%s\n" "$am_cv_python_exec_prefix" >&6; }
                        case $am_cv_python_exec_prefix in
      $am__usable_exec_prefix*)
        am__strip_prefix=`echo "$am__usable_exec_prefix" | sed 's|.|.|g'`
        am_python_exec_prefix_subst=`echo "$am_cv_python_exec_prefix" | sed "s,^$am__strip_prefix,\\${exec_prefix},"`
        ;;
      *)
        am_python_exec_prefix_subst=$am_cv_python_exec_prefix
        ;;
     esac
   else # using GNU $exec_prefix, not python sys.exec_prefix
     am_python_exec_prefix_subst='${exec_prefix}'
     am_python_exec_prefix=$am_python_exec_prefix_subst
     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU default $am_display_PYTHON exec_prefix" >&5
printf %s "checking for GNU default $am_display_PYTHON exec_prefix... " >&6; }
     { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_python_exec_prefix" >&5
printf "%s\n" "$am_python_exec_prefix" >&6; }
   fi
fi
fi

  # Substituting python_exec_prefix_subst.
  PYTHON_EXEC_PREFIX=$am_python_exec_prefix_subst


  # Factor out some code duplication into this shell variable.
  am_python_setup_sysconfig="\
import sys
# Prefer sysconfig over distutils.sysconfig, for better compatibility
# with python 3.x.  See automake bug#10227.
try:
    import sysconfig
except ImportError:
    can_use_sysconfig = 0
else:
    can_use_sysconfig = 1
# Can't use sysconfig in CPython 2.7, since it's broken in virtualenvs:
# <https://github.com/pypa/virtualenv/issues/118>
try:
    from platform import python_implementation
    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
        can_use_sysconfig = 0
except ImportError:
    pass"


              { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON script directory (pythondir)" >&5
printf %s "checking for $am_display_PYTHON script directory (pythondir)... " >&6; }
if test ${am_cv_python_pythondir+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test "x$am_cv_python_prefix" = x; then
     am_py_prefix=$am__usable_prefix
   else
     am_py_prefix=$am_cv_python_prefix
   fi
   am_cv_python_pythondir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
  sitedir = sysconfig.get_path('purelib', vars={'base':'$am_py_prefix'})
else:
  from distutils import sysconfig
  sitedir = sysconfig.get_python_lib(0, 0, prefix='$am_py_prefix')
sys.stdout.write(sitedir)"`
   #
   case $am_cv_python_pythondir in
   $am_py_prefix*)
     am__strip_prefix=`echo "$am_py_prefix" | sed 's|.|.|g'`
     am_cv_python_pythondir=`echo "$am_cv_python_pythondir" | sed "s,^$am__strip_prefix,\\${PYTHON_PREFIX},"`
     ;;
   *)
     case $am_py_prefix in
       /usr|/System*) ;;
       *) am_cv_python_pythondir="\${PYTHON_PREFIX}/lib/python$PYTHON_VERSION/site-packages"
          ;;
     esac
     ;;
   esac

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_pythondir" >&5
printf "%s\n" "$am_cv_python_pythondir" >&6; }
  pythondir=$am_cv_python_pythondir


          pkgpythondir=\${pythondir}/$PACKAGE


          { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $am_display_PYTHON extension module directory (pyexecdir)" >&5
printf %s "checking for $am_display_PYTHON extension module directory (pyexecdir)... " >&6; }
if test ${am_cv_python_pyexecdir+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test "x$am_cv_python_exec_prefix" = x; then
     am_py_exec_prefix=$am__usable_exec_prefix
   else
     am_py_exec_prefix=$am_cv_python_exec_prefix
   fi
   am_cv_python_pyexecdir=`$PYTHON -c "
$am_python_setup_sysconfig
if can_use_sysconfig:
  sitedir = sysconfig.get_path('platlib', vars={'platbase':'$am_py_exec_prefix'})
else:
  from distutils import sysconfig
  sitedir = sysconfig.get_python_lib(1, 0, prefix='$am_py_exec_prefix')
sys.stdout.write(sitedir)"`
   #
   case $am_cv_python_pyexecdir in
   $am_py_exec_prefix*)
     am__strip_prefix=`echo "$am_py_exec_prefix" | sed 's|.|.|g'`
     am_cv_python_pyexecdir=`echo "$am_cv_python_pyexecdir" | sed "s,^$am__strip_prefix,\\${PYTHON_EXEC_PREFIX},"`
     ;;
   *)
     case $am_py_exec_prefix in
       /usr|/System*) ;;
       *) am_cv_python_pyexecdir="\${PYTHON_EXEC_PREFIX}/lib/python$PYTHON_VERSION/site-packages"
          ;;
     esac
     ;;
   esac

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_pyexecdir" >&5
printf "%s\n" "$am_cv_python_pyexecdir" >&6; }
  pyexecdir=$am_cv_python_pyexecdir


      pkgpyexecdir=\${pyexecdir}/$PACKAGE



  fi

	if test -z "$PYTHON_VERSION"
then :

		PYTHON_VERSION=$(echo ${PYTHON##*/} | tr -cd 0-9.)

fi
	PYTHON_MINOR=${PYTHON_VERSION#*\.}

	case $PYTHON_VERSION in #(
  3.*) :

			if test $PYTHON_MINOR -lt 6
then :
  as_fn_error $? "\"Python >= 3.6 is required\"" "$LINENO" 5
fi
		 ;; #(
  :|2|3) :
     ;; #(
  *) :
    PYTHON_VERSION=3
	 ;;
esac

	 if test "$PYTHON" != :; then
  USING_PYTHON_TRUE=
  USING_PYTHON_FALSE='#'
else
  USING_PYTHON_TRUE='#'
  USING_PYTHON_FALSE=
fi

	PYTHON_SHEBANG=python3


				if test "x$with_python" != xcheck
then :

		PYTHON_PKG_VERSION=$(echo $PYTHON_VERSION | tr -d .)
		DEFINE_PYTHON_PKG_VERSION='--define "__use_python_pkg_version '${PYTHON_PKG_VERSION}'"'
		DEFINE_PYTHON_VERSION='--define "__use_python '${PYTHON}'"'

else $as_nop

		DEFINE_PYTHON_VERSION=''
		DEFINE_PYTHON_PKG_VERSION=''

fi





	# Check whether --enable-pyzfs was given.
if test ${enable_pyzfs+y}
then :
  enableval=$enable_pyzfs; enable_pyzfs=$enableval
else $as_nop
  enable_pyzfs=check
fi


				if test "x$enable_pyzfs" != xcheck
then :

		if test "x$enable_pyzfs" = xyes
then :

			DEFINE_PYZFS='--with pyzfs'

else $as_nop

			DEFINE_PYZFS='--without pyzfs'

fi

else $as_nop

		if test "$PYTHON" != :
then :

			DEFINE_PYZFS=''

else $as_nop

			enable_pyzfs=no
			DEFINE_PYZFS='--without pyzfs'

fi

fi


				if test "x$enable_pyzfs" = xcheck
then :

		if test "x$ZFS_CONFIG" = xkernel -o "x$ZFS_CONFIG" = xsrpm
then :

				enable_pyzfs=no
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: Disabling pyzfs for kernel/srpm config" >&5
printf "%s\n" "$as_me: Disabling pyzfs for kernel/srpm config" >&6;}

fi

fi

				if test "x$enable_pyzfs" = xcheck -o "x$enable_pyzfs" = xyes
then :


	PYTHON_NAME=${PYTHON##*/}
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $PYTHON_NAME module: packaging" >&5
printf %s "checking for $PYTHON_NAME module: packaging... " >&6; }
	if $PYTHON -c "import packaging" 2>/dev/null
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


	PYTHON_NAME=${PYTHON##*/}
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $PYTHON_NAME module: distlib" >&5
printf %s "checking for $PYTHON_NAME module: distlib... " >&6; }
	if $PYTHON -c "import distlib" 2>/dev/null
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

				if test "x$enable_pyzfs" = xyes
then :

					as_fn_error $? "\"Python $PYTHON_VERSION packaging and distlib modules are not installed\"" "$LINENO" 5

elif test "x$enable_pyzfs" != xno
then :

					enable_pyzfs=no

fi



fi




fi


fi

				if test "x$enable_pyzfs" = xcheck  -o "x$enable_pyzfs" = xyes
then :

		case $PYTHON_VERSION in #(
  3.*) :
    PYTHON_REQUIRED_VERSION=">= '3.6.0'" ;; #(
  *) :
    as_fn_error $? "\"Python $PYTHON_VERSION unknown\"" "$LINENO" 5
		 ;;
esac


	#
	# Allow the use of a (user set) custom python version
	#


	# Extract the first word of "python[$PYTHON_VERSION]", so it can be a program name with args.
set dummy python$PYTHON_VERSION; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_path_PYTHON+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  case $PYTHON in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PYTHON="$PYTHON" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_path_PYTHON="$as_dir$ac_word$ac_exec_ext"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  ;;
esac
fi
PYTHON=$ac_cv_path_PYTHON
if test -n "$PYTHON"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON" >&5
printf "%s\n" "$PYTHON" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


	if test -z "$PYTHON"; then

			if test "x$enable_pyzfs" = xyes
then :

				as_fn_error $? "\"Python $PYTHON_REQUIRED_VERSION development library is not installed\"" "$LINENO" 5

elif test "x$enable_pyzfs" != xno
then :

				enable_pyzfs=no

fi


	fi

	#
	# Check for a version of Python >= 2.1.0
	#
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a version of Python >= '2.1.0'" >&5
printf %s "checking for a version of Python >= '2.1.0'... " >&6; }
	ac_supports_python_ver=`$PYTHON -c "import sys; \
		ver = sys.version.split ()[0]; \
		print (ver >= '2.1.0')"`
	if test "$ac_supports_python_ver" != "True"; then
		if test -z "$PYTHON_NOVERSIONCHECK"; then
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "
This version of the AC_PYTHON_DEVEL macro
doesn't work properly with versions of Python before
2.1.0. You may need to re-run configure, setting the
variables PYTHON_CPPFLAGS, PYTHON_LIBS, PYTHON_SITE_PKG,
PYTHON_EXTRA_LIBS and PYTHON_EXTRA_LDFLAGS by hand.
Moreover, to disable this check, set PYTHON_NOVERSIONCHECK
to something else than an empty string.

See \`config.log' for more details" "$LINENO" 5; }
		else
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: skip at user request" >&5
printf "%s\n" "skip at user request" >&6; }
		fi
	else
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
	fi

	#
	# If the macro parameter ``version'' is set, honour it.
	# A Python shim class, VPy, is used to implement correct version comparisons via
	# string expressions, since e.g. a naive textual ">= 2.7.3" won't work for
	# Python 2.7.10 (the ".1" being evaluated as less than ".3").
	#
	if test -n "$PYTHON_REQUIRED_VERSION"; then
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for a version of Python $PYTHON_REQUIRED_VERSION" >&5
printf %s "checking for a version of Python $PYTHON_REQUIRED_VERSION... " >&6; }
                cat << EOF > ax_python_devel_vpy.py
class VPy:
    def vtup(self, s):
        return tuple(map(int, s.strip().replace("rc", ".").split(".")))
    def __init__(self):
        import sys
        self.vpy = tuple(sys.version_info)
    def __eq__(self, s):
        return self.vpy == self.vtup(s)
    def __ne__(self, s):
        return self.vpy != self.vtup(s)
    def __lt__(self, s):
        return self.vpy < self.vtup(s)
    def __gt__(self, s):
        return self.vpy > self.vtup(s)
    def __le__(self, s):
        return self.vpy <= self.vtup(s)
    def __ge__(self, s):
        return self.vpy >= self.vtup(s)
EOF
		ac_supports_python_ver=`$PYTHON -c "import ax_python_devel_vpy; \
                        ver = ax_python_devel_vpy.VPy(); \
			print (ver $PYTHON_REQUIRED_VERSION)"`
                rm -rf ax_python_devel_vpy*.py* __pycache__/ax_python_devel_vpy*.py*
		if test "$ac_supports_python_ver" = "True"; then
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
		else
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			as_fn_error $? "this package requires Python $PYTHON_REQUIRED_VERSION.
If you have it installed, but it isn't the default Python
interpreter in your system path, please pass the PYTHON_VERSION
variable to configure. See \`\`configure --help'' for reference.
" "$LINENO" 5
			PYTHON_VERSION=""
		fi
	fi

	#
	# Check for Python include path
	#
	#
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for Python include path" >&5
printf %s "checking for Python include path... " >&6; }
	if test -z "$PYTHON_CPPFLAGS"; then
		python_path=`$PYTHON -c "import sysconfig; \
			print (sysconfig.get_path('include'));"`
		plat_python_path=`$PYTHON -c "import sysconfig; \
			print (sysconfig.get_path('platinclude'));"`
		if test -n "${python_path}"; then
			if test "${plat_python_path}" != "${python_path}"; then
				python_path="-I$python_path -I$plat_python_path"
			else
				python_path="-I$python_path"
			fi
		fi
		PYTHON_CPPFLAGS=$python_path
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON_CPPFLAGS" >&5
printf "%s\n" "$PYTHON_CPPFLAGS" >&6; }


	#
	# Check for Python library path
	#
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for Python library path" >&5
printf %s "checking for Python library path... " >&6; }
	if test -z "$PYTHON_LIBS"; then
		# (makes two attempts to ensure we've got a version number
		# from the interpreter)
		ac_python_version=`cat<<EOD | $PYTHON -

# join all versioning strings, on some systems
# major/minor numbers could be in different list elements
from sysconfig import *
e = get_config_var('VERSION')
if e is not None:
	print(e)
EOD`

		if test -z "$ac_python_version"; then
			if test -n "$PYTHON_VERSION"; then
				ac_python_version=$PYTHON_VERSION
			else
				ac_python_version=`$PYTHON -c "import sys; \
					print ('.'.join(sys.version.split('.')[:2]))"`
			fi
		fi

		# Make the versioning information available to the compiler

printf "%s\n" "#define HAVE_PYTHON \"$ac_python_version\"" >>confdefs.h


		# First, the library directory:
		ac_python_libdir=`cat<<EOD | $PYTHON -

# There should be only one
import sysconfig
e = sysconfig.get_config_var('LIBDIR')
if e is not None:
	print (e)
EOD`

		# Now, for the library:
		ac_python_library=`cat<<EOD | $PYTHON -

import sysconfig
c = sysconfig.get_config_vars()
if 'LDVERSION' in c:
	print ('python'+c['LDVERSION'])
else:
	print ('python'+c['VERSION'])
EOD`

		# This small piece shamelessly adapted from PostgreSQL python macro;
		# credits goes to momjian, I think. I'd like to put the right name
		# in the credits, if someone can point me in the right direction... ?
		#
		if test -n "$ac_python_libdir" -a -n "$ac_python_library"
		then
			# use the official shared library
			ac_python_library=`echo "$ac_python_library" | sed "s/^lib//"`
			PYTHON_LIBS="-L$ac_python_libdir -l$ac_python_library"
		else
			# old way: use libpython from python_configdir
			ac_python_libdir=`$PYTHON -c \
			  "import sysconfig; \
			  import os; \
			  print (os.path.join(sysconfig.get_path('platstdlib'), 'config'));"`
			PYTHON_LIBS="-L$ac_python_libdir -lpython$ac_python_version"
		fi

		if test -z "PYTHON_LIBS"; then

			if test "x$enable_pyzfs" = xyes
then :

				as_fn_error $? "\"Python $PYTHON_REQUIRED_VERSION development library is not installed\"" "$LINENO" 5

elif test "x$enable_pyzfs" != xno
then :

				enable_pyzfs=no

fi


		fi
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON_LIBS" >&5
printf "%s\n" "$PYTHON_LIBS" >&6; }


	#
	# Check for site packages
	#
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for Python site-packages path" >&5
printf %s "checking for Python site-packages path... " >&6; }
	if test -z "$PYTHON_SITE_PKG"; then
		PYTHON_SITE_PKG=`$PYTHON -c "import distutils.sysconfig; \
			print (distutils.sysconfig.get_python_lib(0,0));" 2>/dev/null || \
			$PYTHON -c "import sysconfig; \
			print (sysconfig.get_path('purelib'));"`
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON_SITE_PKG" >&5
printf "%s\n" "$PYTHON_SITE_PKG" >&6; }


	#
	# libraries which must be linked in when embedding
	#
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking python extra libraries" >&5
printf %s "checking python extra libraries... " >&6; }
	if test -z "$PYTHON_EXTRA_LIBS"; then
	   PYTHON_EXTRA_LIBS=`$PYTHON -c "import sysconfig; \
                conf = sysconfig.get_config_var; \
                print (conf('LIBS') + ' ' + conf('SYSLIBS'))"`
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON_EXTRA_LIBS" >&5
printf "%s\n" "$PYTHON_EXTRA_LIBS" >&6; }


	#
	# linking flags needed when embedding
	#
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking python extra linking flags" >&5
printf %s "checking python extra linking flags... " >&6; }
	if test -z "$PYTHON_EXTRA_LDFLAGS"; then
		PYTHON_EXTRA_LDFLAGS=`$PYTHON -c "import sysconfig; \
			conf = sysconfig.get_config_var; \
			print (conf('LINKFORSHARED'))"`
	fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PYTHON_EXTRA_LDFLAGS" >&5
printf "%s\n" "$PYTHON_EXTRA_LDFLAGS" >&6; }


	#
	# final check to see if everything compiles alright
	#
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking consistency of all components of python development environment" >&5
printf %s "checking consistency of all components of python development environment... " >&6; }
	# save current global flags
	ac_save_LIBS="$LIBS"
	ac_save_LDFLAGS="$LDFLAGS"
	ac_save_CPPFLAGS="$CPPFLAGS"
	LIBS="$ac_save_LIBS $PYTHON_LIBS $PYTHON_EXTRA_LIBS $PYTHON_EXTRA_LIBS"
	LDFLAGS="$ac_save_LDFLAGS $PYTHON_EXTRA_LDFLAGS"
	CPPFLAGS="$ac_save_CPPFLAGS $PYTHON_CPPFLAGS"
	ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <Python.h>
int
main (void)
{
Py_Initialize();
  ;
  return 0;
}

_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  pythonexists=yes
else $as_nop
  pythonexists=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
	ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

	# turn back to default flags
	CPPFLAGS="$ac_save_CPPFLAGS"
	LIBS="$ac_save_LIBS"
	LDFLAGS="$ac_save_LDFLAGS"

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $pythonexists" >&5
printf "%s\n" "$pythonexists" >&6; }

        if test ! "x$pythonexists" = "xyes"; then

			if test "x$enable_pyzfs" = xyes
then :

				as_fn_error $? "\"Python $PYTHON_REQUIRED_VERSION development library is not installed\"" "$LINENO" 5

elif test "x$enable_pyzfs" != xno
then :

				enable_pyzfs=no

fi


	fi

	#
	# all done!
	#


fi

				if test "x$enable_pyzfs" = xcheck -o "x$enable_pyzfs" = xyes
then :


	PYTHON_NAME=${PYTHON##*/}
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $PYTHON_NAME module: setuptools" >&5
printf %s "checking for $PYTHON_NAME module: setuptools... " >&6; }
	if $PYTHON -c "import setuptools" 2>/dev/null
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			if test "x$enable_pyzfs" = xyes
then :

				as_fn_error $? "\"Python $PYTHON_VERSION setuptools is not installed\"" "$LINENO" 5

elif test "x$enable_pyzfs" != xno
then :

				enable_pyzfs=no

fi



fi


fi

				if test "x$enable_pyzfs" = xcheck -o "x$enable_pyzfs" = xyes
then :


	PYTHON_NAME=${PYTHON##*/}
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $PYTHON_NAME module: cffi" >&5
printf %s "checking for $PYTHON_NAME module: cffi... " >&6; }
	if $PYTHON -c "import cffi" 2>/dev/null
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			if test "x$enable_pyzfs" = xyes
then :

				as_fn_error $? "\"Python $PYTHON_VERSION cffi is not installed\"" "$LINENO" 5

elif test "x$enable_pyzfs" != xno
then :

				enable_pyzfs=no

fi



fi


fi

				if test "x$enable_pyzfs" = xcheck
then :
  enable_pyzfs=yes
fi

	 if test "x$enable_pyzfs" = xyes; then
  PYZFS_ENABLED_TRUE=
  PYZFS_ENABLED_FALSE='#'
else
  PYZFS_ENABLED_TRUE='#'
  PYZFS_ENABLED_FALSE=
fi

	PYZFS_ENABLED=$enable_pyzfs

	pythonsitedir=$PYTHON_SITE_PKG


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to enable pyzfs: " >&5
printf %s "checking whether to enable pyzfs: ... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_pyzfs" >&5
printf "%s\n" "$enable_pyzfs" >&6; }


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for sed --in-place" >&5
printf %s "checking for sed --in-place... " >&6; }
if test ${ac_cv_inplace+y}
then :
  printf %s "(cached) " >&6
else $as_nop

		tmpfile=$(mktemp conftest.XXXXXX)
		echo foo >$tmpfile
		if $SED --in-place 's#foo#bar#' $tmpfile 2>/dev/null
then :
  ac_cv_inplace="--in-place"
elif $SED -i '' 's#foo#bar#' $tmpfile 2>/dev/null
then :
  ac_cv_inplace="-i ''"
else $as_nop
  as_fn_error $? "$SED does not support in-place" "$LINENO" 5
fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_inplace" >&5
printf "%s\n" "$ac_cv_inplace" >&6; }
	ac_inplace=$ac_cv_inplace



	# Extract the first word of "cppcheck", so it can be a program name with args.
set dummy cppcheck; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CPPCHECK+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CPPCHECK"; then
  ac_cv_prog_CPPCHECK="$CPPCHECK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CPPCHECK="cppcheck"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CPPCHECK=$ac_cv_prog_CPPCHECK
if test -n "$CPPCHECK"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CPPCHECK" >&5
printf "%s\n" "$CPPCHECK" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


	if test -z "$CPPCHECK"; then
		CPPCHECK='@printf "skipping cppcheck because cppcheck is not installed\n"'
	fi


	# Extract the first word of "shellcheck", so it can be a program name with args.
set dummy shellcheck; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_SHELLCHECK+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$SHELLCHECK"; then
  ac_cv_prog_SHELLCHECK="$SHELLCHECK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_SHELLCHECK="yes"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
SHELLCHECK=$ac_cv_prog_SHELLCHECK
if test -n "$SHELLCHECK"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $SHELLCHECK" >&5
printf "%s\n" "$SHELLCHECK" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi


	# Extract the first word of "checkbashisms", so it can be a program name with args.
set dummy checkbashisms; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_CHECKBASHISMS+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$CHECKBASHISMS"; then
  ac_cv_prog_CHECKBASHISMS="$CHECKBASHISMS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_CHECKBASHISMS="yes"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CHECKBASHISMS=$ac_cv_prog_CHECKBASHISMS
if test -n "$CHECKBASHISMS"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $CHECKBASHISMS" >&5
printf "%s\n" "$CHECKBASHISMS" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



	 if test "x$SHELLCHECK" = "xyes"; then
  HAVE_SHELLCHECK_TRUE=
  HAVE_SHELLCHECK_FALSE='#'
else
  HAVE_SHELLCHECK_TRUE='#'
  HAVE_SHELLCHECK_FALSE=
fi

	 if test "x$CHECKBASHISMS" = "xyes"; then
  HAVE_CHECKBASHISMS_TRUE=
  HAVE_CHECKBASHISMS_FALSE='#'
else
  HAVE_CHECKBASHISMS_TRUE='#'
  HAVE_CHECKBASHISMS_FALSE=
fi



	# Extract the first word of "parallel", so it can be a program name with args.
set dummy parallel; ac_word=$2
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
printf %s "checking for $ac_word... " >&6; }
if test ${ac_cv_prog_PARALLEL+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  if test -n "$PARALLEL"; then
  ac_cv_prog_PARALLEL="$PARALLEL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    for ac_exec_ext in '' $ac_executable_extensions; do
  if as_fn_executable_p "$as_dir$ac_word$ac_exec_ext"; then
    ac_cv_prog_PARALLEL="yes"
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
PARALLEL=$ac_cv_prog_PARALLEL
if test -n "$PARALLEL"; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $PARALLEL" >&5
printf "%s\n" "$PARALLEL" >&6; }
else
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
fi



	 if test "x$PARALLEL" = "xyes"; then
  HAVE_PARALLEL_TRUE=
  HAVE_PARALLEL_FALSE='#'
else
  HAVE_PARALLEL_TRUE='#'
  HAVE_PARALLEL_FALSE=
fi




	if test -z "$BUILD_LINUX_TRUE"; then :


		if test "x$ac_cv_env_TEST_JOBS_set" != "xset"; then
			TEST_JOBS=$CPU_COUNT
		fi


fi

	ZFS_INIT_SYSV=
	ZFS_INIT_SYSTEMD=
	ZFS_WANT_MODULES_LOAD_D=

	case "$ZFS_CONFIG" in
		kernel)
	if test -z "$BUILD_LINUX_TRUE"; then :



# Check whether --with-linux was given.
if test ${with_linux+y}
then :
  withval=$with_linux; kernelsrc="$withval"
fi



# Check whether --with-linux-obj was given.
if test ${with_linux_obj+y}
then :
  withval=$with_linux_obj; kernelbuild="$withval"
fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel source and build directories" >&5
printf %s "checking kernel source and build directories... " >&6; }
	if test -n "$kernelsrc" && test -z "$kernelbuild"
then :

		kernelbuild="$kernelsrc"

elif test -z "$kernelsrc"
then :

		if test -e "/lib/modules/$(uname -r)/source" && \
		       test -e "/lib/modules/$(uname -r)/build"
then :

			src="/lib/modules/$(uname -r)/source"
			build="/lib/modules/$(uname -r)/build"

elif test -e "/lib/modules/$(uname -r)/build"
then :

			build="/lib/modules/$(uname -r)/build"
			src="$build"

else $as_nop

			src=

			for d in $(ls -1d /lib/modules/* 2>/dev/null | sort -Vr); do
				if test -e "$d/source" && test -e "$d/build"; then
					src="$d/source"
					build="$d/build"
					break
				fi

				if test -e "$d/build"; then
					src="$d/build"
					build="$d/build"
					break
				fi
			done

			# the least reliable method
			if test -z "$src"; then
				src=$(ls -1d /usr/src/kernels/* /usr/src/linux-* \
				      2>/dev/null | grep -v obj | sort -Vr | head -1)
				build="$src"
			fi

fi

		if test -n "$src" && test -e "$src"
then :

			kernelsrc=$(readlink -e "$src")

else $as_nop

			kernelsrc="Not found"

fi
		if test -n "$build" && test -e "$build"
then :

			kernelbuild=$(readlink -e "$build")

else $as_nop

			kernelbuild="Not found"

fi

else $as_nop

		if test "$kernelsrc" = "NONE"
then :

			kernsrcver=NONE

fi
		withlinux=yes

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel source directory" >&5
printf %s "checking kernel source directory... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $kernelsrc" >&5
printf "%s\n" "$kernelsrc" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel build directory" >&5
printf %s "checking kernel build directory... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $kernelbuild" >&5
printf "%s\n" "$kernelbuild" >&6; }
	if test ! -d "$kernelsrc" || test ! -d "$kernelbuild"
then :

		as_fn_error $? "
	*** Please make sure the kernel devel package for your distribution
	*** is installed and then try again.  If that fails, you can specify the
	*** location of the kernel source and build with the '--with-linux=PATH' and
	*** '--with-linux-obj=PATH' options respectively." "$LINENO" 5

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel source version" >&5
printf %s "checking kernel source version... " >&6; }
	utsrelease1=$kernelbuild/include/linux/version.h
	utsrelease2=$kernelbuild/include/linux/utsrelease.h
	utsrelease3=$kernelbuild/include/generated/utsrelease.h
	if test -r $utsrelease1 && grep -qF UTS_RELEASE $utsrelease1
then :

		utsrelease=$utsrelease1

elif test -r $utsrelease2 && grep -qF UTS_RELEASE $utsrelease2
then :

		utsrelease=$utsrelease2

elif test -r $utsrelease3 && grep -qF UTS_RELEASE $utsrelease3
then :

		utsrelease=$utsrelease3

fi

	if test -n "$utsrelease"
then :

		kernsrcver=$($AWK '/UTS_RELEASE/ { gsub(/"/, "", $3); print $3 }' $utsrelease)
		if test -z "$kernsrcver"
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: Not found" >&5
printf "%s\n" "Not found" >&6; }
			as_fn_error $? "
	*** Cannot determine kernel version.
			" "$LINENO" 5

fi

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: Not found" >&5
printf "%s\n" "Not found" >&6; }
		if test "x$enable_linux_builtin" != xyes; then
			as_fn_error $? "
	*** Cannot find UTS_RELEASE definition.
			" "$LINENO" 5
		else
			as_fn_error $? "
	*** Cannot find UTS_RELEASE definition.
	*** Please run 'make prepare' inside the kernel source tree." "$LINENO" 5
		fi

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $kernsrcver" >&5
printf "%s\n" "$kernsrcver" >&6; }

	as_arg_v1=$kernsrcver
as_arg_v2=$ZFS_META_KVER_MIN
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		 as_fn_error $? "
	*** Cannot build against kernel version $kernsrcver.
	*** The minimum supported kernel version is $ZFS_META_KVER_MIN.
		" "$LINENO" 5
	 ;; #(
  0) :
     ;; #(
  2) :
     ;; #(
  *) :
     ;;
esac

	LINUX=${kernelsrc}
	LINUX_OBJ=${kernelbuild}
	LINUX_VERSION=${kernsrcver}







# Check whether --with-qat was given.
if test ${with_qat+y}
then :
  withval=$with_qat; if test "$withval" = "yes"
then :
  as_fn_error $? "--with-qat=PATH requires a PATH" "$LINENO" 5
else $as_nop
  qatsrc="$withval"
fi
fi



# Check whether --with-qat-obj was given.
if test ${with_qat_obj+y}
then :
  withval=$with_qat_obj; qatbuild="$withval"
fi


	if test ! -z "${qatsrc}"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking qat source directory" >&5
printf %s "checking qat source directory... " >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $qatsrc" >&5
printf "%s\n" "$qatsrc" >&6; }
		QAT_SRC="${qatsrc}/quickassist"
		if  test ! -e "$QAT_SRC/include/cpa.h"
then :

			as_fn_error $? "
	*** Please make sure the qat driver package is installed
	*** and specify the location of the qat source with the
	*** '--with-qat=PATH' option then try again. Failed to
	*** find cpa.h in:
	${QAT_SRC}/include" "$LINENO" 5

fi

fi

	if test ! -z "${qatsrc}"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking qat build directory" >&5
printf %s "checking qat build directory... " >&6; }
		if test -z "$qatbuild"
then :

			qatbuild="${qatsrc}/build"

fi

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $qatbuild" >&5
printf "%s\n" "$qatbuild" >&6; }
		QAT_OBJ=${qatbuild}
		if  ! test -e "$QAT_OBJ/icp_qa_al.ko" && ! test -e "$QAT_OBJ/qat_api.ko"
then :

			as_fn_error $? "
	*** Please make sure the qat driver is installed then try again.
	*** Failed to find icp_qa_al.ko or qat_api.ko in:
	$QAT_OBJ" "$LINENO" 5

fi





printf "%s\n" "#define HAVE_QAT 1" >>confdefs.h


fi

				if test ! -z "${qatsrc}"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking qat file for module symbols" >&5
printf %s "checking qat file for module symbols... " >&6; }
		QAT_SYMBOLS=$QAT_SRC/lookaside/access_layer/src/Module.symvers

		if test -r $QAT_SYMBOLS
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $QAT_SYMBOLS" >&5
printf "%s\n" "$QAT_SYMBOLS" >&6; }


else $as_nop

			as_fn_error $? "
	*** Please make sure the qat driver is installed then try again.
	*** Failed to find Module.symvers in:
	$QAT_SYMBOLS
			" "$LINENO" 5

fi

fi



	if test "x$cross_compiling" != xyes
then :

		if test "$cross_compiling" = yes
then :
  { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot run test program while cross compiling
See \`config.log' for more details" "$LINENO" 5; }
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


				#include "$LINUX/include/linux/license.h"

int
main (void)
{

				return !license_is_gpl_compatible(
				    "$ZFS_META_LICENSE");

  ;
  return 0;
}

_ACEOF
if ac_fn_c_try_run "$LINENO"
then :


printf "%s\n" "#define ZFS_IS_GPL_COMPATIBLE 1" >>confdefs.h


fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi


fi




test -d build/config_modules || mkdir -p build/config_modules
cat confdefs.h - <<_ACEOF >build/config_modules/config_modules.c

#include <linux/module.h>

		#if !defined(CONFIG_MODULES)
		#error CONFIG_MODULES not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_modules || mkdir -p build/config_modules

	file=build/config_modules/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_modules

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_modules.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_modules/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_modules_license || mkdir -p build/config_modules_license
cat confdefs.h - <<_ACEOF >build/config_modules_license/config_modules_license.c

#include <linux/module.h>

		#if !defined(CONFIG_MODULES)
		#error CONFIG_MODULES not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_modules_license || mkdir -p build/config_modules_license

	file=build/config_modules_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_modules_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_modules_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_modules_license/" >>build/Makefile
fi


fi





test -d build/config_block || mkdir -p build/config_block
cat confdefs.h - <<_ACEOF >build/config_block/config_block.c

#include <linux/module.h>

		#if !defined(CONFIG_BLOCK)
		#error CONFIG_BLOCK not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_block || mkdir -p build/config_block

	file=build/config_block/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_block

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_block.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_block/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_block_license || mkdir -p build/config_block_license
cat confdefs.h - <<_ACEOF >build/config_block_license/config_block_license.c

#include <linux/module.h>

		#if !defined(CONFIG_BLOCK)
		#error CONFIG_BLOCK not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_block_license || mkdir -p build/config_block_license

	file=build/config_block_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_block_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_block_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_block_license/" >>build/Makefile
fi


fi





test -d build/config_debug_lock_alloc || mkdir -p build/config_debug_lock_alloc
cat confdefs.h - <<_ACEOF >build/config_debug_lock_alloc/config_debug_lock_alloc.c

#include <linux/module.h>

		#include <linux/mutex.h>


int
main (void)
{

		struct mutex lock;

		mutex_init(&lock);
		mutex_lock(&lock);
		mutex_unlock(&lock);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_debug_lock_alloc || mkdir -p build/config_debug_lock_alloc

	file=build/config_debug_lock_alloc/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_debug_lock_alloc

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_debug_lock_alloc.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_debug_lock_alloc/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/config_debug_lock_alloc_license || mkdir -p build/config_debug_lock_alloc_license
cat confdefs.h - <<_ACEOF >build/config_debug_lock_alloc_license/config_debug_lock_alloc_license.c

#include <linux/module.h>

		#include <linux/mutex.h>


int
main (void)
{

		struct mutex lock;

		mutex_init(&lock);
		mutex_lock(&lock);
		mutex_unlock(&lock);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_debug_lock_alloc_license || mkdir -p build/config_debug_lock_alloc_license

	file=build/config_debug_lock_alloc_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_debug_lock_alloc_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_debug_lock_alloc_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_debug_lock_alloc_license/" >>build/Makefile
fi


fi





test -d build/config_trim_unusued_ksyms || mkdir -p build/config_trim_unusued_ksyms
cat confdefs.h - <<_ACEOF >build/config_trim_unusued_ksyms/config_trim_unusued_ksyms.c

#include <linux/module.h>

		#if defined(CONFIG_TRIM_UNUSED_KSYMS)
		#error CONFIG_TRIM_UNUSED_KSYMS not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_trim_unusued_ksyms || mkdir -p build/config_trim_unusued_ksyms

	file=build/config_trim_unusued_ksyms/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_trim_unusued_ksyms

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_trim_unusued_ksyms.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_trim_unusued_ksyms/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_trim_unusued_ksyms_license || mkdir -p build/config_trim_unusued_ksyms_license
cat confdefs.h - <<_ACEOF >build/config_trim_unusued_ksyms_license/config_trim_unusued_ksyms_license.c

#include <linux/module.h>

		#if defined(CONFIG_TRIM_UNUSED_KSYMS)
		#error CONFIG_TRIM_UNUSED_KSYMS not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_trim_unusued_ksyms_license || mkdir -p build/config_trim_unusued_ksyms_license

	file=build/config_trim_unusued_ksyms_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_trim_unusued_ksyms_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_trim_unusued_ksyms_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_trim_unusued_ksyms_license/" >>build/Makefile
fi


fi





test -d build/config_zlib_deflate || mkdir -p build/config_zlib_deflate
cat confdefs.h - <<_ACEOF >build/config_zlib_deflate/config_zlib_deflate.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_DEFLATE) && \
		    !defined(CONFIG_ZLIB_DEFLATE_MODULE)
		#error CONFIG_ZLIB_DEFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_deflate || mkdir -p build/config_zlib_deflate

	file=build/config_zlib_deflate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_deflate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_deflate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_deflate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_zlib_deflate_license || mkdir -p build/config_zlib_deflate_license
cat confdefs.h - <<_ACEOF >build/config_zlib_deflate_license/config_zlib_deflate_license.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_DEFLATE) && \
		    !defined(CONFIG_ZLIB_DEFLATE_MODULE)
		#error CONFIG_ZLIB_DEFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_deflate_license || mkdir -p build/config_zlib_deflate_license

	file=build/config_zlib_deflate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_deflate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_deflate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_deflate_license/" >>build/Makefile
fi


fi





test -d build/config_zlib_inflate || mkdir -p build/config_zlib_inflate
cat confdefs.h - <<_ACEOF >build/config_zlib_inflate/config_zlib_inflate.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_INFLATE) && \
		    !defined(CONFIG_ZLIB_INFLATE_MODULE)
		#error CONFIG_ZLIB_INFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_inflate || mkdir -p build/config_zlib_inflate

	file=build/config_zlib_inflate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_inflate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_inflate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_inflate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_zlib_inflate_license || mkdir -p build/config_zlib_inflate_license
cat confdefs.h - <<_ACEOF >build/config_zlib_inflate_license/config_zlib_inflate_license.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_INFLATE) && \
		    !defined(CONFIG_ZLIB_INFLATE_MODULE)
		#error CONFIG_ZLIB_INFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_inflate_license || mkdir -p build/config_zlib_inflate_license

	file=build/config_zlib_inflate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_inflate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_inflate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_inflate_license/" >>build/Makefile
fi


fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for kernel config option compatibility" >&5
printf %s "checking for kernel config option compatibility... " >&6; }






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="yes" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.compile.config
		mv build/build.log build/build.log.config

else $as_nop

	        as_fn_error $? "
        *** Unable to compile test source to determine kernel interfaces." "$LINENO" 5

fi



																		if test "x$enable_linux_builtin" = "xno"
then :

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.config); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				if test "${name##*_}" = "license"
then :






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/$name >build/$name/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/$name/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/$name/Makefile build/$name/Makefile.modpost.config
		cat build/$name/build.log >>build/build.log.config

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi


					echo "obj-n += $dir" >>build/Makefile

else $as_nop

					echo "obj-m += $dir" >>build/Makefile

fi

else $as_nop

				echo "obj-n += $dir" >>build/Makefile

fi
		done






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.modpost.config
		cat build/build.log >>build/build.log.config

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi



else $as_nop

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.config); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				touch build/$name/$name.ko

fi
		done

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_MODULES is defined" >&5
printf %s "checking whether CONFIG_MODULES is defined... " >&6; }
	if test "x$enable_linux_builtin" != xyes
then :


	if test -d build/config_modules
then :

		if test -f build/config_modules/config_modules.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			as_fn_error $? "
		*** This kernel does not include the required loadable module
		*** support!
		***
		*** To build OpenZFS as a loadable Linux kernel module
		*** enable loadable module support by setting
		*** \`CONFIG_MODULES=y\` in the kernel configuration and run
		*** \`make modules_prepare\` in the Linux source tree.
		***
		*** If you don't intend to enable loadable kernel module
		*** support, please compile OpenZFS as a Linux kernel built-in.
		***
		*** Prepare the Linux source tree by running \`make prepare\`,
		*** use the OpenZFS \`--enable-linux-builtin\` configure option,
		*** copy the OpenZFS sources into the Linux source tree using
		*** \`./copy-builtin <linux source directory>\`,
		*** set \`CONFIG_ZFS=y\` in the kernel configuration and compile
		*** kernel as usual.
			" "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_modules\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop


	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: not needed" >&5
printf "%s\n" "not needed" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: error" >&5
printf "%s\n" "error" >&6; }
			as_fn_error $? "
		*** This kernel is unable to compile object files.
		***
		*** Please make sure you prepared the Linux source tree
		*** by running \`make prepare\` there.
			" "$LINENO" 5

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: not needed" >&5
printf "%s\n" "not needed" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: error" >&5
printf "%s\n" "error" >&6; }
			as_fn_error $? "
		*** This kernel is unable to compile object files.
		***
		*** Please make sure you prepared the Linux source tree
		*** by running \`make prepare\` there.
			" "$LINENO" 5

fi



fi


fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_BLOCK is defined" >&5
printf %s "checking whether CONFIG_BLOCK is defined... " >&6; }

	if test -d build/config_block
then :

		if test -f build/config_block/config_block.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** This kernel does not include the required block device support.
	*** Rebuild the kernel with CONFIG_BLOCK=y set." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_block\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether mutex_lock() is GPL-only" >&5
printf %s "checking whether mutex_lock() is GPL-only... " >&6; }

	if test -d build/config_debug_lock_alloc_license
then :

		if test -f build/config_debug_lock_alloc_license/config_debug_lock_alloc_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
		as_fn_error $? "
	*** Kernel built with CONFIG_DEBUG_LOCK_ALLOC which is incompatible
	*** with the CDDL license and will prevent the module linking stage
	*** from succeeding.  You must rebuild your kernel without this
	*** option enabled." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_debug_lock_alloc_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_TRIM_UNUSED_KSYM is disabled" >&5
printf %s "checking whether CONFIG_TRIM_UNUSED_KSYM is disabled... " >&6; }

	if test -d build/config_trim_unusued_ksyms
then :

		if test -f build/config_trim_unusued_ksyms/config_trim_unusued_ksyms.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		if test "x$enable_linux_builtin" != xyes
then :

			as_fn_error $? "
	*** This kernel has unused symbols trimming enabled, please disable.
	*** Rebuild the kernel with CONFIG_TRIM_UNUSED_KSYMS=n set." "$LINENO" 5

fi

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_trim_unusued_ksyms\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_ZLIB_DEFLATE is defined" >&5
printf %s "checking whether CONFIG_ZLIB_DEFLATE is defined... " >&6; }

	if test -d build/config_zlib_deflate
then :

		if test -f build/config_zlib_deflate/config_zlib_deflate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** This kernel does not include the required zlib deflate support.
	*** Rebuild the kernel with CONFIG_ZLIB_DEFLATE=y|m set." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_zlib_deflate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_ZLIB_INFLATE is defined" >&5
printf %s "checking whether CONFIG_ZLIB_INFLATE is defined... " >&6; }

	if test -d build/config_zlib_inflate
then :

		if test -f build/config_zlib_inflate/config_zlib_inflate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** This kernel does not include the required zlib inflate support.
	*** Rebuild the kernel with CONFIG_ZLIB_INFLATE=y|m set." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_zlib_inflate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	modpost=$LINUX/scripts/Makefile.modpost
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel file name for module symbols" >&5
printf %s "checking kernel file name for module symbols... " >&6; }
	if test "x$enable_linux_builtin" != xyes -a -f "$modpost"
then :

		if grep -q Modules.symvers $modpost
then :

			LINUX_SYMBOLS=Modules.symvers

else $as_nop

			LINUX_SYMBOLS=Module.symvers

fi

		if test ! -f "$LINUX_OBJ/$LINUX_SYMBOLS"
then :

			as_fn_error $? "
	*** Please make sure the kernel devel package for your distribution
	*** is installed.  If you are building with a custom kernel, make sure
	*** the kernel is configured, built, and the '--with-linux=PATH'
	*** configure option refers to the location of the kernel source.
			" "$LINENO" 5

fi

else $as_nop

		LINUX_SYMBOLS=NONE

fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LINUX_SYMBOLS" >&5
printf "%s\n" "$LINUX_SYMBOLS" >&6; }




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fpu headers are available" >&5
printf %s "checking whether fpu headers are available... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		#include <asm/fpu/api.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_API_HEADER 1" >>confdefs.h



	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: i387.h" >&5
printf "%s\n" "i387.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		#include <asm/fpu/api.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_API_HEADER 1" >>confdefs.h



	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: i387.h" >&5
printf "%s\n" "i387.h" >&6; }

fi



fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether objtool header is available" >&5
printf %s "checking whether objtool header is available... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/objtool.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_OBJTOOL_HEADER 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/objtool.h" >&5
printf "%s\n" "linux/objtool.h" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/frame.h" >&5
printf "%s\n" "linux/frame.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/objtool.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_OBJTOOL_HEADER 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/objtool.h" >&5
printf "%s\n" "linux/objtool.h" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/frame.h" >&5
printf "%s\n" "linux/frame.h" >&6; }

fi



fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether wait_queue_entry_t exists" >&5
printf %s "checking whether wait_queue_entry_t exists... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		wait_queue_entry_t *entry __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_QUEUE_ENTRY_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		wait_queue_entry_t *entry __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_QUEUE_ENTRY_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether /dev/zfs minor is available" >&5
printf %s "checking whether /dev/zfs minor is available... " >&6; }

	for i in $(seq 249 -1 200); do
		if ! grep -q "^#define\s\+.*_MINOR\s\+.*$i" \
		    ${LINUX}/include/linux/miscdevice.h; then
			ZFS_DEVICE_MINOR="$i"
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ZFS_DEVICE_MINOR" >&5
printf "%s\n" "$ZFS_DEVICE_MINOR" >&6; }

printf "%s\n" "#define ZFS_DEVICE_MINOR $ZFS_DEVICE_MINOR" >>confdefs.h

			break
		fi
	done

	if  test -z "$ZFS_DEVICE_MINOR"
then :

		as_fn_error $? "
	*** No available misc minor numbers available for use." "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether DECLARE_EVENT_CLASS() is available" >&5
printf %s "checking whether DECLARE_EVENT_CLASS() is available... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		MODULE_LICENSE("$ZFS_META_LICENSE");

		#define CREATE_TRACE_POINTS
		#include "conftest.h"


int
main (void)
{

		trace_zfs_autoconf_event_one(1UL);
		trace_zfs_autoconf_event_two(2UL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

		#if !defined(_CONFTEST_H) || defined(TRACE_HEADER_MULTI_READ)
		#define _CONFTEST_H

		#undef  TRACE_SYSTEM
		#define TRACE_SYSTEM zfs
		#include <linux/tracepoint.h>

		DECLARE_EVENT_CLASS(zfs_autoconf_event_class,
			TP_PROTO(unsigned long i),
			TP_ARGS(i),
			TP_STRUCT__entry(
				__field(unsigned long, i)
			),
			TP_fast_assign(
				__entry->i = i;
			),
			TP_printk("i = %lu", __entry->i)
		);

		#define DEFINE_AUTOCONF_EVENT(name) \
		DEFINE_EVENT(zfs_autoconf_event_class, name, \
			TP_PROTO(unsigned long i), \
			TP_ARGS(i))
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_one);
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_two);

		#endif /* _CONFTEST_H */

		#undef  TRACE_INCLUDE_PATH
		#define TRACE_INCLUDE_PATH .
		#define TRACE_INCLUDE_FILE conftest
		#include <trace/define_trace.h>

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -I$PWD/build/conftest
" >>$file

		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DECLARE_EVENT_CLASS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		MODULE_LICENSE("$ZFS_META_LICENSE");

		#define CREATE_TRACE_POINTS
		#include "conftest.h"


int
main (void)
{

		trace_zfs_autoconf_event_one(1UL);
		trace_zfs_autoconf_event_two(2UL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

		#if !defined(_CONFTEST_H) || defined(TRACE_HEADER_MULTI_READ)
		#define _CONFTEST_H

		#undef  TRACE_SYSTEM
		#define TRACE_SYSTEM zfs
		#include <linux/tracepoint.h>

		DECLARE_EVENT_CLASS(zfs_autoconf_event_class,
			TP_PROTO(unsigned long i),
			TP_ARGS(i),
			TP_STRUCT__entry(
				__field(unsigned long, i)
			),
			TP_fast_assign(
				__entry->i = i;
			),
			TP_printk("i = %lu", __entry->i)
		);

		#define DEFINE_AUTOCONF_EVENT(name) \
		DEFINE_EVENT(zfs_autoconf_event_class, name, \
			TP_PROTO(unsigned long i), \
			TP_ARGS(i))
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_one);
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_two);

		#endif /* _CONFTEST_H */

		#undef  TRACE_INCLUDE_PATH
		#define TRACE_INCLUDE_PATH .
		#define TRACE_INCLUDE_FILE conftest
		#include <trace/define_trace.h>

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -I$PWD/build/conftest
" >>$file

		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DECLARE_EVENT_CLASS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



fi








test -d build/objtool || mkdir -p build/objtool
cat confdefs.h - <<_ACEOF >build/objtool/objtool.c

#include <linux/module.h>

		#undef __ASSEMBLY__
		#include <asm/ptrace.h>
		#include <asm/frame.h>


int
main (void)
{

		#if !defined(FRAME_BEGIN)
		#error "FRAME_BEGIN is not defined"
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/objtool || mkdir -p build/objtool

	file=build/objtool/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/objtool

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := objtool.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += objtool/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/objtool_license || mkdir -p build/objtool_license
cat confdefs.h - <<_ACEOF >build/objtool_license/objtool_license.c

#include <linux/module.h>

		#undef __ASSEMBLY__
		#include <asm/ptrace.h>
		#include <asm/frame.h>


int
main (void)
{

		#if !defined(FRAME_BEGIN)
		#error "FRAME_BEGIN is not defined"
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/objtool_license || mkdir -p build/objtool_license

	file=build/objtool_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/objtool_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := objtool_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += objtool_license/" >>build/Makefile
fi


fi




test -d build/stack_frame_non_standard || mkdir -p build/stack_frame_non_standard
cat confdefs.h - <<_ACEOF >build/stack_frame_non_standard/stack_frame_non_standard.c

#include <linux/module.h>

		#ifdef HAVE_KERNEL_OBJTOOL_HEADER
		#include <linux/objtool.h>
		#else
		#include <linux/frame.h>
		#endif


int
main (void)
{

		#if !defined(STACK_FRAME_NON_STANDARD)
		#error "STACK_FRAME_NON_STANDARD is not defined."
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/stack_frame_non_standard || mkdir -p build/stack_frame_non_standard

	file=build/stack_frame_non_standard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/stack_frame_non_standard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := stack_frame_non_standard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += stack_frame_non_standard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/stack_frame_non_standard_license || mkdir -p build/stack_frame_non_standard_license
cat confdefs.h - <<_ACEOF >build/stack_frame_non_standard_license/stack_frame_non_standard_license.c

#include <linux/module.h>

		#ifdef HAVE_KERNEL_OBJTOOL_HEADER
		#include <linux/objtool.h>
		#else
		#include <linux/frame.h>
		#endif


int
main (void)
{

		#if !defined(STACK_FRAME_NON_STANDARD)
		#error "STACK_FRAME_NON_STANDARD is not defined."
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/stack_frame_non_standard_license || mkdir -p build/stack_frame_non_standard_license

	file=build/stack_frame_non_standard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/stack_frame_non_standard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := stack_frame_non_standard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += stack_frame_non_standard_license/" >>build/Makefile
fi


fi






test -d build/global_node_page_state || mkdir -p build/global_node_page_state
cat confdefs.h - <<_ACEOF >build/global_node_page_state/global_node_page_state.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_node_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_node_page_state || mkdir -p build/global_node_page_state

	file=build/global_node_page_state/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_node_page_state

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_node_page_state.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_node_page_state/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/global_node_page_state_license || mkdir -p build/global_node_page_state_license
cat confdefs.h - <<_ACEOF >build/global_node_page_state_license/global_node_page_state_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_node_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_node_page_state_license || mkdir -p build/global_node_page_state_license

	file=build/global_node_page_state_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_node_page_state_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_node_page_state_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_node_page_state_license/" >>build/Makefile
fi


fi





test -d build/global_zone_page_state || mkdir -p build/global_zone_page_state
cat confdefs.h - <<_ACEOF >build/global_zone_page_state/global_zone_page_state.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_zone_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_zone_page_state || mkdir -p build/global_zone_page_state

	file=build/global_zone_page_state/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_zone_page_state

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_zone_page_state.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_zone_page_state/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/global_zone_page_state_license || mkdir -p build/global_zone_page_state_license
cat confdefs.h - <<_ACEOF >build/global_zone_page_state_license/global_zone_page_state_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_zone_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_zone_page_state_license || mkdir -p build/global_zone_page_state_license

	file=build/global_zone_page_state_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_zone_page_state_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_zone_page_state_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_zone_page_state_license/" >>build/Makefile
fi


fi






test -d build/access_ok_type || mkdir -p build/access_ok_type
cat confdefs.h - <<_ACEOF >build/access_ok_type/access_ok_type.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		const void __user __attribute__((unused)) *addr =
		    (void *) 0xdeadbeef;
		unsigned long __attribute__((unused)) size = 1;
		int error __attribute__((unused)) = access_ok(0, addr, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/access_ok_type || mkdir -p build/access_ok_type

	file=build/access_ok_type/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/access_ok_type

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := access_ok_type.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += access_ok_type/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/access_ok_type_license || mkdir -p build/access_ok_type_license
cat confdefs.h - <<_ACEOF >build/access_ok_type_license/access_ok_type_license.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		const void __user __attribute__((unused)) *addr =
		    (void *) 0xdeadbeef;
		unsigned long __attribute__((unused)) size = 1;
		int error __attribute__((unused)) = access_ok(0, addr, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/access_ok_type_license || mkdir -p build/access_ok_type_license

	file=build/access_ok_type_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/access_ok_type_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := access_ok_type_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += access_ok_type_license/" >>build/Makefile
fi


fi





test -d build/pde_data || mkdir -p build/pde_data
cat confdefs.h - <<_ACEOF >build/pde_data/pde_data.c

#include <linux/module.h>

		#include <linux/proc_fs.h>


int
main (void)
{

		pde_data(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/pde_data || mkdir -p build/pde_data

	file=build/pde_data/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pde_data

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pde_data.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pde_data/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/pde_data_license || mkdir -p build/pde_data_license
cat confdefs.h - <<_ACEOF >build/pde_data_license/pde_data_license.c

#include <linux/module.h>

		#include <linux/proc_fs.h>


int
main (void)
{

		pde_data(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/pde_data_license || mkdir -p build/pde_data_license

	file=build/pde_data_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pde_data_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pde_data_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pde_data_license/" >>build/Makefile
fi


fi





test -d build/file_fallocate || mkdir -p build/file_fallocate
cat confdefs.h - <<_ACEOF >build/file_fallocate/file_fallocate.c

#include <linux/module.h>

		#include <linux/fs.h>

		long test_fallocate(struct file *file, int mode,
		    loff_t offset, loff_t len) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fallocate = test_fallocate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fallocate || mkdir -p build/file_fallocate

	file=build/file_fallocate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fallocate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fallocate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fallocate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_fallocate_license || mkdir -p build/file_fallocate_license
cat confdefs.h - <<_ACEOF >build/file_fallocate_license/file_fallocate_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		long test_fallocate(struct file *file, int mode,
		    loff_t offset, loff_t len) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fallocate = test_fallocate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fallocate_license || mkdir -p build/file_fallocate_license

	file=build/file_fallocate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fallocate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fallocate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fallocate_license/" >>build/Makefile
fi


fi



test -d build/falloc_fl_zero_range || mkdir -p build/falloc_fl_zero_range
cat confdefs.h - <<_ACEOF >build/falloc_fl_zero_range/falloc_fl_zero_range.c

#include <linux/module.h>

		#include <linux/falloc.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = FALLOC_FL_ZERO_RANGE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/falloc_fl_zero_range || mkdir -p build/falloc_fl_zero_range

	file=build/falloc_fl_zero_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/falloc_fl_zero_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := falloc_fl_zero_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += falloc_fl_zero_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/falloc_fl_zero_range_license || mkdir -p build/falloc_fl_zero_range_license
cat confdefs.h - <<_ACEOF >build/falloc_fl_zero_range_license/falloc_fl_zero_range_license.c

#include <linux/module.h>

		#include <linux/falloc.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = FALLOC_FL_ZERO_RANGE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/falloc_fl_zero_range_license || mkdir -p build/falloc_fl_zero_range_license

	file=build/falloc_fl_zero_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/falloc_fl_zero_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := falloc_fl_zero_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += falloc_fl_zero_range_license/" >>build/Makefile
fi


fi





test -d build/file_fadvise || mkdir -p build/file_fadvise
cat confdefs.h - <<_ACEOF >build/file_fadvise/file_fadvise.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fadvise = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fadvise || mkdir -p build/file_fadvise

	file=build/file_fadvise/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fadvise

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fadvise.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fadvise/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_fadvise_license || mkdir -p build/file_fadvise_license
cat confdefs.h - <<_ACEOF >build/file_fadvise_license/file_fadvise_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fadvise = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fadvise_license || mkdir -p build/file_fadvise_license

	file=build/file_fadvise_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fadvise_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fadvise_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fadvise_license/" >>build/Makefile
fi


fi





test -d build/generic_fadvise || mkdir -p build/generic_fadvise
cat confdefs.h - <<_ACEOF >build/generic_fadvise/generic_fadvise.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t len __attribute__ ((unused)) = 0;
		int advise __attribute__ ((unused)) = 0;
		generic_fadvise(fp, offset, len, advise);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fadvise || mkdir -p build/generic_fadvise

	file=build/generic_fadvise/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fadvise

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fadvise.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fadvise/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_fadvise_license || mkdir -p build/generic_fadvise_license
cat confdefs.h - <<_ACEOF >build/generic_fadvise_license/generic_fadvise_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t len __attribute__ ((unused)) = 0;
		int advise __attribute__ ((unused)) = 0;
		generic_fadvise(fp, offset, len, advise);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fadvise_license || mkdir -p build/generic_fadvise_license

	file=build/generic_fadvise_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fadvise_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fadvise_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fadvise_license/" >>build/Makefile
fi


fi





test -d build/2args_zlib_deflate_workspacesize || mkdir -p build/2args_zlib_deflate_workspacesize
cat confdefs.h - <<_ACEOF >build/2args_zlib_deflate_workspacesize/2args_zlib_deflate_workspacesize.c

#include <linux/module.h>

		#include <linux/zlib.h>


int
main (void)
{

		return zlib_deflate_workspacesize(MAX_WBITS, MAX_MEM_LEVEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/2args_zlib_deflate_workspacesize || mkdir -p build/2args_zlib_deflate_workspacesize

	file=build/2args_zlib_deflate_workspacesize/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/2args_zlib_deflate_workspacesize

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := 2args_zlib_deflate_workspacesize.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += 2args_zlib_deflate_workspacesize/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/2args_zlib_deflate_workspacesize_license || mkdir -p build/2args_zlib_deflate_workspacesize_license
cat confdefs.h - <<_ACEOF >build/2args_zlib_deflate_workspacesize_license/2args_zlib_deflate_workspacesize_license.c

#include <linux/module.h>

		#include <linux/zlib.h>


int
main (void)
{

		return zlib_deflate_workspacesize(MAX_WBITS, MAX_MEM_LEVEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/2args_zlib_deflate_workspacesize_license || mkdir -p build/2args_zlib_deflate_workspacesize_license

	file=build/2args_zlib_deflate_workspacesize_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/2args_zlib_deflate_workspacesize_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := 2args_zlib_deflate_workspacesize_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += 2args_zlib_deflate_workspacesize_license/" >>build/Makefile
fi


fi






test -d build/rwsem_activity || mkdir -p build/rwsem_activity
cat confdefs.h - <<_ACEOF >build/rwsem_activity/rwsem_activity.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		struct rw_semaphore dummy_semaphore __attribute__ ((unused));
		dummy_semaphore.activity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_activity || mkdir -p build/rwsem_activity

	file=build/rwsem_activity/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_activity

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_activity.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_activity/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/rwsem_activity_license || mkdir -p build/rwsem_activity_license
cat confdefs.h - <<_ACEOF >build/rwsem_activity_license/rwsem_activity_license.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		struct rw_semaphore dummy_semaphore __attribute__ ((unused));
		dummy_semaphore.activity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_activity_license || mkdir -p build/rwsem_activity_license

	file=build/rwsem_activity_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_activity_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_activity_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_activity_license/" >>build/Makefile
fi


fi





test -d build/rwsem_atomic_long_count || mkdir -p build/rwsem_atomic_long_count
cat confdefs.h - <<_ACEOF >build/rwsem_atomic_long_count/rwsem_atomic_long_count.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		DECLARE_RWSEM(dummy_semaphore);
		(void) atomic_long_read(&dummy_semaphore.count);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_atomic_long_count || mkdir -p build/rwsem_atomic_long_count

	file=build/rwsem_atomic_long_count/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_atomic_long_count

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_atomic_long_count.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_atomic_long_count/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/rwsem_atomic_long_count_license || mkdir -p build/rwsem_atomic_long_count_license
cat confdefs.h - <<_ACEOF >build/rwsem_atomic_long_count_license/rwsem_atomic_long_count_license.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		DECLARE_RWSEM(dummy_semaphore);
		(void) atomic_long_read(&dummy_semaphore.count);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_atomic_long_count_license || mkdir -p build/rwsem_atomic_long_count_license

	file=build/rwsem_atomic_long_count_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_atomic_long_count_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_atomic_long_count_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_atomic_long_count_license/" >>build/Makefile
fi


fi







test -d build/sched_rt_header || mkdir -p build/sched_rt_header
cat confdefs.h - <<_ACEOF >build/sched_rt_header/sched_rt_header.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/rt.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_rt_header || mkdir -p build/sched_rt_header

	file=build/sched_rt_header/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_rt_header

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_rt_header.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_rt_header/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sched_rt_header_license || mkdir -p build/sched_rt_header_license
cat confdefs.h - <<_ACEOF >build/sched_rt_header_license/sched_rt_header_license.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/rt.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_rt_header_license || mkdir -p build/sched_rt_header_license

	file=build/sched_rt_header_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_rt_header_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_rt_header_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_rt_header_license/" >>build/Makefile
fi


fi





test -d build/sched_signal_header || mkdir -p build/sched_signal_header
cat confdefs.h - <<_ACEOF >build/sched_signal_header/sched_signal_header.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/signal.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_signal_header || mkdir -p build/sched_signal_header

	file=build/sched_signal_header/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_signal_header

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_signal_header.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_signal_header/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sched_signal_header_license || mkdir -p build/sched_signal_header_license
cat confdefs.h - <<_ACEOF >build/sched_signal_header_license/sched_signal_header_license.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/signal.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_signal_header_license || mkdir -p build/sched_signal_header_license

	file=build/sched_signal_header_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_signal_header_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_signal_header_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_signal_header_license/" >>build/Makefile
fi


fi





test -d build/io_schedule_timeout || mkdir -p build/io_schedule_timeout
cat confdefs.h - <<_ACEOF >build/io_schedule_timeout/io_schedule_timeout.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		(void) io_schedule_timeout(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/io_schedule_timeout || mkdir -p build/io_schedule_timeout

	file=build/io_schedule_timeout/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/io_schedule_timeout

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := io_schedule_timeout.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += io_schedule_timeout/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/io_schedule_timeout_license || mkdir -p build/io_schedule_timeout_license
cat confdefs.h - <<_ACEOF >build/io_schedule_timeout_license/io_schedule_timeout_license.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		(void) io_schedule_timeout(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/io_schedule_timeout_license || mkdir -p build/io_schedule_timeout_license

	file=build/io_schedule_timeout_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/io_schedule_timeout_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := io_schedule_timeout_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += io_schedule_timeout_license/" >>build/Makefile
fi


fi






test -d build/usleep_range || mkdir -p build/usleep_range
cat confdefs.h - <<_ACEOF >build/usleep_range/usleep_range.c

#include <linux/module.h>

		#include <linux/delay.h>


int
main (void)
{

		usleep_range(0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/usleep_range || mkdir -p build/usleep_range

	file=build/usleep_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/usleep_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := usleep_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += usleep_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/usleep_range_license || mkdir -p build/usleep_range_license
cat confdefs.h - <<_ACEOF >build/usleep_range_license/usleep_range_license.c

#include <linux/module.h>

		#include <linux/delay.h>


int
main (void)
{

		usleep_range(0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/usleep_range_license || mkdir -p build/usleep_range_license

	file=build/usleep_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/usleep_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := usleep_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += usleep_range_license/" >>build/Makefile
fi


fi






test -d build/kmem_cache_create_usercopy || mkdir -p build/kmem_cache_create_usercopy
cat confdefs.h - <<_ACEOF >build/kmem_cache_create_usercopy/kmem_cache_create_usercopy.c

#include <linux/module.h>

		#include <linux/slab.h>
		static void ctor(void *foo) { /* fake ctor */ }


int
main (void)
{

		struct kmem_cache *skc_linux_cache;
		const char *name = "test";
		size_t size = 4096;
		size_t align = 8;
		unsigned long flags = 0;
		size_t useroffset = 0;
		size_t usersize = size - useroffset;

		skc_linux_cache = kmem_cache_create_usercopy(
		    name, size, align, flags, useroffset, usersize, ctor);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmem_cache_create_usercopy || mkdir -p build/kmem_cache_create_usercopy

	file=build/kmem_cache_create_usercopy/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmem_cache_create_usercopy

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmem_cache_create_usercopy.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmem_cache_create_usercopy/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kmem_cache_create_usercopy_license || mkdir -p build/kmem_cache_create_usercopy_license
cat confdefs.h - <<_ACEOF >build/kmem_cache_create_usercopy_license/kmem_cache_create_usercopy_license.c

#include <linux/module.h>

		#include <linux/slab.h>
		static void ctor(void *foo) { /* fake ctor */ }


int
main (void)
{

		struct kmem_cache *skc_linux_cache;
		const char *name = "test";
		size_t size = 4096;
		size_t align = 8;
		unsigned long flags = 0;
		size_t useroffset = 0;
		size_t usersize = size - useroffset;

		skc_linux_cache = kmem_cache_create_usercopy(
		    name, size, align, flags, useroffset, usersize, ctor);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmem_cache_create_usercopy_license || mkdir -p build/kmem_cache_create_usercopy_license

	file=build/kmem_cache_create_usercopy_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmem_cache_create_usercopy_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmem_cache_create_usercopy_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmem_cache_create_usercopy_license/" >>build/Makefile
fi


fi






test -d build/kvmalloc || mkdir -p build/kvmalloc
cat confdefs.h - <<_ACEOF >build/kvmalloc/kvmalloc.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/slab.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = kvmalloc(0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kvmalloc || mkdir -p build/kvmalloc

	file=build/kvmalloc/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kvmalloc

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kvmalloc.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kvmalloc/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kvmalloc_license || mkdir -p build/kvmalloc_license
cat confdefs.h - <<_ACEOF >build/kvmalloc_license/kvmalloc_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/slab.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = kvmalloc(0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kvmalloc_license || mkdir -p build/kvmalloc_license

	file=build/kvmalloc_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kvmalloc_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kvmalloc_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kvmalloc_license/" >>build/Makefile
fi


fi





test -d build/__vmalloc || mkdir -p build/__vmalloc
cat confdefs.h - <<_ACEOF >build/__vmalloc/__vmalloc.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmalloc.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = __vmalloc(0, GFP_KERNEL, PAGE_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__vmalloc || mkdir -p build/__vmalloc

	file=build/__vmalloc/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__vmalloc

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __vmalloc.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __vmalloc/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/__vmalloc_license || mkdir -p build/__vmalloc_license
cat confdefs.h - <<_ACEOF >build/__vmalloc_license/__vmalloc_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmalloc.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = __vmalloc(0, GFP_KERNEL, PAGE_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/__vmalloc_license || mkdir -p build/__vmalloc_license

	file=build/__vmalloc_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__vmalloc_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __vmalloc_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __vmalloc_license/" >>build/Makefile
fi


fi






test -d build/wait_on_bit || mkdir -p build/wait_on_bit
cat confdefs.h - <<_ACEOF >build/wait_on_bit/wait_on_bit.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		int (*action)(void *) = NULL;
		wait_on_bit(NULL, 0, action, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_on_bit || mkdir -p build/wait_on_bit

	file=build/wait_on_bit/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_on_bit

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_on_bit.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_on_bit/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/wait_on_bit_license || mkdir -p build/wait_on_bit_license
cat confdefs.h - <<_ACEOF >build/wait_on_bit_license/wait_on_bit_license.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		int (*action)(void *) = NULL;
		wait_on_bit(NULL, 0, action, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_on_bit_license || mkdir -p build/wait_on_bit_license

	file=build/wait_on_bit_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_on_bit_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_on_bit_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_on_bit_license/" >>build/Makefile
fi


fi





test -d build/wait_queue_head_entry || mkdir -p build/wait_queue_head_entry
cat confdefs.h - <<_ACEOF >build/wait_queue_head_entry/wait_queue_head_entry.c

#include <linux/module.h>

		#include <linux/wait.h>

		#ifdef HAVE_WAIT_QUEUE_ENTRY_T
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_entry_t	spl_wait_queue_entry_t;
		#else
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_t		spl_wait_queue_entry_t;
		#endif


int
main (void)
{

		spl_wait_queue_head_t wq_head;
		spl_wait_queue_entry_t wq_entry;
		struct list_head *head __attribute__ ((unused));
		struct list_head *entry __attribute__ ((unused));

		head = &wq_head.head;
		entry = &wq_entry.entry;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_queue_head_entry || mkdir -p build/wait_queue_head_entry

	file=build/wait_queue_head_entry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_queue_head_entry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_queue_head_entry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_queue_head_entry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/wait_queue_head_entry_license || mkdir -p build/wait_queue_head_entry_license
cat confdefs.h - <<_ACEOF >build/wait_queue_head_entry_license/wait_queue_head_entry_license.c

#include <linux/module.h>

		#include <linux/wait.h>

		#ifdef HAVE_WAIT_QUEUE_ENTRY_T
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_entry_t	spl_wait_queue_entry_t;
		#else
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_t		spl_wait_queue_entry_t;
		#endif


int
main (void)
{

		spl_wait_queue_head_t wq_head;
		spl_wait_queue_entry_t wq_entry;
		struct list_head *head __attribute__ ((unused));
		struct list_head *entry __attribute__ ((unused));

		head = &wq_head.head;
		entry = &wq_entry.entry;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_queue_head_entry_license || mkdir -p build/wait_queue_head_entry_license

	file=build/wait_queue_head_entry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_queue_head_entry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_queue_head_entry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_queue_head_entry_license/" >>build/Makefile
fi


fi







test -d build/timestamp_truncate || mkdir -p build/timestamp_truncate
cat confdefs.h - <<_ACEOF >build/timestamp_truncate/timestamp_truncate.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct timespec64 ts;
		struct inode ip;

		memset(&ts, 0, sizeof(ts));
		ts = timestamp_truncate(ts, &ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timestamp_truncate || mkdir -p build/timestamp_truncate

	file=build/timestamp_truncate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timestamp_truncate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timestamp_truncate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timestamp_truncate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timestamp_truncate_license || mkdir -p build/timestamp_truncate_license
cat confdefs.h - <<_ACEOF >build/timestamp_truncate_license/timestamp_truncate_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct timespec64 ts;
		struct inode ip;

		memset(&ts, 0, sizeof(ts));
		ts = timestamp_truncate(ts, &ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timestamp_truncate_license || mkdir -p build/timestamp_truncate_license

	file=build/timestamp_truncate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timestamp_truncate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timestamp_truncate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timestamp_truncate_license/" >>build/Makefile
fi


fi




test -d build/inode_times || mkdir -p build/inode_times
cat confdefs.h - <<_ACEOF >build/inode_times/inode_times.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip;
		struct timespec ts;

		memset(&ip, 0, sizeof(ip));
		ts = ip.i_mtime;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_times || mkdir -p build/inode_times

	file=build/inode_times/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_times

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_times.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_times/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_times_license || mkdir -p build/inode_times_license
cat confdefs.h - <<_ACEOF >build/inode_times_license/inode_times_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip;
		struct timespec ts;

		memset(&ip, 0, sizeof(ip));
		ts = ip.i_mtime;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_times_license || mkdir -p build/inode_times_license

	file=build/inode_times_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_times_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_times_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_times_license/" >>build/Makefile
fi


fi





test -d build/inode_lock || mkdir -p build/inode_lock
cat confdefs.h - <<_ACEOF >build/inode_lock/inode_lock.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *inode = NULL;
		inode_lock_shared(inode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_lock || mkdir -p build/inode_lock

	file=build/inode_lock/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_lock

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_lock.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_lock/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_lock_license || mkdir -p build/inode_lock_license
cat confdefs.h - <<_ACEOF >build/inode_lock_license/inode_lock_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *inode = NULL;
		inode_lock_shared(inode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_lock_license || mkdir -p build/inode_lock_license

	file=build/inode_lock_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_lock_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_lock_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_lock_license/" >>build/Makefile
fi


fi





test -d build/group_info_gid || mkdir -p build/group_info_gid
cat confdefs.h - <<_ACEOF >build/group_info_gid/group_info_gid.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct group_info gi __attribute__ ((unused)) = {};
		gi.gid[0] = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/group_info_gid || mkdir -p build/group_info_gid

	file=build/group_info_gid/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/group_info_gid

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := group_info_gid.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += group_info_gid/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/group_info_gid_license || mkdir -p build/group_info_gid_license
cat confdefs.h - <<_ACEOF >build/group_info_gid_license/group_info_gid_license.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct group_info gi __attribute__ ((unused)) = {};
		gi.gid[0] = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/group_info_gid_license || mkdir -p build/group_info_gid_license

	file=build/group_info_gid_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/group_info_gid_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := group_info_gid_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += group_info_gid_license/" >>build/Makefile
fi


fi






test -d build/kernel_write || mkdir -p build/kernel_write
cat confdefs.h - <<_ACEOF >build/kernel_write/kernel_write.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		const void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_write(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_write || mkdir -p build/kernel_write

	file=build/kernel_write/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_write

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_write.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_write/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kernel_write_license || mkdir -p build/kernel_write_license
cat confdefs.h - <<_ACEOF >build/kernel_write_license/kernel_write_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		const void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_write(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_write_license || mkdir -p build/kernel_write_license

	file=build/kernel_write_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_write_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_write_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_write_license/" >>build/Makefile
fi


fi





test -d build/kernel_read || mkdir -p build/kernel_read
cat confdefs.h - <<_ACEOF >build/kernel_read/kernel_read.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_read(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_read || mkdir -p build/kernel_read

	file=build/kernel_read/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_read

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_read.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_read/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kernel_read_license || mkdir -p build/kernel_read_license
cat confdefs.h - <<_ACEOF >build/kernel_read_license/kernel_read_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_read(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_read_license || mkdir -p build/kernel_read_license

	file=build/kernel_read_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_read_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_read_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_read_license/" >>build/Makefile
fi


fi






test -d build/timer_setup || mkdir -p build/timer_setup
cat confdefs.h - <<_ACEOF >build/timer_setup/timer_setup.c

#include <linux/module.h>

		#include <linux/timer.h>

		struct my_task_timer {
			struct timer_list timer;
			int data;
		};

		void task_expire(struct timer_list *tl)
		{
			struct my_task_timer *task_timer =
			    from_timer(task_timer, tl, timer);
			task_timer->data = 42;
		}


int
main (void)
{

		struct my_task_timer task_timer;
		timer_setup(&task_timer.timer, task_expire, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_setup || mkdir -p build/timer_setup

	file=build/timer_setup/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_setup

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_setup.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_setup/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timer_setup_license || mkdir -p build/timer_setup_license
cat confdefs.h - <<_ACEOF >build/timer_setup_license/timer_setup_license.c

#include <linux/module.h>

		#include <linux/timer.h>

		struct my_task_timer {
			struct timer_list timer;
			int data;
		};

		void task_expire(struct timer_list *tl)
		{
			struct my_task_timer *task_timer =
			    from_timer(task_timer, tl, timer);
			task_timer->data = 42;
		}


int
main (void)
{

		struct my_task_timer task_timer;
		timer_setup(&task_timer.timer, task_expire, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_setup_license || mkdir -p build/timer_setup_license

	file=build/timer_setup_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_setup_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_setup_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_setup_license/" >>build/Makefile
fi


fi




test -d build/timer_list_function || mkdir -p build/timer_list_function
cat confdefs.h - <<_ACEOF >build/timer_list_function/timer_list_function.c

#include <linux/module.h>

		#include <linux/timer.h>
		void task_expire(struct timer_list *tl) {}


int
main (void)
{

		struct timer_list tl;
		tl.function = task_expire;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_function || mkdir -p build/timer_list_function

	file=build/timer_list_function/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_function

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_function.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_function/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timer_list_function_license || mkdir -p build/timer_list_function_license
cat confdefs.h - <<_ACEOF >build/timer_list_function_license/timer_list_function_license.c

#include <linux/module.h>

		#include <linux/timer.h>
		void task_expire(struct timer_list *tl) {}


int
main (void)
{

		struct timer_list tl;
		tl.function = task_expire;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_function_license || mkdir -p build/timer_list_function_license

	file=build/timer_list_function_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_function_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_function_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_function_license/" >>build/Makefile
fi


fi




test -d build/timer_list_flags || mkdir -p build/timer_list_flags
cat confdefs.h - <<_ACEOF >build/timer_list_flags/timer_list_flags.c

#include <linux/module.h>

		#include <linux/timer.h>


int
main (void)
{

		struct timer_list tl;
		tl.flags = 2;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_flags || mkdir -p build/timer_list_flags

	file=build/timer_list_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timer_list_flags_license || mkdir -p build/timer_list_flags_license
cat confdefs.h - <<_ACEOF >build/timer_list_flags_license/timer_list_flags_license.c

#include <linux/module.h>

		#include <linux/timer.h>


int
main (void)
{

		struct timer_list tl;
		tl.flags = 2;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_flags_license || mkdir -p build/timer_list_flags_license

	file=build/timer_list_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_flags_license/" >>build/Makefile
fi


fi





test -d build/super_user_ns || mkdir -p build/super_user_ns
cat confdefs.h - <<_ACEOF >build/super_user_ns/super_user_ns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/user_namespace.h>


int
main (void)
{

		struct super_block super;
		super.s_user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_user_ns || mkdir -p build/super_user_ns

	file=build/super_user_ns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_user_ns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_user_ns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_user_ns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_user_ns_license || mkdir -p build/super_user_ns_license
cat confdefs.h - <<_ACEOF >build/super_user_ns_license/super_user_ns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/user_namespace.h>


int
main (void)
{

		struct super_block super;
		super.s_user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_user_ns_license || mkdir -p build/super_user_ns_license

	file=build/super_user_ns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_user_ns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_user_ns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_user_ns_license/" >>build/Makefile
fi


fi





test -d build/proc_ops_struct || mkdir -p build/proc_ops_struct
cat confdefs.h - <<_ACEOF >build/proc_ops_struct/proc_ops_struct.c

#include <linux/module.h>

		#include <linux/proc_fs.h>

		int test_open(struct inode *ip, struct file *fp) { return 0; }
		ssize_t test_read(struct file *fp, char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		ssize_t test_write(struct file *fp, const char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		loff_t test_lseek(struct file *fp, loff_t off, int flag)
		    { return 0; }
		int test_release(struct inode *ip, struct file *fp)
		    { return 0; }

		const struct proc_ops test_ops __attribute__ ((unused)) = {
			.proc_open      = test_open,
			.proc_read      = test_read,
			.proc_write	= test_write,
			.proc_lseek     = test_lseek,
			.proc_release   = test_release,
		};


int
main (void)
{

		struct proc_dir_entry *entry __attribute__ ((unused)) =
		    proc_create_data("test", 0444, NULL, &test_ops, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/proc_ops_struct || mkdir -p build/proc_ops_struct

	file=build/proc_ops_struct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/proc_ops_struct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := proc_ops_struct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += proc_ops_struct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/proc_ops_struct_license || mkdir -p build/proc_ops_struct_license
cat confdefs.h - <<_ACEOF >build/proc_ops_struct_license/proc_ops_struct_license.c

#include <linux/module.h>

		#include <linux/proc_fs.h>

		int test_open(struct inode *ip, struct file *fp) { return 0; }
		ssize_t test_read(struct file *fp, char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		ssize_t test_write(struct file *fp, const char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		loff_t test_lseek(struct file *fp, loff_t off, int flag)
		    { return 0; }
		int test_release(struct inode *ip, struct file *fp)
		    { return 0; }

		const struct proc_ops test_ops __attribute__ ((unused)) = {
			.proc_open      = test_open,
			.proc_read      = test_read,
			.proc_write	= test_write,
			.proc_lseek     = test_lseek,
			.proc_release   = test_release,
		};


int
main (void)
{

		struct proc_dir_entry *entry __attribute__ ((unused)) =
		    proc_create_data("test", 0444, NULL, &test_ops, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/proc_ops_struct_license || mkdir -p build/proc_ops_struct_license

	file=build/proc_ops_struct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/proc_ops_struct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := proc_ops_struct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += proc_ops_struct_license/" >>build/Makefile
fi


fi






test -d build/block_device_operations_check_events || mkdir -p build/block_device_operations_check_events
cat confdefs.h - <<_ACEOF >build/block_device_operations_check_events/block_device_operations_check_events.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		unsigned int blk_check_events(struct gendisk *disk,
		    unsigned int clearing) {
			(void) disk, (void) clearing;
			return (0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.check_events	= blk_check_events,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_check_events || mkdir -p build/block_device_operations_check_events

	file=build/block_device_operations_check_events/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_check_events

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_check_events.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_check_events/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_check_events_license || mkdir -p build/block_device_operations_check_events_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_check_events_license/block_device_operations_check_events_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		unsigned int blk_check_events(struct gendisk *disk,
		    unsigned int clearing) {
			(void) disk, (void) clearing;
			return (0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.check_events	= blk_check_events,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_check_events_license || mkdir -p build/block_device_operations_check_events_license

	file=build/block_device_operations_check_events_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_check_events_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_check_events_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_check_events_license/" >>build/Makefile
fi


fi





test -d build/block_device_operations_release_void || mkdir -p build/block_device_operations_release_void
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void/block_device_operations_release_void.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g, fmode_t mode) {
			(void) g, (void) mode;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void || mkdir -p build/block_device_operations_release_void

	file=build/block_device_operations_release_void/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_release_void_license || mkdir -p build/block_device_operations_release_void_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void_license/block_device_operations_release_void_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g, fmode_t mode) {
			(void) g, (void) mode;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void_license || mkdir -p build/block_device_operations_release_void_license

	file=build/block_device_operations_release_void_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void_license/" >>build/Makefile
fi


fi





test -d build/block_device_operations_release_void_1arg || mkdir -p build/block_device_operations_release_void_1arg
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void_1arg/block_device_operations_release_void_1arg.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g) {
			(void) g;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void_1arg || mkdir -p build/block_device_operations_release_void_1arg

	file=build/block_device_operations_release_void_1arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void_1arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void_1arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void_1arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_release_void_1arg_license || mkdir -p build/block_device_operations_release_void_1arg_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void_1arg_license/block_device_operations_release_void_1arg_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g) {
			(void) g;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void_1arg_license || mkdir -p build/block_device_operations_release_void_1arg_license

	file=build/block_device_operations_release_void_1arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void_1arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void_1arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void_1arg_license/" >>build/Makefile
fi


fi





test -d build/block_device_operations_revalidate_disk || mkdir -p build/block_device_operations_revalidate_disk
cat confdefs.h - <<_ACEOF >build/block_device_operations_revalidate_disk/block_device_operations_revalidate_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		int blk_revalidate_disk(struct gendisk *disk) {
			(void) disk;
			return(0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.revalidate_disk	= blk_revalidate_disk,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_revalidate_disk || mkdir -p build/block_device_operations_revalidate_disk

	file=build/block_device_operations_revalidate_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_revalidate_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_revalidate_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_revalidate_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_revalidate_disk_license || mkdir -p build/block_device_operations_revalidate_disk_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_revalidate_disk_license/block_device_operations_revalidate_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		int blk_revalidate_disk(struct gendisk *disk) {
			(void) disk;
			return(0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.revalidate_disk	= blk_revalidate_disk,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_revalidate_disk_license || mkdir -p build/block_device_operations_revalidate_disk_license

	file=build/block_device_operations_revalidate_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_revalidate_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_revalidate_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_revalidate_disk_license/" >>build/Makefile
fi


fi







test -d build/req_failfast_mask || mkdir -p build/req_failfast_mask
cat confdefs.h - <<_ACEOF >build/req_failfast_mask/req_failfast_mask.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FAILFAST_MASK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_failfast_mask || mkdir -p build/req_failfast_mask

	file=build/req_failfast_mask/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_failfast_mask

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_failfast_mask.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_failfast_mask/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_failfast_mask_license || mkdir -p build/req_failfast_mask_license
cat confdefs.h - <<_ACEOF >build/req_failfast_mask_license/req_failfast_mask_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FAILFAST_MASK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_failfast_mask_license || mkdir -p build/req_failfast_mask_license

	file=build/req_failfast_mask_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_failfast_mask_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_failfast_mask_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_failfast_mask_license/" >>build/Makefile
fi


fi




test -d build/req_discard || mkdir -p build/req_discard
cat confdefs.h - <<_ACEOF >build/req_discard/req_discard.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_discard || mkdir -p build/req_discard

	file=build/req_discard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_discard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_discard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_discard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_discard_license || mkdir -p build/req_discard_license
cat confdefs.h - <<_ACEOF >build/req_discard_license/req_discard_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_discard_license || mkdir -p build/req_discard_license

	file=build/req_discard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_discard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_discard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_discard_license/" >>build/Makefile
fi


fi




test -d build/req_flush || mkdir -p build/req_flush
cat confdefs.h - <<_ACEOF >build/req_flush/req_flush.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_flush || mkdir -p build/req_flush

	file=build/req_flush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_flush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_flush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_flush/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_flush_license || mkdir -p build/req_flush_license
cat confdefs.h - <<_ACEOF >build/req_flush_license/req_flush_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_flush_license || mkdir -p build/req_flush_license

	file=build/req_flush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_flush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_flush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_flush_license/" >>build/Makefile
fi


fi




test -d build/req_preflush || mkdir -p build/req_preflush
cat confdefs.h - <<_ACEOF >build/req_preflush/req_preflush.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_PREFLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_preflush || mkdir -p build/req_preflush

	file=build/req_preflush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_preflush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_preflush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_preflush/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_preflush_license || mkdir -p build/req_preflush_license
cat confdefs.h - <<_ACEOF >build/req_preflush_license/req_preflush_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_PREFLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_preflush_license || mkdir -p build/req_preflush_license

	file=build/req_preflush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_preflush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_preflush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_preflush_license/" >>build/Makefile
fi


fi





test -d build/req_op_discard || mkdir -p build/req_op_discard
cat confdefs.h - <<_ACEOF >build/req_op_discard/req_op_discard.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_discard || mkdir -p build/req_op_discard

	file=build/req_op_discard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_discard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_discard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_discard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_op_discard_license || mkdir -p build/req_op_discard_license
cat confdefs.h - <<_ACEOF >build/req_op_discard_license/req_op_discard_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_discard_license || mkdir -p build/req_op_discard_license

	file=build/req_op_discard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_discard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_discard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_discard_license/" >>build/Makefile
fi


fi




test -d build/req_op_secure_erase || mkdir -p build/req_op_secure_erase
cat confdefs.h - <<_ACEOF >build/req_op_secure_erase/req_op_secure_erase.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_SECURE_ERASE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_secure_erase || mkdir -p build/req_op_secure_erase

	file=build/req_op_secure_erase/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_secure_erase

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_secure_erase.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_secure_erase/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_op_secure_erase_license || mkdir -p build/req_op_secure_erase_license
cat confdefs.h - <<_ACEOF >build/req_op_secure_erase_license/req_op_secure_erase_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_SECURE_ERASE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_secure_erase_license || mkdir -p build/req_op_secure_erase_license

	file=build/req_op_secure_erase_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_secure_erase_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_secure_erase_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_secure_erase_license/" >>build/Makefile
fi


fi




test -d build/req_op_flush || mkdir -p build/req_op_flush
cat confdefs.h - <<_ACEOF >build/req_op_flush/req_op_flush.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_flush || mkdir -p build/req_op_flush

	file=build/req_op_flush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_flush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_flush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_flush/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_op_flush_license || mkdir -p build/req_op_flush_license
cat confdefs.h - <<_ACEOF >build/req_op_flush_license/req_op_flush_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_flush_license || mkdir -p build/req_op_flush_license

	file=build/req_op_flush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_flush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_flush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_flush_license/" >>build/Makefile
fi


fi




test -d build/bio_bi_opf || mkdir -p build/bio_bi_opf
cat confdefs.h - <<_ACEOF >build/bio_bi_opf/bio_bi_opf.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		bio.bi_opf = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_opf || mkdir -p build/bio_bi_opf

	file=build/bio_bi_opf/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_opf

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_opf.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_opf/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bi_opf_license || mkdir -p build/bio_bi_opf_license
cat confdefs.h - <<_ACEOF >build/bio_bi_opf_license/bio_bi_opf_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		bio.bi_opf = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_opf_license || mkdir -p build/bio_bi_opf_license

	file=build/bio_bi_opf_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_opf_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_opf_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_opf_license/" >>build/Makefile
fi


fi




test -d build/bio_set_op_attrs || mkdir -p build/bio_set_op_attrs
cat confdefs.h - <<_ACEOF >build/bio_set_op_attrs/bio_set_op_attrs.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio __attribute__ ((unused)) = NULL;
		bio_set_op_attrs(bio, 0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_op_attrs || mkdir -p build/bio_set_op_attrs

	file=build/bio_set_op_attrs/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_op_attrs

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_op_attrs.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_op_attrs/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_set_op_attrs_license || mkdir -p build/bio_set_op_attrs_license
cat confdefs.h - <<_ACEOF >build/bio_set_op_attrs_license/bio_set_op_attrs_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio __attribute__ ((unused)) = NULL;
		bio_set_op_attrs(bio, 0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_op_attrs_license || mkdir -p build/bio_set_op_attrs_license

	file=build/bio_set_op_attrs_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_op_attrs_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_op_attrs_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_op_attrs_license/" >>build/Makefile
fi


fi





test -d build/bio_set_dev || mkdir -p build/bio_set_dev
cat confdefs.h - <<_ACEOF >build/bio_set_dev/bio_set_dev.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		bio_set_dev(bio, bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev || mkdir -p build/bio_set_dev

	file=build/bio_set_dev/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/bio_set_dev_license || mkdir -p build/bio_set_dev_license
cat confdefs.h - <<_ACEOF >build/bio_set_dev_license/bio_set_dev_license.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		bio_set_dev(bio, bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev_license || mkdir -p build/bio_set_dev_license

	file=build/bio_set_dev_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev_license/" >>build/Makefile
fi


fi





test -d build/bio_end_io_t_args || mkdir -p build/bio_end_io_t_args
cat confdefs.h - <<_ACEOF >build/bio_end_io_t_args/bio_end_io_t_args.c

#include <linux/module.h>

		#include <linux/bio.h>
		void wanted_end_io(struct bio *bio) { return; }
		bio_end_io_t *end_io __attribute__ ((unused)) = wanted_end_io;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_end_io_t_args || mkdir -p build/bio_end_io_t_args

	file=build/bio_end_io_t_args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_end_io_t_args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_end_io_t_args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_end_io_t_args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_end_io_t_args_license || mkdir -p build/bio_end_io_t_args_license
cat confdefs.h - <<_ACEOF >build/bio_end_io_t_args_license/bio_end_io_t_args_license.c

#include <linux/module.h>

		#include <linux/bio.h>
		void wanted_end_io(struct bio *bio) { return; }
		bio_end_io_t *end_io __attribute__ ((unused)) = wanted_end_io;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_end_io_t_args_license || mkdir -p build/bio_end_io_t_args_license

	file=build/bio_end_io_t_args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_end_io_t_args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_end_io_t_args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_end_io_t_args_license/" >>build/Makefile
fi


fi





test -d build/bio_bi_status || mkdir -p build/bio_bi_status
cat confdefs.h - <<_ACEOF >build/bio_bi_status/bio_bi_status.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		blk_status_t status __attribute__ ((unused)) = BLK_STS_OK;
		bio.bi_status = status;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_status || mkdir -p build/bio_bi_status

	file=build/bio_bi_status/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_status

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_status.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_status/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bi_status_license || mkdir -p build/bio_bi_status_license
cat confdefs.h - <<_ACEOF >build/bio_bi_status_license/bio_bi_status_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		blk_status_t status __attribute__ ((unused)) = BLK_STS_OK;
		bio.bi_status = status;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_status_license || mkdir -p build/bio_bi_status_license

	file=build/bio_bi_status_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_status_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_status_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_status_license/" >>build/Makefile
fi


fi





test -d build/bio_bvec_iter || mkdir -p build/bio_bvec_iter
cat confdefs.h - <<_ACEOF >build/bio_bvec_iter/bio_bvec_iter.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio;
		bio.bi_iter.bi_sector = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bvec_iter || mkdir -p build/bio_bvec_iter

	file=build/bio_bvec_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bvec_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bvec_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bvec_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bvec_iter_license || mkdir -p build/bio_bvec_iter_license
cat confdefs.h - <<_ACEOF >build/bio_bvec_iter_license/bio_bvec_iter_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio;
		bio.bi_iter.bi_sector = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bvec_iter_license || mkdir -p build/bio_bvec_iter_license

	file=build/bio_bvec_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bvec_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bvec_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bvec_iter_license/" >>build/Makefile
fi


fi





test -d build/submit_bio || mkdir -p build/submit_bio
cat confdefs.h - <<_ACEOF >build/submit_bio/submit_bio.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio = NULL;
		(void) submit_bio(bio);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/submit_bio || mkdir -p build/submit_bio

	file=build/submit_bio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/submit_bio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := submit_bio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += submit_bio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/submit_bio_license || mkdir -p build/submit_bio_license
cat confdefs.h - <<_ACEOF >build/submit_bio_license/submit_bio_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio = NULL;
		(void) submit_bio(bio);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/submit_bio_license || mkdir -p build/submit_bio_license

	file=build/submit_bio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/submit_bio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := submit_bio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += submit_bio_license/" >>build/Makefile
fi


fi





test -d build/current_bio_list || mkdir -p build/current_bio_list
cat confdefs.h - <<_ACEOF >build/current_bio_list/current_bio_list.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		current->bio_list = (struct bio_list *) NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_bio_list || mkdir -p build/current_bio_list

	file=build/current_bio_list/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_bio_list

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_bio_list.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_bio_list/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/current_bio_list_license || mkdir -p build/current_bio_list_license
cat confdefs.h - <<_ACEOF >build/current_bio_list_license/current_bio_list_license.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		current->bio_list = (struct bio_list *) NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_bio_list_license || mkdir -p build/current_bio_list_license

	file=build/current_bio_list_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_bio_list_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_bio_list_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_bio_list_license/" >>build/Makefile
fi


fi





test -d build/blkg_tryget || mkdir -p build/blkg_tryget
cat confdefs.h - <<_ACEOF >build/blkg_tryget/blkg_tryget.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>
		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct blkcg_gq blkg __attribute__ ((unused)) = {};
		bool rc __attribute__ ((unused));
		rc = blkg_tryget(&blkg);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkg_tryget || mkdir -p build/blkg_tryget

	file=build/blkg_tryget/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkg_tryget

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkg_tryget.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkg_tryget/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/blkg_tryget_license || mkdir -p build/blkg_tryget_license
cat confdefs.h - <<_ACEOF >build/blkg_tryget_license/blkg_tryget_license.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>
		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct blkcg_gq blkg __attribute__ ((unused)) = {};
		bool rc __attribute__ ((unused));
		rc = blkg_tryget(&blkg);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkg_tryget_license || mkdir -p build/blkg_tryget_license

	file=build/blkg_tryget_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkg_tryget_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkg_tryget_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkg_tryget_license/" >>build/Makefile
fi


fi





test -d build/bio_bdev_disk || mkdir -p build/bio_bdev_disk
cat confdefs.h - <<_ACEOF >build/bio_bdev_disk/bio_bdev_disk.c

#include <linux/module.h>

		#include <linux/blk_types.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *b = NULL;
		struct gendisk *d = b->bi_bdev->bd_disk;
		blk_register_queue(d);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_disk || mkdir -p build/bio_bdev_disk

	file=build/bio_bdev_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bdev_disk_license || mkdir -p build/bio_bdev_disk_license
cat confdefs.h - <<_ACEOF >build/bio_bdev_disk_license/bio_bdev_disk_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *b = NULL;
		struct gendisk *d = b->bi_bdev->bd_disk;
		blk_register_queue(d);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_disk_license || mkdir -p build/bio_bdev_disk_license

	file=build/bio_bdev_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_disk_license/" >>build/Makefile
fi


fi





test -d build/bio_bdev_submit_bio_void || mkdir -p build/bio_bdev_submit_bio_void
cat confdefs.h - <<_ACEOF >build/bio_bdev_submit_bio_void/bio_bdev_submit_bio_void.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations *bdev = NULL;
		__attribute__((unused)) void(*f)(struct bio *) = bdev->submit_bio;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_submit_bio_void || mkdir -p build/bio_bdev_submit_bio_void

	file=build/bio_bdev_submit_bio_void/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_submit_bio_void

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_submit_bio_void.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_submit_bio_void/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bdev_submit_bio_void_license || mkdir -p build/bio_bdev_submit_bio_void_license
cat confdefs.h - <<_ACEOF >build/bio_bdev_submit_bio_void_license/bio_bdev_submit_bio_void_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations *bdev = NULL;
		__attribute__((unused)) void(*f)(struct bio *) = bdev->submit_bio;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_submit_bio_void_license || mkdir -p build/bio_bdev_submit_bio_void_license

	file=build/bio_bdev_submit_bio_void_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_submit_bio_void_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_submit_bio_void_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_submit_bio_void_license/" >>build/Makefile
fi


fi





test -d build/bio_set_dev_macro || mkdir -p build/bio_set_dev_macro
cat confdefs.h - <<_ACEOF >build/bio_set_dev_macro/bio_set_dev_macro.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		#ifndef bio_set_dev
		#error Not a macro
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev_macro || mkdir -p build/bio_set_dev_macro

	file=build/bio_set_dev_macro/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev_macro

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev_macro.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev_macro/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/bio_set_dev_macro_license || mkdir -p build/bio_set_dev_macro_license
cat confdefs.h - <<_ACEOF >build/bio_set_dev_macro_license/bio_set_dev_macro_license.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		#ifndef bio_set_dev
		#error Not a macro
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev_macro_license || mkdir -p build/bio_set_dev_macro_license

	file=build/bio_set_dev_macro_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev_macro_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev_macro_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev_macro_license/" >>build/Makefile
fi


fi





test -d build/blk_cgroup_header || mkdir -p build/blk_cgroup_header
cat confdefs.h - <<_ACEOF >build/blk_cgroup_header/blk_cgroup_header.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cgroup_header || mkdir -p build/blk_cgroup_header

	file=build/blk_cgroup_header/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cgroup_header

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cgroup_header.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cgroup_header/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_cgroup_header_license || mkdir -p build/blk_cgroup_header_license
cat confdefs.h - <<_ACEOF >build/blk_cgroup_header_license/blk_cgroup_header_license.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cgroup_header_license || mkdir -p build/blk_cgroup_header_license

	file=build/blk_cgroup_header_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cgroup_header_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cgroup_header_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cgroup_header_license/" >>build/Makefile
fi


fi





test -d build/bio_alloc_4arg || mkdir -p build/bio_alloc_4arg
cat confdefs.h - <<_ACEOF >build/bio_alloc_4arg/bio_alloc_4arg.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		gfp_t gfp_mask = 0;
		unsigned short nr_iovecs = 0;
		struct block_device *bdev = NULL;
		unsigned int opf = 0;

		struct bio *__attribute__((unused)) allocated = bio_alloc(bdev, nr_iovecs, opf, gfp_mask);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_alloc_4arg || mkdir -p build/bio_alloc_4arg

	file=build/bio_alloc_4arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_alloc_4arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_alloc_4arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_alloc_4arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_alloc_4arg_license || mkdir -p build/bio_alloc_4arg_license
cat confdefs.h - <<_ACEOF >build/bio_alloc_4arg_license/bio_alloc_4arg_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		gfp_t gfp_mask = 0;
		unsigned short nr_iovecs = 0;
		struct block_device *bdev = NULL;
		unsigned int opf = 0;

		struct bio *__attribute__((unused)) allocated = bio_alloc(bdev, nr_iovecs, opf, gfp_mask);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_alloc_4arg_license || mkdir -p build/bio_alloc_4arg_license

	file=build/bio_alloc_4arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_alloc_4arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_alloc_4arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_alloc_4arg_license/" >>build/Makefile
fi


fi







test -d build/blkdev_get_by_path || mkdir -p build/blkdev_get_by_path
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path/blkdev_get_by_path.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;

		bdev = blkdev_get_by_path(path, mode, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path || mkdir -p build/blkdev_get_by_path

	file=build/blkdev_get_by_path/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_get_by_path_license || mkdir -p build/blkdev_get_by_path_license
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path_license/blkdev_get_by_path_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;

		bdev = blkdev_get_by_path(path, mode, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path_license || mkdir -p build/blkdev_get_by_path_license

	file=build/blkdev_get_by_path_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path_license/" >>build/Makefile
fi


fi





test -d build/blkdev_get_by_path_4arg || mkdir -p build/blkdev_get_by_path_4arg
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path_4arg/blkdev_get_by_path_4arg.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;
		struct blk_holder_ops h;

		bdev = blkdev_get_by_path(path, mode, holder, &h);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path_4arg || mkdir -p build/blkdev_get_by_path_4arg

	file=build/blkdev_get_by_path_4arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path_4arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path_4arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path_4arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_get_by_path_4arg_license || mkdir -p build/blkdev_get_by_path_4arg_license
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path_4arg_license/blkdev_get_by_path_4arg_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;
		struct blk_holder_ops h;

		bdev = blkdev_get_by_path(path, mode, holder, &h);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path_4arg_license || mkdir -p build/blkdev_get_by_path_4arg_license

	file=build/blkdev_get_by_path_4arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path_4arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path_4arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path_4arg_license/" >>build/Makefile
fi


fi





test -d build/blkdev_put || mkdir -p build/blkdev_put
cat confdefs.h - <<_ACEOF >build/blkdev_put/blkdev_put.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		fmode_t mode = 0;

		blkdev_put(bdev, mode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put || mkdir -p build/blkdev_put

	file=build/blkdev_put/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_put_license || mkdir -p build/blkdev_put_license
cat confdefs.h - <<_ACEOF >build/blkdev_put_license/blkdev_put_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		fmode_t mode = 0;

		blkdev_put(bdev, mode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put_license || mkdir -p build/blkdev_put_license

	file=build/blkdev_put_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put_license/" >>build/Makefile
fi


fi





test -d build/blkdev_put_holder || mkdir -p build/blkdev_put_holder
cat confdefs.h - <<_ACEOF >build/blkdev_put_holder/blkdev_put_holder.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		void *holder = NULL;

		blkdev_put(bdev, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put_holder || mkdir -p build/blkdev_put_holder

	file=build/blkdev_put_holder/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put_holder

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put_holder.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put_holder/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_put_holder_license || mkdir -p build/blkdev_put_holder_license
cat confdefs.h - <<_ACEOF >build/blkdev_put_holder_license/blkdev_put_holder_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		void *holder = NULL;

		blkdev_put(bdev, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put_holder_license || mkdir -p build/blkdev_put_holder_license

	file=build/blkdev_put_holder_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put_holder_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put_holder_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put_holder_license/" >>build/Makefile
fi


fi





test -d build/blkdev_reread_part || mkdir -p build/blkdev_reread_part
cat confdefs.h - <<_ACEOF >build/blkdev_reread_part/blkdev_reread_part.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = blkdev_reread_part(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_reread_part || mkdir -p build/blkdev_reread_part

	file=build/blkdev_reread_part/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_reread_part

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_reread_part.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_reread_part/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_reread_part_license || mkdir -p build/blkdev_reread_part_license
cat confdefs.h - <<_ACEOF >build/blkdev_reread_part_license/blkdev_reread_part_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = blkdev_reread_part(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_reread_part_license || mkdir -p build/blkdev_reread_part_license

	file=build/blkdev_reread_part_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_reread_part_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_reread_part_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_reread_part_license/" >>build/Makefile
fi


fi





test -d build/invalidate_bdev || mkdir -p build/invalidate_bdev
cat confdefs.h - <<_ACEOF >build/invalidate_bdev/invalidate_bdev.c

#include <linux/module.h>

		#include <linux/buffer_head.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		invalidate_bdev(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/invalidate_bdev || mkdir -p build/invalidate_bdev

	file=build/invalidate_bdev/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/invalidate_bdev

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := invalidate_bdev.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += invalidate_bdev/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/invalidate_bdev_license || mkdir -p build/invalidate_bdev_license
cat confdefs.h - <<_ACEOF >build/invalidate_bdev_license/invalidate_bdev_license.c

#include <linux/module.h>

		#include <linux/buffer_head.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		invalidate_bdev(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/invalidate_bdev_license || mkdir -p build/invalidate_bdev_license

	file=build/invalidate_bdev_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/invalidate_bdev_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := invalidate_bdev_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += invalidate_bdev_license/" >>build/Makefile
fi


fi





test -d build/lookup_bdev_devt || mkdir -p build/lookup_bdev_devt
cat confdefs.h - <<_ACEOF >build/lookup_bdev_devt/lookup_bdev_devt.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int error __attribute__ ((unused));
		const char path[] = "/example/path";
		dev_t dev;

		error = lookup_bdev(path, &dev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_devt || mkdir -p build/lookup_bdev_devt

	file=build/lookup_bdev_devt/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_devt

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_devt.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_devt/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_bdev_devt_license || mkdir -p build/lookup_bdev_devt_license
cat confdefs.h - <<_ACEOF >build/lookup_bdev_devt_license/lookup_bdev_devt_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int error __attribute__ ((unused));
		const char path[] = "/example/path";
		dev_t dev;

		error = lookup_bdev(path, &dev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_devt_license || mkdir -p build/lookup_bdev_devt_license

	file=build/lookup_bdev_devt_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_devt_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_devt_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_devt_license/" >>build/Makefile
fi


fi




test -d build/lookup_bdev_1arg || mkdir -p build/lookup_bdev_1arg
cat confdefs.h - <<_ACEOF >build/lookup_bdev_1arg/lookup_bdev_1arg.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_1arg || mkdir -p build/lookup_bdev_1arg

	file=build/lookup_bdev_1arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_1arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_1arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_1arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_bdev_1arg_license || mkdir -p build/lookup_bdev_1arg_license
cat confdefs.h - <<_ACEOF >build/lookup_bdev_1arg_license/lookup_bdev_1arg_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_1arg_license || mkdir -p build/lookup_bdev_1arg_license

	file=build/lookup_bdev_1arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_1arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_1arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_1arg_license/" >>build/Makefile
fi


fi




test -d build/lookup_bdev_mode || mkdir -p build/lookup_bdev_mode
cat confdefs.h - <<_ACEOF >build/lookup_bdev_mode/lookup_bdev_mode.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path, FMODE_READ);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_mode || mkdir -p build/lookup_bdev_mode

	file=build/lookup_bdev_mode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_mode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_mode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_mode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_bdev_mode_license || mkdir -p build/lookup_bdev_mode_license
cat confdefs.h - <<_ACEOF >build/lookup_bdev_mode_license/lookup_bdev_mode_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path, FMODE_READ);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_mode_license || mkdir -p build/lookup_bdev_mode_license

	file=build/lookup_bdev_mode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_mode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_mode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_mode_license/" >>build/Makefile
fi


fi





test -d build/bdev_logical_block_size || mkdir -p build/bdev_logical_block_size
cat confdefs.h - <<_ACEOF >build/bdev_logical_block_size/bdev_logical_block_size.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_logical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_logical_block_size || mkdir -p build/bdev_logical_block_size

	file=build/bdev_logical_block_size/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_logical_block_size

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_logical_block_size.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_logical_block_size/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_logical_block_size_license || mkdir -p build/bdev_logical_block_size_license
cat confdefs.h - <<_ACEOF >build/bdev_logical_block_size_license/bdev_logical_block_size_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_logical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_logical_block_size_license || mkdir -p build/bdev_logical_block_size_license

	file=build/bdev_logical_block_size_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_logical_block_size_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_logical_block_size_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_logical_block_size_license/" >>build/Makefile
fi


fi





test -d build/bdev_physical_block_size || mkdir -p build/bdev_physical_block_size
cat confdefs.h - <<_ACEOF >build/bdev_physical_block_size/bdev_physical_block_size.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_physical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_physical_block_size || mkdir -p build/bdev_physical_block_size

	file=build/bdev_physical_block_size/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_physical_block_size

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_physical_block_size.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_physical_block_size/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_physical_block_size_license || mkdir -p build/bdev_physical_block_size_license
cat confdefs.h - <<_ACEOF >build/bdev_physical_block_size_license/bdev_physical_block_size_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_physical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_physical_block_size_license || mkdir -p build/bdev_physical_block_size_license

	file=build/bdev_physical_block_size_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_physical_block_size_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_physical_block_size_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_physical_block_size_license/" >>build/Makefile
fi


fi





test -d build/check_disk_change || mkdir -p build/check_disk_change
cat confdefs.h - <<_ACEOF >build/check_disk_change/check_disk_change.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = check_disk_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/check_disk_change || mkdir -p build/check_disk_change

	file=build/check_disk_change/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/check_disk_change

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := check_disk_change.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += check_disk_change/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/check_disk_change_license || mkdir -p build/check_disk_change_license
cat confdefs.h - <<_ACEOF >build/check_disk_change_license/check_disk_change_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = check_disk_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/check_disk_change_license || mkdir -p build/check_disk_change_license

	file=build/check_disk_change_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/check_disk_change_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := check_disk_change_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += check_disk_change_license/" >>build/Makefile
fi


fi





test -d build/bdev_check_media_change || mkdir -p build/bdev_check_media_change
cat confdefs.h - <<_ACEOF >build/bdev_check_media_change/bdev_check_media_change.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = bdev_check_media_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_check_media_change || mkdir -p build/bdev_check_media_change

	file=build/bdev_check_media_change/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_check_media_change

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_check_media_change.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_check_media_change/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_check_media_change_license || mkdir -p build/bdev_check_media_change_license
cat confdefs.h - <<_ACEOF >build/bdev_check_media_change_license/bdev_check_media_change_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = bdev_check_media_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_check_media_change_license || mkdir -p build/bdev_check_media_change_license

	file=build/bdev_check_media_change_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_check_media_change_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_check_media_change_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_check_media_change_license/" >>build/Makefile
fi


fi





test -d build/bdev_whole || mkdir -p build/bdev_whole
cat confdefs.h - <<_ACEOF >build/bdev_whole/bdev_whole.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bdev = bdev_whole(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_whole || mkdir -p build/bdev_whole

	file=build/bdev_whole/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_whole

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_whole.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_whole/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_whole_license || mkdir -p build/bdev_whole_license
cat confdefs.h - <<_ACEOF >build/bdev_whole_license/bdev_whole_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bdev = bdev_whole(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_whole_license || mkdir -p build/bdev_whole_license

	file=build/bdev_whole_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_whole_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_whole_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_whole_license/" >>build/Makefile
fi


fi





test -d build/bdevname || mkdir -p build/bdevname
cat confdefs.h - <<_ACEOF >build/bdevname/bdevname.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		char path[BDEVNAME_SIZE];

		(void) bdevname(bdev, path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdevname || mkdir -p build/bdevname

	file=build/bdevname/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdevname

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdevname.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdevname/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdevname_license || mkdir -p build/bdevname_license
cat confdefs.h - <<_ACEOF >build/bdevname_license/bdevname_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		char path[BDEVNAME_SIZE];

		(void) bdevname(bdev, path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdevname_license || mkdir -p build/bdevname_license

	file=build/bdevname_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdevname_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdevname_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdevname_license/" >>build/Makefile
fi


fi





test -d build/blkdev_issue_secure_erase || mkdir -p build/blkdev_issue_secure_erase
cat confdefs.h - <<_ACEOF >build/blkdev_issue_secure_erase/blkdev_issue_secure_erase.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_secure_erase(bdev,
		    sector, nr_sects, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_secure_erase || mkdir -p build/blkdev_issue_secure_erase

	file=build/blkdev_issue_secure_erase/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_secure_erase

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_secure_erase.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_secure_erase/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_issue_secure_erase_license || mkdir -p build/blkdev_issue_secure_erase_license
cat confdefs.h - <<_ACEOF >build/blkdev_issue_secure_erase_license/blkdev_issue_secure_erase_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_secure_erase(bdev,
		    sector, nr_sects, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_secure_erase_license || mkdir -p build/blkdev_issue_secure_erase_license

	file=build/blkdev_issue_secure_erase_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_secure_erase_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_secure_erase_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_secure_erase_license/" >>build/Makefile
fi


fi




test -d build/blkdev_issue_discard_flags || mkdir -p build/blkdev_issue_discard_flags
cat confdefs.h - <<_ACEOF >build/blkdev_issue_discard_flags/blkdev_issue_discard_flags.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		unsigned long flags = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_discard(bdev,
		    sector, nr_sects, GFP_KERNEL, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_discard_flags || mkdir -p build/blkdev_issue_discard_flags

	file=build/blkdev_issue_discard_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_discard_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_discard_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_discard_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_issue_discard_flags_license || mkdir -p build/blkdev_issue_discard_flags_license
cat confdefs.h - <<_ACEOF >build/blkdev_issue_discard_flags_license/blkdev_issue_discard_flags_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		unsigned long flags = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_discard(bdev,
		    sector, nr_sects, GFP_KERNEL, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_discard_flags_license || mkdir -p build/blkdev_issue_discard_flags_license

	file=build/blkdev_issue_discard_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_discard_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_discard_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_discard_flags_license/" >>build/Makefile
fi


fi





test -d build/bdev_kobj || mkdir -p build/bdev_kobj
cat confdefs.h - <<_ACEOF >build/bdev_kobj/bdev_kobj.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>
		#include <linux/kobject.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct kobject *disk_kobj;
		disk_kobj = bdev_kobj(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_kobj || mkdir -p build/bdev_kobj

	file=build/bdev_kobj/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_kobj

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_kobj.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_kobj/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_kobj_license || mkdir -p build/bdev_kobj_license
cat confdefs.h - <<_ACEOF >build/bdev_kobj_license/bdev_kobj_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>
		#include <linux/kobject.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct kobject *disk_kobj;
		disk_kobj = bdev_kobj(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_kobj_license || mkdir -p build/bdev_kobj_license

	file=build/bdev_kobj_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_kobj_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_kobj_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_kobj_license/" >>build/Makefile
fi


fi





test -d build/part_to_dev || mkdir -p build/part_to_dev
cat confdefs.h - <<_ACEOF >build/part_to_dev/part_to_dev.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct hd_struct *p = NULL;
		struct device *pdev;
		pdev = part_to_dev(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/part_to_dev || mkdir -p build/part_to_dev

	file=build/part_to_dev/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/part_to_dev

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := part_to_dev.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += part_to_dev/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/part_to_dev_license || mkdir -p build/part_to_dev_license
cat confdefs.h - <<_ACEOF >build/part_to_dev_license/part_to_dev_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct hd_struct *p = NULL;
		struct device *pdev;
		pdev = part_to_dev(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/part_to_dev_license || mkdir -p build/part_to_dev_license

	file=build/part_to_dev_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/part_to_dev_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := part_to_dev_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += part_to_dev_license/" >>build/Makefile
fi


fi





test -d build/disk_check_media_change || mkdir -p build/disk_check_media_change
cat confdefs.h - <<_ACEOF >build/disk_check_media_change/disk_check_media_change.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = disk_check_media_change(bdev->bd_disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_check_media_change || mkdir -p build/disk_check_media_change

	file=build/disk_check_media_change/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_check_media_change

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_check_media_change.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_check_media_change/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/disk_check_media_change_license || mkdir -p build/disk_check_media_change_license
cat confdefs.h - <<_ACEOF >build/disk_check_media_change_license/disk_check_media_change_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = disk_check_media_change(bdev->bd_disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_check_media_change_license || mkdir -p build/disk_check_media_change_license

	file=build/disk_check_media_change_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_check_media_change_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_check_media_change_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_check_media_change_license/" >>build/Makefile
fi


fi





test -d build/blk_sts_resv_conflict || mkdir -p build/blk_sts_resv_conflict
cat confdefs.h - <<_ACEOF >build/blk_sts_resv_conflict/blk_sts_resv_conflict.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		blk_status_t s __attribute__ ((unused)) = BLK_STS_RESV_CONFLICT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_sts_resv_conflict || mkdir -p build/blk_sts_resv_conflict

	file=build/blk_sts_resv_conflict/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_sts_resv_conflict

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_sts_resv_conflict.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_sts_resv_conflict/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_sts_resv_conflict_license || mkdir -p build/blk_sts_resv_conflict_license
cat confdefs.h - <<_ACEOF >build/blk_sts_resv_conflict_license/blk_sts_resv_conflict_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		blk_status_t s __attribute__ ((unused)) = BLK_STS_RESV_CONFLICT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_sts_resv_conflict_license || mkdir -p build/blk_sts_resv_conflict_license

	file=build/blk_sts_resv_conflict_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_sts_resv_conflict_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_sts_resv_conflict_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_sts_resv_conflict_license/" >>build/Makefile
fi


fi





test -d build/blk_mode_t || mkdir -p build/blk_mode_t
cat confdefs.h - <<_ACEOF >build/blk_mode_t/blk_mode_t.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		blk_mode_t m __attribute((unused)) = (blk_mode_t)0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mode_t || mkdir -p build/blk_mode_t

	file=build/blk_mode_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mode_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mode_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mode_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_mode_t_license || mkdir -p build/blk_mode_t_license
cat confdefs.h - <<_ACEOF >build/blk_mode_t_license/blk_mode_t_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		blk_mode_t m __attribute((unused)) = (blk_mode_t)0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mode_t_license || mkdir -p build/blk_mode_t_license

	file=build/blk_mode_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mode_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mode_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mode_t_license/" >>build/Makefile
fi


fi







test -d build/blk_plug || mkdir -p build/blk_plug
cat confdefs.h - <<_ACEOF >build/blk_plug/blk_plug.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct blk_plug plug __attribute__ ((unused));

		blk_start_plug(&plug);
		blk_finish_plug(&plug);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_plug || mkdir -p build/blk_plug

	file=build/blk_plug/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_plug

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_plug.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_plug/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_plug_license || mkdir -p build/blk_plug_license
cat confdefs.h - <<_ACEOF >build/blk_plug_license/blk_plug_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct blk_plug plug __attribute__ ((unused));

		blk_start_plug(&plug);
		blk_finish_plug(&plug);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_plug_license || mkdir -p build/blk_plug_license

	file=build/blk_plug_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_plug_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_plug_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_plug_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_bdi || mkdir -p build/blk_queue_bdi
cat confdefs.h - <<_ACEOF >build/blk_queue_bdi/blk_queue_bdi.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		struct backing_dev_info bdi;
		q.backing_dev_info = &bdi;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_bdi || mkdir -p build/blk_queue_bdi

	file=build/blk_queue_bdi/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_bdi

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_bdi.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_bdi/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_bdi_license || mkdir -p build/blk_queue_bdi_license
cat confdefs.h - <<_ACEOF >build/blk_queue_bdi_license/blk_queue_bdi_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		struct backing_dev_info bdi;
		q.backing_dev_info = &bdi;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_bdi_license || mkdir -p build/blk_queue_bdi_license

	file=build/blk_queue_bdi_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_bdi_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_bdi_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_bdi_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_update_readahead || mkdir -p build/blk_queue_update_readahead
cat confdefs.h - <<_ACEOF >build/blk_queue_update_readahead/blk_queue_update_readahead.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		blk_queue_update_readahead(&q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_update_readahead || mkdir -p build/blk_queue_update_readahead

	file=build/blk_queue_update_readahead/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_update_readahead

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_update_readahead.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_update_readahead/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_update_readahead_license || mkdir -p build/blk_queue_update_readahead_license
cat confdefs.h - <<_ACEOF >build/blk_queue_update_readahead_license/blk_queue_update_readahead_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		blk_queue_update_readahead(&q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_update_readahead_license || mkdir -p build/blk_queue_update_readahead_license

	file=build/blk_queue_update_readahead_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_update_readahead_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_update_readahead_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_update_readahead_license/" >>build/Makefile
fi


fi




test -d build/disk_update_readahead || mkdir -p build/disk_update_readahead
cat confdefs.h - <<_ACEOF >build/disk_update_readahead/disk_update_readahead.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk disk;
		disk_update_readahead(&disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_update_readahead || mkdir -p build/disk_update_readahead

	file=build/disk_update_readahead/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_update_readahead

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_update_readahead.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_update_readahead/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/disk_update_readahead_license || mkdir -p build/disk_update_readahead_license
cat confdefs.h - <<_ACEOF >build/disk_update_readahead_license/disk_update_readahead_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk disk;
		disk_update_readahead(&disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_update_readahead_license || mkdir -p build/disk_update_readahead_license

	file=build/disk_update_readahead_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_update_readahead_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_update_readahead_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_update_readahead_license/" >>build/Makefile
fi


fi





test -d build/bdev_max_discard_sectors || mkdir -p build/bdev_max_discard_sectors
cat confdefs.h - <<_ACEOF >build/bdev_max_discard_sectors/bdev_max_discard_sectors.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_discard_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_discard_sectors || mkdir -p build/bdev_max_discard_sectors

	file=build/bdev_max_discard_sectors/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_discard_sectors

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_discard_sectors.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_discard_sectors/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_max_discard_sectors_license || mkdir -p build/bdev_max_discard_sectors_license
cat confdefs.h - <<_ACEOF >build/bdev_max_discard_sectors_license/bdev_max_discard_sectors_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_discard_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_discard_sectors_license || mkdir -p build/bdev_max_discard_sectors_license

	file=build/bdev_max_discard_sectors_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_discard_sectors_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_discard_sectors_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_discard_sectors_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_discard || mkdir -p build/blk_queue_discard
cat confdefs.h - <<_ACEOF >build/blk_queue_discard/blk_queue_discard.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_discard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_discard || mkdir -p build/blk_queue_discard

	file=build/blk_queue_discard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_discard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_discard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_discard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_discard_license || mkdir -p build/blk_queue_discard_license
cat confdefs.h - <<_ACEOF >build/blk_queue_discard_license/blk_queue_discard_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_discard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_discard_license || mkdir -p build/blk_queue_discard_license

	file=build/blk_queue_discard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_discard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_discard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_discard_license/" >>build/Makefile
fi


fi





test -d build/bdev_max_secure_erase_sectors || mkdir -p build/bdev_max_secure_erase_sectors
cat confdefs.h - <<_ACEOF >build/bdev_max_secure_erase_sectors/bdev_max_secure_erase_sectors.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_secure_erase_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_secure_erase_sectors || mkdir -p build/bdev_max_secure_erase_sectors

	file=build/bdev_max_secure_erase_sectors/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_secure_erase_sectors

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_secure_erase_sectors.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_secure_erase_sectors/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_max_secure_erase_sectors_license || mkdir -p build/bdev_max_secure_erase_sectors_license
cat confdefs.h - <<_ACEOF >build/bdev_max_secure_erase_sectors_license/bdev_max_secure_erase_sectors_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_secure_erase_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_secure_erase_sectors_license || mkdir -p build/bdev_max_secure_erase_sectors_license

	file=build/bdev_max_secure_erase_sectors_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_secure_erase_sectors_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_secure_erase_sectors_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_secure_erase_sectors_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_secure_erase || mkdir -p build/blk_queue_secure_erase
cat confdefs.h - <<_ACEOF >build/blk_queue_secure_erase/blk_queue_secure_erase.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secure_erase(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secure_erase || mkdir -p build/blk_queue_secure_erase

	file=build/blk_queue_secure_erase/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secure_erase

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_secure_erase.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secure_erase/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_secure_erase_license || mkdir -p build/blk_queue_secure_erase_license
cat confdefs.h - <<_ACEOF >build/blk_queue_secure_erase_license/blk_queue_secure_erase_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secure_erase(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secure_erase_license || mkdir -p build/blk_queue_secure_erase_license

	file=build/blk_queue_secure_erase_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secure_erase_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_secure_erase_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secure_erase_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_secdiscard || mkdir -p build/blk_queue_secdiscard
cat confdefs.h - <<_ACEOF >build/blk_queue_secdiscard/blk_queue_secdiscard.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secdiscard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secdiscard || mkdir -p build/blk_queue_secdiscard

	file=build/blk_queue_secdiscard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secdiscard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_secdiscard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secdiscard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_secdiscard_license || mkdir -p build/blk_queue_secdiscard_license
cat confdefs.h - <<_ACEOF >build/blk_queue_secdiscard_license/blk_queue_secdiscard_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secdiscard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secdiscard_license || mkdir -p build/blk_queue_secdiscard_license

	file=build/blk_queue_secdiscard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secdiscard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_secdiscard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secdiscard_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_flag_set || mkdir -p build/blk_queue_flag_set
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_set/blk_queue_flag_set.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_set(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_set || mkdir -p build/blk_queue_flag_set

	file=build/blk_queue_flag_set/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_set

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_set.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_set/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_flag_set_license || mkdir -p build/blk_queue_flag_set_license
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_set_license/blk_queue_flag_set_license.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_set(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_set_license || mkdir -p build/blk_queue_flag_set_license

	file=build/blk_queue_flag_set_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_set_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_set_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_set_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_flag_clear || mkdir -p build/blk_queue_flag_clear
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_clear/blk_queue_flag_clear.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_clear(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_clear || mkdir -p build/blk_queue_flag_clear

	file=build/blk_queue_flag_clear/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_clear

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_clear.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_clear/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_flag_clear_license || mkdir -p build/blk_queue_flag_clear_license
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_clear_license/blk_queue_flag_clear_license.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_clear(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_clear_license || mkdir -p build/blk_queue_flag_clear_license

	file=build/blk_queue_flag_clear_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_clear_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_clear_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_clear_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_flush || mkdir -p build/blk_queue_flush
cat confdefs.h - <<_ACEOF >build/blk_queue_flush/blk_queue_flush.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_flush(q, REQ_FLUSH);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flush || mkdir -p build/blk_queue_flush

	file=build/blk_queue_flush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flush/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/blk_queue_flush_license || mkdir -p build/blk_queue_flush_license
cat confdefs.h - <<_ACEOF >build/blk_queue_flush_license/blk_queue_flush_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_flush(q, REQ_FLUSH);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flush_license || mkdir -p build/blk_queue_flush_license

	file=build/blk_queue_flush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flush_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_write_cache || mkdir -p build/blk_queue_write_cache
cat confdefs.h - <<_ACEOF >build/blk_queue_write_cache/blk_queue_write_cache.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		blk_queue_write_cache(q, true, true);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_write_cache || mkdir -p build/blk_queue_write_cache

	file=build/blk_queue_write_cache/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_write_cache

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_write_cache.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_write_cache/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/blk_queue_write_cache_license || mkdir -p build/blk_queue_write_cache_license
cat confdefs.h - <<_ACEOF >build/blk_queue_write_cache_license/blk_queue_write_cache_license.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		blk_queue_write_cache(q, true, true);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_write_cache_license || mkdir -p build/blk_queue_write_cache_license

	file=build/blk_queue_write_cache_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_write_cache_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_write_cache_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_write_cache_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_max_hw_sectors || mkdir -p build/blk_queue_max_hw_sectors
cat confdefs.h - <<_ACEOF >build/blk_queue_max_hw_sectors/blk_queue_max_hw_sectors.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_hw_sectors(q, BLK_SAFE_MAX_SECTORS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_hw_sectors || mkdir -p build/blk_queue_max_hw_sectors

	file=build/blk_queue_max_hw_sectors/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_hw_sectors

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_hw_sectors.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_hw_sectors/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_max_hw_sectors_license || mkdir -p build/blk_queue_max_hw_sectors_license
cat confdefs.h - <<_ACEOF >build/blk_queue_max_hw_sectors_license/blk_queue_max_hw_sectors_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_hw_sectors(q, BLK_SAFE_MAX_SECTORS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_hw_sectors_license || mkdir -p build/blk_queue_max_hw_sectors_license

	file=build/blk_queue_max_hw_sectors_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_hw_sectors_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_hw_sectors_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_hw_sectors_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_max_segments || mkdir -p build/blk_queue_max_segments
cat confdefs.h - <<_ACEOF >build/blk_queue_max_segments/blk_queue_max_segments.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_segments(q, BLK_MAX_SEGMENTS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_segments || mkdir -p build/blk_queue_max_segments

	file=build/blk_queue_max_segments/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_segments

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_segments.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_segments/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_max_segments_license || mkdir -p build/blk_queue_max_segments_license
cat confdefs.h - <<_ACEOF >build/blk_queue_max_segments_license/blk_queue_max_segments_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_segments(q, BLK_MAX_SEGMENTS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_segments_license || mkdir -p build/blk_queue_max_segments_license

	file=build/blk_queue_max_segments_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_segments_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_segments_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_segments_license/" >>build/Makefile
fi


fi





test -d build/blk_mq || mkdir -p build/blk_mq
cat confdefs.h - <<_ACEOF >build/blk_mq/blk_mq.c

#include <linux/module.h>

		#include <linux/blk-mq.h>


int
main (void)
{

		struct blk_mq_tag_set tag_set __attribute__ ((unused)) = {0};
		(void) blk_mq_alloc_tag_set(&tag_set);
		return BLK_STS_OK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mq || mkdir -p build/blk_mq

	file=build/blk_mq/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mq

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mq.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mq/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_mq_license || mkdir -p build/blk_mq_license
cat confdefs.h - <<_ACEOF >build/blk_mq_license/blk_mq_license.c

#include <linux/module.h>

		#include <linux/blk-mq.h>


int
main (void)
{

		struct blk_mq_tag_set tag_set __attribute__ ((unused)) = {0};
		(void) blk_mq_alloc_tag_set(&tag_set);
		return BLK_STS_OK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mq_license || mkdir -p build/blk_mq_license

	file=build/blk_mq_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mq_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mq_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mq_license/" >>build/Makefile
fi


fi







test -d build/genhd_fl_ext_devt || mkdir -p build/genhd_fl_ext_devt
cat confdefs.h - <<_ACEOF >build/genhd_fl_ext_devt/genhd_fl_ext_devt.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_EXT_DEVT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_ext_devt || mkdir -p build/genhd_fl_ext_devt

	file=build/genhd_fl_ext_devt/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_ext_devt

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_ext_devt.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_ext_devt/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/genhd_fl_ext_devt_license || mkdir -p build/genhd_fl_ext_devt_license
cat confdefs.h - <<_ACEOF >build/genhd_fl_ext_devt_license/genhd_fl_ext_devt_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_EXT_DEVT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_ext_devt_license || mkdir -p build/genhd_fl_ext_devt_license

	file=build/genhd_fl_ext_devt_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_ext_devt_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_ext_devt_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_ext_devt_license/" >>build/Makefile
fi


fi




test -d build/genhd_fl_no_part || mkdir -p build/genhd_fl_no_part
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part/genhd_fl_no_part.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part || mkdir -p build/genhd_fl_no_part

	file=build/genhd_fl_no_part/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/genhd_fl_no_part_license || mkdir -p build/genhd_fl_no_part_license
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part_license/genhd_fl_no_part_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part_license || mkdir -p build/genhd_fl_no_part_license

	file=build/genhd_fl_no_part_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part_license/" >>build/Makefile
fi


fi




test -d build/genhd_fl_no_part_scan || mkdir -p build/genhd_fl_no_part_scan
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part_scan/genhd_fl_no_part_scan.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART_SCAN;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part_scan || mkdir -p build/genhd_fl_no_part_scan

	file=build/genhd_fl_no_part_scan/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part_scan

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part_scan.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part_scan/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/genhd_fl_no_part_scan_license || mkdir -p build/genhd_fl_no_part_scan_license
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part_scan_license/genhd_fl_no_part_scan_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART_SCAN;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part_scan_license || mkdir -p build/genhd_fl_no_part_scan_license

	file=build/genhd_fl_no_part_scan_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part_scan_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part_scan_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part_scan_license/" >>build/Makefile
fi


fi






test -d build/revalidate_disk_size || mkdir -p build/revalidate_disk_size
cat confdefs.h - <<_ACEOF >build/revalidate_disk_size/revalidate_disk_size.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk_size(disk, false);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk_size || mkdir -p build/revalidate_disk_size

	file=build/revalidate_disk_size/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk_size

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk_size.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk_size/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/revalidate_disk_size_license || mkdir -p build/revalidate_disk_size_license
cat confdefs.h - <<_ACEOF >build/revalidate_disk_size_license/revalidate_disk_size_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk_size(disk, false);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk_size_license || mkdir -p build/revalidate_disk_size_license

	file=build/revalidate_disk_size_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk_size_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk_size_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk_size_license/" >>build/Makefile
fi


fi




test -d build/revalidate_disk || mkdir -p build/revalidate_disk
cat confdefs.h - <<_ACEOF >build/revalidate_disk/revalidate_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk || mkdir -p build/revalidate_disk

	file=build/revalidate_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/revalidate_disk_license || mkdir -p build/revalidate_disk_license
cat confdefs.h - <<_ACEOF >build/revalidate_disk_license/revalidate_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk_license || mkdir -p build/revalidate_disk_license

	file=build/revalidate_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk_license/" >>build/Makefile
fi


fi





test -d build/get_disk_ro || mkdir -p build/get_disk_ro
cat confdefs.h - <<_ACEOF >build/get_disk_ro/get_disk_ro.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk __attribute__ ((unused)) = NULL;
		(void) get_disk_ro(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_disk_ro || mkdir -p build/get_disk_ro

	file=build/get_disk_ro/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_disk_ro

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_disk_ro.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_disk_ro/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/get_disk_ro_license || mkdir -p build/get_disk_ro_license
cat confdefs.h - <<_ACEOF >build/get_disk_ro_license/get_disk_ro_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk __attribute__ ((unused)) = NULL;
		(void) get_disk_ro(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_disk_ro_license || mkdir -p build/get_disk_ro_license

	file=build/get_disk_ro_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_disk_ro_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_disk_ro_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_disk_ro_license/" >>build/Makefile
fi


fi





test -d build/generic_readlink_global || mkdir -p build/generic_readlink_global
cat confdefs.h - <<_ACEOF >build/generic_readlink_global/generic_readlink_global.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		int i __attribute__ ((unused));
		i = generic_readlink(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_readlink_global || mkdir -p build/generic_readlink_global

	file=build/generic_readlink_global/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_readlink_global

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_readlink_global.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_readlink_global/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_readlink_global_license || mkdir -p build/generic_readlink_global_license
cat confdefs.h - <<_ACEOF >build/generic_readlink_global_license/generic_readlink_global_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		int i __attribute__ ((unused));
		i = generic_readlink(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_readlink_global_license || mkdir -p build/generic_readlink_global_license

	file=build/generic_readlink_global_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_readlink_global_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_readlink_global_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_readlink_global_license/" >>build/Makefile
fi


fi





test -d build/discard_granularity || mkdir -p build/discard_granularity
cat confdefs.h - <<_ACEOF >build/discard_granularity/discard_granularity.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct queue_limits ql __attribute__ ((unused));
		ql.discard_granularity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/discard_granularity || mkdir -p build/discard_granularity

	file=build/discard_granularity/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/discard_granularity

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := discard_granularity.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += discard_granularity/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/discard_granularity_license || mkdir -p build/discard_granularity_license
cat confdefs.h - <<_ACEOF >build/discard_granularity_license/discard_granularity_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct queue_limits ql __attribute__ ((unused));
		ql.discard_granularity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/discard_granularity_license || mkdir -p build/discard_granularity_license

	file=build/discard_granularity_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/discard_granularity_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := discard_granularity_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += discard_granularity_license/" >>build/Makefile
fi


fi





test -d build/inode_owner_or_capable || mkdir -p build/inode_owner_or_capable
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable/inode_owner_or_capable.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable || mkdir -p build/inode_owner_or_capable

	file=build/inode_owner_or_capable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_owner_or_capable_license || mkdir -p build/inode_owner_or_capable_license
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_license/inode_owner_or_capable_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_license || mkdir -p build/inode_owner_or_capable_license

	file=build/inode_owner_or_capable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_license/" >>build/Makefile
fi


fi




test -d build/inode_owner_or_capable_userns || mkdir -p build/inode_owner_or_capable_userns
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_userns/inode_owner_or_capable_userns.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&init_user_ns, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_userns || mkdir -p build/inode_owner_or_capable_userns

	file=build/inode_owner_or_capable_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_owner_or_capable_userns_license || mkdir -p build/inode_owner_or_capable_userns_license
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_userns_license/inode_owner_or_capable_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&init_user_ns, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_userns_license || mkdir -p build/inode_owner_or_capable_userns_license

	file=build/inode_owner_or_capable_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_owner_or_capable_mnt_idmap || mkdir -p build/inode_owner_or_capable_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_mnt_idmap/inode_owner_or_capable_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/mnt_idmapping.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&nop_mnt_idmap, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_mnt_idmap || mkdir -p build/inode_owner_or_capable_mnt_idmap

	file=build/inode_owner_or_capable_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_owner_or_capable_mnt_idmap_license || mkdir -p build/inode_owner_or_capable_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_mnt_idmap_license/inode_owner_or_capable_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/mnt_idmapping.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&nop_mnt_idmap, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_mnt_idmap_license || mkdir -p build/inode_owner_or_capable_mnt_idmap_license

	file=build/inode_owner_or_capable_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_mnt_idmap_license/" >>build/Makefile
fi


fi






test -d build/const_xattr_handler || mkdir -p build/const_xattr_handler
cat confdefs.h - <<_ACEOF >build/const_xattr_handler/const_xattr_handler.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		const struct xattr_handler xattr_test_handler = {
			.prefix	= "test",
			.get	= NULL,
			.set	= NULL,
		};

		const struct xattr_handler *xattr_handlers[] = {
			&xattr_test_handler,
		};

		const struct super_block sb __attribute__ ((unused)) = {
			.s_xattr = xattr_handlers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/const_xattr_handler || mkdir -p build/const_xattr_handler

	file=build/const_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/const_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := const_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += const_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/const_xattr_handler_license || mkdir -p build/const_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/const_xattr_handler_license/const_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		const struct xattr_handler xattr_test_handler = {
			.prefix	= "test",
			.get	= NULL,
			.set	= NULL,
		};

		const struct xattr_handler *xattr_handlers[] = {
			&xattr_test_handler,
		};

		const struct super_block sb __attribute__ ((unused)) = {
			.s_xattr = xattr_handlers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/const_xattr_handler_license || mkdir -p build/const_xattr_handler_license

	file=build/const_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/const_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := const_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += const_xattr_handler_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_name || mkdir -p build/xattr_handler_name
cat confdefs.h - <<_ACEOF >build/xattr_handler_name/xattr_handler_name.c

#include <linux/module.h>

		#include <linux/xattr.h>

		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.name = XATTR_NAME_POSIX_ACL_ACCESS,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_name || mkdir -p build/xattr_handler_name

	file=build/xattr_handler_name/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_name

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_name.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_name/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_name_license || mkdir -p build/xattr_handler_name_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_name_license/xattr_handler_name_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.name = XATTR_NAME_POSIX_ACL_ACCESS,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_name_license || mkdir -p build/xattr_handler_name_license

	file=build/xattr_handler_name_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_name_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_name_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_name_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_get_dentry_inode || mkdir -p build/xattr_handler_get_dentry_inode
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode/xattr_handler_get_dentry_inode.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode || mkdir -p build/xattr_handler_get_dentry_inode

	file=build/xattr_handler_get_dentry_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_dentry_inode_license || mkdir -p build/xattr_handler_get_dentry_inode_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode_license/xattr_handler_get_dentry_inode_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode_license || mkdir -p build/xattr_handler_get_dentry_inode_license

	file=build/xattr_handler_get_dentry_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_get_xattr_handler || mkdir -p build/xattr_handler_get_xattr_handler
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_xattr_handler/xattr_handler_get_xattr_handler.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_xattr_handler || mkdir -p build/xattr_handler_get_xattr_handler

	file=build/xattr_handler_get_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_xattr_handler_license || mkdir -p build/xattr_handler_get_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_xattr_handler_license/xattr_handler_get_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_xattr_handler_license || mkdir -p build/xattr_handler_get_xattr_handler_license

	file=build/xattr_handler_get_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_xattr_handler_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_get_dentry || mkdir -p build/xattr_handler_get_dentry
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry/xattr_handler_get_dentry.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(struct dentry *dentry, const char *name,
		    void *buffer, size_t size, int handler_flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry || mkdir -p build/xattr_handler_get_dentry

	file=build/xattr_handler_get_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_dentry_license || mkdir -p build/xattr_handler_get_dentry_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_license/xattr_handler_get_dentry_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(struct dentry *dentry, const char *name,
		    void *buffer, size_t size, int handler_flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_license || mkdir -p build/xattr_handler_get_dentry_license

	file=build/xattr_handler_get_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_get_dentry_inode_flags || mkdir -p build/xattr_handler_get_dentry_inode_flags
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode_flags/xattr_handler_get_dentry_inode_flags.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer,
		    size_t size, int flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode_flags || mkdir -p build/xattr_handler_get_dentry_inode_flags

	file=build/xattr_handler_get_dentry_inode_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_dentry_inode_flags_license || mkdir -p build/xattr_handler_get_dentry_inode_flags_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode_flags_license/xattr_handler_get_dentry_inode_flags_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer,
		    size_t size, int flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode_flags_license || mkdir -p build/xattr_handler_get_dentry_inode_flags_license

	file=build/xattr_handler_get_dentry_inode_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode_flags_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_set_mnt_idmap || mkdir -p build/xattr_handler_set_mnt_idmap
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_mnt_idmap/xattr_handler_set_mnt_idmap.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct mnt_idmap *idmap,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_mnt_idmap || mkdir -p build/xattr_handler_set_mnt_idmap

	file=build/xattr_handler_set_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_mnt_idmap_license || mkdir -p build/xattr_handler_set_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_mnt_idmap_license/xattr_handler_set_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct mnt_idmap *idmap,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_mnt_idmap_license || mkdir -p build/xattr_handler_set_mnt_idmap_license

	file=build/xattr_handler_set_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_userns || mkdir -p build/xattr_handler_set_userns
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_userns/xattr_handler_set_userns.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct user_namespace *mnt_userns,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_userns || mkdir -p build/xattr_handler_set_userns

	file=build/xattr_handler_set_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_userns_license || mkdir -p build/xattr_handler_set_userns_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_userns_license/xattr_handler_set_userns_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct user_namespace *mnt_userns,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_userns_license || mkdir -p build/xattr_handler_set_userns_license

	file=build/xattr_handler_set_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_userns_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_dentry_inode || mkdir -p build/xattr_handler_set_dentry_inode
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry_inode/xattr_handler_set_dentry_inode.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, const void *buffer,
		    size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry_inode || mkdir -p build/xattr_handler_set_dentry_inode

	file=build/xattr_handler_set_dentry_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_dentry_inode_license || mkdir -p build/xattr_handler_set_dentry_inode_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry_inode_license/xattr_handler_set_dentry_inode_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, const void *buffer,
		    size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry_inode_license || mkdir -p build/xattr_handler_set_dentry_inode_license

	file=build/xattr_handler_set_dentry_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry_inode_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_xattr_handler || mkdir -p build/xattr_handler_set_xattr_handler
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_xattr_handler/xattr_handler_set_xattr_handler.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_xattr_handler || mkdir -p build/xattr_handler_set_xattr_handler

	file=build/xattr_handler_set_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_xattr_handler_license || mkdir -p build/xattr_handler_set_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_xattr_handler_license/xattr_handler_set_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_xattr_handler_license || mkdir -p build/xattr_handler_set_xattr_handler_license

	file=build/xattr_handler_set_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_xattr_handler_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_dentry || mkdir -p build/xattr_handler_set_dentry
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry/xattr_handler_set_dentry.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry || mkdir -p build/xattr_handler_set_dentry

	file=build/xattr_handler_set_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_dentry_license || mkdir -p build/xattr_handler_set_dentry_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry_license/xattr_handler_set_dentry_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry_license || mkdir -p build/xattr_handler_set_dentry_license

	file=build/xattr_handler_set_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_list_simple || mkdir -p build/xattr_handler_list_simple
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_simple/xattr_handler_list_simple.c

#include <linux/module.h>

		#include <linux/xattr.h>

		bool list(struct dentry *dentry) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_simple || mkdir -p build/xattr_handler_list_simple

	file=build/xattr_handler_list_simple/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_simple

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_simple.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_simple/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_list_simple_license || mkdir -p build/xattr_handler_list_simple_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_simple_license/xattr_handler_list_simple_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		bool list(struct dentry *dentry) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_simple_license || mkdir -p build/xattr_handler_list_simple_license

	file=build/xattr_handler_list_simple_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_simple_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_simple_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_simple_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_list_xattr_handler || mkdir -p build/xattr_handler_list_xattr_handler
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_xattr_handler/xattr_handler_list_xattr_handler.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(const struct xattr_handler *handler,
		    struct dentry *dentry, char *list, size_t list_size,
		    const char *name, size_t name_len) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_xattr_handler || mkdir -p build/xattr_handler_list_xattr_handler

	file=build/xattr_handler_list_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_list_xattr_handler_license || mkdir -p build/xattr_handler_list_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_xattr_handler_license/xattr_handler_list_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(const struct xattr_handler *handler,
		    struct dentry *dentry, char *list, size_t list_size,
		    const char *name, size_t name_len) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_xattr_handler_license || mkdir -p build/xattr_handler_list_xattr_handler_license

	file=build/xattr_handler_list_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_xattr_handler_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_list_dentry || mkdir -p build/xattr_handler_list_dentry
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_dentry/xattr_handler_list_dentry.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(struct dentry *dentry,
		    char *list, size_t list_size,
		    const char *name, size_t name_len,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_dentry || mkdir -p build/xattr_handler_list_dentry

	file=build/xattr_handler_list_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_list_dentry_license || mkdir -p build/xattr_handler_list_dentry_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_dentry_license/xattr_handler_list_dentry_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(struct dentry *dentry,
		    char *list, size_t list_size,
		    const char *name, size_t name_len,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_dentry_license || mkdir -p build/xattr_handler_list_dentry_license

	file=build/xattr_handler_list_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_dentry_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_from_xattr_userns || mkdir -p build/posix_acl_from_xattr_userns
cat confdefs.h - <<_ACEOF >build/posix_acl_from_xattr_userns/posix_acl_from_xattr_userns.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl_xattr.h>


int
main (void)
{

		posix_acl_from_xattr(&init_user_ns, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_from_xattr_userns || mkdir -p build/posix_acl_from_xattr_userns

	file=build/posix_acl_from_xattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_from_xattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_from_xattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_from_xattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_from_xattr_userns_license || mkdir -p build/posix_acl_from_xattr_userns_license
cat confdefs.h - <<_ACEOF >build/posix_acl_from_xattr_userns_license/posix_acl_from_xattr_userns_license.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl_xattr.h>


int
main (void)
{

		posix_acl_from_xattr(&init_user_ns, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_from_xattr_userns_license || mkdir -p build/posix_acl_from_xattr_userns_license

	file=build/posix_acl_from_xattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_from_xattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_from_xattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_from_xattr_userns_license/" >>build/Makefile
fi


fi





test -d build/have_generic_setxattr || mkdir -p build/have_generic_setxattr
cat confdefs.h - <<_ACEOF >build/have_generic_setxattr/have_generic_setxattr.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setxattr = generic_setxattr
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/have_generic_setxattr || mkdir -p build/have_generic_setxattr

	file=build/have_generic_setxattr/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/have_generic_setxattr

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := have_generic_setxattr.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += have_generic_setxattr/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/have_generic_setxattr_license || mkdir -p build/have_generic_setxattr_license
cat confdefs.h - <<_ACEOF >build/have_generic_setxattr_license/have_generic_setxattr_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setxattr = generic_setxattr
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/have_generic_setxattr_license || mkdir -p build/have_generic_setxattr_license

	file=build/have_generic_setxattr_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/have_generic_setxattr_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := have_generic_setxattr_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += have_generic_setxattr_license/" >>build/Makefile
fi


fi







test -d build/posix_acl_release || mkdir -p build/posix_acl_release
cat confdefs.h - <<_ACEOF >build/posix_acl_release/posix_acl_release.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl *tmp = posix_acl_alloc(1, 0);
		posix_acl_release(tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_release || mkdir -p build/posix_acl_release

	file=build/posix_acl_release/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_release

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_release.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_release/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/posix_acl_release_license || mkdir -p build/posix_acl_release_license
cat confdefs.h - <<_ACEOF >build/posix_acl_release_license/posix_acl_release_license.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl *tmp = posix_acl_alloc(1, 0);
		posix_acl_release(tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_release_license || mkdir -p build/posix_acl_release_license

	file=build/posix_acl_release_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_release_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_release_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_release_license/" >>build/Makefile
fi


fi





test -d build/set_cached_acl || mkdir -p build/set_cached_acl
cat confdefs.h - <<_ACEOF >build/set_cached_acl/set_cached_acl.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct inode *ip = NULL;
		struct posix_acl *acl = posix_acl_alloc(1, 0);
		set_cached_acl(ip, ACL_TYPE_ACCESS, acl);
		forget_cached_acl(ip, ACL_TYPE_ACCESS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_cached_acl || mkdir -p build/set_cached_acl

	file=build/set_cached_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_cached_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_cached_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_cached_acl/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/set_cached_acl_license || mkdir -p build/set_cached_acl_license
cat confdefs.h - <<_ACEOF >build/set_cached_acl_license/set_cached_acl_license.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct inode *ip = NULL;
		struct posix_acl *acl = posix_acl_alloc(1, 0);
		set_cached_acl(ip, ACL_TYPE_ACCESS, acl);
		forget_cached_acl(ip, ACL_TYPE_ACCESS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_cached_acl_license || mkdir -p build/set_cached_acl_license

	file=build/set_cached_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_cached_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_cached_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_cached_acl_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_chmod || mkdir -p build/posix_acl_chmod
cat confdefs.h - <<_ACEOF >build/posix_acl_chmod/posix_acl_chmod.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_chmod || mkdir -p build/posix_acl_chmod

	file=build/posix_acl_chmod/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_chmod

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_chmod.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_chmod/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_chmod_license || mkdir -p build/posix_acl_chmod_license
cat confdefs.h - <<_ACEOF >build/posix_acl_chmod_license/posix_acl_chmod_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_chmod_license || mkdir -p build/posix_acl_chmod_license

	file=build/posix_acl_chmod_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_chmod_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_chmod_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_chmod_license/" >>build/Makefile
fi


fi




test -d build/__posix_acl_chmod || mkdir -p build/__posix_acl_chmod
cat confdefs.h - <<_ACEOF >build/__posix_acl_chmod/__posix_acl_chmod.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		__posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__posix_acl_chmod || mkdir -p build/__posix_acl_chmod

	file=build/__posix_acl_chmod/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__posix_acl_chmod

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __posix_acl_chmod.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __posix_acl_chmod/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/__posix_acl_chmod_license || mkdir -p build/__posix_acl_chmod_license
cat confdefs.h - <<_ACEOF >build/__posix_acl_chmod_license/__posix_acl_chmod_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		__posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/__posix_acl_chmod_license || mkdir -p build/__posix_acl_chmod_license

	file=build/__posix_acl_chmod_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__posix_acl_chmod_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __posix_acl_chmod_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __posix_acl_chmod_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_equiv_mode || mkdir -p build/posix_acl_equiv_mode
cat confdefs.h - <<_ACEOF >build/posix_acl_equiv_mode/posix_acl_equiv_mode.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		umode_t tmp;
		posix_acl_equiv_mode(NULL, &tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_equiv_mode || mkdir -p build/posix_acl_equiv_mode

	file=build/posix_acl_equiv_mode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_equiv_mode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_equiv_mode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_equiv_mode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_equiv_mode_license || mkdir -p build/posix_acl_equiv_mode_license
cat confdefs.h - <<_ACEOF >build/posix_acl_equiv_mode_license/posix_acl_equiv_mode_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		umode_t tmp;
		posix_acl_equiv_mode(NULL, &tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_equiv_mode_license || mkdir -p build/posix_acl_equiv_mode_license

	file=build/posix_acl_equiv_mode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_equiv_mode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_equiv_mode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_equiv_mode_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_valid_with_ns || mkdir -p build/posix_acl_valid_with_ns
cat confdefs.h - <<_ACEOF >build/posix_acl_valid_with_ns/posix_acl_valid_with_ns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct user_namespace *user_ns = NULL;
		const struct posix_acl *acl = NULL;
		int error;

		error = posix_acl_valid(user_ns, acl);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_valid_with_ns || mkdir -p build/posix_acl_valid_with_ns

	file=build/posix_acl_valid_with_ns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_valid_with_ns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_valid_with_ns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_valid_with_ns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_valid_with_ns_license || mkdir -p build/posix_acl_valid_with_ns_license
cat confdefs.h - <<_ACEOF >build/posix_acl_valid_with_ns_license/posix_acl_valid_with_ns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct user_namespace *user_ns = NULL;
		const struct posix_acl *acl = NULL;
		int error;

		error = posix_acl_valid(user_ns, acl);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_valid_with_ns_license || mkdir -p build/posix_acl_valid_with_ns_license

	file=build/posix_acl_valid_with_ns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_valid_with_ns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_valid_with_ns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_valid_with_ns_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_get_acl || mkdir -p build/inode_operations_get_acl
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl/inode_operations_get_acl.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type)
		    { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl || mkdir -p build/inode_operations_get_acl

	file=build/inode_operations_get_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_acl_license || mkdir -p build/inode_operations_get_acl_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl_license/inode_operations_get_acl_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type)
		    { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl_license || mkdir -p build/inode_operations_get_acl_license

	file=build/inode_operations_get_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_get_acl_rcu || mkdir -p build/inode_operations_get_acl_rcu
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl_rcu/inode_operations_get_acl_rcu.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl_rcu || mkdir -p build/inode_operations_get_acl_rcu

	file=build/inode_operations_get_acl_rcu/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl_rcu

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl_rcu.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl_rcu/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_acl_rcu_license || mkdir -p build/inode_operations_get_acl_rcu_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl_rcu_license/inode_operations_get_acl_rcu_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl_rcu_license || mkdir -p build/inode_operations_get_acl_rcu_license

	file=build/inode_operations_get_acl_rcu_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl_rcu_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl_rcu_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl_rcu_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_get_inode_acl || mkdir -p build/inode_operations_get_inode_acl
cat confdefs.h - <<_ACEOF >build/inode_operations_get_inode_acl/inode_operations_get_inode_acl.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_inode_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_inode_acl = get_inode_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_inode_acl || mkdir -p build/inode_operations_get_inode_acl

	file=build/inode_operations_get_inode_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_inode_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_inode_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_inode_acl/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_inode_acl_license || mkdir -p build/inode_operations_get_inode_acl_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_inode_acl_license/inode_operations_get_inode_acl_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_inode_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_inode_acl = get_inode_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_inode_acl_license || mkdir -p build/inode_operations_get_inode_acl_license

	file=build/inode_operations_get_inode_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_inode_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_inode_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_inode_acl_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_set_acl_mnt_idmap_dentry || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_mnt_idmap_dentry/inode_operations_set_acl_mnt_idmap_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct mnt_idmap *idmap,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_mnt_idmap_dentry || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry

	file=build/inode_operations_set_acl_mnt_idmap_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_mnt_idmap_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_mnt_idmap_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_mnt_idmap_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_mnt_idmap_dentry_license || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_mnt_idmap_dentry_license/inode_operations_set_acl_mnt_idmap_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct mnt_idmap *idmap,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_mnt_idmap_dentry_license || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry_license

	file=build/inode_operations_set_acl_mnt_idmap_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_mnt_idmap_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_mnt_idmap_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_mnt_idmap_dentry_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_set_acl_userns_dentry || mkdir -p build/inode_operations_set_acl_userns_dentry
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns_dentry/inode_operations_set_acl_userns_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns_dentry || mkdir -p build/inode_operations_set_acl_userns_dentry

	file=build/inode_operations_set_acl_userns_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_userns_dentry_license || mkdir -p build/inode_operations_set_acl_userns_dentry_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns_dentry_license/inode_operations_set_acl_userns_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns_dentry_license || mkdir -p build/inode_operations_set_acl_userns_dentry_license

	file=build/inode_operations_set_acl_userns_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns_dentry_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_set_acl_userns || mkdir -p build/inode_operations_set_acl_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns/inode_operations_set_acl_userns.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns || mkdir -p build/inode_operations_set_acl_userns

	file=build/inode_operations_set_acl_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_userns_license || mkdir -p build/inode_operations_set_acl_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns_license/inode_operations_set_acl_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns_license || mkdir -p build/inode_operations_set_acl_userns_license

	file=build/inode_operations_set_acl_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_set_acl || mkdir -p build/inode_operations_set_acl
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl/inode_operations_set_acl.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl || mkdir -p build/inode_operations_set_acl

	file=build/inode_operations_set_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_license || mkdir -p build/inode_operations_set_acl_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_license/inode_operations_set_acl_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_license || mkdir -p build/inode_operations_set_acl_license

	file=build/inode_operations_set_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_license/" >>build/Makefile
fi


fi





test -d build/get_acl_handle_cache || mkdir -p build/get_acl_handle_cache
cat confdefs.h - <<_ACEOF >build/get_acl_handle_cache/get_acl_handle_cache.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		void *sentinel __attribute__ ((unused)) =
		    uncached_acl_sentinel(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_acl_handle_cache || mkdir -p build/get_acl_handle_cache

	file=build/get_acl_handle_cache/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_acl_handle_cache

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_acl_handle_cache.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_acl_handle_cache/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/get_acl_handle_cache_license || mkdir -p build/get_acl_handle_cache_license
cat confdefs.h - <<_ACEOF >build/get_acl_handle_cache_license/get_acl_handle_cache_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		void *sentinel __attribute__ ((unused)) =
		    uncached_acl_sentinel(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_acl_handle_cache_license || mkdir -p build/get_acl_handle_cache_license

	file=build/get_acl_handle_cache_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_acl_handle_cache_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_acl_handle_cache_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_acl_handle_cache_license/" >>build/Makefile
fi


fi





test -d build/acl_refcount || mkdir -p build/acl_refcount
cat confdefs.h - <<_ACEOF >build/acl_refcount/acl_refcount.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		#include <linux/refcount.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl acl;
		refcount_t *r __attribute__ ((unused)) = &acl.a_refcount;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/acl_refcount || mkdir -p build/acl_refcount

	file=build/acl_refcount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/acl_refcount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := acl_refcount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += acl_refcount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/acl_refcount_license || mkdir -p build/acl_refcount_license
cat confdefs.h - <<_ACEOF >build/acl_refcount_license/acl_refcount_license.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		#include <linux/refcount.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl acl;
		refcount_t *r __attribute__ ((unused)) = &acl.a_refcount;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/acl_refcount_license || mkdir -p build/acl_refcount_license

	file=build/acl_refcount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/acl_refcount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := acl_refcount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += acl_refcount_license/" >>build/Makefile
fi


fi






test -d build/inode_operations_setattr_mnt_idmap || mkdir -p build/inode_operations_setattr_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_mnt_idmap/inode_operations_setattr_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct mnt_idmap *idmap,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_mnt_idmap || mkdir -p build/inode_operations_setattr_mnt_idmap

	file=build/inode_operations_setattr_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_setattr_mnt_idmap_license || mkdir -p build/inode_operations_setattr_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_mnt_idmap_license/inode_operations_setattr_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct mnt_idmap *idmap,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_mnt_idmap_license || mkdir -p build/inode_operations_setattr_mnt_idmap_license

	file=build/inode_operations_setattr_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_setattr_userns || mkdir -p build/inode_operations_setattr_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_userns/inode_operations_setattr_userns.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct user_namespace *userns,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_userns || mkdir -p build/inode_operations_setattr_userns

	file=build/inode_operations_setattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_setattr_userns_license || mkdir -p build/inode_operations_setattr_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_userns_license/inode_operations_setattr_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct user_namespace *userns,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_userns_license || mkdir -p build/inode_operations_setattr_userns_license

	file=build/inode_operations_setattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_setattr || mkdir -p build/inode_operations_setattr
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr/inode_operations_setattr.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr || mkdir -p build/inode_operations_setattr

	file=build/inode_operations_setattr/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_setattr_license || mkdir -p build/inode_operations_setattr_license
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_license/inode_operations_setattr_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_license || mkdir -p build/inode_operations_setattr_license

	file=build/inode_operations_setattr_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_getattr_mnt_idmap || mkdir -p build/inode_operations_getattr_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_mnt_idmap/inode_operations_getattr_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct mnt_idmap *idmap,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_mnt_idmap || mkdir -p build/inode_operations_getattr_mnt_idmap

	file=build/inode_operations_getattr_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_mnt_idmap_license || mkdir -p build/inode_operations_getattr_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_mnt_idmap_license/inode_operations_getattr_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct mnt_idmap *idmap,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_mnt_idmap_license || mkdir -p build/inode_operations_getattr_mnt_idmap_license

	file=build/inode_operations_getattr_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_getattr_userns || mkdir -p build/inode_operations_getattr_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_userns/inode_operations_getattr_userns.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
			struct user_namespace *userns,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_userns || mkdir -p build/inode_operations_getattr_userns

	file=build/inode_operations_getattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_userns_license || mkdir -p build/inode_operations_getattr_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_userns_license/inode_operations_getattr_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
			struct user_namespace *userns,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_userns_license || mkdir -p build/inode_operations_getattr_userns_license

	file=build/inode_operations_getattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_getattr_path || mkdir -p build/inode_operations_getattr_path
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_path/inode_operations_getattr_path.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_path || mkdir -p build/inode_operations_getattr_path

	file=build/inode_operations_getattr_path/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_path

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_path.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_path/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_path_license || mkdir -p build/inode_operations_getattr_path_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_path_license/inode_operations_getattr_path_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_path_license || mkdir -p build/inode_operations_getattr_path_license

	file=build/inode_operations_getattr_path_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_path_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_path_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_path_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_getattr_vfsmount || mkdir -p build/inode_operations_getattr_vfsmount
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_vfsmount/inode_operations_getattr_vfsmount.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct vfsmount *mnt, struct dentry *d,
		    struct kstat *k)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_vfsmount || mkdir -p build/inode_operations_getattr_vfsmount

	file=build/inode_operations_getattr_vfsmount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_vfsmount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_vfsmount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_vfsmount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_vfsmount_license || mkdir -p build/inode_operations_getattr_vfsmount_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_vfsmount_license/inode_operations_getattr_vfsmount_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct vfsmount *mnt, struct dentry *d,
		    struct kstat *k)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_vfsmount_license || mkdir -p build/inode_operations_getattr_vfsmount_license

	file=build/inode_operations_getattr_vfsmount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_vfsmount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_vfsmount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_vfsmount_license/" >>build/Makefile
fi


fi





test -d build/inode_set_flags || mkdir -p build/inode_set_flags
cat confdefs.h - <<_ACEOF >build/inode_set_flags/inode_set_flags.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode inode;
		inode_set_flags(&inode, S_IMMUTABLE, S_IMMUTABLE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_flags || mkdir -p build/inode_set_flags

	file=build/inode_set_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_set_flags_license || mkdir -p build/inode_set_flags_license
cat confdefs.h - <<_ACEOF >build/inode_set_flags_license/inode_set_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode inode;
		inode_set_flags(&inode, S_IMMUTABLE, S_IMMUTABLE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_flags_license || mkdir -p build/inode_set_flags_license

	file=build/inode_set_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_flags_license/" >>build/Makefile
fi


fi





test -d build/inode_set_iversion || mkdir -p build/inode_set_iversion
cat confdefs.h - <<_ACEOF >build/inode_set_iversion/inode_set_iversion.c

#include <linux/module.h>

		#include <linux/iversion.h>


int
main (void)
{

		struct inode inode;
		inode_set_iversion(&inode, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_iversion || mkdir -p build/inode_set_iversion

	file=build/inode_set_iversion/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_iversion

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_iversion.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_iversion/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_set_iversion_license || mkdir -p build/inode_set_iversion_license
cat confdefs.h - <<_ACEOF >build/inode_set_iversion_license/inode_set_iversion_license.c

#include <linux/module.h>

		#include <linux/iversion.h>


int
main (void)
{

		struct inode inode;
		inode_set_iversion(&inode, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_iversion_license || mkdir -p build/inode_set_iversion_license

	file=build/inode_set_iversion_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_iversion_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_iversion_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_iversion_license/" >>build/Makefile
fi


fi





test -d build/super_operations_show_options || mkdir -p build/super_operations_show_options
cat confdefs.h - <<_ACEOF >build/super_operations_show_options/super_operations_show_options.c

#include <linux/module.h>

		#include <linux/fs.h>

		int show_options(struct seq_file * x, struct dentry * y) {
			return 0;
		};

		static struct super_operations sops __attribute__ ((unused)) = {
			.show_options = show_options,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_operations_show_options || mkdir -p build/super_operations_show_options

	file=build/super_operations_show_options/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_operations_show_options

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_operations_show_options.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_operations_show_options/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_operations_show_options_license || mkdir -p build/super_operations_show_options_license
cat confdefs.h - <<_ACEOF >build/super_operations_show_options_license/super_operations_show_options_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int show_options(struct seq_file * x, struct dentry * y) {
			return 0;
		};

		static struct super_operations sops __attribute__ ((unused)) = {
			.show_options = show_options,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_operations_show_options_license || mkdir -p build/super_operations_show_options_license

	file=build/super_operations_show_options_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_operations_show_options_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_operations_show_options_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_operations_show_options_license/" >>build/Makefile
fi


fi





test -d build/file_inode || mkdir -p build/file_inode
cat confdefs.h - <<_ACEOF >build/file_inode/file_inode.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_inode(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_inode || mkdir -p build/file_inode

	file=build/file_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_inode_license || mkdir -p build/file_inode_license
cat confdefs.h - <<_ACEOF >build/file_inode_license/file_inode_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_inode(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_inode_license || mkdir -p build/file_inode_license

	file=build/file_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_inode_license/" >>build/Makefile
fi


fi





test -d build/file_dentry || mkdir -p build/file_dentry
cat confdefs.h - <<_ACEOF >build/file_dentry/file_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_dentry(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_dentry || mkdir -p build/file_dentry

	file=build/file_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_dentry_license || mkdir -p build/file_dentry_license
cat confdefs.h - <<_ACEOF >build/file_dentry_license/file_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_dentry(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_dentry_license || mkdir -p build/file_dentry_license

	file=build/file_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_dentry_license/" >>build/Makefile
fi


fi





test -d build/fsync_without_dentry || mkdir -p build/fsync_without_dentry
cat confdefs.h - <<_ACEOF >build/fsync_without_dentry/fsync_without_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, int x) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_without_dentry || mkdir -p build/fsync_without_dentry

	file=build/fsync_without_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_without_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_without_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_without_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/fsync_without_dentry_license || mkdir -p build/fsync_without_dentry_license
cat confdefs.h - <<_ACEOF >build/fsync_without_dentry_license/fsync_without_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, int x) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_without_dentry_license || mkdir -p build/fsync_without_dentry_license

	file=build/fsync_without_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_without_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_without_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_without_dentry_license/" >>build/Makefile
fi


fi




test -d build/fsync_range || mkdir -p build/fsync_range
cat confdefs.h - <<_ACEOF >build/fsync_range/fsync_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, loff_t a, loff_t b, int c)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_range || mkdir -p build/fsync_range

	file=build/fsync_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/fsync_range_license || mkdir -p build/fsync_range_license
cat confdefs.h - <<_ACEOF >build/fsync_range_license/fsync_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, loff_t a, loff_t b, int c)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_range_license || mkdir -p build/fsync_range_license

	file=build/fsync_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_range_license/" >>build/Makefile
fi


fi





test -d build/aio_fsync || mkdir -p build/aio_fsync
cat confdefs.h - <<_ACEOF >build/aio_fsync/aio_fsync.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.aio_fsync = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/aio_fsync || mkdir -p build/aio_fsync

	file=build/aio_fsync/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/aio_fsync

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := aio_fsync.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += aio_fsync/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/aio_fsync_license || mkdir -p build/aio_fsync_license
cat confdefs.h - <<_ACEOF >build/aio_fsync_license/aio_fsync_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.aio_fsync = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/aio_fsync_license || mkdir -p build/aio_fsync_license

	file=build/aio_fsync_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/aio_fsync_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := aio_fsync_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += aio_fsync_license/" >>build/Makefile
fi


fi





test -d build/evict_inode || mkdir -p build/evict_inode
cat confdefs.h - <<_ACEOF >build/evict_inode/evict_inode.c

#include <linux/module.h>

		#include <linux/fs.h>
		void evict_inode (struct inode * t) { return; }
		static struct super_operations sops __attribute__ ((unused)) = {
			.evict_inode = evict_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/evict_inode || mkdir -p build/evict_inode

	file=build/evict_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/evict_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := evict_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += evict_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/evict_inode_license || mkdir -p build/evict_inode_license
cat confdefs.h - <<_ACEOF >build/evict_inode_license/evict_inode_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void evict_inode (struct inode * t) { return; }
		static struct super_operations sops __attribute__ ((unused)) = {
			.evict_inode = evict_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/evict_inode_license || mkdir -p build/evict_inode_license

	file=build/evict_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/evict_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := evict_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += evict_inode_license/" >>build/Makefile
fi


fi





test -d build/dirty_inode_with_flags || mkdir -p build/dirty_inode_with_flags
cat confdefs.h - <<_ACEOF >build/dirty_inode_with_flags/dirty_inode_with_flags.c

#include <linux/module.h>

		#include <linux/fs.h>

		void dirty_inode(struct inode *a, int b) { return; }

		static const struct super_operations
		    sops __attribute__ ((unused)) = {
			.dirty_inode = dirty_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dirty_inode_with_flags || mkdir -p build/dirty_inode_with_flags

	file=build/dirty_inode_with_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dirty_inode_with_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dirty_inode_with_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dirty_inode_with_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dirty_inode_with_flags_license || mkdir -p build/dirty_inode_with_flags_license
cat confdefs.h - <<_ACEOF >build/dirty_inode_with_flags_license/dirty_inode_with_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		void dirty_inode(struct inode *a, int b) { return; }

		static const struct super_operations
		    sops __attribute__ ((unused)) = {
			.dirty_inode = dirty_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dirty_inode_with_flags_license || mkdir -p build/dirty_inode_with_flags_license

	file=build/dirty_inode_with_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dirty_inode_with_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dirty_inode_with_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dirty_inode_with_flags_license/" >>build/Makefile
fi


fi






test -d build/super_block_s_shrink || mkdir -p build/super_block_s_shrink
cat confdefs.h - <<_ACEOF >build/super_block_s_shrink/super_block_s_shrink.c

#include <linux/module.h>

		#include <linux/fs.h>

		int shrink(struct shrinker *s, struct shrink_control *sc)
		    { return 0; }

		static const struct super_block
		    sb __attribute__ ((unused)) = {
			.s_shrink.seeks = DEFAULT_SEEKS,
			.s_shrink.batch = 0,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_shrink || mkdir -p build/super_block_s_shrink

	file=build/super_block_s_shrink/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_shrink

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_shrink.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_shrink/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_block_s_shrink_license || mkdir -p build/super_block_s_shrink_license
cat confdefs.h - <<_ACEOF >build/super_block_s_shrink_license/super_block_s_shrink_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int shrink(struct shrinker *s, struct shrink_control *sc)
		    { return 0; }

		static const struct super_block
		    sb __attribute__ ((unused)) = {
			.s_shrink.seeks = DEFAULT_SEEKS,
			.s_shrink.batch = 0,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_shrink_license || mkdir -p build/super_block_s_shrink_license

	file=build/super_block_s_shrink_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_shrink_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_shrink_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_shrink_license/" >>build/Makefile
fi


fi





test -d build/shrink_control_nid || mkdir -p build/shrink_control_nid
cat confdefs.h - <<_ACEOF >build/shrink_control_nid/shrink_control_nid.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));
		unsigned long scnidsize __attribute__ ((unused)) =
		    sizeof(sc.nid);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_nid || mkdir -p build/shrink_control_nid

	file=build/shrink_control_nid/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_nid

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_nid.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_nid/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrink_control_nid_license || mkdir -p build/shrink_control_nid_license
cat confdefs.h - <<_ACEOF >build/shrink_control_nid_license/shrink_control_nid_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));
		unsigned long scnidsize __attribute__ ((unused)) =
		    sizeof(sc.nid);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_nid_license || mkdir -p build/shrink_control_nid_license

	file=build/shrink_control_nid_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_nid_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_nid_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_nid_license/" >>build/Makefile
fi


fi





test -d build/shrinker_cb_shrink_control || mkdir -p build/shrinker_cb_shrink_control
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control/shrinker_cb_shrink_control.c

#include <linux/module.h>

		#include <linux/mm.h>
		int shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.shrink = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control || mkdir -p build/shrinker_cb_shrink_control

	file=build/shrinker_cb_shrink_control/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrinker_cb_shrink_control_license || mkdir -p build/shrinker_cb_shrink_control_license
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control_license/shrinker_cb_shrink_control_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		int shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.shrink = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control_license || mkdir -p build/shrinker_cb_shrink_control_license

	file=build/shrinker_cb_shrink_control_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control_license/" >>build/Makefile
fi


fi




test -d build/shrinker_cb_shrink_control_split || mkdir -p build/shrinker_cb_shrink_control_split
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control_split/shrinker_cb_shrink_control_split.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control_split || mkdir -p build/shrinker_cb_shrink_control_split

	file=build/shrinker_cb_shrink_control_split/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control_split

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control_split.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control_split/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrinker_cb_shrink_control_split_license || mkdir -p build/shrinker_cb_shrink_control_split_license
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control_split_license/shrinker_cb_shrink_control_split_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control_split_license || mkdir -p build/shrinker_cb_shrink_control_split_license

	file=build/shrinker_cb_shrink_control_split_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control_split_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control_split_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control_split_license/" >>build/Makefile
fi


fi





test -d build/shrink_control_struct || mkdir -p build/shrink_control_struct
cat confdefs.h - <<_ACEOF >build/shrink_control_struct/shrink_control_struct.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));

		sc.nr_to_scan = 0;
		sc.gfp_mask = GFP_KERNEL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_struct || mkdir -p build/shrink_control_struct

	file=build/shrink_control_struct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_struct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_struct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_struct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrink_control_struct_license || mkdir -p build/shrink_control_struct_license
cat confdefs.h - <<_ACEOF >build/shrink_control_struct_license/shrink_control_struct_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));

		sc.nr_to_scan = 0;
		sc.gfp_mask = GFP_KERNEL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_struct_license || mkdir -p build/shrink_control_struct_license

	file=build/shrink_control_struct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_struct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_struct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_struct_license/" >>build/Makefile
fi


fi





test -d build/register_shrinker_vararg || mkdir -p build/register_shrinker_vararg
cat confdefs.h - <<_ACEOF >build/register_shrinker_vararg/register_shrinker_vararg.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker, "vararg-reg-shrink-test");

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/register_shrinker_vararg || mkdir -p build/register_shrinker_vararg

	file=build/register_shrinker_vararg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/register_shrinker_vararg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := register_shrinker_vararg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += register_shrinker_vararg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/register_shrinker_vararg_license || mkdir -p build/register_shrinker_vararg_license
cat confdefs.h - <<_ACEOF >build/register_shrinker_vararg_license/register_shrinker_vararg_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker, "vararg-reg-shrink-test");

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/register_shrinker_vararg_license || mkdir -p build/register_shrinker_vararg_license

	file=build/register_shrinker_vararg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/register_shrinker_vararg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := register_shrinker_vararg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += register_shrinker_vararg_license/" >>build/Makefile
fi


fi






test -d build/mkdir_mnt_idmap || mkdir -p build/mkdir_mnt_idmap
cat confdefs.h - <<_ACEOF >build/mkdir_mnt_idmap/mkdir_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct mnt_idmap *idmap,
			struct inode *inode, struct dentry *dentry,
			umode_t umode) { return 0; }
		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_mnt_idmap || mkdir -p build/mkdir_mnt_idmap

	file=build/mkdir_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mkdir_mnt_idmap_license || mkdir -p build/mkdir_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/mkdir_mnt_idmap_license/mkdir_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct mnt_idmap *idmap,
			struct inode *inode, struct dentry *dentry,
			umode_t umode) { return 0; }
		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_mnt_idmap_license || mkdir -p build/mkdir_mnt_idmap_license

	file=build/mkdir_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/mkdir_user_namespace || mkdir -p build/mkdir_user_namespace
cat confdefs.h - <<_ACEOF >build/mkdir_user_namespace/mkdir_user_namespace.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct user_namespace *userns,
			struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_user_namespace || mkdir -p build/mkdir_user_namespace

	file=build/mkdir_user_namespace/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_user_namespace

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_user_namespace.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_user_namespace/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mkdir_user_namespace_license || mkdir -p build/mkdir_user_namespace_license
cat confdefs.h - <<_ACEOF >build/mkdir_user_namespace_license/mkdir_user_namespace_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct user_namespace *userns,
			struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_user_namespace_license || mkdir -p build/mkdir_user_namespace_license

	file=build/mkdir_user_namespace_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_user_namespace_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_user_namespace_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_user_namespace_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_mkdir || mkdir -p build/inode_operations_mkdir
cat confdefs.h - <<_ACEOF >build/inode_operations_mkdir/inode_operations_mkdir.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_mkdir || mkdir -p build/inode_operations_mkdir

	file=build/inode_operations_mkdir/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_mkdir

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_mkdir.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_mkdir/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_mkdir_license || mkdir -p build/inode_operations_mkdir_license
cat confdefs.h - <<_ACEOF >build/inode_operations_mkdir_license/inode_operations_mkdir_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_mkdir_license || mkdir -p build/inode_operations_mkdir_license

	file=build/inode_operations_mkdir_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_mkdir_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_mkdir_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_mkdir_license/" >>build/Makefile
fi


fi





test -d build/lookup_flags || mkdir -p build/lookup_flags
cat confdefs.h - <<_ACEOF >build/lookup_flags/lookup_flags.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		struct dentry *inode_lookup(struct inode *inode,
		    struct dentry *dentry, unsigned int flags) { return NULL; }

		static const struct inode_operations iops
		    __attribute__ ((unused)) = {
			.lookup	= inode_lookup,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_flags || mkdir -p build/lookup_flags

	file=build/lookup_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_flags_license || mkdir -p build/lookup_flags_license
cat confdefs.h - <<_ACEOF >build/lookup_flags_license/lookup_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		struct dentry *inode_lookup(struct inode *inode,
		    struct dentry *dentry, unsigned int flags) { return NULL; }

		static const struct inode_operations iops
		    __attribute__ ((unused)) = {
			.lookup	= inode_lookup,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_flags_license || mkdir -p build/lookup_flags_license

	file=build/lookup_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_flags_license/" >>build/Makefile
fi


fi





test -d build/create_mnt_idmap || mkdir -p build/create_mnt_idmap
cat confdefs.h - <<_ACEOF >build/create_mnt_idmap/create_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create         = inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_mnt_idmap || mkdir -p build/create_mnt_idmap

	file=build/create_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/create_mnt_idmap_license || mkdir -p build/create_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/create_mnt_idmap_license/create_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create         = inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_mnt_idmap_license || mkdir -p build/create_mnt_idmap_license

	file=build/create_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/create_userns || mkdir -p build/create_userns
cat confdefs.h - <<_ACEOF >build/create_userns/create_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_userns || mkdir -p build/create_userns

	file=build/create_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/create_userns_license || mkdir -p build/create_userns_license
cat confdefs.h - <<_ACEOF >build/create_userns_license/create_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_userns_license || mkdir -p build/create_userns_license

	file=build/create_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_userns_license/" >>build/Makefile
fi


fi




test -d build/create_flags || mkdir -p build/create_flags
cat confdefs.h - <<_ACEOF >build/create_flags/create_flags.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_flags || mkdir -p build/create_flags

	file=build/create_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/create_flags_license || mkdir -p build/create_flags_license
cat confdefs.h - <<_ACEOF >build/create_flags_license/create_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_flags_license || mkdir -p build/create_flags_license

	file=build/create_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_flags_license/" >>build/Makefile
fi


fi





test -d build/permission_mnt_idmap || mkdir -p build/permission_mnt_idmap
cat confdefs.h - <<_ACEOF >build/permission_mnt_idmap/permission_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct mnt_idmap *idmap,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission             = inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_mnt_idmap || mkdir -p build/permission_mnt_idmap

	file=build/permission_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/permission_mnt_idmap_license || mkdir -p build/permission_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/permission_mnt_idmap_license/permission_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct mnt_idmap *idmap,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission             = inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_mnt_idmap_license || mkdir -p build/permission_mnt_idmap_license

	file=build/permission_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/permission_userns || mkdir -p build/permission_userns
cat confdefs.h - <<_ACEOF >build/permission_userns/permission_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct user_namespace *userns,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission		= inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_userns || mkdir -p build/permission_userns

	file=build/permission_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/permission_userns_license || mkdir -p build/permission_userns_license
cat confdefs.h - <<_ACEOF >build/permission_userns_license/permission_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct user_namespace *userns,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission		= inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_userns_license || mkdir -p build/permission_userns_license

	file=build/permission_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_userns_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_get_link || mkdir -p build/inode_operations_get_link
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link/inode_operations_get_link.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct inode *ip,
		    struct delayed_call *done) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link || mkdir -p build/inode_operations_get_link

	file=build/inode_operations_get_link/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_link_license || mkdir -p build/inode_operations_get_link_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link_license/inode_operations_get_link_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct inode *ip,
		    struct delayed_call *done) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link_license || mkdir -p build/inode_operations_get_link_license

	file=build/inode_operations_get_link_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_get_link_cookie || mkdir -p build/inode_operations_get_link_cookie
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link_cookie/inode_operations_get_link_cookie.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct
		    inode *ip, void **cookie) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link_cookie || mkdir -p build/inode_operations_get_link_cookie

	file=build/inode_operations_get_link_cookie/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link_cookie

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link_cookie.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link_cookie/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_link_cookie_license || mkdir -p build/inode_operations_get_link_cookie_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link_cookie_license/inode_operations_get_link_cookie_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct
		    inode *ip, void **cookie) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link_cookie_license || mkdir -p build/inode_operations_get_link_cookie_license

	file=build/inode_operations_get_link_cookie_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link_cookie_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link_cookie_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link_cookie_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_follow_link || mkdir -p build/inode_operations_follow_link
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link/inode_operations_follow_link.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *follow_link(struct dentry *de,
		    void **cookie) { return "symlink"; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link || mkdir -p build/inode_operations_follow_link

	file=build/inode_operations_follow_link/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_follow_link_license || mkdir -p build/inode_operations_follow_link_license
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link_license/inode_operations_follow_link_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *follow_link(struct dentry *de,
		    void **cookie) { return "symlink"; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link_license || mkdir -p build/inode_operations_follow_link_license

	file=build/inode_operations_follow_link_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_follow_link_nameidata || mkdir -p build/inode_operations_follow_link_nameidata
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link_nameidata/inode_operations_follow_link_nameidata.c

#include <linux/module.h>

		#include <linux/fs.h>
		void *follow_link(struct dentry *de, struct
		    nameidata *nd) { return (void *)NULL; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link_nameidata || mkdir -p build/inode_operations_follow_link_nameidata

	file=build/inode_operations_follow_link_nameidata/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link_nameidata

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link_nameidata.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link_nameidata/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_follow_link_nameidata_license || mkdir -p build/inode_operations_follow_link_nameidata_license
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link_nameidata_license/inode_operations_follow_link_nameidata_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void *follow_link(struct dentry *de, struct
		    nameidata *nd) { return (void *)NULL; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link_nameidata_license || mkdir -p build/inode_operations_follow_link_nameidata_license

	file=build/inode_operations_follow_link_nameidata_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link_nameidata_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link_nameidata_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link_nameidata_license/" >>build/Makefile
fi


fi





test -d build/put_link_cookie || mkdir -p build/put_link_cookie
cat confdefs.h - <<_ACEOF >build/put_link_cookie/put_link_cookie.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct inode *ip, void *cookie)
		    { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_cookie || mkdir -p build/put_link_cookie

	file=build/put_link_cookie/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_cookie

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_cookie.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_cookie/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/put_link_cookie_license || mkdir -p build/put_link_cookie_license
cat confdefs.h - <<_ACEOF >build/put_link_cookie_license/put_link_cookie_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct inode *ip, void *cookie)
		    { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_cookie_license || mkdir -p build/put_link_cookie_license

	file=build/put_link_cookie_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_cookie_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_cookie_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_cookie_license/" >>build/Makefile
fi


fi




test -d build/put_link_nameidata || mkdir -p build/put_link_nameidata
cat confdefs.h - <<_ACEOF >build/put_link_nameidata/put_link_nameidata.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct dentry *de, struct
		    nameidata *nd, void *ptr) { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_nameidata || mkdir -p build/put_link_nameidata

	file=build/put_link_nameidata/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_nameidata

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_nameidata.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_nameidata/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/put_link_nameidata_license || mkdir -p build/put_link_nameidata_license
cat confdefs.h - <<_ACEOF >build/put_link_nameidata_license/put_link_nameidata_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct dentry *de, struct
		    nameidata *nd, void *ptr) { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_nameidata_license || mkdir -p build/put_link_nameidata_license

	file=build/put_link_nameidata_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_nameidata_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_nameidata_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_nameidata_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_tmpfile_mnt_idmap || mkdir -p build/inode_operations_tmpfile_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_mnt_idmap/inode_operations_tmpfile_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct mnt_idmap *idmap,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_mnt_idmap || mkdir -p build/inode_operations_tmpfile_mnt_idmap

	file=build/inode_operations_tmpfile_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_mnt_idmap_license || mkdir -p build/inode_operations_tmpfile_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_mnt_idmap_license/inode_operations_tmpfile_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct mnt_idmap *idmap,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_mnt_idmap_license || mkdir -p build/inode_operations_tmpfile_mnt_idmap_license

	file=build/inode_operations_tmpfile_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_mnt_idmap_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_tmpfile || mkdir -p build/inode_operations_tmpfile
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile/inode_operations_tmpfile.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile || mkdir -p build/inode_operations_tmpfile

	file=build/inode_operations_tmpfile/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_license || mkdir -p build/inode_operations_tmpfile_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_license/inode_operations_tmpfile_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_license || mkdir -p build/inode_operations_tmpfile_license

	file=build/inode_operations_tmpfile_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_tmpfile_dentry_userns || mkdir -p build/inode_operations_tmpfile_dentry_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry_userns/inode_operations_tmpfile_dentry_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct dentry *dentry,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry_userns || mkdir -p build/inode_operations_tmpfile_dentry_userns

	file=build/inode_operations_tmpfile_dentry_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_dentry_userns_license || mkdir -p build/inode_operations_tmpfile_dentry_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry_userns_license/inode_operations_tmpfile_dentry_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct dentry *dentry,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry_userns_license || mkdir -p build/inode_operations_tmpfile_dentry_userns_license

	file=build/inode_operations_tmpfile_dentry_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry_userns_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_tmpfile_dentry || mkdir -p build/inode_operations_tmpfile_dentry
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry/inode_operations_tmpfile_dentry.c

#include <linux/module.h>

			#include <linux/fs.h>
			int tmpfile(struct inode *inode, struct dentry *dentry,
			    umode_t mode) { return 0; }
			static struct inode_operations
			    iops __attribute__ ((unused)) = {
				.tmpfile = tmpfile,
			};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry || mkdir -p build/inode_operations_tmpfile_dentry

	file=build/inode_operations_tmpfile_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_dentry_license || mkdir -p build/inode_operations_tmpfile_dentry_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry_license/inode_operations_tmpfile_dentry_license.c

#include <linux/module.h>

			#include <linux/fs.h>
			int tmpfile(struct inode *inode, struct dentry *dentry,
			    umode_t mode) { return 0; }
			static struct inode_operations
			    iops __attribute__ ((unused)) = {
				.tmpfile = tmpfile,
			};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry_license || mkdir -p build/inode_operations_tmpfile_dentry_license

	file=build/inode_operations_tmpfile_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry_license/" >>build/Makefile
fi


fi





test -d build/dentry_operations_d_automount || mkdir -p build/dentry_operations_d_automount
cat confdefs.h - <<_ACEOF >build/dentry_operations_d_automount/dentry_operations_d_automount.c

#include <linux/module.h>

		#include <linux/dcache.h>
		struct vfsmount *d_automount(struct path *p) { return NULL; }
		struct dentry_operations dops __attribute__ ((unused)) = {
			.d_automount = d_automount,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_d_automount || mkdir -p build/dentry_operations_d_automount

	file=build/dentry_operations_d_automount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_d_automount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_d_automount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_d_automount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_operations_d_automount_license || mkdir -p build/dentry_operations_d_automount_license
cat confdefs.h - <<_ACEOF >build/dentry_operations_d_automount_license/dentry_operations_d_automount_license.c

#include <linux/module.h>

		#include <linux/dcache.h>
		struct vfsmount *d_automount(struct path *p) { return NULL; }
		struct dentry_operations dops __attribute__ ((unused)) = {
			.d_automount = d_automount,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_d_automount_license || mkdir -p build/dentry_operations_d_automount_license

	file=build/dentry_operations_d_automount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_d_automount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_d_automount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_d_automount_license/" >>build/Makefile
fi


fi





test -d build/export_operations_encode_fh || mkdir -p build/export_operations_encode_fh
cat confdefs.h - <<_ACEOF >build/export_operations_encode_fh/export_operations_encode_fh.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int encode_fh(struct inode *inode, __u32 *fh, int *max_len,
		              struct inode *parent) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.encode_fh = encode_fh,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_encode_fh || mkdir -p build/export_operations_encode_fh

	file=build/export_operations_encode_fh/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_encode_fh

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_encode_fh.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_encode_fh/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/export_operations_encode_fh_license || mkdir -p build/export_operations_encode_fh_license
cat confdefs.h - <<_ACEOF >build/export_operations_encode_fh_license/export_operations_encode_fh_license.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int encode_fh(struct inode *inode, __u32 *fh, int *max_len,
		              struct inode *parent) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.encode_fh = encode_fh,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_encode_fh_license || mkdir -p build/export_operations_encode_fh_license

	file=build/export_operations_encode_fh_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_encode_fh_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_encode_fh_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_encode_fh_license/" >>build/Makefile
fi


fi





test -d build/export_operations_commit_metadata || mkdir -p build/export_operations_commit_metadata
cat confdefs.h - <<_ACEOF >build/export_operations_commit_metadata/export_operations_commit_metadata.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int commit_metadata(struct inode *inode) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.commit_metadata = commit_metadata,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_commit_metadata || mkdir -p build/export_operations_commit_metadata

	file=build/export_operations_commit_metadata/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_commit_metadata

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_commit_metadata.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_commit_metadata/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/export_operations_commit_metadata_license || mkdir -p build/export_operations_commit_metadata_license
cat confdefs.h - <<_ACEOF >build/export_operations_commit_metadata_license/export_operations_commit_metadata_license.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int commit_metadata(struct inode *inode) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.commit_metadata = commit_metadata,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_commit_metadata_license || mkdir -p build/export_operations_commit_metadata_license

	file=build/export_operations_commit_metadata_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_commit_metadata_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_commit_metadata_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_commit_metadata_license/" >>build/Makefile
fi


fi





test -d build/clear_inode || mkdir -p build/clear_inode
cat confdefs.h - <<_ACEOF >build/clear_inode/clear_inode.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		clear_inode(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/clear_inode || mkdir -p build/clear_inode

	file=build/clear_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/clear_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := clear_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += clear_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/clear_inode_license || mkdir -p build/clear_inode_license
cat confdefs.h - <<_ACEOF >build/clear_inode_license/clear_inode_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		clear_inode(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/clear_inode_license || mkdir -p build/clear_inode_license

	file=build/clear_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/clear_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := clear_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += clear_inode_license/" >>build/Makefile
fi


fi





test -d build/setattr_prepare || mkdir -p build/setattr_prepare
cat confdefs.h - <<_ACEOF >build/setattr_prepare/setattr_prepare.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare || mkdir -p build/setattr_prepare

	file=build/setattr_prepare/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/setattr_prepare_license || mkdir -p build/setattr_prepare_license
cat confdefs.h - <<_ACEOF >build/setattr_prepare_license/setattr_prepare_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_license || mkdir -p build/setattr_prepare_license

	file=build/setattr_prepare_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_license/" >>build/Makefile
fi


fi




test -d build/setattr_prepare_userns || mkdir -p build/setattr_prepare_userns
cat confdefs.h - <<_ACEOF >build/setattr_prepare_userns/setattr_prepare_userns.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct user_namespace *userns = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(userns, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_userns || mkdir -p build/setattr_prepare_userns

	file=build/setattr_prepare_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/setattr_prepare_userns_license || mkdir -p build/setattr_prepare_userns_license
cat confdefs.h - <<_ACEOF >build/setattr_prepare_userns_license/setattr_prepare_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct user_namespace *userns = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(userns, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_userns_license || mkdir -p build/setattr_prepare_userns_license

	file=build/setattr_prepare_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_userns_license/" >>build/Makefile
fi


fi




test -d build/setattr_prepare_mnt_idmap || mkdir -p build/setattr_prepare_mnt_idmap
cat confdefs.h - <<_ACEOF >build/setattr_prepare_mnt_idmap/setattr_prepare_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct mnt_idmap *idmap = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(idmap, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_mnt_idmap || mkdir -p build/setattr_prepare_mnt_idmap

	file=build/setattr_prepare_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/setattr_prepare_mnt_idmap_license || mkdir -p build/setattr_prepare_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/setattr_prepare_mnt_idmap_license/setattr_prepare_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct mnt_idmap *idmap = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(idmap, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_mnt_idmap_license || mkdir -p build/setattr_prepare_mnt_idmap_license

	file=build/setattr_prepare_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_mnt_idmap_license/" >>build/Makefile
fi


fi





test -d build/insert_inode_locked || mkdir -p build/insert_inode_locked
cat confdefs.h - <<_ACEOF >build/insert_inode_locked/insert_inode_locked.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		insert_inode_locked(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/insert_inode_locked || mkdir -p build/insert_inode_locked

	file=build/insert_inode_locked/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/insert_inode_locked

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := insert_inode_locked.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += insert_inode_locked/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/insert_inode_locked_license || mkdir -p build/insert_inode_locked_license
cat confdefs.h - <<_ACEOF >build/insert_inode_locked_license/insert_inode_locked_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		insert_inode_locked(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/insert_inode_locked_license || mkdir -p build/insert_inode_locked_license

	file=build/insert_inode_locked_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/insert_inode_locked_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := insert_inode_locked_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += insert_inode_locked_license/" >>build/Makefile
fi


fi






test -d build/d_make_root || mkdir -p build/d_make_root
cat confdefs.h - <<_ACEOF >build/d_make_root/d_make_root.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_make_root(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_make_root || mkdir -p build/d_make_root

	file=build/d_make_root/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_make_root

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_make_root.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_make_root/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_make_root_license || mkdir -p build/d_make_root_license
cat confdefs.h - <<_ACEOF >build/d_make_root_license/d_make_root_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_make_root(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_make_root_license || mkdir -p build/d_make_root_license

	file=build/d_make_root_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_make_root_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_make_root_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_make_root_license/" >>build/Makefile
fi


fi





test -d build/d_obtain_alias || mkdir -p build/d_obtain_alias
cat confdefs.h - <<_ACEOF >build/d_obtain_alias/d_obtain_alias.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_obtain_alias(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_obtain_alias || mkdir -p build/d_obtain_alias

	file=build/d_obtain_alias/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_obtain_alias

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_obtain_alias.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_obtain_alias/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_obtain_alias_license || mkdir -p build/d_obtain_alias_license
cat confdefs.h - <<_ACEOF >build/d_obtain_alias_license/d_obtain_alias_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_obtain_alias(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_obtain_alias_license || mkdir -p build/d_obtain_alias_license

	file=build/d_obtain_alias_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_obtain_alias_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_obtain_alias_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_obtain_alias_license/" >>build/Makefile
fi


fi





test -d build/d_prune_aliases || mkdir -p build/d_prune_aliases
cat confdefs.h - <<_ACEOF >build/d_prune_aliases/d_prune_aliases.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		struct inode *ip = NULL;
		d_prune_aliases(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_prune_aliases || mkdir -p build/d_prune_aliases

	file=build/d_prune_aliases/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_prune_aliases

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_prune_aliases.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_prune_aliases/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_prune_aliases_license || mkdir -p build/d_prune_aliases_license
cat confdefs.h - <<_ACEOF >build/d_prune_aliases_license/d_prune_aliases_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		struct inode *ip = NULL;
		d_prune_aliases(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_prune_aliases_license || mkdir -p build/d_prune_aliases_license

	file=build/d_prune_aliases_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_prune_aliases_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_prune_aliases_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_prune_aliases_license/" >>build/Makefile
fi


fi





test -d build/d_set_d_op || mkdir -p build/d_set_d_op
cat confdefs.h - <<_ACEOF >build/d_set_d_op/d_set_d_op.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_set_d_op(NULL, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_set_d_op || mkdir -p build/d_set_d_op

	file=build/d_set_d_op/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_set_d_op

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_set_d_op.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_set_d_op/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_set_d_op_license || mkdir -p build/d_set_d_op_license
cat confdefs.h - <<_ACEOF >build/d_set_d_op_license/d_set_d_op_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_set_d_op(NULL, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_set_d_op_license || mkdir -p build/d_set_d_op_license

	file=build/d_set_d_op_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_set_d_op_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_set_d_op_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_set_d_op_license/" >>build/Makefile
fi


fi





test -d build/dentry_operations_revalidate || mkdir -p build/dentry_operations_revalidate
cat confdefs.h - <<_ACEOF >build/dentry_operations_revalidate/dentry_operations_revalidate.c

#include <linux/module.h>

		#include <linux/dcache.h>
		#include <linux/sched.h>

		int revalidate (struct dentry *dentry,
		    struct nameidata *nidata) { return 0; }

		static const struct dentry_operations
		    dops __attribute__ ((unused)) = {
			.d_revalidate	= revalidate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_revalidate || mkdir -p build/dentry_operations_revalidate

	file=build/dentry_operations_revalidate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_revalidate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_revalidate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_revalidate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_operations_revalidate_license || mkdir -p build/dentry_operations_revalidate_license
cat confdefs.h - <<_ACEOF >build/dentry_operations_revalidate_license/dentry_operations_revalidate_license.c

#include <linux/module.h>

		#include <linux/dcache.h>
		#include <linux/sched.h>

		int revalidate (struct dentry *dentry,
		    struct nameidata *nidata) { return 0; }

		static const struct dentry_operations
		    dops __attribute__ ((unused)) = {
			.d_revalidate	= revalidate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_revalidate_license || mkdir -p build/dentry_operations_revalidate_license

	file=build/dentry_operations_revalidate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_revalidate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_revalidate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_revalidate_license/" >>build/Makefile
fi


fi





test -d build/dentry_operations_const || mkdir -p build/dentry_operations_const
cat confdefs.h - <<_ACEOF >build/dentry_operations_const/dentry_operations_const.c

#include <linux/module.h>

		#include <linux/dcache.h>

		const struct dentry_operations test_d_op = {
			.d_revalidate = NULL,
		};


int
main (void)
{

		struct dentry d __attribute__ ((unused));
		d.d_op = &test_d_op;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_const || mkdir -p build/dentry_operations_const

	file=build/dentry_operations_const/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_const

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_const.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_const/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_operations_const_license || mkdir -p build/dentry_operations_const_license
cat confdefs.h - <<_ACEOF >build/dentry_operations_const_license/dentry_operations_const_license.c

#include <linux/module.h>

		#include <linux/dcache.h>

		const struct dentry_operations test_d_op = {
			.d_revalidate = NULL,
		};


int
main (void)
{

		struct dentry d __attribute__ ((unused));
		d.d_op = &test_d_op;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_const_license || mkdir -p build/dentry_operations_const_license

	file=build/dentry_operations_const_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_const_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_const_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_const_license/" >>build/Makefile
fi


fi





test -d build/super_block_s_d_op || mkdir -p build/super_block_s_d_op
cat confdefs.h - <<_ACEOF >build/super_block_s_d_op/super_block_s_d_op.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct super_block sb __attribute__ ((unused));
		sb.s_d_op = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_d_op || mkdir -p build/super_block_s_d_op

	file=build/super_block_s_d_op/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_d_op

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_d_op.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_d_op/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_block_s_d_op_license || mkdir -p build/super_block_s_d_op_license
cat confdefs.h - <<_ACEOF >build/super_block_s_d_op_license/super_block_s_d_op_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct super_block sb __attribute__ ((unused));
		sb.s_d_op = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_d_op_license || mkdir -p build/super_block_s_d_op_license

	file=build/super_block_s_d_op_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_d_op_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_d_op_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_d_op_license/" >>build/Makefile
fi


fi






test -d build/dentry_alias_d_u || mkdir -p build/dentry_alias_d_u
cat confdefs.h - <<_ACEOF >build/dentry_alias_d_u/dentry_alias_d_u.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/dcache.h>
		#include <linux/list.h>


int
main (void)
{

		struct inode *inode __attribute__ ((unused)) = NULL;
		struct dentry *dentry __attribute__ ((unused)) = NULL;
		hlist_for_each_entry(dentry, &inode->i_dentry,
		    d_u.d_alias) {
			d_drop(dentry);
		}

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_alias_d_u || mkdir -p build/dentry_alias_d_u

	file=build/dentry_alias_d_u/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_alias_d_u

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_alias_d_u.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_alias_d_u/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_alias_d_u_license || mkdir -p build/dentry_alias_d_u_license
cat confdefs.h - <<_ACEOF >build/dentry_alias_d_u_license/dentry_alias_d_u_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/dcache.h>
		#include <linux/list.h>


int
main (void)
{

		struct inode *inode __attribute__ ((unused)) = NULL;
		struct dentry *dentry __attribute__ ((unused)) = NULL;
		hlist_for_each_entry(dentry, &inode->i_dentry,
		    d_u.d_alias) {
			d_drop(dentry);
		}

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_alias_d_u_license || mkdir -p build/dentry_alias_d_u_license

	file=build/dentry_alias_d_u_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_alias_d_u_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_alias_d_u_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_alias_d_u_license/" >>build/Makefile
fi


fi





test -d build/truncate_setsize || mkdir -p build/truncate_setsize
cat confdefs.h - <<_ACEOF >build/truncate_setsize/truncate_setsize.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		truncate_setsize(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/truncate_setsize || mkdir -p build/truncate_setsize

	file=build/truncate_setsize/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/truncate_setsize

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := truncate_setsize.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += truncate_setsize/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/truncate_setsize_license || mkdir -p build/truncate_setsize_license
cat confdefs.h - <<_ACEOF >build/truncate_setsize_license/truncate_setsize_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		truncate_setsize(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/truncate_setsize_license || mkdir -p build/truncate_setsize_license

	file=build/truncate_setsize_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/truncate_setsize_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := truncate_setsize_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += truncate_setsize_license/" >>build/Makefile
fi


fi






test -d build/security_inode_init_security || mkdir -p build/security_inode_init_security
cat confdefs.h - <<_ACEOF >build/security_inode_init_security/security_inode_init_security.c

#include <linux/module.h>

		#include <linux/security.h>


int
main (void)
{

		struct inode *ip __attribute__ ((unused)) = NULL;
		struct inode *dip __attribute__ ((unused)) = NULL;
		const struct qstr *str __attribute__ ((unused)) = NULL;
		initxattrs func __attribute__ ((unused)) = NULL;

		security_inode_init_security(ip, dip, str, func, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/security_inode_init_security || mkdir -p build/security_inode_init_security

	file=build/security_inode_init_security/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/security_inode_init_security

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := security_inode_init_security.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += security_inode_init_security/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/security_inode_init_security_license || mkdir -p build/security_inode_init_security_license
cat confdefs.h - <<_ACEOF >build/security_inode_init_security_license/security_inode_init_security_license.c

#include <linux/module.h>

		#include <linux/security.h>


int
main (void)
{

		struct inode *ip __attribute__ ((unused)) = NULL;
		struct inode *dip __attribute__ ((unused)) = NULL;
		const struct qstr *str __attribute__ ((unused)) = NULL;
		initxattrs func __attribute__ ((unused)) = NULL;

		security_inode_init_security(ip, dip, str, func, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/security_inode_init_security_license || mkdir -p build/security_inode_init_security_license

	file=build/security_inode_init_security_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/security_inode_init_security_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := security_inode_init_security_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += security_inode_init_security_license/" >>build/Makefile
fi


fi






test -d build/file_system_type_mount || mkdir -p build/file_system_type_mount
cat confdefs.h - <<_ACEOF >build/file_system_type_mount/file_system_type_mount.c

#include <linux/module.h>

                #include <linux/fs.h>

                static struct dentry *
                mount(struct file_system_type *fs_type, int flags,
                    const char *osname, void *data) {
                        struct dentry *d = NULL;
                        return (d);
                }

                static struct file_system_type fst __attribute__ ((unused)) = {
                        .mount = mount,
                };


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_system_type_mount || mkdir -p build/file_system_type_mount

	file=build/file_system_type_mount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_system_type_mount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_system_type_mount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_system_type_mount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_system_type_mount_license || mkdir -p build/file_system_type_mount_license
cat confdefs.h - <<_ACEOF >build/file_system_type_mount_license/file_system_type_mount_license.c

#include <linux/module.h>

                #include <linux/fs.h>

                static struct dentry *
                mount(struct file_system_type *fs_type, int flags,
                    const char *osname, void *data) {
                        struct dentry *d = NULL;
                        return (d);
                }

                static struct file_system_type fst __attribute__ ((unused)) = {
                        .mount = mount,
                };


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_system_type_mount_license || mkdir -p build/file_system_type_mount_license

	file=build/file_system_type_mount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_system_type_mount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_system_type_mount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_system_type_mount_license/" >>build/Makefile
fi


fi





test -d build/super_setup_bdi_name || mkdir -p build/super_setup_bdi_name
cat confdefs.h - <<_ACEOF >build/super_setup_bdi_name/super_setup_bdi_name.c

#include <linux/module.h>

		#include <linux/fs.h>
		struct super_block sb;


int
main (void)
{

		char *name = "bdi";
		atomic_long_t zfs_bdi_seq;
		int error __attribute__((unused));
		atomic_long_set(&zfs_bdi_seq, 0);
		error =
		    super_setup_bdi_name(&sb, "%.28s-%ld", name,
		    atomic_long_inc_return(&zfs_bdi_seq));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_setup_bdi_name || mkdir -p build/super_setup_bdi_name

	file=build/super_setup_bdi_name/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_setup_bdi_name

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_setup_bdi_name.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_setup_bdi_name/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_setup_bdi_name_license || mkdir -p build/super_setup_bdi_name_license
cat confdefs.h - <<_ACEOF >build/super_setup_bdi_name_license/super_setup_bdi_name_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		struct super_block sb;


int
main (void)
{

		char *name = "bdi";
		atomic_long_t zfs_bdi_seq;
		int error __attribute__((unused));
		atomic_long_set(&zfs_bdi_seq, 0);
		error =
		    super_setup_bdi_name(&sb, "%.28s-%ld", name,
		    atomic_long_inc_return(&zfs_bdi_seq));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_setup_bdi_name_license || mkdir -p build/super_setup_bdi_name_license

	file=build/super_setup_bdi_name_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_setup_bdi_name_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_setup_bdi_name_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_setup_bdi_name_license/" >>build/Makefile
fi


fi




test -d build/bdi_setup_and_register || mkdir -p build/bdi_setup_and_register
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register/bdi_setup_and_register.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register || mkdir -p build/bdi_setup_and_register

	file=build/bdi_setup_and_register/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdi_setup_and_register_license || mkdir -p build/bdi_setup_and_register_license
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register_license/bdi_setup_and_register_license.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register_license || mkdir -p build/bdi_setup_and_register_license

	file=build/bdi_setup_and_register_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register_license/" >>build/Makefile
fi


fi




test -d build/bdi_setup_and_register_3args || mkdir -p build/bdi_setup_and_register_3args
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		unsigned int cap = BDI_CAP_MAP_COPY;
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register_3args || mkdir -p build/bdi_setup_and_register_3args

	file=build/bdi_setup_and_register_3args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register_3args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register_3args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register_3args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdi_setup_and_register_3args_license || mkdir -p build/bdi_setup_and_register_3args_license
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register_3args_license/bdi_setup_and_register_3args_license.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		unsigned int cap = BDI_CAP_MAP_COPY;
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register_3args_license || mkdir -p build/bdi_setup_and_register_3args_license

	file=build/bdi_setup_and_register_3args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register_3args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register_3args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register_3args_license/" >>build/Makefile
fi


fi





test -d build/set_nlink || mkdir -p build/set_nlink
cat confdefs.h - <<_ACEOF >build/set_nlink/set_nlink.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode node;
		unsigned int link = 0;
		(void) set_nlink(&node, link);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_nlink || mkdir -p build/set_nlink

	file=build/set_nlink/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_nlink

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_nlink.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_nlink/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/set_nlink_license || mkdir -p build/set_nlink_license
cat confdefs.h - <<_ACEOF >build/set_nlink_license/set_nlink_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode node;
		unsigned int link = 0;
		(void) set_nlink(&node, link);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_nlink_license || mkdir -p build/set_nlink_license

	file=build/set_nlink_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_nlink_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_nlink_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_nlink_license/" >>build/Makefile
fi


fi





test -d build/sget_5args || mkdir -p build/sget_5args
cat confdefs.h - <<_ACEOF >build/sget_5args/sget_5args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file_system_type *type = NULL;
		int (*test)(struct super_block *,void *) = NULL;
		int (*set)(struct super_block *,void *) = NULL;
		int flags = 0;
		void *data = NULL;
		(void) sget(type, test, set, flags, data);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sget_5args || mkdir -p build/sget_5args

	file=build/sget_5args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sget_5args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sget_5args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sget_5args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sget_5args_license || mkdir -p build/sget_5args_license
cat confdefs.h - <<_ACEOF >build/sget_5args_license/sget_5args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file_system_type *type = NULL;
		int (*test)(struct super_block *,void *) = NULL;
		int (*set)(struct super_block *,void *) = NULL;
		int flags = 0;
		void *data = NULL;
		(void) sget(type, test, set, flags, data);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sget_5args_license || mkdir -p build/sget_5args_license

	file=build/sget_5args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sget_5args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sget_5args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sget_5args_license/" >>build/Makefile
fi


fi





test -d build/lseek_execute || mkdir -p build/lseek_execute
cat confdefs.h - <<_ACEOF >build/lseek_execute/lseek_execute.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		struct inode *ip __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t maxsize __attribute__ ((unused)) = 0;

		lseek_execute(fp, ip, offset, maxsize);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lseek_execute || mkdir -p build/lseek_execute

	file=build/lseek_execute/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lseek_execute

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lseek_execute.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lseek_execute/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lseek_execute_license || mkdir -p build/lseek_execute_license
cat confdefs.h - <<_ACEOF >build/lseek_execute_license/lseek_execute_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		struct inode *ip __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t maxsize __attribute__ ((unused)) = 0;

		lseek_execute(fp, ip, offset, maxsize);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lseek_execute_license || mkdir -p build/lseek_execute_license

	file=build/lseek_execute_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lseek_execute_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lseek_execute_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lseek_execute_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_filemap_dirty_folio || mkdir -p build/vfs_has_filemap_dirty_folio
cat confdefs.h - <<_ACEOF >build/vfs_has_filemap_dirty_folio/vfs_has_filemap_dirty_folio.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/writeback.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.dirty_folio	= filemap_dirty_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_filemap_dirty_folio || mkdir -p build/vfs_has_filemap_dirty_folio

	file=build/vfs_has_filemap_dirty_folio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_filemap_dirty_folio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_filemap_dirty_folio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_filemap_dirty_folio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_filemap_dirty_folio_license || mkdir -p build/vfs_has_filemap_dirty_folio_license
cat confdefs.h - <<_ACEOF >build/vfs_has_filemap_dirty_folio_license/vfs_has_filemap_dirty_folio_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/writeback.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.dirty_folio	= filemap_dirty_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_filemap_dirty_folio_license || mkdir -p build/vfs_has_filemap_dirty_folio_license

	file=build/vfs_has_filemap_dirty_folio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_filemap_dirty_folio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_filemap_dirty_folio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_filemap_dirty_folio_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_read_folio || mkdir -p build/vfs_has_read_folio
cat confdefs.h - <<_ACEOF >build/vfs_has_read_folio/vfs_has_read_folio.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int
		test_read_folio(struct file *file, struct folio *folio) {
			(void) file; (void) folio;
			return (0);
		}

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.read_folio	= test_read_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_read_folio || mkdir -p build/vfs_has_read_folio

	file=build/vfs_has_read_folio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_read_folio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_read_folio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_read_folio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_read_folio_license || mkdir -p build/vfs_has_read_folio_license
cat confdefs.h - <<_ACEOF >build/vfs_has_read_folio_license/vfs_has_read_folio_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int
		test_read_folio(struct file *file, struct folio *folio) {
			(void) file; (void) folio;
			return (0);
		}

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.read_folio	= test_read_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_read_folio_license || mkdir -p build/vfs_has_read_folio_license

	file=build/vfs_has_read_folio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_read_folio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_read_folio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_read_folio_license/" >>build/Makefile
fi


fi






test -d build/vfs_getattr_4args || mkdir -p build/vfs_getattr_4args
cat confdefs.h - <<_ACEOF >build/vfs_getattr_4args/vfs_getattr_4args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((const struct path *)NULL,
			(struct kstat *)NULL,
			(u32)0,
			(unsigned int)0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_4args || mkdir -p build/vfs_getattr_4args

	file=build/vfs_getattr_4args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_4args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_4args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_4args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_getattr_4args_license || mkdir -p build/vfs_getattr_4args_license
cat confdefs.h - <<_ACEOF >build/vfs_getattr_4args_license/vfs_getattr_4args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((const struct path *)NULL,
			(struct kstat *)NULL,
			(u32)0,
			(unsigned int)0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_4args_license || mkdir -p build/vfs_getattr_4args_license

	file=build/vfs_getattr_4args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_4args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_4args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_4args_license/" >>build/Makefile
fi


fi





test -d build/vfs_getattr_2args || mkdir -p build/vfs_getattr_2args
cat confdefs.h - <<_ACEOF >build/vfs_getattr_2args/vfs_getattr_2args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct path *) NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_2args || mkdir -p build/vfs_getattr_2args

	file=build/vfs_getattr_2args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_2args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_2args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_2args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_getattr_2args_license || mkdir -p build/vfs_getattr_2args_license
cat confdefs.h - <<_ACEOF >build/vfs_getattr_2args_license/vfs_getattr_2args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct path *) NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_2args_license || mkdir -p build/vfs_getattr_2args_license

	file=build/vfs_getattr_2args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_2args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_2args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_2args_license/" >>build/Makefile
fi


fi





test -d build/vfs_getattr_3args || mkdir -p build/vfs_getattr_3args
cat confdefs.h - <<_ACEOF >build/vfs_getattr_3args/vfs_getattr_3args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct vfsmount *)NULL,
			(struct dentry *)NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_3args || mkdir -p build/vfs_getattr_3args

	file=build/vfs_getattr_3args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_3args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_3args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_3args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_getattr_3args_license || mkdir -p build/vfs_getattr_3args_license
cat confdefs.h - <<_ACEOF >build/vfs_getattr_3args_license/vfs_getattr_3args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct vfsmount *)NULL,
			(struct dentry *)NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_3args_license || mkdir -p build/vfs_getattr_3args_license

	file=build/vfs_getattr_3args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_3args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_3args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_3args_license/" >>build/Makefile
fi


fi






test -d build/vfs_fsync_2args || mkdir -p build/vfs_fsync_2args
cat confdefs.h - <<_ACEOF >build/vfs_fsync_2args/vfs_fsync_2args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_fsync(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_fsync_2args || mkdir -p build/vfs_fsync_2args

	file=build/vfs_fsync_2args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_fsync_2args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_fsync_2args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_fsync_2args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_fsync_2args_license || mkdir -p build/vfs_fsync_2args_license
cat confdefs.h - <<_ACEOF >build/vfs_fsync_2args_license/vfs_fsync_2args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_fsync(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_fsync_2args_license || mkdir -p build/vfs_fsync_2args_license

	file=build/vfs_fsync_2args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_fsync_2args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_fsync_2args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_fsync_2args_license/" >>build/Makefile
fi


fi





test -d build/file_operations_iterate_shared || mkdir -p build/file_operations_iterate_shared
cat confdefs.h - <<_ACEOF >build/file_operations_iterate_shared/file_operations_iterate_shared.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp, struct dir_context * context)
		    { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate_shared	 = iterate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate_shared || mkdir -p build/file_operations_iterate_shared

	file=build/file_operations_iterate_shared/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate_shared

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate_shared.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate_shared/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_iterate_shared_license || mkdir -p build/file_operations_iterate_shared_license
cat confdefs.h - <<_ACEOF >build/file_operations_iterate_shared_license/file_operations_iterate_shared_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp, struct dir_context * context)
		    { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate_shared	 = iterate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate_shared_license || mkdir -p build/file_operations_iterate_shared_license

	file=build/file_operations_iterate_shared_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate_shared_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate_shared_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate_shared_license/" >>build/Makefile
fi


fi




test -d build/file_operations_iterate || mkdir -p build/file_operations_iterate
cat confdefs.h - <<_ACEOF >build/file_operations_iterate/file_operations_iterate.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp,
		    struct dir_context *context) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate	 = iterate,
		};

		#if defined(FMODE_KABI_ITERATE)
		#error "RHEL 7.5, FMODE_KABI_ITERATE interface"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate || mkdir -p build/file_operations_iterate

	file=build/file_operations_iterate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_iterate_license || mkdir -p build/file_operations_iterate_license
cat confdefs.h - <<_ACEOF >build/file_operations_iterate_license/file_operations_iterate_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp,
		    struct dir_context *context) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate	 = iterate,
		};

		#if defined(FMODE_KABI_ITERATE)
		#error "RHEL 7.5, FMODE_KABI_ITERATE interface"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate_license || mkdir -p build/file_operations_iterate_license

	file=build/file_operations_iterate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate_license/" >>build/Makefile
fi


fi




test -d build/file_operations_readdir || mkdir -p build/file_operations_readdir
cat confdefs.h - <<_ACEOF >build/file_operations_readdir/file_operations_readdir.c

#include <linux/module.h>

		#include <linux/fs.h>
		int readdir(struct file *filp, void *entry,
		    filldir_t func) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.readdir = readdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_readdir || mkdir -p build/file_operations_readdir

	file=build/file_operations_readdir/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_readdir

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_readdir.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_readdir/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_readdir_license || mkdir -p build/file_operations_readdir_license
cat confdefs.h - <<_ACEOF >build/file_operations_readdir_license/file_operations_readdir_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int readdir(struct file *filp, void *entry,
		    filldir_t func) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.readdir = readdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_readdir_license || mkdir -p build/file_operations_readdir_license

	file=build/file_operations_readdir_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_readdir_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_readdir_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_readdir_license/" >>build/Makefile
fi


fi





test -d build/direct_io_iter || mkdir -p build/direct_io_iter
cat confdefs.h - <<_ACEOF >build/direct_io_iter/direct_io_iter.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter || mkdir -p build/direct_io_iter

	file=build/direct_io_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iter_license || mkdir -p build/direct_io_iter_license
cat confdefs.h - <<_ACEOF >build/direct_io_iter_license/direct_io_iter_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_license || mkdir -p build/direct_io_iter_license

	file=build/direct_io_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_license/" >>build/Makefile
fi


fi




test -d build/direct_io_iter_offset || mkdir -p build/direct_io_iter_offset
cat confdefs.h - <<_ACEOF >build/direct_io_iter_offset/direct_io_iter_offset.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_offset || mkdir -p build/direct_io_iter_offset

	file=build/direct_io_iter_offset/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_offset

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_offset.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_offset/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iter_offset_license || mkdir -p build/direct_io_iter_offset_license
cat confdefs.h - <<_ACEOF >build/direct_io_iter_offset_license/direct_io_iter_offset_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_offset_license || mkdir -p build/direct_io_iter_offset_license

	file=build/direct_io_iter_offset_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_offset_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_offset_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_offset_license/" >>build/Makefile
fi


fi




test -d build/direct_io_iter_rw_offset || mkdir -p build/direct_io_iter_rw_offset
cat confdefs.h - <<_ACEOF >build/direct_io_iter_rw_offset/direct_io_iter_rw_offset.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_rw_offset || mkdir -p build/direct_io_iter_rw_offset

	file=build/direct_io_iter_rw_offset/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_rw_offset

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_rw_offset.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_rw_offset/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iter_rw_offset_license || mkdir -p build/direct_io_iter_rw_offset_license
cat confdefs.h - <<_ACEOF >build/direct_io_iter_rw_offset_license/direct_io_iter_rw_offset_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_rw_offset_license || mkdir -p build/direct_io_iter_rw_offset_license

	file=build/direct_io_iter_rw_offset_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_rw_offset_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_rw_offset_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_rw_offset_license/" >>build/Makefile
fi


fi




test -d build/direct_io_iovec || mkdir -p build/direct_io_iovec
cat confdefs.h - <<_ACEOF >build/direct_io_iovec/direct_io_iovec.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    const struct iovec *iov, loff_t offset,
		    unsigned long nr_segs) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iovec || mkdir -p build/direct_io_iovec

	file=build/direct_io_iovec/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iovec

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iovec.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iovec/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iovec_license || mkdir -p build/direct_io_iovec_license
cat confdefs.h - <<_ACEOF >build/direct_io_iovec_license/direct_io_iovec_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    const struct iovec *iov, loff_t offset,
		    unsigned long nr_segs) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iovec_license || mkdir -p build/direct_io_iovec_license

	file=build/direct_io_iovec_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iovec_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iovec_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iovec_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_readpages || mkdir -p build/vfs_has_readpages
cat confdefs.h - <<_ACEOF >build/vfs_has_readpages/vfs_has_readpages.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.readpages = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_readpages || mkdir -p build/vfs_has_readpages

	file=build/vfs_has_readpages/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_readpages

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_readpages.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_readpages/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_readpages_license || mkdir -p build/vfs_has_readpages_license
cat confdefs.h - <<_ACEOF >build/vfs_has_readpages_license/vfs_has_readpages_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.readpages = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_readpages_license || mkdir -p build/vfs_has_readpages_license

	file=build/vfs_has_readpages_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_readpages_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_readpages_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_readpages_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_set_page_dirty_nobuffers || mkdir -p build/vfs_has_set_page_dirty_nobuffers
cat confdefs.h - <<_ACEOF >build/vfs_has_set_page_dirty_nobuffers/vfs_has_set_page_dirty_nobuffers.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.set_page_dirty = __set_page_dirty_nobuffers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_set_page_dirty_nobuffers || mkdir -p build/vfs_has_set_page_dirty_nobuffers

	file=build/vfs_has_set_page_dirty_nobuffers/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_set_page_dirty_nobuffers

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_set_page_dirty_nobuffers.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_set_page_dirty_nobuffers/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_set_page_dirty_nobuffers_license || mkdir -p build/vfs_has_set_page_dirty_nobuffers_license
cat confdefs.h - <<_ACEOF >build/vfs_has_set_page_dirty_nobuffers_license/vfs_has_set_page_dirty_nobuffers_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.set_page_dirty = __set_page_dirty_nobuffers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_set_page_dirty_nobuffers_license || mkdir -p build/vfs_has_set_page_dirty_nobuffers_license

	file=build/vfs_has_set_page_dirty_nobuffers_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_set_page_dirty_nobuffers_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_set_page_dirty_nobuffers_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_set_page_dirty_nobuffers_license/" >>build/Makefile
fi


fi





test -d build/file_operations_rw || mkdir -p build/file_operations_rw
cat confdefs.h - <<_ACEOF >build/file_operations_rw/file_operations_rw.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_read(struct kiocb *kiocb, struct iov_iter *to)
		    { return 0; }
		ssize_t test_write(struct kiocb *kiocb, struct iov_iter *from)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
		    .read_iter = test_read,
		    .write_iter = test_write,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_rw || mkdir -p build/file_operations_rw

	file=build/file_operations_rw/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_rw

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_rw.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_rw/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_rw_license || mkdir -p build/file_operations_rw_license
cat confdefs.h - <<_ACEOF >build/file_operations_rw_license/file_operations_rw_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_read(struct kiocb *kiocb, struct iov_iter *to)
		    { return 0; }
		ssize_t test_write(struct kiocb *kiocb, struct iov_iter *from)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
		    .read_iter = test_read,
		    .write_iter = test_write,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_rw_license || mkdir -p build/file_operations_rw_license

	file=build/file_operations_rw_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_rw_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_rw_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_rw_license/" >>build/Makefile
fi


fi




test -d build/new_sync_rw || mkdir -p build/new_sync_rw
cat confdefs.h - <<_ACEOF >build/new_sync_rw/new_sync_rw.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

	        ssize_t ret __attribute__ ((unused));
		struct file *filp = NULL;
		char __user *rbuf = NULL;
		const char __user *wbuf = NULL;
		size_t len = 0;
		loff_t ppos;

		ret = new_sync_read(filp, rbuf, len, &ppos);
		ret = new_sync_write(filp, wbuf, len, &ppos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/new_sync_rw || mkdir -p build/new_sync_rw

	file=build/new_sync_rw/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/new_sync_rw

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := new_sync_rw.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += new_sync_rw/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/new_sync_rw_license || mkdir -p build/new_sync_rw_license
cat confdefs.h - <<_ACEOF >build/new_sync_rw_license/new_sync_rw_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

	        ssize_t ret __attribute__ ((unused));
		struct file *filp = NULL;
		char __user *rbuf = NULL;
		const char __user *wbuf = NULL;
		size_t len = 0;
		loff_t ppos;

		ret = new_sync_read(filp, rbuf, len, &ppos);
		ret = new_sync_write(filp, wbuf, len, &ppos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/new_sync_rw_license || mkdir -p build/new_sync_rw_license

	file=build/new_sync_rw_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/new_sync_rw_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := new_sync_rw_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += new_sync_rw_license/" >>build/Makefile
fi


fi





test -d build/generic_write_checks || mkdir -p build/generic_write_checks
cat confdefs.h - <<_ACEOF >build/generic_write_checks/generic_write_checks.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct kiocb *iocb = NULL;
		struct iov_iter *iov = NULL;
		generic_write_checks(iocb, iov);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_write_checks || mkdir -p build/generic_write_checks

	file=build/generic_write_checks/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_write_checks

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_write_checks.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_write_checks/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_write_checks_license || mkdir -p build/generic_write_checks_license
cat confdefs.h - <<_ACEOF >build/generic_write_checks_license/generic_write_checks_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct kiocb *iocb = NULL;
		struct iov_iter *iov = NULL;
		generic_write_checks(iocb, iov);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_write_checks_license || mkdir -p build/generic_write_checks_license

	file=build/generic_write_checks_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_write_checks_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_write_checks_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_write_checks_license/" >>build/Makefile
fi


fi





test -d build/iov_iter_types || mkdir -p build/iov_iter_types
cat confdefs.h - <<_ACEOF >build/iov_iter_types/iov_iter_types.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		int type __attribute__ ((unused)) = ITER_KVEC;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_types || mkdir -p build/iov_iter_types

	file=build/iov_iter_types/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_types

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_types.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_types/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_types_license || mkdir -p build/iov_iter_types_license
cat confdefs.h - <<_ACEOF >build/iov_iter_types_license/iov_iter_types_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		int type __attribute__ ((unused)) = ITER_KVEC;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_types_license || mkdir -p build/iov_iter_types_license

	file=build/iov_iter_types_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_types_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_types_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_types_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_advance || mkdir -p build/iov_iter_advance
cat confdefs.h - <<_ACEOF >build/iov_iter_advance/iov_iter_advance.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t advance = 512;

		iov_iter_advance(&iter, advance);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_advance || mkdir -p build/iov_iter_advance

	file=build/iov_iter_advance/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_advance

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_advance.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_advance/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_advance_license || mkdir -p build/iov_iter_advance_license
cat confdefs.h - <<_ACEOF >build/iov_iter_advance_license/iov_iter_advance_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t advance = 512;

		iov_iter_advance(&iter, advance);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_advance_license || mkdir -p build/iov_iter_advance_license

	file=build/iov_iter_advance_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_advance_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_advance_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_advance_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_revert || mkdir -p build/iov_iter_revert
cat confdefs.h - <<_ACEOF >build/iov_iter_revert/iov_iter_revert.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t revert = 512;

		iov_iter_revert(&iter, revert);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_revert || mkdir -p build/iov_iter_revert

	file=build/iov_iter_revert/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_revert

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_revert.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_revert/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_revert_license || mkdir -p build/iov_iter_revert_license
cat confdefs.h - <<_ACEOF >build/iov_iter_revert_license/iov_iter_revert_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t revert = 512;

		iov_iter_revert(&iter, revert);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_revert_license || mkdir -p build/iov_iter_revert_license

	file=build/iov_iter_revert_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_revert_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_revert_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_revert_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_fault_in_readable || mkdir -p build/iov_iter_fault_in_readable
cat confdefs.h - <<_ACEOF >build/iov_iter_fault_in_readable/iov_iter_fault_in_readable.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = iov_iter_fault_in_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_fault_in_readable || mkdir -p build/iov_iter_fault_in_readable

	file=build/iov_iter_fault_in_readable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_fault_in_readable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_fault_in_readable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_fault_in_readable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_fault_in_readable_license || mkdir -p build/iov_iter_fault_in_readable_license
cat confdefs.h - <<_ACEOF >build/iov_iter_fault_in_readable_license/iov_iter_fault_in_readable_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = iov_iter_fault_in_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_fault_in_readable_license || mkdir -p build/iov_iter_fault_in_readable_license

	file=build/iov_iter_fault_in_readable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_fault_in_readable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_fault_in_readable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_fault_in_readable_license/" >>build/Makefile
fi


fi




test -d build/fault_in_iov_iter_readable || mkdir -p build/fault_in_iov_iter_readable
cat confdefs.h - <<_ACEOF >build/fault_in_iov_iter_readable/fault_in_iov_iter_readable.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = fault_in_iov_iter_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/fault_in_iov_iter_readable || mkdir -p build/fault_in_iov_iter_readable

	file=build/fault_in_iov_iter_readable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fault_in_iov_iter_readable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fault_in_iov_iter_readable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fault_in_iov_iter_readable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/fault_in_iov_iter_readable_license || mkdir -p build/fault_in_iov_iter_readable_license
cat confdefs.h - <<_ACEOF >build/fault_in_iov_iter_readable_license/fault_in_iov_iter_readable_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = fault_in_iov_iter_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/fault_in_iov_iter_readable_license || mkdir -p build/fault_in_iov_iter_readable_license

	file=build/fault_in_iov_iter_readable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fault_in_iov_iter_readable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fault_in_iov_iter_readable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fault_in_iov_iter_readable_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_count || mkdir -p build/iov_iter_count
cat confdefs.h - <<_ACEOF >build/iov_iter_count/iov_iter_count.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t bytes __attribute__ ((unused));

		bytes = iov_iter_count(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_count || mkdir -p build/iov_iter_count

	file=build/iov_iter_count/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_count

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_count.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_count/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_count_license || mkdir -p build/iov_iter_count_license
cat confdefs.h - <<_ACEOF >build/iov_iter_count_license/iov_iter_count_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t bytes __attribute__ ((unused));

		bytes = iov_iter_count(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_count_license || mkdir -p build/iov_iter_count_license

	file=build/iov_iter_count_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_count_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_count_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_count_license/" >>build/Makefile
fi


fi




test -d build/copy_to_iter || mkdir -p build/copy_to_iter
cat confdefs.h - <<_ACEOF >build/copy_to_iter/copy_to_iter.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_to_iter((const void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_to_iter || mkdir -p build/copy_to_iter

	file=build/copy_to_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_to_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_to_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_to_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/copy_to_iter_license || mkdir -p build/copy_to_iter_license
cat confdefs.h - <<_ACEOF >build/copy_to_iter_license/copy_to_iter_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_to_iter((const void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_to_iter_license || mkdir -p build/copy_to_iter_license

	file=build/copy_to_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_to_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_to_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_to_iter_license/" >>build/Makefile
fi


fi




test -d build/copy_from_iter || mkdir -p build/copy_from_iter
cat confdefs.h - <<_ACEOF >build/copy_from_iter/copy_from_iter.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_from_iter((void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_from_iter || mkdir -p build/copy_from_iter

	file=build/copy_from_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_from_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_from_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_from_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/copy_from_iter_license || mkdir -p build/copy_from_iter_license
cat confdefs.h - <<_ACEOF >build/copy_from_iter_license/copy_from_iter_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_from_iter((void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_from_iter_license || mkdir -p build/copy_from_iter_license

	file=build/copy_from_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_from_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_from_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_from_iter_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_type || mkdir -p build/iov_iter_type
cat confdefs.h - <<_ACEOF >build/iov_iter_type/iov_iter_type.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) enum iter_type i = iov_iter_type(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_type || mkdir -p build/iov_iter_type

	file=build/iov_iter_type/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_type

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_type.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_type/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_type_license || mkdir -p build/iov_iter_type_license
cat confdefs.h - <<_ACEOF >build/iov_iter_type_license/iov_iter_type_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) enum iter_type i = iov_iter_type(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_type_license || mkdir -p build/iov_iter_type_license

	file=build/iov_iter_type_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_type_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_type_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_type_license/" >>build/Makefile
fi


fi




test -d build/iter_iov || mkdir -p build/iter_iov
cat confdefs.h - <<_ACEOF >build/iter_iov/iter_iov.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) const struct iovec *iov = iter_iov(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iter_iov || mkdir -p build/iter_iov

	file=build/iter_iov/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iter_iov

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iter_iov.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iter_iov/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iter_iov_license || mkdir -p build/iter_iov_license
cat confdefs.h - <<_ACEOF >build/iter_iov_license/iter_iov_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) const struct iovec *iov = iter_iov(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iter_iov_license || mkdir -p build/iter_iov_license

	file=build/iter_iov_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iter_iov_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iter_iov_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iter_iov_license/" >>build/Makefile
fi


fi





test -d build/vfs_copy_file_range || mkdir -p build/vfs_copy_file_range
cat confdefs.h - <<_ACEOF >build/vfs_copy_file_range/vfs_copy_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.copy_file_range	= test_copy_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_copy_file_range || mkdir -p build/vfs_copy_file_range

	file=build/vfs_copy_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_copy_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_copy_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_copy_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_copy_file_range_license || mkdir -p build/vfs_copy_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_copy_file_range_license/vfs_copy_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.copy_file_range	= test_copy_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_copy_file_range_license || mkdir -p build/vfs_copy_file_range_license

	file=build/vfs_copy_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_copy_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_copy_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_copy_file_range_license/" >>build/Makefile
fi


fi





test -d build/generic_copy_file_range || mkdir -p build/generic_copy_file_range
cat confdefs.h - <<_ACEOF >build/generic_copy_file_range/generic_copy_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *src_file __attribute__ ((unused)) = NULL;
		loff_t src_off __attribute__ ((unused)) = 0;
		struct file *dst_file __attribute__ ((unused)) = NULL;
		loff_t dst_off __attribute__ ((unused)) = 0;
		size_t len __attribute__ ((unused)) = 0;
		unsigned int flags __attribute__ ((unused)) = 0;
		generic_copy_file_range(src_file, src_off, dst_file, dst_off,
		    len, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_copy_file_range || mkdir -p build/generic_copy_file_range

	file=build/generic_copy_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_copy_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_copy_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_copy_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_copy_file_range_license || mkdir -p build/generic_copy_file_range_license
cat confdefs.h - <<_ACEOF >build/generic_copy_file_range_license/generic_copy_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *src_file __attribute__ ((unused)) = NULL;
		loff_t src_off __attribute__ ((unused)) = 0;
		struct file *dst_file __attribute__ ((unused)) = NULL;
		loff_t dst_off __attribute__ ((unused)) = 0;
		size_t len __attribute__ ((unused)) = 0;
		unsigned int flags __attribute__ ((unused)) = 0;
		generic_copy_file_range(src_file, src_off, dst_file, dst_off,
		    len, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_copy_file_range_license || mkdir -p build/generic_copy_file_range_license

	file=build/generic_copy_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_copy_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_copy_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_copy_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_remap_file_range || mkdir -p build/vfs_remap_file_range
cat confdefs.h - <<_ACEOF >build/vfs_remap_file_range/vfs_remap_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static loff_t test_remap_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    loff_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.remap_file_range	= test_remap_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_remap_file_range || mkdir -p build/vfs_remap_file_range

	file=build/vfs_remap_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_remap_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_remap_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_remap_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_remap_file_range_license || mkdir -p build/vfs_remap_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_remap_file_range_license/vfs_remap_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static loff_t test_remap_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    loff_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.remap_file_range	= test_remap_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_remap_file_range_license || mkdir -p build/vfs_remap_file_range_license

	file=build/vfs_remap_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_remap_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_remap_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_remap_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_clone_file_range || mkdir -p build/vfs_clone_file_range
cat confdefs.h - <<_ACEOF >build/vfs_clone_file_range/vfs_clone_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.clone_file_range	= test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_clone_file_range || mkdir -p build/vfs_clone_file_range

	file=build/vfs_clone_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_clone_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_clone_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_clone_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_clone_file_range_license || mkdir -p build/vfs_clone_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_clone_file_range_license/vfs_clone_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.clone_file_range	= test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_clone_file_range_license || mkdir -p build/vfs_clone_file_range_license

	file=build/vfs_clone_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_clone_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_clone_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_clone_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_dedupe_file_range || mkdir -p build/vfs_dedupe_file_range
cat confdefs.h - <<_ACEOF >build/vfs_dedupe_file_range/vfs_dedupe_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_dedupe_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
                .dedupe_file_range	= test_dedupe_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_dedupe_file_range || mkdir -p build/vfs_dedupe_file_range

	file=build/vfs_dedupe_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_dedupe_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_dedupe_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_dedupe_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_dedupe_file_range_license || mkdir -p build/vfs_dedupe_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_dedupe_file_range_license/vfs_dedupe_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_dedupe_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
                .dedupe_file_range	= test_dedupe_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_dedupe_file_range_license || mkdir -p build/vfs_dedupe_file_range_license

	file=build/vfs_dedupe_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_dedupe_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_dedupe_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_dedupe_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_file_operations_extend || mkdir -p build/vfs_file_operations_extend
cat confdefs.h - <<_ACEOF >build/vfs_file_operations_extend/vfs_file_operations_extend.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations_extend
		    fops __attribute__ ((unused)) = {
			.kabi_fops = {},
			.copy_file_range = test_copy_file_range,
			.clone_file_range = test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_file_operations_extend || mkdir -p build/vfs_file_operations_extend

	file=build/vfs_file_operations_extend/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_file_operations_extend

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_file_operations_extend.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_file_operations_extend/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_file_operations_extend_license || mkdir -p build/vfs_file_operations_extend_license
cat confdefs.h - <<_ACEOF >build/vfs_file_operations_extend_license/vfs_file_operations_extend_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations_extend
		    fops __attribute__ ((unused)) = {
			.kabi_fops = {},
			.copy_file_range = test_copy_file_range,
			.clone_file_range = test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_file_operations_extend_license || mkdir -p build/vfs_file_operations_extend_license

	file=build/vfs_file_operations_extend_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_file_operations_extend_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_file_operations_extend_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_file_operations_extend_license/" >>build/Makefile
fi


fi





test -d build/kmap_atomic || mkdir -p build/kmap_atomic
cat confdefs.h - <<_ACEOF >build/kmap_atomic/kmap_atomic.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		struct page page;
		kmap_atomic(&page);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmap_atomic || mkdir -p build/kmap_atomic

	file=build/kmap_atomic/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmap_atomic

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmap_atomic.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmap_atomic/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kmap_atomic_license || mkdir -p build/kmap_atomic_license
cat confdefs.h - <<_ACEOF >build/kmap_atomic_license/kmap_atomic_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		struct page page;
		kmap_atomic(&page);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmap_atomic_license || mkdir -p build/kmap_atomic_license

	file=build/kmap_atomic_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmap_atomic_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmap_atomic_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmap_atomic_license/" >>build/Makefile
fi


fi





test -d build/follow_down_one || mkdir -p build/follow_down_one
cat confdefs.h - <<_ACEOF >build/follow_down_one/follow_down_one.c

#include <linux/module.h>

		#include <linux/namei.h>


int
main (void)
{

		struct path *p = NULL;
		follow_down_one(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/follow_down_one || mkdir -p build/follow_down_one

	file=build/follow_down_one/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/follow_down_one

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := follow_down_one.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += follow_down_one/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/follow_down_one_license || mkdir -p build/follow_down_one_license
cat confdefs.h - <<_ACEOF >build/follow_down_one_license/follow_down_one_license.c

#include <linux/module.h>

		#include <linux/namei.h>


int
main (void)
{

		struct path *p = NULL;
		follow_down_one(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/follow_down_one_license || mkdir -p build/follow_down_one_license

	file=build/follow_down_one_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/follow_down_one_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := follow_down_one_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += follow_down_one_license/" >>build/Makefile
fi


fi





test -d build/make_request_fn_void || mkdir -p build/make_request_fn_void
cat confdefs.h - <<_ACEOF >build/make_request_fn_void/make_request_fn_void.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		void make_request(struct request_queue *q,
		    struct bio *bio) { return; }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_void || mkdir -p build/make_request_fn_void

	file=build/make_request_fn_void/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_void

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_void.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_void/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/make_request_fn_void_license || mkdir -p build/make_request_fn_void_license
cat confdefs.h - <<_ACEOF >build/make_request_fn_void_license/make_request_fn_void_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		void make_request(struct request_queue *q,
		    struct bio *bio) { return; }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_void_license || mkdir -p build/make_request_fn_void_license

	file=build/make_request_fn_void_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_void_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_void_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_void_license/" >>build/Makefile
fi


fi




test -d build/make_request_fn_blk_qc_t || mkdir -p build/make_request_fn_blk_qc_t
cat confdefs.h - <<_ACEOF >build/make_request_fn_blk_qc_t/make_request_fn_blk_qc_t.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_blk_qc_t || mkdir -p build/make_request_fn_blk_qc_t

	file=build/make_request_fn_blk_qc_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_blk_qc_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_blk_qc_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_blk_qc_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/make_request_fn_blk_qc_t_license || mkdir -p build/make_request_fn_blk_qc_t_license
cat confdefs.h - <<_ACEOF >build/make_request_fn_blk_qc_t_license/make_request_fn_blk_qc_t_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_blk_qc_t_license || mkdir -p build/make_request_fn_blk_qc_t_license

	file=build/make_request_fn_blk_qc_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_blk_qc_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_blk_qc_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_blk_qc_t_license/" >>build/Makefile
fi


fi




test -d build/blk_alloc_queue_request_fn || mkdir -p build/blk_alloc_queue_request_fn
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn/blk_alloc_queue_request_fn.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn || mkdir -p build/blk_alloc_queue_request_fn

	file=build/blk_alloc_queue_request_fn/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_alloc_queue_request_fn_license || mkdir -p build/blk_alloc_queue_request_fn_license
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn_license/blk_alloc_queue_request_fn_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn_license || mkdir -p build/blk_alloc_queue_request_fn_license

	file=build/blk_alloc_queue_request_fn_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn_license/" >>build/Makefile
fi


fi




test -d build/blk_alloc_queue_request_fn_rh || mkdir -p build/blk_alloc_queue_request_fn_rh
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn_rh/blk_alloc_queue_request_fn_rh.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue_rh(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn_rh || mkdir -p build/blk_alloc_queue_request_fn_rh

	file=build/blk_alloc_queue_request_fn_rh/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn_rh

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn_rh.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn_rh/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_alloc_queue_request_fn_rh_license || mkdir -p build/blk_alloc_queue_request_fn_rh_license
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn_rh_license/blk_alloc_queue_request_fn_rh_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue_rh(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn_rh_license || mkdir -p build/blk_alloc_queue_request_fn_rh_license

	file=build/blk_alloc_queue_request_fn_rh_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn_rh_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn_rh_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn_rh_license/" >>build/Makefile
fi


fi




test -d build/block_device_operations_submit_bio || mkdir -p build/block_device_operations_submit_bio
cat confdefs.h - <<_ACEOF >build/block_device_operations_submit_bio/block_device_operations_submit_bio.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations o;
		o.submit_bio = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_submit_bio || mkdir -p build/block_device_operations_submit_bio

	file=build/block_device_operations_submit_bio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_submit_bio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_submit_bio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_submit_bio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_submit_bio_license || mkdir -p build/block_device_operations_submit_bio_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_submit_bio_license/block_device_operations_submit_bio_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations o;
		o.submit_bio = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_submit_bio_license || mkdir -p build/block_device_operations_submit_bio_license

	file=build/block_device_operations_submit_bio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_submit_bio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_submit_bio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_submit_bio_license/" >>build/Makefile
fi


fi




test -d build/blk_alloc_disk || mkdir -p build/blk_alloc_disk
cat confdefs.h - <<_ACEOF >build/blk_alloc_disk/blk_alloc_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		disk = blk_alloc_disk(NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_disk || mkdir -p build/blk_alloc_disk

	file=build/blk_alloc_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_alloc_disk_license || mkdir -p build/blk_alloc_disk_license
cat confdefs.h - <<_ACEOF >build/blk_alloc_disk_license/blk_alloc_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		disk = blk_alloc_disk(NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_disk_license || mkdir -p build/blk_alloc_disk_license

	file=build/blk_alloc_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_disk_license/" >>build/Makefile
fi


fi




test -d build/blk_cleanup_disk || mkdir -p build/blk_cleanup_disk
cat confdefs.h - <<_ACEOF >build/blk_cleanup_disk/blk_cleanup_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		blk_cleanup_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cleanup_disk || mkdir -p build/blk_cleanup_disk

	file=build/blk_cleanup_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cleanup_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cleanup_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cleanup_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_cleanup_disk_license || mkdir -p build/blk_cleanup_disk_license
cat confdefs.h - <<_ACEOF >build/blk_cleanup_disk_license/blk_cleanup_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		blk_cleanup_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cleanup_disk_license || mkdir -p build/blk_cleanup_disk_license

	file=build/blk_cleanup_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cleanup_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cleanup_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cleanup_disk_license/" >>build/Makefile
fi


fi





test -d build/bdev_io_acct_63 || mkdir -p build/bdev_io_acct_63
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_63/bdev_io_acct_63.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_op(bio),
		    passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), bio_sectors(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_63 || mkdir -p build/bdev_io_acct_63

	file=build/bdev_io_acct_63/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_63

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_63.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_63/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_io_acct_63_license || mkdir -p build/bdev_io_acct_63_license
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_63_license/bdev_io_acct_63_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_op(bio),
		    passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), bio_sectors(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_63_license || mkdir -p build/bdev_io_acct_63_license

	file=build/bdev_io_acct_63_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_63_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_63_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_63_license/" >>build/Makefile
fi


fi




test -d build/bdev_io_acct_old || mkdir -p build/bdev_io_acct_old
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_old/bdev_io_acct_old.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_sectors(bio),
		    bio_op(bio), passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_old || mkdir -p build/bdev_io_acct_old

	file=build/bdev_io_acct_old/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_old

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_old.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_old/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_io_acct_old_license || mkdir -p build/bdev_io_acct_old_license
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_old_license/bdev_io_acct_old_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_sectors(bio),
		    bio_op(bio), passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_old_license || mkdir -p build/bdev_io_acct_old_license

	file=build/bdev_io_acct_old_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_old_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_old_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_old_license/" >>build/Makefile
fi


fi




test -d build/disk_io_acct || mkdir -p build/disk_io_acct
cat confdefs.h - <<_ACEOF >build/disk_io_acct/disk_io_acct.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = disk_start_io_acct(disk, bio_sectors(bio), bio_op(bio));
		disk_end_io_acct(disk, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_io_acct || mkdir -p build/disk_io_acct

	file=build/disk_io_acct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_io_acct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_io_acct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_io_acct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/disk_io_acct_license || mkdir -p build/disk_io_acct_license
cat confdefs.h - <<_ACEOF >build/disk_io_acct_license/disk_io_acct_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = disk_start_io_acct(disk, bio_sectors(bio), bio_op(bio));
		disk_end_io_acct(disk, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_io_acct_license || mkdir -p build/disk_io_acct_license

	file=build/disk_io_acct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_io_acct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_io_acct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_io_acct_license/" >>build/Makefile
fi


fi




test -d build/bio_io_acct || mkdir -p build/bio_io_acct
cat confdefs.h - <<_ACEOF >build/bio_io_acct/bio_io_acct.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = bio_start_io_acct(bio);
		bio_end_io_acct(bio, start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_io_acct || mkdir -p build/bio_io_acct

	file=build/bio_io_acct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_io_acct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_io_acct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_io_acct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_io_acct_license || mkdir -p build/bio_io_acct_license
cat confdefs.h - <<_ACEOF >build/bio_io_acct_license/bio_io_acct_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = bio_start_io_acct(bio);
		bio_end_io_acct(bio, start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_io_acct_license || mkdir -p build/bio_io_acct_license

	file=build/bio_io_acct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_io_acct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_io_acct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_io_acct_license/" >>build/Makefile
fi


fi




test -d build/generic_acct_3args || mkdir -p build/generic_acct_3args
cat confdefs.h - <<_ACEOF >build/generic_acct_3args/generic_acct_3args.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(int, unsigned long,
		    struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(int, struct hd_struct *,
		    unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(0, 0, NULL);
		generic_end_io_acct(0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_3args || mkdir -p build/generic_acct_3args

	file=build/generic_acct_3args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_3args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_3args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_3args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_acct_3args_license || mkdir -p build/generic_acct_3args_license
cat confdefs.h - <<_ACEOF >build/generic_acct_3args_license/generic_acct_3args_license.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(int, unsigned long,
		    struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(int, struct hd_struct *,
		    unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(0, 0, NULL);
		generic_end_io_acct(0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_3args_license || mkdir -p build/generic_acct_3args_license

	file=build/generic_acct_3args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_3args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_3args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_3args_license/" >>build/Makefile
fi


fi




test -d build/generic_acct_4args || mkdir -p build/generic_acct_4args
cat confdefs.h - <<_ACEOF >build/generic_acct_4args/generic_acct_4args.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(struct request_queue *, int,
		    unsigned long, struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(struct request_queue *, int,
		    struct hd_struct *, unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(NULL, 0, 0, NULL);
		generic_end_io_acct(NULL, 0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_4args || mkdir -p build/generic_acct_4args

	file=build/generic_acct_4args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_4args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_4args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_4args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_acct_4args_license || mkdir -p build/generic_acct_4args_license
cat confdefs.h - <<_ACEOF >build/generic_acct_4args_license/generic_acct_4args_license.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(struct request_queue *, int,
		    unsigned long, struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(struct request_queue *, int,
		    struct hd_struct *, unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(NULL, 0, 0, NULL);
		generic_end_io_acct(NULL, 0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_4args_license || mkdir -p build/generic_acct_4args_license

	file=build/generic_acct_4args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_4args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_4args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_4args_license/" >>build/Makefile
fi


fi





test -d build/kernel_fpu || mkdir -p build/kernel_fpu
cat confdefs.h - <<_ACEOF >build/kernel_fpu/kernel_fpu.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		kernel_fpu_begin();
		kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_fpu || mkdir -p build/kernel_fpu

	file=build/kernel_fpu/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_fpu

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_fpu.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_fpu/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/kernel_fpu_license || mkdir -p build/kernel_fpu_license
cat confdefs.h - <<_ACEOF >build/kernel_fpu_license/kernel_fpu_license.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		kernel_fpu_begin();
		kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_fpu_license || mkdir -p build/kernel_fpu_license

	file=build/kernel_fpu_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_fpu_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_fpu_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_fpu_license/" >>build/Makefile
fi


fi




test -d build/__kernel_fpu || mkdir -p build/__kernel_fpu
cat confdefs.h - <<_ACEOF >build/__kernel_fpu/__kernel_fpu.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		__kernel_fpu_begin();
		__kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__kernel_fpu || mkdir -p build/__kernel_fpu

	file=build/__kernel_fpu/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__kernel_fpu

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __kernel_fpu.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __kernel_fpu/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/__kernel_fpu_license || mkdir -p build/__kernel_fpu_license
cat confdefs.h - <<_ACEOF >build/__kernel_fpu_license/__kernel_fpu_license.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		__kernel_fpu_begin();
		__kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/__kernel_fpu_license || mkdir -p build/__kernel_fpu_license

	file=build/__kernel_fpu_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__kernel_fpu_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __kernel_fpu_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __kernel_fpu_license/" >>build/Makefile
fi


fi






test -d build/type_fmode_t || mkdir -p build/type_fmode_t
cat confdefs.h - <<_ACEOF >build/type_fmode_t/type_fmode_t.c

#include <linux/module.h>

		#include <linux/types.h>


int
main (void)
{

		fmode_t *ptr __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/type_fmode_t || mkdir -p build/type_fmode_t

	file=build/type_fmode_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/type_fmode_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := type_fmode_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += type_fmode_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/type_fmode_t_license || mkdir -p build/type_fmode_t_license
cat confdefs.h - <<_ACEOF >build/type_fmode_t_license/type_fmode_t_license.c

#include <linux/module.h>

		#include <linux/types.h>


int
main (void)
{

		fmode_t *ptr __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/type_fmode_t_license || mkdir -p build/type_fmode_t_license

	file=build/type_fmode_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/type_fmode_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := type_fmode_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += type_fmode_t_license/" >>build/Makefile
fi


fi





test -d build/kuidgid_t || mkdir -p build/kuidgid_t
cat confdefs.h - <<_ACEOF >build/kuidgid_t/kuidgid_t.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_t userid __attribute__ ((unused)) = KUIDT_INIT(0);
		kgid_t groupid __attribute__ ((unused)) = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuidgid_t || mkdir -p build/kuidgid_t

	file=build/kuidgid_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuidgid_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuidgid_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuidgid_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kuidgid_t_license || mkdir -p build/kuidgid_t_license
cat confdefs.h - <<_ACEOF >build/kuidgid_t_license/kuidgid_t_license.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_t userid __attribute__ ((unused)) = KUIDT_INIT(0);
		kgid_t groupid __attribute__ ((unused)) = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuidgid_t_license || mkdir -p build/kuidgid_t_license

	file=build/kuidgid_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuidgid_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuidgid_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuidgid_t_license/" >>build/Makefile
fi


fi





test -d build/i_uid_read || mkdir -p build/i_uid_read
cat confdefs.h - <<_ACEOF >build/i_uid_read/i_uid_read.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) i_uid_read(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/i_uid_read || mkdir -p build/i_uid_read

	file=build/i_uid_read/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/i_uid_read

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := i_uid_read.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += i_uid_read/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/i_uid_read_license || mkdir -p build/i_uid_read_license
cat confdefs.h - <<_ACEOF >build/i_uid_read_license/i_uid_read_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) i_uid_read(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/i_uid_read_license || mkdir -p build/i_uid_read_license

	file=build/i_uid_read_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/i_uid_read_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := i_uid_read_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += i_uid_read_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_rename2 || mkdir -p build/inode_operations_rename2
cat confdefs.h - <<_ACEOF >build/inode_operations_rename2/inode_operations_rename2.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename2 || mkdir -p build/inode_operations_rename2

	file=build/inode_operations_rename2/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename2

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename2.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename2/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename2_license || mkdir -p build/inode_operations_rename2_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename2_license/inode_operations_rename2_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename2_license || mkdir -p build/inode_operations_rename2_license

	file=build/inode_operations_rename2_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename2_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename2_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename2_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_rename_flags || mkdir -p build/inode_operations_rename_flags
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_flags/inode_operations_rename_flags.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_flags || mkdir -p build/inode_operations_rename_flags

	file=build/inode_operations_rename_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename_flags_license || mkdir -p build/inode_operations_rename_flags_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_flags_license/inode_operations_rename_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_flags_license || mkdir -p build/inode_operations_rename_flags_license

	file=build/inode_operations_rename_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_flags_license/" >>build/Makefile
fi


fi




test -d build/dir_inode_operations_wrapper_rename2 || mkdir -p build/dir_inode_operations_wrapper_rename2
cat confdefs.h - <<_ACEOF >build/dir_inode_operations_wrapper_rename2/dir_inode_operations_wrapper_rename2.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations_wrapper
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dir_inode_operations_wrapper_rename2 || mkdir -p build/dir_inode_operations_wrapper_rename2

	file=build/dir_inode_operations_wrapper_rename2/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dir_inode_operations_wrapper_rename2

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dir_inode_operations_wrapper_rename2.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dir_inode_operations_wrapper_rename2/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dir_inode_operations_wrapper_rename2_license || mkdir -p build/dir_inode_operations_wrapper_rename2_license
cat confdefs.h - <<_ACEOF >build/dir_inode_operations_wrapper_rename2_license/dir_inode_operations_wrapper_rename2_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations_wrapper
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dir_inode_operations_wrapper_rename2_license || mkdir -p build/dir_inode_operations_wrapper_rename2_license

	file=build/dir_inode_operations_wrapper_rename2_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dir_inode_operations_wrapper_rename2_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dir_inode_operations_wrapper_rename2_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dir_inode_operations_wrapper_rename2_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_rename_userns || mkdir -p build/inode_operations_rename_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_userns/inode_operations_rename_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct user_namespace *user_ns, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_userns || mkdir -p build/inode_operations_rename_userns

	file=build/inode_operations_rename_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename_userns_license || mkdir -p build/inode_operations_rename_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_userns_license/inode_operations_rename_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct user_namespace *user_ns, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_userns_license || mkdir -p build/inode_operations_rename_userns_license

	file=build/inode_operations_rename_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_rename_mnt_idmap || mkdir -p build/inode_operations_rename_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_mnt_idmap/inode_operations_rename_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct mnt_idmap *idmap, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_mnt_idmap || mkdir -p build/inode_operations_rename_mnt_idmap

	file=build/inode_operations_rename_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename_mnt_idmap_license || mkdir -p build/inode_operations_rename_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_mnt_idmap_license/inode_operations_rename_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct mnt_idmap *idmap, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_mnt_idmap_license || mkdir -p build/inode_operations_rename_mnt_idmap_license

	file=build/inode_operations_rename_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_mnt_idmap_license/" >>build/Makefile
fi


fi





test -d build/current_time || mkdir -p build/current_time
cat confdefs.h - <<_ACEOF >build/current_time/current_time.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip __attribute__ ((unused));
		ip.i_atime = current_time(&ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_time || mkdir -p build/current_time

	file=build/current_time/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_time

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_time.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_time/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/current_time_license || mkdir -p build/current_time_license
cat confdefs.h - <<_ACEOF >build/current_time_license/current_time_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip __attribute__ ((unused));
		ip.i_atime = current_time(&ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_time_license || mkdir -p build/current_time_license

	file=build/current_time_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_time_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_time_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_time_license/" >>build/Makefile
fi


fi






test -d build/ns_capable || mkdir -p build/ns_capable
cat confdefs.h - <<_ACEOF >build/ns_capable/ns_capable.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		ns_capable((struct user_namespace *)NULL, CAP_SYS_ADMIN);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/ns_capable || mkdir -p build/ns_capable

	file=build/ns_capable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ns_capable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ns_capable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ns_capable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/ns_capable_license || mkdir -p build/ns_capable_license
cat confdefs.h - <<_ACEOF >build/ns_capable_license/ns_capable_license.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		ns_capable((struct user_namespace *)NULL, CAP_SYS_ADMIN);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/ns_capable_license || mkdir -p build/ns_capable_license

	file=build/ns_capable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ns_capable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ns_capable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ns_capable_license/" >>build/Makefile
fi


fi





test -d build/has_capability || mkdir -p build/has_capability
cat confdefs.h - <<_ACEOF >build/has_capability/has_capability.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		struct task_struct *task = NULL;
		int cap = 0;
		bool result __attribute__ ((unused));

		result = has_capability(task, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_capability || mkdir -p build/has_capability

	file=build/has_capability/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_capability

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_capability.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_capability/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_capability_license || mkdir -p build/has_capability_license
cat confdefs.h - <<_ACEOF >build/has_capability_license/has_capability_license.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		struct task_struct *task = NULL;
		int cap = 0;
		bool result __attribute__ ((unused));

		result = has_capability(task, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_capability_license || mkdir -p build/has_capability_license

	file=build/has_capability_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_capability_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_capability_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_capability_license/" >>build/Makefile
fi


fi





test -d build/cred_user_ns || mkdir -p build/cred_user_ns
cat confdefs.h - <<_ACEOF >build/cred_user_ns/cred_user_ns.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct cred cr;
		cr.user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/cred_user_ns || mkdir -p build/cred_user_ns

	file=build/cred_user_ns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cred_user_ns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cred_user_ns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cred_user_ns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/cred_user_ns_license || mkdir -p build/cred_user_ns_license
cat confdefs.h - <<_ACEOF >build/cred_user_ns_license/cred_user_ns_license.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct cred cr;
		cr.user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/cred_user_ns_license || mkdir -p build/cred_user_ns_license

	file=build/cred_user_ns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cred_user_ns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cred_user_ns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cred_user_ns_license/" >>build/Makefile
fi


fi





test -d build/kuid_has_mapping || mkdir -p build/kuid_has_mapping
cat confdefs.h - <<_ACEOF >build/kuid_has_mapping/kuid_has_mapping.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_has_mapping((struct user_namespace *)NULL, KUIDT_INIT(0));
		kgid_has_mapping((struct user_namespace *)NULL, KGIDT_INIT(0));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuid_has_mapping || mkdir -p build/kuid_has_mapping

	file=build/kuid_has_mapping/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuid_has_mapping

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuid_has_mapping.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuid_has_mapping/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kuid_has_mapping_license || mkdir -p build/kuid_has_mapping_license
cat confdefs.h - <<_ACEOF >build/kuid_has_mapping_license/kuid_has_mapping_license.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_has_mapping((struct user_namespace *)NULL, KUIDT_INIT(0));
		kgid_has_mapping((struct user_namespace *)NULL, KGIDT_INIT(0));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuid_has_mapping_license || mkdir -p build/kuid_has_mapping_license

	file=build/kuid_has_mapping_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuid_has_mapping_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuid_has_mapping_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuid_has_mapping_license/" >>build/Makefile
fi


fi






test -d build/in_compat_syscall || mkdir -p build/in_compat_syscall
cat confdefs.h - <<_ACEOF >build/in_compat_syscall/in_compat_syscall.c

#include <linux/module.h>

		#include <linux/compat.h>


int
main (void)
{

		in_compat_syscall();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/in_compat_syscall || mkdir -p build/in_compat_syscall

	file=build/in_compat_syscall/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/in_compat_syscall

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := in_compat_syscall.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += in_compat_syscall/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/in_compat_syscall_license || mkdir -p build/in_compat_syscall_license
cat confdefs.h - <<_ACEOF >build/in_compat_syscall_license/in_compat_syscall_license.c

#include <linux/module.h>

		#include <linux/compat.h>


int
main (void)
{

		in_compat_syscall();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/in_compat_syscall_license || mkdir -p build/in_compat_syscall_license

	file=build/in_compat_syscall_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/in_compat_syscall_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := in_compat_syscall_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += in_compat_syscall_license/" >>build/Makefile
fi


fi






test -d build/ktime_get_coarse_real_ts64 || mkdir -p build/ktime_get_coarse_real_ts64
cat confdefs.h - <<_ACEOF >build/ktime_get_coarse_real_ts64/ktime_get_coarse_real_ts64.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_coarse_real_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_coarse_real_ts64 || mkdir -p build/ktime_get_coarse_real_ts64

	file=build/ktime_get_coarse_real_ts64/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_coarse_real_ts64

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_coarse_real_ts64.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_coarse_real_ts64/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/ktime_get_coarse_real_ts64_license || mkdir -p build/ktime_get_coarse_real_ts64_license
cat confdefs.h - <<_ACEOF >build/ktime_get_coarse_real_ts64_license/ktime_get_coarse_real_ts64_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_coarse_real_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_coarse_real_ts64_license || mkdir -p build/ktime_get_coarse_real_ts64_license

	file=build/ktime_get_coarse_real_ts64_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_coarse_real_ts64_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_coarse_real_ts64_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_coarse_real_ts64_license/" >>build/Makefile
fi


fi





test -d build/ktime_get_raw_ts64 || mkdir -p build/ktime_get_raw_ts64
cat confdefs.h - <<_ACEOF >build/ktime_get_raw_ts64/ktime_get_raw_ts64.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_raw_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_raw_ts64 || mkdir -p build/ktime_get_raw_ts64

	file=build/ktime_get_raw_ts64/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_raw_ts64

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_raw_ts64.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_raw_ts64/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/ktime_get_raw_ts64_license || mkdir -p build/ktime_get_raw_ts64_license
cat confdefs.h - <<_ACEOF >build/ktime_get_raw_ts64_license/ktime_get_raw_ts64_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_raw_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_raw_ts64_license || mkdir -p build/ktime_get_raw_ts64_license

	file=build/ktime_get_raw_ts64_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_raw_ts64_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_raw_ts64_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_raw_ts64_license/" >>build/Makefile
fi


fi






test -d build/totalram_pages || mkdir -p build/totalram_pages
cat confdefs.h - <<_ACEOF >build/totalram_pages/totalram_pages.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalram_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalram_pages || mkdir -p build/totalram_pages

	file=build/totalram_pages/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalram_pages

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalram_pages.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalram_pages/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/totalram_pages_license || mkdir -p build/totalram_pages_license
cat confdefs.h - <<_ACEOF >build/totalram_pages_license/totalram_pages_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalram_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalram_pages_license || mkdir -p build/totalram_pages_license

	file=build/totalram_pages_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalram_pages_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalram_pages_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalram_pages_license/" >>build/Makefile
fi


fi





test -d build/totalhigh_pages || mkdir -p build/totalhigh_pages
cat confdefs.h - <<_ACEOF >build/totalhigh_pages/totalhigh_pages.c

#include <linux/module.h>

		#include <linux/highmem.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalhigh_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalhigh_pages || mkdir -p build/totalhigh_pages

	file=build/totalhigh_pages/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalhigh_pages

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalhigh_pages.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalhigh_pages/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/totalhigh_pages_license || mkdir -p build/totalhigh_pages_license
cat confdefs.h - <<_ACEOF >build/totalhigh_pages_license/totalhigh_pages_license.c

#include <linux/module.h>

		#include <linux/highmem.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalhigh_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalhigh_pages_license || mkdir -p build/totalhigh_pages_license

	file=build/totalhigh_pages_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalhigh_pages_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalhigh_pages_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalhigh_pages_license/" >>build/Makefile
fi


fi





test -d build/kstrtoul || mkdir -p build/kstrtoul
cat confdefs.h - <<_ACEOF >build/kstrtoul/kstrtoul.c

#include <linux/module.h>

		#include <linux/kernel.h>


int
main (void)
{

		int ret __attribute__ ((unused)) = kstrtoul(NULL, 10, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kstrtoul || mkdir -p build/kstrtoul

	file=build/kstrtoul/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kstrtoul

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kstrtoul.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kstrtoul/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kstrtoul_license || mkdir -p build/kstrtoul_license
cat confdefs.h - <<_ACEOF >build/kstrtoul_license/kstrtoul_license.c

#include <linux/module.h>

		#include <linux/kernel.h>


int
main (void)
{

		int ret __attribute__ ((unused)) = kstrtoul(NULL, 10, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kstrtoul_license || mkdir -p build/kstrtoul_license

	file=build/kstrtoul_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kstrtoul_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kstrtoul_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kstrtoul_license/" >>build/Makefile
fi


fi






test -d build/percpu_counter_init_with_gfp || mkdir -p build/percpu_counter_init_with_gfp
cat confdefs.h - <<_ACEOF >build/percpu_counter_init_with_gfp/percpu_counter_init_with_gfp.c

#include <linux/module.h>

		#include <linux/gfp.h>
		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;
		int error;

		error = percpu_counter_init(&counter, 0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_init_with_gfp || mkdir -p build/percpu_counter_init_with_gfp

	file=build/percpu_counter_init_with_gfp/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_init_with_gfp

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_init_with_gfp.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_init_with_gfp/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/percpu_counter_init_with_gfp_license || mkdir -p build/percpu_counter_init_with_gfp_license
cat confdefs.h - <<_ACEOF >build/percpu_counter_init_with_gfp_license/percpu_counter_init_with_gfp_license.c

#include <linux/module.h>

		#include <linux/gfp.h>
		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;
		int error;

		error = percpu_counter_init(&counter, 0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_init_with_gfp_license || mkdir -p build/percpu_counter_init_with_gfp_license

	file=build/percpu_counter_init_with_gfp_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_init_with_gfp_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_init_with_gfp_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_init_with_gfp_license/" >>build/Makefile
fi


fi





test -d build/percpu_counter_add_batch || mkdir -p build/percpu_counter_add_batch
cat confdefs.h - <<_ACEOF >build/percpu_counter_add_batch/percpu_counter_add_batch.c

#include <linux/module.h>

		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;

		percpu_counter_add_batch(&counter, 1, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_add_batch || mkdir -p build/percpu_counter_add_batch

	file=build/percpu_counter_add_batch/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_add_batch

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_add_batch.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_add_batch/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/percpu_counter_add_batch_license || mkdir -p build/percpu_counter_add_batch_license
cat confdefs.h - <<_ACEOF >build/percpu_counter_add_batch_license/percpu_counter_add_batch_license.c

#include <linux/module.h>

		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;

		percpu_counter_add_batch(&counter, 1, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_add_batch_license || mkdir -p build/percpu_counter_add_batch_license

	file=build/percpu_counter_add_batch_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_add_batch_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_add_batch_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_add_batch_license/" >>build/Makefile
fi


fi





test -d build/percpu_ref_count_in_data || mkdir -p build/percpu_ref_count_in_data
cat confdefs.h - <<_ACEOF >build/percpu_ref_count_in_data/percpu_ref_count_in_data.c

#include <linux/module.h>

		#include <linux/percpu-refcount.h>


int
main (void)
{

		struct percpu_ref_data d;

		atomic_long_set(&d.count, 1L);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_ref_count_in_data || mkdir -p build/percpu_ref_count_in_data

	file=build/percpu_ref_count_in_data/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_ref_count_in_data

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_ref_count_in_data.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_ref_count_in_data/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/percpu_ref_count_in_data_license || mkdir -p build/percpu_ref_count_in_data_license
cat confdefs.h - <<_ACEOF >build/percpu_ref_count_in_data_license/percpu_ref_count_in_data_license.c

#include <linux/module.h>

		#include <linux/percpu-refcount.h>


int
main (void)
{

		struct percpu_ref_data d;

		atomic_long_set(&d.count, 1L);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_ref_count_in_data_license || mkdir -p build/percpu_ref_count_in_data_license

	file=build/percpu_ref_count_in_data_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_ref_count_in_data_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_ref_count_in_data_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_ref_count_in_data_license/" >>build/Makefile
fi


fi






test -d build/cpu_hotplug || mkdir -p build/cpu_hotplug
cat confdefs.h - <<_ACEOF >build/cpu_hotplug/cpu_hotplug.c

#include <linux/module.h>

		#include <linux/cpuhotplug.h>


int
main (void)
{

		enum cpuhp_state state = CPUHP_ONLINE;
		int (*fp)(unsigned int, struct hlist_node *) = NULL;
		cpuhp_state_add_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_state_remove_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_setup_state_multi(state, "", fp, fp);
		cpuhp_remove_multi_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_hotplug || mkdir -p build/cpu_hotplug

	file=build/cpu_hotplug/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_hotplug

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_hotplug.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_hotplug/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/cpu_hotplug_license || mkdir -p build/cpu_hotplug_license
cat confdefs.h - <<_ACEOF >build/cpu_hotplug_license/cpu_hotplug_license.c

#include <linux/module.h>

		#include <linux/cpuhotplug.h>


int
main (void)
{

		enum cpuhp_state state = CPUHP_ONLINE;
		int (*fp)(unsigned int, struct hlist_node *) = NULL;
		cpuhp_state_add_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_state_remove_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_setup_state_multi(state, "", fp, fp);
		cpuhp_remove_multi_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_hotplug_license || mkdir -p build/cpu_hotplug_license

	file=build/cpu_hotplug_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_hotplug_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_hotplug_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_hotplug_license/" >>build/Makefile
fi


fi





test -d build/generic_fillattr_userns || mkdir -p build/generic_fillattr_userns
cat confdefs.h - <<_ACEOF >build/generic_fillattr_userns/generic_fillattr_userns.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct user_namespace *userns = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(userns, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_userns || mkdir -p build/generic_fillattr_userns

	file=build/generic_fillattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_fillattr_userns_license || mkdir -p build/generic_fillattr_userns_license
cat confdefs.h - <<_ACEOF >build/generic_fillattr_userns_license/generic_fillattr_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct user_namespace *userns = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(userns, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_userns_license || mkdir -p build/generic_fillattr_userns_license

	file=build/generic_fillattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_userns_license/" >>build/Makefile
fi


fi




test -d build/generic_fillattr_mnt_idmap || mkdir -p build/generic_fillattr_mnt_idmap
cat confdefs.h - <<_ACEOF >build/generic_fillattr_mnt_idmap/generic_fillattr_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct mnt_idmap *idmap = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(idmap, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_mnt_idmap || mkdir -p build/generic_fillattr_mnt_idmap

	file=build/generic_fillattr_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_fillattr_mnt_idmap_license || mkdir -p build/generic_fillattr_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/generic_fillattr_mnt_idmap_license/generic_fillattr_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct mnt_idmap *idmap = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(idmap, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_mnt_idmap_license || mkdir -p build/generic_fillattr_mnt_idmap_license

	file=build/generic_fillattr_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_mnt_idmap_license/" >>build/Makefile
fi


fi





test -d build/mknod_mnt_idmap || mkdir -p build/mknod_mnt_idmap
cat confdefs.h - <<_ACEOF >build/mknod_mnt_idmap/mknod_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod          = tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_mnt_idmap || mkdir -p build/mknod_mnt_idmap

	file=build/mknod_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mknod_mnt_idmap_license || mkdir -p build/mknod_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/mknod_mnt_idmap_license/mknod_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod          = tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_mnt_idmap_license || mkdir -p build/mknod_mnt_idmap_license

	file=build/mknod_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/mknod_userns || mkdir -p build/mknod_userns
cat confdefs.h - <<_ACEOF >build/mknod_userns/mknod_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod		= tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_userns || mkdir -p build/mknod_userns

	file=build/mknod_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mknod_userns_license || mkdir -p build/mknod_userns_license
cat confdefs.h - <<_ACEOF >build/mknod_userns_license/mknod_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod		= tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_userns_license || mkdir -p build/mknod_userns_license

	file=build/mknod_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_userns_license/" >>build/Makefile
fi


fi





test -d build/symlink_mnt_idmap || mkdir -p build/symlink_mnt_idmap
cat confdefs.h - <<_ACEOF >build/symlink_mnt_idmap/symlink_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>
		int tmp_symlink(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink                = tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_mnt_idmap || mkdir -p build/symlink_mnt_idmap

	file=build/symlink_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/symlink_mnt_idmap_license || mkdir -p build/symlink_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/symlink_mnt_idmap_license/symlink_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>
		int tmp_symlink(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink                = tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_mnt_idmap_license || mkdir -p build/symlink_mnt_idmap_license

	file=build/symlink_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_mnt_idmap_license/" >>build/Makefile
fi


fi



test -d build/symlink_userns || mkdir -p build/symlink_userns
cat confdefs.h - <<_ACEOF >build/symlink_userns/symlink_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_symlink(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink		= tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_userns || mkdir -p build/symlink_userns

	file=build/symlink_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/symlink_userns_license || mkdir -p build/symlink_userns_license
cat confdefs.h - <<_ACEOF >build/symlink_userns_license/symlink_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_symlink(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink		= tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_userns_license || mkdir -p build/symlink_userns_license

	file=build/symlink_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_userns_license/" >>build/Makefile
fi


fi





test -d build/bio_max_segs || mkdir -p build/bio_max_segs
cat confdefs.h - <<_ACEOF >build/bio_max_segs/bio_max_segs.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		bio_max_segs(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_max_segs || mkdir -p build/bio_max_segs

	file=build/bio_max_segs/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_max_segs

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_max_segs.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_max_segs/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_max_segs_license || mkdir -p build/bio_max_segs_license
cat confdefs.h - <<_ACEOF >build/bio_max_segs_license/bio_max_segs_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		bio_max_segs(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_max_segs_license || mkdir -p build/bio_max_segs_license

	file=build/bio_max_segs_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_max_segs_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_max_segs_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_max_segs_license/" >>build/Makefile
fi


fi





test -d build/signal_stop || mkdir -p build/signal_stop
cat confdefs.h - <<_ACEOF >build/signal_stop/signal_stop.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		kernel_signal_stop();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/signal_stop || mkdir -p build/signal_stop

	file=build/signal_stop/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/signal_stop

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := signal_stop.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += signal_stop/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/signal_stop_license || mkdir -p build/signal_stop_license
cat confdefs.h - <<_ACEOF >build/signal_stop_license/signal_stop_license.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		kernel_signal_stop();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/signal_stop_license || mkdir -p build/signal_stop_license

	file=build/signal_stop_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/signal_stop_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := signal_stop_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += signal_stop_license/" >>build/Makefile
fi


fi





test -d build/siginfo || mkdir -p build/siginfo
cat confdefs.h - <<_ACEOF >build/siginfo/siginfo.c

#include <linux/module.h>

		#include <linux/signal_types.h>


int
main (void)
{

		kernel_siginfo_t info __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/siginfo || mkdir -p build/siginfo

	file=build/siginfo/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/siginfo

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := siginfo.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += siginfo/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/siginfo_license || mkdir -p build/siginfo_license
cat confdefs.h - <<_ACEOF >build/siginfo_license/siginfo_license.c

#include <linux/module.h>

		#include <linux/signal_types.h>


int
main (void)
{

		kernel_siginfo_t info __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/siginfo_license || mkdir -p build/siginfo_license

	file=build/siginfo_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/siginfo_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := siginfo_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += siginfo_license/" >>build/Makefile
fi


fi






test -d build/sysfs_default_groups || mkdir -p build/sysfs_default_groups
cat confdefs.h - <<_ACEOF >build/sysfs_default_groups/sysfs_default_groups.c

#include <linux/module.h>

		#include <linux/kobject.h>


int
main (void)
{

		struct kobj_type __attribute__ ((unused)) kt = {
			.default_groups = (const struct attribute_group **)NULL };

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sysfs_default_groups || mkdir -p build/sysfs_default_groups

	file=build/sysfs_default_groups/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sysfs_default_groups

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sysfs_default_groups.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sysfs_default_groups/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sysfs_default_groups_license || mkdir -p build/sysfs_default_groups_license
cat confdefs.h - <<_ACEOF >build/sysfs_default_groups_license/sysfs_default_groups_license.c

#include <linux/module.h>

		#include <linux/kobject.h>


int
main (void)
{

		struct kobj_type __attribute__ ((unused)) kt = {
			.default_groups = (const struct attribute_group **)NULL };

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sysfs_default_groups_license || mkdir -p build/sysfs_default_groups_license

	file=build/sysfs_default_groups_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sysfs_default_groups_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sysfs_default_groups_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sysfs_default_groups_license/" >>build/Makefile
fi


fi






test -d build/set_special_state || mkdir -p build/set_special_state
cat confdefs.h - <<_ACEOF >build/set_special_state/set_special_state.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		set_special_state(TASK_STOPPED);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_special_state || mkdir -p build/set_special_state

	file=build/set_special_state/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_special_state

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_special_state.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_special_state/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/set_special_state_license || mkdir -p build/set_special_state_license
cat confdefs.h - <<_ACEOF >build/set_special_state_license/set_special_state_license.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		set_special_state(TASK_STOPPED);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_special_state_license || mkdir -p build/set_special_state_license

	file=build/set_special_state_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_special_state_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_special_state_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_special_state_license/" >>build/Makefile
fi


fi





test -d build/has_standalone_linux_stdarg || mkdir -p build/has_standalone_linux_stdarg
cat confdefs.h - <<_ACEOF >build/has_standalone_linux_stdarg/has_standalone_linux_stdarg.c

#include <linux/module.h>

		#include <linux/stdarg.h>

		#if !defined(va_start) || !defined(va_end) || \
		    !defined(va_arg) || !defined(va_copy)
		#error "<linux/stdarg.h> is invalid"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_standalone_linux_stdarg || mkdir -p build/has_standalone_linux_stdarg

	file=build/has_standalone_linux_stdarg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_standalone_linux_stdarg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_standalone_linux_stdarg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_standalone_linux_stdarg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_standalone_linux_stdarg_license || mkdir -p build/has_standalone_linux_stdarg_license
cat confdefs.h - <<_ACEOF >build/has_standalone_linux_stdarg_license/has_standalone_linux_stdarg_license.c

#include <linux/module.h>

		#include <linux/stdarg.h>

		#if !defined(va_start) || !defined(va_end) || \
		    !defined(va_arg) || !defined(va_copy)
		#error "<linux/stdarg.h> is invalid"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_standalone_linux_stdarg_license || mkdir -p build/has_standalone_linux_stdarg_license

	file=build/has_standalone_linux_stdarg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_standalone_linux_stdarg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_standalone_linux_stdarg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_standalone_linux_stdarg_license/" >>build/Makefile
fi


fi





test -d build/pagemap_has_folio_wait_bit || mkdir -p build/pagemap_has_folio_wait_bit
cat confdefs.h - <<_ACEOF >build/pagemap_has_folio_wait_bit/pagemap_has_folio_wait_bit.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		static struct folio *f = NULL;

		folio_wait_bit(f, PG_writeback);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/pagemap_has_folio_wait_bit || mkdir -p build/pagemap_has_folio_wait_bit

	file=build/pagemap_has_folio_wait_bit/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pagemap_has_folio_wait_bit

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pagemap_has_folio_wait_bit.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pagemap_has_folio_wait_bit/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/pagemap_has_folio_wait_bit_license || mkdir -p build/pagemap_has_folio_wait_bit_license
cat confdefs.h - <<_ACEOF >build/pagemap_has_folio_wait_bit_license/pagemap_has_folio_wait_bit_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		static struct folio *f = NULL;

		folio_wait_bit(f, PG_writeback);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/pagemap_has_folio_wait_bit_license || mkdir -p build/pagemap_has_folio_wait_bit_license

	file=build/pagemap_has_folio_wait_bit_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pagemap_has_folio_wait_bit_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pagemap_has_folio_wait_bit_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pagemap_has_folio_wait_bit_license/" >>build/Makefile
fi


fi





test -d build/add_disk_ret || mkdir -p build/add_disk_ret
cat confdefs.h - <<_ACEOF >build/add_disk_ret/add_disk_ret.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		int error __attribute__ ((unused)) = add_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/add_disk_ret || mkdir -p build/add_disk_ret

	file=build/add_disk_ret/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/add_disk_ret

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := add_disk_ret.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += add_disk_ret/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/add_disk_ret_license || mkdir -p build/add_disk_ret_license
cat confdefs.h - <<_ACEOF >build/add_disk_ret_license/add_disk_ret_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		int error __attribute__ ((unused)) = add_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/add_disk_ret_license || mkdir -p build/add_disk_ret_license

	file=build/add_disk_ret_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/add_disk_ret_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := add_disk_ret_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += add_disk_ret_license/" >>build/Makefile
fi


fi






test -d build/kthread_complete_and_exit || mkdir -p build/kthread_complete_and_exit
cat confdefs.h - <<_ACEOF >build/kthread_complete_and_exit/kthread_complete_and_exit.c

#include <linux/module.h>

		#include <linux/kthread.h>


int
main (void)
{

		struct completion *completion = NULL;
		long code = 0;

		kthread_complete_and_exit(completion, code);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_complete_and_exit || mkdir -p build/kthread_complete_and_exit

	file=build/kthread_complete_and_exit/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_complete_and_exit

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_complete_and_exit.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_complete_and_exit/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kthread_complete_and_exit_license || mkdir -p build/kthread_complete_and_exit_license
cat confdefs.h - <<_ACEOF >build/kthread_complete_and_exit_license/kthread_complete_and_exit_license.c

#include <linux/module.h>

		#include <linux/kthread.h>


int
main (void)
{

		struct completion *completion = NULL;
		long code = 0;

		kthread_complete_and_exit(completion, code);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_complete_and_exit_license || mkdir -p build/kthread_complete_and_exit_license

	file=build/kthread_complete_and_exit_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_complete_and_exit_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_complete_and_exit_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_complete_and_exit_license/" >>build/Makefile
fi


fi





test -d build/kthread_dequeue_signal || mkdir -p build/kthread_dequeue_signal
cat confdefs.h - <<_ACEOF >build/kthread_dequeue_signal/kthread_dequeue_signal.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		struct task_struct *task = NULL;
		sigset_t *mask = NULL;
		kernel_siginfo_t *info = NULL;
		enum pid_type *type = NULL;
		int error __attribute__ ((unused));

		error = dequeue_signal(task, mask, info, type);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_dequeue_signal || mkdir -p build/kthread_dequeue_signal

	file=build/kthread_dequeue_signal/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_dequeue_signal

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_dequeue_signal.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_dequeue_signal/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kthread_dequeue_signal_license || mkdir -p build/kthread_dequeue_signal_license
cat confdefs.h - <<_ACEOF >build/kthread_dequeue_signal_license/kthread_dequeue_signal_license.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		struct task_struct *task = NULL;
		sigset_t *mask = NULL;
		kernel_siginfo_t *info = NULL;
		enum pid_type *type = NULL;
		int error __attribute__ ((unused));

		error = dequeue_signal(task, mask, info, type);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_dequeue_signal_license || mkdir -p build/kthread_dequeue_signal_license

	file=build/kthread_dequeue_signal_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_dequeue_signal_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_dequeue_signal_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_dequeue_signal_license/" >>build/Makefile
fi


fi






test -d build/zero_page || mkdir -p build/zero_page
cat confdefs.h - <<_ACEOF >build/zero_page/zero_page.c

#include <linux/module.h>

		#include <asm/pgtable.h>


int
main (void)
{

		struct page *p __attribute__ ((unused));
		p = ZERO_PAGE(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/zero_page || mkdir -p build/zero_page

	file=build/zero_page/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/zero_page

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := zero_page.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += zero_page/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/zero_page_license || mkdir -p build/zero_page_license
cat confdefs.h - <<_ACEOF >build/zero_page_license/zero_page_license.c

#include <linux/module.h>

		#include <asm/pgtable.h>


int
main (void)
{

		struct page *p __attribute__ ((unused));
		p = ZERO_PAGE(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/zero_page_license || mkdir -p build/zero_page_license

	file=build/zero_page_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/zero_page_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := zero_page_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += zero_page_license/" >>build/Makefile
fi


fi





test -d build/__copy_from_user_inatomic || mkdir -p build/__copy_from_user_inatomic
cat confdefs.h - <<_ACEOF >build/__copy_from_user_inatomic/__copy_from_user_inatomic.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		int result __attribute__ ((unused)) = __copy_from_user_inatomic(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__copy_from_user_inatomic || mkdir -p build/__copy_from_user_inatomic

	file=build/__copy_from_user_inatomic/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__copy_from_user_inatomic

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __copy_from_user_inatomic.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __copy_from_user_inatomic/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/__copy_from_user_inatomic_license || mkdir -p build/__copy_from_user_inatomic_license
cat confdefs.h - <<_ACEOF >build/__copy_from_user_inatomic_license/__copy_from_user_inatomic_license.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		int result __attribute__ ((unused)) = __copy_from_user_inatomic(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/__copy_from_user_inatomic_license || mkdir -p build/__copy_from_user_inatomic_license

	file=build/__copy_from_user_inatomic_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__copy_from_user_inatomic_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __copy_from_user_inatomic_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __copy_from_user_inatomic_license/" >>build/Makefile
fi


fi





test -d build/user_ns_common_inum || mkdir -p build/user_ns_common_inum
cat confdefs.h - <<_ACEOF >build/user_ns_common_inum/user_ns_common_inum.c

#include <linux/module.h>

		#include <linux/user_namespace.h>


int
main (void)
{

		struct user_namespace uns;
		uns.ns.inum = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/user_ns_common_inum || mkdir -p build/user_ns_common_inum

	file=build/user_ns_common_inum/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/user_ns_common_inum

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := user_ns_common_inum.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += user_ns_common_inum/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/user_ns_common_inum_license || mkdir -p build/user_ns_common_inum_license
cat confdefs.h - <<_ACEOF >build/user_ns_common_inum_license/user_ns_common_inum_license.c

#include <linux/module.h>

		#include <linux/user_namespace.h>


int
main (void)
{

		struct user_namespace uns;
		uns.ns.inum = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/user_ns_common_inum_license || mkdir -p build/user_ns_common_inum_license

	file=build/user_ns_common_inum_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/user_ns_common_inum_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := user_ns_common_inum_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += user_ns_common_inum_license/" >>build/Makefile
fi


fi





test -d build/idmap_mnt_api || mkdir -p build/idmap_mnt_api
cat confdefs.h - <<_ACEOF >build/idmap_mnt_api/idmap_mnt_api.c

#include <linux/module.h>

                #include <linux/fs.h>


int
main (void)
{

		int fs_flags = 0;
		fs_flags |= FS_ALLOW_IDMAP;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/idmap_mnt_api || mkdir -p build/idmap_mnt_api

	file=build/idmap_mnt_api/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/idmap_mnt_api

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := idmap_mnt_api.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += idmap_mnt_api/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/idmap_mnt_api_license || mkdir -p build/idmap_mnt_api_license
cat confdefs.h - <<_ACEOF >build/idmap_mnt_api_license/idmap_mnt_api_license.c

#include <linux/module.h>

                #include <linux/fs.h>


int
main (void)
{

		int fs_flags = 0;
		fs_flags |= FS_ALLOW_IDMAP;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/idmap_mnt_api_license || mkdir -p build/idmap_mnt_api_license

	file=build/idmap_mnt_api_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/idmap_mnt_api_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := idmap_mnt_api_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += idmap_mnt_api_license/" >>build/Makefile
fi


fi





test -d build/iattr_vfsid || mkdir -p build/iattr_vfsid
cat confdefs.h - <<_ACEOF >build/iattr_vfsid/iattr_vfsid.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct iattr ia;
		ia.ia_vfsuid = (vfsuid_t){0};
		ia.ia_vfsgid = (vfsgid_t){0};

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iattr_vfsid || mkdir -p build/iattr_vfsid

	file=build/iattr_vfsid/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iattr_vfsid

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iattr_vfsid.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iattr_vfsid/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iattr_vfsid_license || mkdir -p build/iattr_vfsid_license
cat confdefs.h - <<_ACEOF >build/iattr_vfsid_license/iattr_vfsid_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct iattr ia;
		ia.ia_vfsuid = (vfsuid_t){0};
		ia.ia_vfsgid = (vfsgid_t){0};

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iattr_vfsid_license || mkdir -p build/iattr_vfsid_license

	file=build/iattr_vfsid_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iattr_vfsid_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iattr_vfsid_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iattr_vfsid_license/" >>build/Makefile
fi


fi





test -d build/filemap_range_has_page || mkdir -p build/filemap_range_has_page
cat confdefs.h - <<_ACEOF >build/filemap_range_has_page/filemap_range_has_page.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct address_space *mapping = NULL;
		loff_t lstart = 0;
		loff_t lend = 0;
		bool ret __attribute__ ((unused));

		ret = filemap_range_has_page(mapping, lstart, lend);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/filemap_range_has_page || mkdir -p build/filemap_range_has_page

	file=build/filemap_range_has_page/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/filemap_range_has_page

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := filemap_range_has_page.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += filemap_range_has_page/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/filemap_range_has_page_license || mkdir -p build/filemap_range_has_page_license
cat confdefs.h - <<_ACEOF >build/filemap_range_has_page_license/filemap_range_has_page_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct address_space *mapping = NULL;
		loff_t lstart = 0;
		loff_t lend = 0;
		bool ret __attribute__ ((unused));

		ret = filemap_range_has_page(mapping, lstart, lend);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/filemap_range_has_page_license || mkdir -p build/filemap_range_has_page_license

	file=build/filemap_range_has_page_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/filemap_range_has_page_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := filemap_range_has_page_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += filemap_range_has_page_license/" >>build/Makefile
fi


fi





test -d build/writepage_t_folio || mkdir -p build/writepage_t_folio
cat confdefs.h - <<_ACEOF >build/writepage_t_folio/writepage_t_folio.c

#include <linux/module.h>

		#include <linux/writeback.h>
		int putpage(struct folio *folio,
		    struct writeback_control *wbc, void *data)
		{ return 0; }
		writepage_t func = putpage;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/writepage_t_folio || mkdir -p build/writepage_t_folio

	file=build/writepage_t_folio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/writepage_t_folio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := writepage_t_folio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += writepage_t_folio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/writepage_t_folio_license || mkdir -p build/writepage_t_folio_license
cat confdefs.h - <<_ACEOF >build/writepage_t_folio_license/writepage_t_folio_license.c

#include <linux/module.h>

		#include <linux/writeback.h>
		int putpage(struct folio *folio,
		    struct writeback_control *wbc, void *data)
		{ return 0; }
		writepage_t func = putpage;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/writepage_t_folio_license || mkdir -p build/writepage_t_folio_license

	file=build/writepage_t_folio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/writepage_t_folio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := writepage_t_folio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += writepage_t_folio_license/" >>build/Makefile
fi


fi





test -d build/reclaim_state_reclaimed || mkdir -p build/reclaim_state_reclaimed
cat confdefs.h - <<_ACEOF >build/reclaim_state_reclaimed/reclaim_state_reclaimed.c

#include <linux/module.h>

		#include <linux/swap.h>
		static const struct reclaim_state
		    rs  __attribute__ ((unused)) = {
		    .reclaimed = 100,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/reclaim_state_reclaimed || mkdir -p build/reclaim_state_reclaimed

	file=build/reclaim_state_reclaimed/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/reclaim_state_reclaimed

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := reclaim_state_reclaimed.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += reclaim_state_reclaimed/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/reclaim_state_reclaimed_license || mkdir -p build/reclaim_state_reclaimed_license
cat confdefs.h - <<_ACEOF >build/reclaim_state_reclaimed_license/reclaim_state_reclaimed_license.c

#include <linux/module.h>

		#include <linux/swap.h>
		static const struct reclaim_state
		    rs  __attribute__ ((unused)) = {
		    .reclaimed = 100,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/reclaim_state_reclaimed_license || mkdir -p build/reclaim_state_reclaimed_license

	file=build/reclaim_state_reclaimed_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/reclaim_state_reclaimed_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := reclaim_state_reclaimed_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += reclaim_state_reclaimed_license/" >>build/Makefile
fi


fi





test -d build/has_register_sysctl_table || mkdir -p build/has_register_sysctl_table
cat confdefs.h - <<_ACEOF >build/has_register_sysctl_table/has_register_sysctl_table.c

#include <linux/module.h>

		#include <linux/sysctl.h>

		static struct ctl_table dummy_table[] = {
			{}
		};



int
main (void)
{

		struct ctl_table_header *h
			__attribute((unused)) = register_sysctl_table(dummy_table);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_register_sysctl_table || mkdir -p build/has_register_sysctl_table

	file=build/has_register_sysctl_table/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_register_sysctl_table

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_register_sysctl_table.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_register_sysctl_table/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_register_sysctl_table_license || mkdir -p build/has_register_sysctl_table_license
cat confdefs.h - <<_ACEOF >build/has_register_sysctl_table_license/has_register_sysctl_table_license.c

#include <linux/module.h>

		#include <linux/sysctl.h>

		static struct ctl_table dummy_table[] = {
			{}
		};



int
main (void)
{

		struct ctl_table_header *h
			__attribute((unused)) = register_sysctl_table(dummy_table);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_register_sysctl_table_license || mkdir -p build/has_register_sysctl_table_license

	file=build/has_register_sysctl_table_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_register_sysctl_table_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_register_sysctl_table_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_register_sysctl_table_license/" >>build/Makefile
fi


fi





test -d build/has_copy_splice_read || mkdir -p build/has_copy_splice_read
cat confdefs.h - <<_ACEOF >build/has_copy_splice_read/has_copy_splice_read.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct file_operations fops __attribute__((unused)) = {
			.splice_read = copy_splice_read,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_copy_splice_read || mkdir -p build/has_copy_splice_read

	file=build/has_copy_splice_read/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_copy_splice_read

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_copy_splice_read.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_copy_splice_read/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_copy_splice_read_license || mkdir -p build/has_copy_splice_read_license
cat confdefs.h - <<_ACEOF >build/has_copy_splice_read_license/has_copy_splice_read_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct file_operations fops __attribute__((unused)) = {
			.splice_read = copy_splice_read,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_copy_splice_read_license || mkdir -p build/has_copy_splice_read_license

	file=build/has_copy_splice_read_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_copy_splice_read_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_copy_splice_read_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_copy_splice_read_license/" >>build/Makefile
fi


fi


	case "$host_cpu" in
		powerpc*)



test -d build/cpu_has_feature || mkdir -p build/cpu_has_feature
cat confdefs.h - <<_ACEOF >build/cpu_has_feature/cpu_has_feature.c

#include <linux/module.h>

		#include <linux/version.h>
		#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 7, 0)
		#include <asm/cpu_has_feature.h>
		#else
		#include <asm/cputable.h>
		#endif


int
main (void)
{

		return cpu_has_feature(CPU_FTR_ALTIVEC) ? 0 : 1;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_has_feature || mkdir -p build/cpu_has_feature

	file=build/cpu_has_feature/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_has_feature

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_has_feature.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_has_feature/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/cpu_has_feature_license || mkdir -p build/cpu_has_feature_license
cat confdefs.h - <<_ACEOF >build/cpu_has_feature_license/cpu_has_feature_license.c

#include <linux/module.h>

		#include <linux/version.h>
		#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 7, 0)
		#include <asm/cpu_has_feature.h>
		#else
		#include <asm/cputable.h>
		#endif


int
main (void)
{

		return cpu_has_feature(CPU_FTR_ALTIVEC) ? 0 : 1;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_has_feature_license || mkdir -p build/cpu_has_feature_license

	file=build/cpu_has_feature_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_has_feature_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_has_feature_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_has_feature_license/" >>build/Makefile
fi


fi





test -d build/flush_dcache_page || mkdir -p build/flush_dcache_page
cat confdefs.h - <<_ACEOF >build/flush_dcache_page/flush_dcache_page.c

#include <linux/module.h>

		#include <asm/cacheflush.h>


int
main (void)
{

		flush_dcache_page(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/flush_dcache_page || mkdir -p build/flush_dcache_page

	file=build/flush_dcache_page/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/flush_dcache_page

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := flush_dcache_page.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += flush_dcache_page/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/flush_dcache_page_license || mkdir -p build/flush_dcache_page_license
cat confdefs.h - <<_ACEOF >build/flush_dcache_page_license/flush_dcache_page_license.c

#include <linux/module.h>

		#include <asm/cacheflush.h>


int
main (void)
{

		flush_dcache_page(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/flush_dcache_page_license || mkdir -p build/flush_dcache_page_license

	file=build/flush_dcache_page_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/flush_dcache_page_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := flush_dcache_page_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += flush_dcache_page_license/" >>build/Makefile
fi


fi


			;;
	esac

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for available kernel interfaces" >&5
printf %s "checking for available kernel interfaces... " >&6; }






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="yes" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.compile.kabi
		mv build/build.log build/build.log.kabi

else $as_nop

	        as_fn_error $? "
        *** Unable to compile test source to determine kernel interfaces." "$LINENO" 5

fi



																		if test "x$enable_linux_builtin" = "xno"
then :

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.kabi); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				if test "${name##*_}" = "license"
then :






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/$name >build/$name/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/$name/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/$name/Makefile build/$name/Makefile.modpost.kabi
		cat build/$name/build.log >>build/build.log.kabi

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi


					echo "obj-n += $dir" >>build/Makefile

else $as_nop

					echo "obj-m += $dir" >>build/Makefile

fi

else $as_nop

				echo "obj-n += $dir" >>build/Makefile

fi
		done






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.modpost.kabi
		cat build/build.log >>build/build.log.kabi

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi



else $as_nop

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.kabi); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				touch build/$name/$name.ko

fi
		done

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether access_ok() has 'type' parameter" >&5
printf %s "checking whether access_ok() has 'type' parameter... " >&6; }

	if test -d build/access_ok_type
then :

		if test -f build/access_ok_type/access_ok_type.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ACCESS_OK_TYPE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"access_ok_type\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether global_node_page_state() exists" >&5
printf %s "checking whether global_node_page_state() exists... " >&6; }

	if test -d build/global_node_page_state
then :

		if test -f build/global_node_page_state/global_node_page_state.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GLOBAL_NODE_PAGE_STATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"global_node_page_state\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether global_zone_page_state() exists" >&5
printf %s "checking whether global_zone_page_state() exists... " >&6; }

	if test -d build/global_zone_page_state
then :

		if test -f build/global_zone_page_state/global_zone_page_state.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GLOBAL_ZONE_PAGE_STATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"global_zone_page_state\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum node_stat_item contains NR_FILE_PAGES" >&5
printf %s "checking whether enum node_stat_item contains NR_FILE_PAGES... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "node_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_FILE_PAGES'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_NODE_STAT_ITEM_NR_FILE_PAGES 1" >>confdefs.h

		ZFS_ENUM_NODE_STAT_ITEM_NR_FILE_PAGES=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum node_stat_item contains NR_INACTIVE_ANON" >&5
printf %s "checking whether enum node_stat_item contains NR_INACTIVE_ANON... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "node_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_ANON'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_ANON 1" >>confdefs.h

		ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_ANON=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum node_stat_item contains NR_INACTIVE_FILE" >&5
printf %s "checking whether enum node_stat_item contains NR_INACTIVE_FILE... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "node_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_FILE'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_FILE 1" >>confdefs.h

		ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_FILE=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum zone_stat_item contains NR_FILE_PAGES" >&5
printf %s "checking whether enum zone_stat_item contains NR_FILE_PAGES... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "zone_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_FILE_PAGES'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_ZONE_STAT_ITEM_NR_FILE_PAGES 1" >>confdefs.h

		ZFS_ENUM_ZONE_STAT_ITEM_NR_FILE_PAGES=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum zone_stat_item contains NR_INACTIVE_ANON" >&5
printf %s "checking whether enum zone_stat_item contains NR_INACTIVE_ANON... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "zone_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_ANON'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_ANON 1" >>confdefs.h

		ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_ANON=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum zone_stat_item contains NR_INACTIVE_FILE" >&5
printf %s "checking whether enum zone_stat_item contains NR_INACTIVE_FILE... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "zone_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_FILE'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_FILE 1" >>confdefs.h

		ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_FILE=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether global_page_state enums are sane" >&5
printf %s "checking whether global_page_state enums are sane... " >&6; }


	enum_check_a="$ZFS_ENUM_NODE_STAT_ITEM_NR_FILE_PAGES"
	enum_check_b="$ZFS_ENUM_ZONE_STAT_ITEM_NR_FILE_PAGES"
	if test -n "$enum_check_a" -a -n "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_FILE_PAGES in either node_stat_item or zone_stat_item: DUPLICATE" >&5
printf "%s\n" "NR_FILE_PAGES in either node_stat_item or zone_stat_item: DUPLICATE" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi
	if test -z "$enum_check_a" -a -z "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_FILE_PAGES in either node_stat_item or zone_stat_item: NOT FOUND" >&5
printf "%s\n" "NR_FILE_PAGES in either node_stat_item or zone_stat_item: NOT FOUND" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi


	enum_check_a="$ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_ANON"
	enum_check_b="$ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_ANON"
	if test -n "$enum_check_a" -a -n "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: DUPLICATE" >&5
printf "%s\n" "NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: DUPLICATE" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi
	if test -z "$enum_check_a" -a -z "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: NOT FOUND" >&5
printf "%s\n" "NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: NOT FOUND" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi


	enum_check_a="$ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_FILE"
	enum_check_b="$ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_FILE"
	if test -n "$enum_check_a" -a -n "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: DUPLICATE" >&5
printf "%s\n" "NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: DUPLICATE" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi
	if test -z "$enum_check_a" -a -z "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: NOT FOUND" >&5
printf "%s\n" "NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: NOT FOUND" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether compile-time stack validation (objtool) is available" >&5
printf %s "checking whether compile-time stack validation (objtool) is available... " >&6; }

	if test -d build/objtool
then :

		if test -f build/objtool/objtool.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_OBJTOOL 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether STACK_FRAME_NON_STANDARD is defined" >&5
printf %s "checking whether STACK_FRAME_NON_STANDARD is defined... " >&6; }

	if test -d build/stack_frame_non_standard
then :

		if test -f build/stack_frame_non_standard/stack_frame_non_standard.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_STACK_FRAME_NON_STANDARD 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"stack_frame_non_standard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"objtool\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether pde_data() is lowercase" >&5
printf %s "checking whether pde_data() is lowercase... " >&6; }

	if test -d build/pde_data
then :

		if test -f build/pde_data/pde_data.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define SPL_PDE_DATA pde_data" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

printf "%s\n" "#define SPL_PDE_DATA PDE_DATA" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"pde_data\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fallocate() exists" >&5
printf %s "checking whether fops->fallocate() exists... " >&6; }

	if test -d build/file_fallocate
then :

		if test -f build/file_fallocate/file_fallocate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether FALLOC_FL_ZERO_RANGE exists" >&5
printf %s "checking whether FALLOC_FL_ZERO_RANGE exists... " >&6; }

	if test -d build/falloc_fl_zero_range
then :

		if test -f build/falloc_fl_zero_range/falloc_fl_zero_range.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FALLOC_FL_ZERO_RANGE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"falloc_fl_zero_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop


	as_fn_error $? "
	*** None of the expected \"file_fallocate\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_fallocate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fadvise() exists" >&5
printf %s "checking whether fops->fadvise() exists... " >&6; }

	if test -d build/file_fadvise
then :

		if test -f build/file_fadvise/file_fadvise.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_FADVISE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_fadvise\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_fadvise() is available" >&5
printf %s "checking whether generic_fadvise() is available... " >&6; }

	if  ! test -f build/generic_fadvise/generic_fadvise.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_fadvise[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/fadvise.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_fadvise)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FADVISE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FADVISE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FADVISE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether zlib_deflate_workspacesize() wants 2 args" >&5
printf %s "checking whether zlib_deflate_workspacesize() wants 2 args... " >&6; }

	if test -d build/2args_zlib_deflate_workspacesize
then :

		if test -f build/2args_zlib_deflate_workspacesize/2args_zlib_deflate_workspacesize.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_ZLIB_DEFLATE_WORKSPACESIZE 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"zlib_deflate_workspacesize()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"2args_zlib_deflate_workspacesize\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct rw_semaphore has member activity" >&5
printf %s "checking whether struct rw_semaphore has member activity... " >&6; }

	if test -d build/rwsem_activity
then :

		if test -f build/rwsem_activity/rwsem_activity.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RWSEM_ACTIVITY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"rwsem_activity\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct rw_semaphore has atomic_long_t member count" >&5
printf %s "checking whether struct rw_semaphore has atomic_long_t member count... " >&6; }

	if test -d build/rwsem_atomic_long_count
then :

		if test -f build/rwsem_atomic_long_count/rwsem_atomic_long_count.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RWSEM_ATOMIC_LONG_COUNT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"rwsem_atomic_long_count\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether header linux/sched/rt.h exists" >&5
printf %s "checking whether header linux/sched/rt.h exists... " >&6; }

	if test -d build/sched_rt_header
then :

		if test -f build/sched_rt_header/sched_rt_header.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sched_rt_header\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sched_rt_header\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether header linux/sched/signal.h exists" >&5
printf %s "checking whether header linux/sched/signal.h exists... " >&6; }

	if test -d build/sched_signal_header
then :

		if test -f build/sched_signal_header/sched_signal_header.ko
then :


printf "%s\n" "#define HAVE_SCHED_SIGNAL_HEADER 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sched_signal_header\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether io_schedule_timeout() is available" >&5
printf %s "checking whether io_schedule_timeout() is available... " >&6; }

	if  ! test -f build/io_schedule_timeout/io_schedule_timeout.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]io_schedule_timeout[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in ; do
			grep -q -E "EXPORT_SYMBOL.*(io_schedule_timeout)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IO_SCHEDULE_TIMEOUT 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IO_SCHEDULE_TIMEOUT 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IO_SCHEDULE_TIMEOUT 1" >>confdefs.h



fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether usleep_range() is available" >&5
printf %s "checking whether usleep_range() is available... " >&6; }

	if test -d build/usleep_range
then :

		if test -f build/usleep_range/usleep_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"usleep_range()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"usleep_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kmem_cache_create_usercopy() exists" >&5
printf %s "checking whether kmem_cache_create_usercopy() exists... " >&6; }

	if test -d build/kmem_cache_create_usercopy
then :

		if test -f build/kmem_cache_create_usercopy/kmem_cache_create_usercopy.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KMEM_CACHE_CREATE_USERCOPY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kmem_cache_create_usercopy\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kvmalloc(ptr, flags) is available" >&5
printf %s "checking whether kvmalloc(ptr, flags) is available... " >&6; }

	if test -d build/kvmalloc
then :

		if test -f build/kvmalloc/kvmalloc.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KVMALLOC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kvmalloc\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __vmalloc(ptr, flags, pageflags) is available" >&5
printf %s "checking whether __vmalloc(ptr, flags, pageflags) is available... " >&6; }

	if test -d build/__vmalloc
then :

		if test -f build/__vmalloc/__vmalloc.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VMALLOC_PAGE_KERNEL 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"__vmalloc\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether wait_on_bit() takes an action" >&5
printf %s "checking whether wait_on_bit() takes an action... " >&6; }

	if test -d build/wait_on_bit
then :

		if test -f build/wait_on_bit/wait_on_bit.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_ON_BIT_ACTION 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"wait_on_bit\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether wq_head->head and wq_entry->entry exist" >&5
printf %s "checking whether wq_head->head and wq_entry->entry exist... " >&6; }

	if test -d build/wait_queue_head_entry
then :

		if test -f build/wait_queue_head_entry/wait_queue_head_entry.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_QUEUE_HEAD_ENTRY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"wait_queue_head_entry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether timestamp_truncate() exists" >&5
printf %s "checking whether timestamp_truncate() exists... " >&6; }

	if test -d build/timestamp_truncate
then :

		if test -f build/timestamp_truncate/timestamp_truncate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_TIMESTAMP_TRUNCATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timestamp_truncate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode->i_*time's are timespec64" >&5
printf %s "checking whether inode->i_*time's are timespec64... " >&6; }

	if test -d build/inode_times
then :

		if test -f build/inode_times/inode_times.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_TIMESPEC64_TIMES 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_times\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_lock_shared() exists" >&5
printf %s "checking whether inode_lock_shared() exists... " >&6; }

	if test -d build/inode_lock
then :

		if test -f build/inode_lock/inode_lock.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_LOCK_SHARED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_lock\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether group_info->gid exists" >&5
printf %s "checking whether group_info->gid exists... " >&6; }

	if test -d build/group_info_gid
then :

		if test -f build/group_info_gid/group_info_gid.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GROUP_INFO_GID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"group_info_gid\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel_write() takes loff_t pointer" >&5
printf %s "checking whether kernel_write() takes loff_t pointer... " >&6; }

	if test -d build/kernel_write
then :

		if test -f build/kernel_write/kernel_write.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_WRITE_PPOS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kernel_write\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel_read() takes loff_t pointer" >&5
printf %s "checking whether kernel_read() takes loff_t pointer... " >&6; }

	if test -d build/kernel_read
then :

		if test -f build/kernel_read/kernel_read.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_READ_PPOS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kernel_read\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether timer_setup() is available" >&5
printf %s "checking whether timer_setup() is available... " >&6; }

	if test -d build/timer_setup
then :

		if test -f build/timer_setup/timer_setup.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_TIMER_SETUP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timer_setup\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether timer function expects timer_list" >&5
printf %s "checking whether timer function expects timer_list... " >&6; }

	if test -d build/timer_list_function
then :

		if test -f build/timer_list_function/timer_list_function.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_TIMER_FUNCTION_TIMER_LIST 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timer_list_function\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct timer_list has flags" >&5
printf %s "checking whether struct timer_list has flags... " >&6; }

	if test -d build/timer_list_flags
then :

		if test -f build/timer_list_flags/timer_list_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_TIMER_LIST_FLAGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timer_list_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block->s_user_ns exists" >&5
printf %s "checking whether super_block->s_user_ns exists... " >&6; }

	if test -d build/super_user_ns
then :

		if test -f build/super_user_ns/super_user_ns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_USER_NS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_user_ns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether proc_ops structure exists" >&5
printf %s "checking whether proc_ops structure exists... " >&6; }

	if test -d build/proc_ops_struct
then :

		if test -f build/proc_ops_struct/proc_ops_struct.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PROC_OPS_STRUCT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"proc_ops_struct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->check_events() exists" >&5
printf %s "checking whether bops->check_events() exists... " >&6; }

	if test -d build/block_device_operations_check_events
then :

		if test -f build/block_device_operations_check_events/block_device_operations_check_events.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bops->check_events()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_check_events\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->release() is void and takes 2 args" >&5
printf %s "checking whether bops->release() is void and takes 2 args... " >&6; }

	if test -d build/block_device_operations_release_void
then :

		if test -f build/block_device_operations_release_void/block_device_operations_release_void.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->release() is void and takes 1 arg" >&5
printf %s "checking whether bops->release() is void and takes 1 arg... " >&6; }

	if test -d build/block_device_operations_release_void_1arg
then :

		if test -f build/block_device_operations_release_void_1arg/block_device_operations_release_void_1arg.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLOCK_DEVICE_OPERATIONS_RELEASE_1ARG 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"bops->release()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_release_void_1arg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_release_void\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->revalidate_disk() exists" >&5
printf %s "checking whether bops->revalidate_disk() exists... " >&6; }

	if test -d build/block_device_operations_revalidate_disk
then :

		if test -f build/block_device_operations_revalidate_disk/block_device_operations_revalidate_disk.ko
then :


printf "%s\n" "#define HAVE_BLOCK_DEVICE_OPERATIONS_REVALIDATE_DISK 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_revalidate_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_FAILFAST_MASK is defined" >&5
printf %s "checking whether REQ_FAILFAST_MASK is defined... " >&6; }

	if test -d build/req_failfast_mask
then :

		if test -f build/req_failfast_mask/req_failfast_mask.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"REQ_FAILFAST_MASK\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_failfast_mask\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_DISCARD is defined" >&5
printf %s "checking whether REQ_DISCARD is defined... " >&6; }

	if test -d build/req_discard
then :

		if test -f build/req_discard/req_discard.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_DISCARD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_discard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_FLUSH is defined" >&5
printf %s "checking whether REQ_FLUSH is defined... " >&6; }

	if test -d build/req_flush
then :

		if test -f build/req_flush/req_flush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_FLUSH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_flush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_PREFLUSH is defined" >&5
printf %s "checking whether REQ_PREFLUSH is defined... " >&6; }

	if test -d build/req_preflush
then :

		if test -f build/req_preflush/req_preflush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_PREFLUSH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_preflush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_OP_DISCARD is defined" >&5
printf %s "checking whether REQ_OP_DISCARD is defined... " >&6; }

	if test -d build/req_op_discard
then :

		if test -f build/req_op_discard/req_op_discard.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_OP_DISCARD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_op_discard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_OP_SECURE_ERASE is defined" >&5
printf %s "checking whether REQ_OP_SECURE_ERASE is defined... " >&6; }

	if test -d build/req_op_secure_erase
then :

		if test -f build/req_op_secure_erase/req_op_secure_erase.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_OP_SECURE_ERASE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_op_secure_erase\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_OP_FLUSH is defined" >&5
printf %s "checking whether REQ_OP_FLUSH is defined... " >&6; }

	if test -d build/req_op_flush
then :

		if test -f build/req_op_flush/req_op_flush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_OP_FLUSH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_op_flush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio->bi_opf is defined" >&5
printf %s "checking whether bio->bi_opf is defined... " >&6; }

	if test -d build/bio_bi_opf
then :

		if test -f build/bio_bi_opf/bio_bi_opf.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BI_OPF 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bi_opf\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_op_attrs is available" >&5
printf %s "checking whether bio_set_op_attrs is available... " >&6; }

	if test -d build/bio_set_op_attrs
then :

		if test -f build/bio_set_op_attrs/bio_set_op_attrs.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_OP_ATTRS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_op_attrs\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_dev() is available" >&5
printf %s "checking whether bio_set_dev() is available... " >&6; }

	if test -d build/bio_set_dev
then :

		if test -f build/bio_set_dev/bio_set_dev.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_DEV 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_dev() is GPL-only" >&5
printf %s "checking whether bio_set_dev() is GPL-only... " >&6; }

	if test -d build/bio_set_dev_license
then :

		if test -f build/bio_set_dev_license/bio_set_dev_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_DEV_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_dev_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_dev() is a macro" >&5
printf %s "checking whether bio_set_dev() is a macro... " >&6; }

	if test -d build/bio_set_dev_macro
then :

		if test -f build/bio_set_dev_macro/bio_set_dev_macro.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_DEV_MACRO 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_dev_macro\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_dev\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_end_io_t wants 1 arg" >&5
printf %s "checking whether bio_end_io_t wants 1 arg... " >&6; }

	if test -d build/bio_end_io_t_args
then :

		if test -f build/bio_end_io_t_args/bio_end_io_t_args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_BIO_END_IO_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_end_io_t_args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio->bi_status exists" >&5
printf %s "checking whether bio->bi_status exists... " >&6; }

	if test -d build/bio_bi_status
then :

		if test -f build/bio_bi_status/bio_bi_status.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BI_STATUS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bi_status\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio has bi_iter" >&5
printf %s "checking whether bio has bi_iter... " >&6; }

	if test -d build/bio_bvec_iter
then :

		if test -f build/bio_bvec_iter/bio_bvec_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BVEC_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bvec_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether submit_bio() wants 1 arg" >&5
printf %s "checking whether submit_bio() wants 1 arg... " >&6; }

	if test -d build/submit_bio
then :

		if test -f build/submit_bio/submit_bio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_SUBMIT_BIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"submit_bio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether current->bio_list exists" >&5
printf %s "checking whether current->bio_list exists... " >&6; }

	if test -d build/current_bio_list
then :

		if test -f build/current_bio_list/current_bio_list.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bio_list\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"current_bio_list\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkg_tryget() is available" >&5
printf %s "checking whether blkg_tryget() is available... " >&6; }

	if test -d build/blkg_tryget
then :

		if test -f build/blkg_tryget/blkg_tryget.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKG_TRYGET 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkg_tryget() is GPL-only" >&5
printf %s "checking whether blkg_tryget() is GPL-only... " >&6; }

	if test -d build/blkg_tryget_license
then :

		if test -f build/blkg_tryget_license/blkg_tryget_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKG_TRYGET_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkg_tryget_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkg_tryget\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio->bi_bdev->bd_disk exists" >&5
printf %s "checking whether bio->bi_bdev->bd_disk exists... " >&6; }

	if test -d build/bio_bdev_disk
then :

		if test -f build/bio_bdev_disk/bio_bdev_disk.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BDEV_DISK 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bdev_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether block_device_operations->submit_bio() returns void" >&5
printf %s "checking whether block_device_operations->submit_bio() returns void... " >&6; }

	if test -d build/bio_bdev_submit_bio_void
then :

		if test -f build/bio_bdev_submit_bio_void/bio_bdev_submit_bio_void.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_SUBMIT_BIO_RETURNS_VOID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bdev_submit_bio_void\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether linux/blk-cgroup.h exists" >&5
printf %s "checking whether linux/blk-cgroup.h exists... " >&6; }

	if test -d build/blk_cgroup_header
then :

		if test -f build/blk_cgroup_header/blk_cgroup_header.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LINUX_BLK_CGROUP_HEADER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_cgroup_header\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_alloc() wants 4 args" >&5
printf %s "checking whether bio_alloc() wants 4 args... " >&6; }

	if test -d build/bio_alloc_4arg
then :

		if test -f build/bio_alloc_4arg/bio_alloc_4arg.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_ALLOC_4ARG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_alloc_4arg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_get_by_path() exists and takes 3 args" >&5
printf %s "checking whether blkdev_get_by_path() exists and takes 3 args... " >&6; }

	if test -d build/blkdev_get_by_path
then :

		if test -f build/blkdev_get_by_path/blkdev_get_by_path.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_get_by_path() exists and takes 4 args" >&5
printf %s "checking whether blkdev_get_by_path() exists and takes 4 args... " >&6; }

	if test -d build/blkdev_get_by_path_4arg
then :

		if test -f build/blkdev_get_by_path_4arg/blkdev_get_by_path_4arg.ko
then :


printf "%s\n" "#define HAVE_BLKDEV_GET_BY_PATH_4ARG 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blkdev_get_by_path()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_get_by_path_4arg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_get_by_path\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_put() exists" >&5
printf %s "checking whether blkdev_put() exists... " >&6; }

	if test -d build/blkdev_put
then :

		if test -f build/blkdev_put/blkdev_put.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_put() accepts void* as arg 2" >&5
printf %s "checking whether blkdev_put() accepts void* as arg 2... " >&6; }

	if test -d build/blkdev_put_holder
then :

		if test -f build/blkdev_put_holder/blkdev_put_holder.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_PUT_HOLDER 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blkdev_put()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_put_holder\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_put\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_reread_part() exists" >&5
printf %s "checking whether blkdev_reread_part() exists... " >&6; }

	if test -d build/blkdev_reread_part
then :

		if test -f build/blkdev_reread_part/blkdev_reread_part.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_REREAD_PART 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_reread_part\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether invalidate_bdev() exists" >&5
printf %s "checking whether invalidate_bdev() exists... " >&6; }

	if test -d build/invalidate_bdev
then :

		if test -f build/invalidate_bdev/invalidate_bdev.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"invalidate_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"invalidate_bdev\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants dev_t arg" >&5
printf %s "checking whether lookup_bdev() wants dev_t arg... " >&6; }

	if  ! test -f build/lookup_bdev_devt/lookup_bdev_devt.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants 1 arg" >&5
printf %s "checking whether lookup_bdev() wants 1 arg... " >&6; }

	if  ! test -f build/lookup_bdev_1arg/lookup_bdev_1arg.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants 1 arg" >&5
printf %s "checking whether lookup_bdev() wants 1 arg... " >&6; }

	if  ! test -f build/lookup_bdev_1arg/lookup_bdev_1arg.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEVT_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEVT_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEVT_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_logical_block_size() is available" >&5
printf %s "checking whether bdev_logical_block_size() is available... " >&6; }

	if test -d build/bdev_logical_block_size
then :

		if test -f build/bdev_logical_block_size/bdev_logical_block_size.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bdev_logical_block_size()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_logical_block_size\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_physical_block_size() is available" >&5
printf %s "checking whether bdev_physical_block_size() is available... " >&6; }

	if test -d build/bdev_physical_block_size
then :

		if test -f build/bdev_physical_block_size/bdev_physical_block_size.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bdev_physical_block_size()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_physical_block_size\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether check_disk_change() exists" >&5
printf %s "checking whether check_disk_change() exists... " >&6; }

	if test -d build/check_disk_change
then :

		if test -f build/check_disk_change/check_disk_change.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CHECK_DISK_CHANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"check_disk_change\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_check_media_change() exists" >&5
printf %s "checking whether bdev_check_media_change() exists... " >&6; }

	if test -d build/bdev_check_media_change
then :

		if test -f build/bdev_check_media_change/bdev_check_media_change.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_CHECK_MEDIA_CHANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_check_media_change\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_whole() is available" >&5
printf %s "checking whether bdev_whole() is available... " >&6; }

	if test -d build/bdev_whole
then :

		if test -f build/bdev_whole/bdev_whole.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_WHOLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_whole\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdevname() exists" >&5
printf %s "checking whether bdevname() exists... " >&6; }

	if test -d build/bdevname
then :

		if test -f build/bdevname/bdevname.ko
then :


printf "%s\n" "#define HAVE_BDEVNAME 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdevname\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_get_by_path() handles ERESTARTSYS" >&5
printf %s "checking whether blkdev_get_by_path() handles ERESTARTSYS... " >&6; }
	as_arg_v1=$LINUX_VERSION
as_arg_v2=5.13.0
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_GET_ERESTARTSYS 1" >>confdefs.h

	 ;; #(
  0) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  2) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  *) :
     ;;
esac


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_issue_secure_erase() is available" >&5
printf %s "checking whether blkdev_issue_secure_erase() is available... " >&6; }

	if test -d build/blkdev_issue_secure_erase
then :

		if test -f build/blkdev_issue_secure_erase/blkdev_issue_secure_erase.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_ISSUE_SECURE_ERASE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_issue_discard() is available" >&5
printf %s "checking whether blkdev_issue_discard() is available... " >&6; }

	if test -d build/blkdev_issue_discard_flags
then :

		if test -f build/blkdev_issue_discard_flags/blkdev_issue_discard_flags.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_ISSUE_DISCARD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blkdev_issue_discard()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_issue_discard_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_issue_secure_erase\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_kobj() exists" >&5
printf %s "checking whether bdev_kobj() exists... " >&6; }

	if test -d build/bdev_kobj
then :

		if test -f build/bdev_kobj/bdev_kobj.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_KOBJ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_kobj\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether part_to_dev() exists" >&5
printf %s "checking whether part_to_dev() exists... " >&6; }

	if test -d build/part_to_dev
then :

		if test -f build/part_to_dev/part_to_dev.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PART_TO_DEV 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"part_to_dev\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether disk_check_media_change() exists" >&5
printf %s "checking whether disk_check_media_change() exists... " >&6; }

	if test -d build/disk_check_media_change
then :

		if test -f build/disk_check_media_change/disk_check_media_change.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DISK_CHECK_MEDIA_CHANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"disk_check_media_change\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether BLK_STS_RESV_CONFLICT is defined" >&5
printf %s "checking whether BLK_STS_RESV_CONFLICT is defined... " >&6; }

	if test -d build/blk_sts_resv_conflict
then :

		if test -f build/blk_sts_resv_conflict/blk_sts_resv_conflict.ko
then :


printf "%s\n" "#define HAVE_BLK_STS_RESV_CONFLICT 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_sts_resv_conflict\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_mode_t is defined" >&5
printf %s "checking whether blk_mode_t is defined... " >&6; }

	if test -d build/blk_mode_t
then :

		if test -f build/blk_mode_t/blk_mode_t.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_MODE_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_mode_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct blk_plug is available" >&5
printf %s "checking whether struct blk_plug is available... " >&6; }

	if test -d build/blk_plug
then :

		if test -f build/blk_plug/blk_plug.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_plug\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_plug\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue bdi is dynamic" >&5
printf %s "checking whether blk_queue bdi is dynamic... " >&6; }

	if test -d build/blk_queue_bdi
then :

		if test -f build/blk_queue_bdi/blk_queue_bdi.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_BDI_DYNAMIC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_bdi\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_update_readahead() exists" >&5
printf %s "checking whether blk_queue_update_readahead() exists... " >&6; }

	if test -d build/blk_queue_update_readahead
then :

		if test -f build/blk_queue_update_readahead/blk_queue_update_readahead.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_UPDATE_READAHEAD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether disk_update_readahead() exists" >&5
printf %s "checking whether disk_update_readahead() exists... " >&6; }

	if test -d build/disk_update_readahead
then :

		if test -f build/disk_update_readahead/disk_update_readahead.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DISK_UPDATE_READAHEAD 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"disk_update_readahead\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_update_readahead\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_max_discard_sectors() is available" >&5
printf %s "checking whether bdev_max_discard_sectors() is available... " >&6; }

	if test -d build/bdev_max_discard_sectors
then :

		if test -f build/bdev_max_discard_sectors/bdev_max_discard_sectors.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_MAX_DISCARD_SECTORS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_discard() is available" >&5
printf %s "checking whether blk_queue_discard() is available... " >&6; }

	if test -d build/blk_queue_discard
then :

		if test -f build/blk_queue_discard/blk_queue_discard.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_DISCARD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_discard\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_discard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_max_discard_sectors\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_max_secure_erase_sectors() is available" >&5
printf %s "checking whether bdev_max_secure_erase_sectors() is available... " >&6; }

	if test -d build/bdev_max_secure_erase_sectors
then :

		if test -f build/bdev_max_secure_erase_sectors/bdev_max_secure_erase_sectors.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_MAX_SECURE_ERASE_SECTORS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_secure_erase() is available" >&5
printf %s "checking whether blk_queue_secure_erase() is available... " >&6; }

	if test -d build/blk_queue_secure_erase
then :

		if test -f build/blk_queue_secure_erase/blk_queue_secure_erase.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_SECURE_ERASE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_secdiscard() is available" >&5
printf %s "checking whether blk_queue_secdiscard() is available... " >&6; }

	if test -d build/blk_queue_secdiscard
then :

		if test -f build/blk_queue_secdiscard/blk_queue_secdiscard.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_SECDISCARD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_secure_erase\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_secdiscard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_secure_erase\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_max_secure_erase_sectors\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flag_set() exists" >&5
printf %s "checking whether blk_queue_flag_set() exists... " >&6; }

	if test -d build/blk_queue_flag_set
then :

		if test -f build/blk_queue_flag_set/blk_queue_flag_set.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLAG_SET 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flag_set\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flag_clear() exists" >&5
printf %s "checking whether blk_queue_flag_clear() exists... " >&6; }

	if test -d build/blk_queue_flag_clear
then :

		if test -f build/blk_queue_flag_clear/blk_queue_flag_clear.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLAG_CLEAR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flag_clear\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flush() is available" >&5
printf %s "checking whether blk_queue_flush() is available... " >&6; }

	if test -d build/blk_queue_flush
then :

		if test -f build/blk_queue_flush/blk_queue_flush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLUSH 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flush() is GPL-only" >&5
printf %s "checking whether blk_queue_flush() is GPL-only... " >&6; }

	if test -d build/blk_queue_flush_license
then :

		if test -f build/blk_queue_flush_license/blk_queue_flush_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLUSH_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flush_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_write_cache() exists" >&5
printf %s "checking whether blk_queue_write_cache() exists... " >&6; }

	if test -d build/blk_queue_write_cache
then :

		if test -f build/blk_queue_write_cache/blk_queue_write_cache.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_WRITE_CACHE 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_write_cache() is GPL-only" >&5
printf %s "checking whether blk_queue_write_cache() is GPL-only... " >&6; }

	if test -d build/blk_queue_write_cache_license
then :

		if test -f build/blk_queue_write_cache_license/blk_queue_write_cache_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_WRITE_CACHE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_write_cache_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_write_cache\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_max_hw_sectors() is available" >&5
printf %s "checking whether blk_queue_max_hw_sectors() is available... " >&6; }

	if test -d build/blk_queue_max_hw_sectors
then :

		if test -f build/blk_queue_max_hw_sectors/blk_queue_max_hw_sectors.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_max_hw_sectors\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_max_hw_sectors\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_max_segments() is available" >&5
printf %s "checking whether blk_queue_max_segments() is available... " >&6; }

	if test -d build/blk_queue_max_segments
then :

		if test -f build/blk_queue_max_segments/blk_queue_max_segments.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_max_segments\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_max_segments\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether block multiqueue with blk_status_t is available" >&5
printf %s "checking whether block multiqueue with blk_status_t is available... " >&6; }

	if test -d build/blk_mq
then :

		if test -f build/blk_mq/blk_mq.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_MQ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_mq\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether GENHD_FL_EXT_DEVT flag is available" >&5
printf %s "checking whether GENHD_FL_EXT_DEVT flag is available... " >&6; }

	if test -d build/genhd_fl_ext_devt
then :

		if test -f build/genhd_fl_ext_devt/genhd_fl_ext_devt.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_EXT_DEVT GENHD_FL_EXT_DEVT" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_EXT_DEVT 0" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"genhd_fl_ext_devt\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether GENHD_FL_NO_PART flag is available" >&5
printf %s "checking whether GENHD_FL_NO_PART flag is available... " >&6; }

	if test -d build/genhd_fl_no_part
then :

		if test -f build/genhd_fl_no_part/genhd_fl_no_part.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_NO_PART GENHD_FL_NO_PART" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether GENHD_FL_NO_PART_SCAN flag is available" >&5
printf %s "checking whether GENHD_FL_NO_PART_SCAN flag is available... " >&6; }

	if test -d build/genhd_fl_no_part_scan
then :

		if test -f build/genhd_fl_no_part_scan/genhd_fl_no_part_scan.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_NO_PART GENHD_FL_NO_PART_SCAN" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"GENHD_FL_NO_PART|GENHD_FL_NO_PART_SCAN\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"genhd_fl_no_part_scan\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"genhd_fl_no_part\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether revalidate_disk_size() is available" >&5
printf %s "checking whether revalidate_disk_size() is available... " >&6; }

	if  ! test -f build/revalidate_disk_size/revalidate_disk_size.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether revalidate_disk() is available" >&5
printf %s "checking whether revalidate_disk() is available... " >&6; }

	if  ! test -f build/revalidate_disk/revalidate_disk.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]revalidate_disk[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/genhd.c; do
			grep -q -E "EXPORT_SYMBOL.*(revalidate_disk)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]revalidate_disk_size[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/genhd.c; do
			grep -q -E "EXPORT_SYMBOL.*(revalidate_disk_size)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether revalidate_disk() is available" >&5
printf %s "checking whether revalidate_disk() is available... " >&6; }

	if  ! test -f build/revalidate_disk/revalidate_disk.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]revalidate_disk[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/genhd.c; do
			grep -q -E "EXPORT_SYMBOL.*(revalidate_disk)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK_SIZE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK_SIZE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK_SIZE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether get_disk_ro() is available" >&5
printf %s "checking whether get_disk_ro() is available... " >&6; }

	if test -d build/get_disk_ro
then :

		if test -f build/get_disk_ro/get_disk_ro.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"get_disk_ro()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"get_disk_ro\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_readlink is global" >&5
printf %s "checking whether generic_readlink is global... " >&6; }

	if test -d build/generic_readlink_global
then :

		if test -f build/generic_readlink_global/generic_readlink_global.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_READLINK 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_readlink_global\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ql->discard_granularity is available" >&5
printf %s "checking whether ql->discard_granularity is available... " >&6; }

	if test -d build/discard_granularity
then :

		if test -f build/discard_granularity/discard_granularity.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"ql->discard_granularity\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"discard_granularity\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_owner_or_capable() exists" >&5
printf %s "checking whether inode_owner_or_capable() exists... " >&6; }

	if test -d build/inode_owner_or_capable
then :

		if test -f build/inode_owner_or_capable/inode_owner_or_capable.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_OWNER_OR_CAPABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_owner_or_capable() takes user_ns" >&5
printf %s "checking whether inode_owner_or_capable() takes user_ns... " >&6; }

	if test -d build/inode_owner_or_capable_userns
then :

		if test -f build/inode_owner_or_capable_userns/inode_owner_or_capable_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_OWNER_OR_CAPABLE_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_owner_or_capable() takes mnt_idmap" >&5
printf %s "checking whether inode_owner_or_capable() takes mnt_idmap... " >&6; }

	if test -d build/inode_owner_or_capable_mnt_idmap
then :

		if test -f build/inode_owner_or_capable_mnt_idmap/inode_owner_or_capable_mnt_idmap.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_OWNER_OR_CAPABLE_IDMAP 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"capability\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_owner_or_capable_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_owner_or_capable_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_owner_or_capable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block uses const struct xattr_handler" >&5
printf %s "checking whether super_block uses const struct xattr_handler... " >&6; }

	if test -d build/const_xattr_handler
then :

		if test -f build/const_xattr_handler/const_xattr_handler.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"const xattr_handler\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"const_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler has name" >&5
printf %s "checking whether xattr_handler has name... " >&6; }

	if test -d build/xattr_handler_name
then :

		if test -f build/xattr_handler_name/xattr_handler_name.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_HANDLER_NAME 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_name\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants dentry and inode" >&5
printf %s "checking whether xattr_handler->get() wants dentry and inode... " >&6; }

	if test -d build/xattr_handler_get_dentry_inode
then :

		if test -f build/xattr_handler_get_dentry_inode/xattr_handler_get_dentry_inode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_DENTRY_INODE 1" >>confdefs.h


else $as_nop

														{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants xattr_handler" >&5
printf %s "checking whether xattr_handler->get() wants xattr_handler... " >&6; }

	if test -d build/xattr_handler_get_xattr_handler
then :

		if test -f build/xattr_handler_get_xattr_handler/xattr_handler_get_xattr_handler.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_HANDLER 1" >>confdefs.h


else $as_nop

																					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants dentry" >&5
printf %s "checking whether xattr_handler->get() wants dentry... " >&6; }

	if test -d build/xattr_handler_get_dentry
then :

		if test -f build/xattr_handler_get_dentry/xattr_handler_get_dentry.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_DENTRY 1" >>confdefs.h


else $as_nop

																								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants dentry and inode and flags" >&5
printf %s "checking whether xattr_handler->get() wants dentry and inode and flags... " >&6; }

	if test -d build/xattr_handler_get_dentry_inode_flags
then :

		if test -f build/xattr_handler_get_dentry_inode_flags/xattr_handler_get_dentry_inode_flags.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_DENTRY_INODE_FLAGS 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"xattr get()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_dentry_inode_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_dentry_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



									{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry, inode, and mnt_idmap" >&5
printf %s "checking whether xattr_handler->set() wants dentry, inode, and mnt_idmap... " >&6; }

	if test -d build/xattr_handler_set_mnt_idmap
then :

		if test -f build/xattr_handler_set_mnt_idmap/xattr_handler_set_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry, inode, and user_namespace" >&5
printf %s "checking whether xattr_handler->set() wants dentry, inode, and user_namespace... " >&6; }

	if test -d build/xattr_handler_set_userns
then :

		if test -f build/xattr_handler_set_userns/xattr_handler_set_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_USERNS 1" >>confdefs.h


else $as_nop

																		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry and inode" >&5
printf %s "checking whether xattr_handler->set() wants dentry and inode... " >&6; }

	if test -d build/xattr_handler_set_dentry_inode
then :

		if test -f build/xattr_handler_set_dentry_inode/xattr_handler_set_dentry_inode.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_DENTRY_INODE 1" >>confdefs.h


else $as_nop

																												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants xattr_handler" >&5
printf %s "checking whether xattr_handler->set() wants xattr_handler... " >&6; }

	if test -d build/xattr_handler_set_xattr_handler
then :

		if test -f build/xattr_handler_set_xattr_handler/xattr_handler_set_xattr_handler.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_HANDLER 1" >>confdefs.h


else $as_nop

																																			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry" >&5
printf %s "checking whether xattr_handler->set() wants dentry... " >&6; }

	if test -d build/xattr_handler_set_dentry
then :

		if test -f build/xattr_handler_set_dentry/xattr_handler_set_dentry.ko
then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_DENTRY 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"xattr set()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_dentry_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->list() wants simple" >&5
printf %s "checking whether xattr_handler->list() wants simple... " >&6; }

	if test -d build/xattr_handler_list_simple
then :

		if test -f build/xattr_handler_list_simple/xattr_handler_list_simple.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_LIST_SIMPLE 1" >>confdefs.h


else $as_nop

														{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->list() wants xattr_handler" >&5
printf %s "checking whether xattr_handler->list() wants xattr_handler... " >&6; }

	if test -d build/xattr_handler_list_xattr_handler
then :

		if test -f build/xattr_handler_list_xattr_handler/xattr_handler_list_xattr_handler.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_LIST_HANDLER 1" >>confdefs.h


else $as_nop

																					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->list() wants dentry" >&5
printf %s "checking whether xattr_handler->list() wants dentry... " >&6; }

	if test -d build/xattr_handler_list_dentry
then :

		if test -f build/xattr_handler_list_dentry/xattr_handler_list_dentry.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_LIST_DENTRY 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"xattr list()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_list_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_list_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_list_simple\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_from_xattr() needs user_ns" >&5
printf %s "checking whether posix_acl_from_xattr() needs user_ns... " >&6; }

	if test -d build/posix_acl_from_xattr_userns
then :

		if test -f build/posix_acl_from_xattr_userns/posix_acl_from_xattr_userns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_FROM_XATTR_USERNS 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"posix_acl_from_xattr()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_from_xattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_setxattr() exists" >&5
printf %s "checking whether generic_setxattr() exists... " >&6; }

	if test -d build/have_generic_setxattr
then :

		if test -f build/have_generic_setxattr/have_generic_setxattr.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_SETXATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"have_generic_setxattr\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_release() is available" >&5
printf %s "checking whether posix_acl_release() is available... " >&6; }

	if test -d build/posix_acl_release
then :

		if test -f build/posix_acl_release/posix_acl_release.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_RELEASE 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_release() is GPL-only" >&5
printf %s "checking whether posix_acl_release() is GPL-only... " >&6; }

	if test -d build/posix_acl_release_license
then :

		if test -f build/posix_acl_release_license/posix_acl_release_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_RELEASE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_release_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_release\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether set_cached_acl() is usable" >&5
printf %s "checking whether set_cached_acl() is usable... " >&6; }

	if test -d build/set_cached_acl_license
then :

		if test -f build/set_cached_acl_license/set_cached_acl_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_CACHED_ACL_USABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"set_cached_acl_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __posix_acl_chmod exists" >&5
printf %s "checking whether __posix_acl_chmod exists... " >&6; }

	if test -d build/__posix_acl_chmod
then :

		if test -f build/__posix_acl_chmod/__posix_acl_chmod.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE___POSIX_ACL_CHMOD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_chmod exists" >&5
printf %s "checking whether posix_acl_chmod exists... " >&6; }

	if test -d build/posix_acl_chmod
then :

		if test -f build/posix_acl_chmod/posix_acl_chmod.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_CHMOD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"posix_acl_chmod()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_chmod\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"__posix_acl_chmod\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_equiv_mode() wants umode_t" >&5
printf %s "checking whether posix_acl_equiv_mode() wants umode_t... " >&6; }

	if test -d build/posix_acl_equiv_mode
then :

		if test -f build/posix_acl_equiv_mode/posix_acl_equiv_mode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"posix_acl_equiv_mode()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_equiv_mode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_valid() wants user namespace" >&5
printf %s "checking whether posix_acl_valid() wants user namespace... " >&6; }

	if test -d build/posix_acl_valid_with_ns
then :

		if test -f build/posix_acl_valid_with_ns/posix_acl_valid_with_ns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_VALID_WITH_NS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_valid_with_ns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->get_acl() exists" >&5
printf %s "checking whether iops->get_acl() exists... " >&6; }

	if test -d build/inode_operations_get_acl
then :

		if test -f build/inode_operations_get_acl/inode_operations_get_acl.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_ACL 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_get_acl_rcu
then :

		if test -f build/inode_operations_get_acl_rcu/inode_operations_get_acl_rcu.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_ACL_RCU 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_get_inode_acl
then :

		if test -f build/inode_operations_get_inode_acl/inode_operations_get_inode_acl.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_INODE_ACL 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"iops->get_acl() or iops->get_inode_acl()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_inode_acl\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_acl_rcu\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_acl\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->set_acl() exists" >&5
printf %s "checking whether iops->set_acl() exists... " >&6; }

	if test -d build/inode_operations_set_acl_userns
then :

		if test -f build/inode_operations_set_acl_userns/inode_operations_set_acl_userns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


printf "%s\n" "#define HAVE_SET_ACL_USERNS 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_set_acl_mnt_idmap_dentry
then :

		if test -f build/inode_operations_set_acl_mnt_idmap_dentry/inode_operations_set_acl_mnt_idmap_dentry.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


printf "%s\n" "#define HAVE_SET_ACL_IDMAP_DENTRY 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_set_acl_userns_dentry
then :

		if test -f build/inode_operations_set_acl_userns_dentry/inode_operations_set_acl_userns_dentry.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


printf "%s\n" "#define HAVE_SET_ACL_USERNS_DENTRY_ARG2 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_set_acl
then :

		if test -f build/inode_operations_set_acl/inode_operations_set_acl.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


else $as_nop



	as_arg_v1=3.14
as_arg_v2=$kernsrcver
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		as_fn_error $? "
		*** None of the expected \"i_op->set_acl()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.14\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  0) :

		as_fn_error $? "
		*** None of the expected \"i_op->set_acl()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.14\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  2) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  *) :
     ;;
esac



fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl_userns_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl_mnt_idmap_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether uncached_acl_sentinel() exists" >&5
printf %s "checking whether uncached_acl_sentinel() exists... " >&6; }

	if test -d build/get_acl_handle_cache
then :

		if test -f build/get_acl_handle_cache/get_acl_handle_cache.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_GET_ACL_HANDLE_CACHE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"get_acl_handle_cache\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl has refcount_t" >&5
printf %s "checking whether posix_acl has refcount_t... " >&6; }

	if test -d build/acl_refcount
then :

		if test -f build/acl_refcount/acl_refcount.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ACL_REFCOUNT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"acl_refcount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->setattr() takes mnt_idmap" >&5
printf %s "checking whether iops->setattr() takes mnt_idmap... " >&6; }

	if test -d build/inode_operations_setattr_mnt_idmap
then :

		if test -f build/inode_operations_setattr_mnt_idmap/inode_operations_setattr_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IDMAP_IOPS_SETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->setattr() takes user_namespace" >&5
printf %s "checking whether iops->setattr() takes user_namespace... " >&6; }

	if test -d build/inode_operations_setattr_userns
then :

		if test -f build/inode_operations_setattr_userns/inode_operations_setattr_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_USERNS_IOPS_SETATTR 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->setattr() exists" >&5
printf %s "checking whether iops->setattr() exists... " >&6; }

	if test -d build/inode_operations_setattr
then :

		if test -f build/inode_operations_setattr/inode_operations_setattr.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_SETATTR 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_setattr\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_setattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_setattr_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes mnt_idmap" >&5
printf %s "checking whether iops->getattr() takes mnt_idmap... " >&6; }

	if test -d build/inode_operations_getattr_mnt_idmap
then :

		if test -f build/inode_operations_getattr_mnt_idmap/inode_operations_getattr_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IDMAP_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes user_namespace" >&5
printf %s "checking whether iops->getattr() takes user_namespace... " >&6; }

	if test -d build/inode_operations_getattr_userns
then :

		if test -f build/inode_operations_getattr_userns/inode_operations_getattr_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_USERNS_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes a path" >&5
printf %s "checking whether iops->getattr() takes a path... " >&6; }

	if test -d build/inode_operations_getattr_path
then :

		if test -f build/inode_operations_getattr_path/inode_operations_getattr_path.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PATH_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes a vfsmount" >&5
printf %s "checking whether iops->getattr() takes a vfsmount... " >&6; }

	if test -d build/inode_operations_getattr_vfsmount
then :

		if test -f build/inode_operations_getattr_vfsmount/inode_operations_getattr_vfsmount.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFSMOUNT_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_vfsmount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_path\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_set_flags() exists" >&5
printf %s "checking whether inode_set_flags() exists... " >&6; }

	if test -d build/inode_set_flags
then :

		if test -f build/inode_set_flags/inode_set_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_SET_FLAGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_set_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_set_iversion() exists" >&5
printf %s "checking whether inode_set_iversion() exists... " >&6; }

	if test -d build/inode_set_iversion
then :

		if test -f build/inode_set_iversion/inode_set_iversion.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_SET_IVERSION 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_set_iversion\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sops->show_options() wants dentry" >&5
printf %s "checking whether sops->show_options() wants dentry... " >&6; }

	if test -d build/super_operations_show_options
then :

		if test -f build/super_operations_show_options/super_operations_show_options.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sops->show_options()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_operations_show_options\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether file_inode() is available" >&5
printf %s "checking whether file_inode() is available... " >&6; }

	if test -d build/file_inode
then :

		if test -f build/file_inode/file_inode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_INODE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether file_dentry() is available" >&5
printf %s "checking whether file_dentry() is available... " >&6; }

	if test -d build/file_dentry
then :

		if test -f build/file_dentry/file_dentry.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_DENTRY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fsync() wants no dentry" >&5
printf %s "checking whether fops->fsync() wants no dentry... " >&6; }

	if test -d build/fsync_without_dentry
then :

		if test -f build/fsync_without_dentry/fsync_without_dentry.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FSYNC_WITHOUT_DENTRY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fsync() wants range" >&5
printf %s "checking whether fops->fsync() wants range... " >&6; }

	if test -d build/fsync_range
then :

		if test -f build/fsync_range/fsync_range.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: range" >&5
printf "%s\n" "range" >&6; }

printf "%s\n" "#define HAVE_FSYNC_RANGE 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"fops->fsync\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"fsync_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"fsync_without_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->aio_fsync() exists" >&5
printf %s "checking whether fops->aio_fsync() exists... " >&6; }

	if test -d build/aio_fsync
then :

		if test -f build/aio_fsync/aio_fsync.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_AIO_FSYNC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"aio_fsync\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sops->evict_inode() exists" >&5
printf %s "checking whether sops->evict_inode() exists... " >&6; }

	if test -d build/evict_inode
then :

		if test -f build/evict_inode/evict_inode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_EVICT_INODE 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"evict_inode\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"evict_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sops->dirty_inode() wants flags" >&5
printf %s "checking whether sops->dirty_inode() wants flags... " >&6; }

	if test -d build/dirty_inode_with_flags
then :

		if test -f build/dirty_inode_with_flags/dirty_inode_with_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DIRTY_INODE_WITH_FLAGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dirty_inode_with_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block has s_shrink" >&5
printf %s "checking whether super_block has s_shrink... " >&6; }

	if test -d build/super_block_s_shrink
then :

		if test -f build/super_block_s_shrink/super_block_s_shrink.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sb->s_shrink()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_block_s_shrink\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether shrink_control has nid" >&5
printf %s "checking whether shrink_control has nid... " >&6; }

	if test -d build/shrink_control_nid
then :

		if test -f build/shrink_control_nid/shrink_control_nid.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define SHRINK_CONTROL_HAS_NID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrink_control_nid\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether new var-arg register_shrinker() exists" >&5
printf %s "checking whether new var-arg register_shrinker() exists... " >&6; }

	if test -d build/register_shrinker_vararg
then :

		if test -f build/register_shrinker_vararg/register_shrinker_vararg.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REGISTER_SHRINKER_VARARG 1" >>confdefs.h



printf "%s\n" "#define HAVE_SPLIT_SHRINKER_CALLBACK 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether new 2-argument shrinker exists" >&5
printf %s "checking whether new 2-argument shrinker exists... " >&6; }

	if test -d build/shrinker_cb_shrink_control
then :

		if test -f build/shrinker_cb_shrink_control/shrinker_cb_shrink_control.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SINGLE_SHRINKER_CALLBACK 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if cs->count_objects callback exists" >&5
printf %s "checking if cs->count_objects callback exists... " >&6; }

	if test -d build/shrinker_cb_shrink_control_split
then :

		if test -f build/shrinker_cb_shrink_control_split/shrinker_cb_shrink_control_split.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SPLIT_SHRINKER_CALLBACK 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"shrinker\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrinker_cb_shrink_control_split\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrinker_cb_shrink_control\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"register_shrinker_vararg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct shrink_control exists" >&5
printf %s "checking whether struct shrink_control exists... " >&6; }

	if test -d build/shrink_control_struct
then :

		if test -f build/shrink_control_struct/shrink_control_struct.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SHRINK_CONTROL_STRUCT 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"shrink_control\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrink_control_struct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mkdir() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->mkdir() takes struct mnt_idmap*... " >&6; }

	if test -d build/mkdir_mnt_idmap
then :

		if test -f build/mkdir_mnt_idmap/mkdir_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKDIR_IDMAP 1" >>confdefs.h


else $as_nop

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mkdir() takes struct user_namespace*" >&5
printf %s "checking whether iops->mkdir() takes struct user_namespace*... " >&6; }

	if test -d build/mkdir_user_namespace
then :

		if test -f build/mkdir_user_namespace/mkdir_user_namespace.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKDIR_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mkdir() takes umode_t" >&5
printf %s "checking whether iops->mkdir() takes umode_t... " >&6; }

	if test -d build/inode_operations_mkdir
then :

		if test -f build/inode_operations_mkdir/inode_operations_mkdir.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MKDIR_UMODE_T 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"mkdir()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_mkdir\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mkdir_user_namespace\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mkdir_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->lookup() passes flags" >&5
printf %s "checking whether iops->lookup() passes flags... " >&6; }

	if test -d build/lookup_flags
then :

		if test -f build/lookup_flags/lookup_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"iops->lookup()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"lookup_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->create() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->create() takes struct mnt_idmap*... " >&6; }

	if test -d build/create_mnt_idmap
then :

		if test -f build/create_mnt_idmap/create_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_CREATE_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->create() takes struct user_namespace*" >&5
printf %s "checking whether iops->create() takes struct user_namespace*... " >&6; }

	if test -d build/create_userns
then :

		if test -f build/create_userns/create_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_CREATE_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->create() passes flags" >&5
printf %s "checking whether iops->create() passes flags... " >&6; }

	if test -d build/create_flags
then :

		if test -f build/create_flags/create_flags.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"iops->create()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"create_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"create_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"create_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->permission() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->permission() takes struct mnt_idmap*... " >&6; }

	if test -d build/permission_mnt_idmap
then :

		if test -f build/permission_mnt_idmap/permission_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_PERMISSION_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->permission() takes struct user_namespace*" >&5
printf %s "checking whether iops->permission() takes struct user_namespace*... " >&6; }

	if test -d build/permission_userns
then :

		if test -f build/permission_userns/permission_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_PERMISSION_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"permission_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"permission_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->get_link() passes delayed" >&5
printf %s "checking whether iops->get_link() passes delayed... " >&6; }

	if test -d build/inode_operations_get_link
then :

		if test -f build/inode_operations_get_link/inode_operations_get_link.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_LINK_DELAYED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->get_link() passes cookie" >&5
printf %s "checking whether iops->get_link() passes cookie... " >&6; }

	if test -d build/inode_operations_get_link_cookie
then :

		if test -f build/inode_operations_get_link_cookie/inode_operations_get_link_cookie.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_LINK_COOKIE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->follow_link() passes cookie" >&5
printf %s "checking whether iops->follow_link() passes cookie... " >&6; }

	if test -d build/inode_operations_follow_link
then :

		if test -f build/inode_operations_follow_link/inode_operations_follow_link.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FOLLOW_LINK_COOKIE 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->follow_link() passes nameidata" >&5
printf %s "checking whether iops->follow_link() passes nameidata... " >&6; }

	if test -d build/inode_operations_follow_link_nameidata
then :

		if test -f build/inode_operations_follow_link_nameidata/inode_operations_follow_link_nameidata.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FOLLOW_LINK_NAMEIDATA 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"get_link\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_follow_link_nameidata\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_follow_link\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_link_cookie\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_link\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	if test -d build/inode_operations_get_link
then :

		if test -f build/inode_operations_get_link/inode_operations_get_link.ko
then :


printf "%s\n" "#define HAVE_PUT_LINK_DELAYED 1" >>confdefs.h


else $as_nop

										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->put_link() passes cookie" >&5
printf %s "checking whether iops->put_link() passes cookie... " >&6; }

	if test -d build/put_link_cookie
then :

		if test -f build/put_link_cookie/put_link_cookie.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PUT_LINK_COOKIE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->put_link() passes nameidata" >&5
printf %s "checking whether iops->put_link() passes nameidata... " >&6; }

	if test -d build/put_link_nameidata
then :

		if test -f build/put_link_nameidata/put_link_nameidata.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PUT_LINK_NAMEIDATA 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"put_link\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"put_link_nameidata\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"put_link_cookie\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_link\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether i_op->tmpfile() exists" >&5
printf %s "checking whether i_op->tmpfile() exists... " >&6; }

	if test -d build/inode_operations_tmpfile_mnt_idmap
then :

		if test -f build/inode_operations_tmpfile_mnt_idmap/inode_operations_tmpfile_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_IDMAP 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_tmpfile
then :

		if test -f build/inode_operations_tmpfile/inode_operations_tmpfile.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_USERNS 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_tmpfile_dentry_userns
then :

		if test -f build/inode_operations_tmpfile_dentry_userns/inode_operations_tmpfile_dentry_userns.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_USERNS 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_DENTRY 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_tmpfile_dentry
then :

		if test -f build/inode_operations_tmpfile_dentry/inode_operations_tmpfile_dentry.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_DENTRY 1" >>confdefs.h


else $as_nop



	as_arg_v1=3.11
as_arg_v2=$kernsrcver
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		as_fn_error $? "
		*** None of the expected \"i_op->tmpfile()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.11\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  0) :

		as_fn_error $? "
		*** None of the expected \"i_op->tmpfile()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.11\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  2) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  *) :
     ;;
esac



fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile_dentry_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dops->d_automount() exists" >&5
printf %s "checking whether dops->d_automount() exists... " >&6; }

	if test -d build/dentry_operations_d_automount
then :

		if test -f build/dentry_operations_d_automount/dentry_operations_d_automount.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"dops->d_automount()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_operations_d_automount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether eops->encode_fh() wants inode" >&5
printf %s "checking whether eops->encode_fh() wants inode... " >&6; }

	if test -d build/export_operations_encode_fh
then :

		if test -f build/export_operations_encode_fh/export_operations_encode_fh.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ENCODE_FH_WITH_INODE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"export_operations_encode_fh\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether eops->commit_metadata() exists" >&5
printf %s "checking whether eops->commit_metadata() exists... " >&6; }

	if test -d build/export_operations_commit_metadata
then :

		if test -f build/export_operations_commit_metadata/export_operations_commit_metadata.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"eops->commit_metadata()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"export_operations_commit_metadata\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether clear_inode() is available" >&5
printf %s "checking whether clear_inode() is available... " >&6; }

	if  ! test -f build/clear_inode/clear_inode.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]clear_inode[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/inode.c; do
			grep -q -E "EXPORT_SYMBOL.*(clear_inode)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CLEAR_INODE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CLEAR_INODE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CLEAR_INODE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available and accepts struct mnt_idmap*" >&5
printf %s "checking whether setattr_prepare() is available and accepts struct mnt_idmap*... " >&6; }

	if  ! test -f build/setattr_prepare_mnt_idmap/setattr_prepare_mnt_idmap.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available and accepts struct user_namespace*" >&5
printf %s "checking whether setattr_prepare() is available and accepts struct user_namespace*... " >&6; }

	if  ! test -f build/setattr_prepare_userns/setattr_prepare_userns.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available and accepts struct user_namespace*" >&5
printf %s "checking whether setattr_prepare() is available and accepts struct user_namespace*... " >&6; }

	if  ! test -f build/setattr_prepare_userns/setattr_prepare_userns.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_IDMAP 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_IDMAP 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_IDMAP 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether insert_inode_locked() is available" >&5
printf %s "checking whether insert_inode_locked() is available... " >&6; }

	if  ! test -f build/insert_inode_locked/insert_inode_locked.ko
then :



	as_fn_error $? "
	*** None of the expected \"insert_inode_locked()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]insert_inode_locked[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/inode.c; do
			grep -q -E "EXPORT_SYMBOL.*(insert_inode_locked)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"insert_inode_locked()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_make_root() is available" >&5
printf %s "checking whether d_make_root() is available... " >&6; }

	if  ! test -f build/d_make_root/d_make_root.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_make_root[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_make_root)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_MAKE_ROOT 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_MAKE_ROOT 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_MAKE_ROOT 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_obtain_alias() is available" >&5
printf %s "checking whether d_obtain_alias() is available... " >&6; }

	if  ! test -f build/d_obtain_alias/d_obtain_alias.ko
then :



	as_fn_error $? "
	*** None of the expected \"d_obtain_alias()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_obtain_alias[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_obtain_alias)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"d_obtain_alias()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_prune_aliases() is available" >&5
printf %s "checking whether d_prune_aliases() is available... " >&6; }

	if  ! test -f build/d_prune_aliases/d_prune_aliases.ko
then :



	as_fn_error $? "
	*** None of the expected \"d_prune_aliases()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_prune_aliases[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_prune_aliases)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"d_prune_aliases()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_PRUNE_ALIASES 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_PRUNE_ALIASES 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_PRUNE_ALIASES 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_set_d_op() is available" >&5
printf %s "checking whether d_set_d_op() is available... " >&6; }

	if  ! test -f build/d_set_d_op/d_set_d_op.ko
then :



	as_fn_error $? "
	*** None of the expected \"d_set_d_op\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_set_d_op[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_set_d_op)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"d_set_d_op\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dops->d_revalidate() takes struct nameidata" >&5
printf %s "checking whether dops->d_revalidate() takes struct nameidata... " >&6; }

	if test -d build/dentry_operations_revalidate
then :

		if test -f build/dentry_operations_revalidate/dentry_operations_revalidate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_REVALIDATE_NAMEIDATA 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_operations_revalidate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dentry uses const struct dentry_operations" >&5
printf %s "checking whether dentry uses const struct dentry_operations... " >&6; }

	if test -d build/dentry_operations_const
then :

		if test -f build/dentry_operations_const/dentry_operations_const.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CONST_DENTRY_OPERATIONS 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"const dentry_operations\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_operations_const\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block has s_d_op" >&5
printf %s "checking whether super_block has s_d_op... " >&6; }

	if test -d build/super_block_s_d_op
then :

		if test -f build/super_block_s_d_op/super_block_s_d_op.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"super_block s_d_op\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_block_s_d_op\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dentry aliases are in d_u member" >&5
printf %s "checking whether dentry aliases are in d_u member... " >&6; }

	if test -d build/dentry_alias_d_u
then :

		if test -f build/dentry_alias_d_u/dentry_alias_d_u.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DENTRY_D_U_ALIASES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_alias_d_u\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether truncate_setsize() is available" >&5
printf %s "checking whether truncate_setsize() is available... " >&6; }

	if  ! test -f build/truncate_setsize/truncate_setsize.ko
then :



	as_fn_error $? "
	*** None of the expected \"truncate_setsize\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]truncate_setsize[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/truncate.c; do
			grep -q -E "EXPORT_SYMBOL.*(truncate_setsize)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"truncate_setsize\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether security_inode_init_security wants callback" >&5
printf %s "checking whether security_inode_init_security wants callback... " >&6; }

	if test -d build/security_inode_init_security
then :

		if test -f build/security_inode_init_security/security_inode_init_security.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"security_inode_init_security callback\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"security_inode_init_security\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fst->mount() exists" >&5
printf %s "checking whether fst->mount() exists... " >&6; }

	if test -d build/file_system_type_mount
then :

		if test -f build/file_system_type_mount/file_system_type_mount.ko
then :

                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"fst->mount()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_system_type_mount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_setup_bdi_name() exists" >&5
printf %s "checking whether super_setup_bdi_name() exists... " >&6; }

	if  ! test -f build/super_setup_bdi_name/super_setup_bdi_name.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 2 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 2 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register/bdi_setup_and_register.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]super_setup_bdi_name[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/super.c; do
			grep -q -E "EXPORT_SYMBOL.*(super_setup_bdi_name)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 2 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 2 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register/bdi_setup_and_register.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_SETUP_BDI_NAME 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_SETUP_BDI_NAME 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_SETUP_BDI_NAME 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether set_nlink() is available" >&5
printf %s "checking whether set_nlink() is available... " >&6; }

	if test -d build/set_nlink
then :

		if test -f build/set_nlink/set_nlink.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"set_nlink()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"set_nlink\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sget() wants 5 args" >&5
printf %s "checking whether sget() wants 5 args... " >&6; }

	if test -d build/sget_5args
then :

		if test -f build/sget_5args/sget_5args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sget()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sget_5args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lseek_execute() is available" >&5
printf %s "checking whether lseek_execute() is available... " >&6; }

	if  ! test -f build/lseek_execute/lseek_execute.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lseek_exclusive[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/read_write.c; do
			grep -q -E "EXPORT_SYMBOL.*(lseek_exclusive)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LSEEK_EXECUTE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LSEEK_EXECUTE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LSEEK_EXECUTE 1" >>confdefs.h



fi

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether filemap_dirty_folio exists" >&5
printf %s "checking whether filemap_dirty_folio exists... " >&6; }

	if test -d build/vfs_has_filemap_dirty_folio
then :

		if test -f build/vfs_has_filemap_dirty_folio/vfs_has_filemap_dirty_folio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_FILEMAP_DIRTY_FOLIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_filemap_dirty_folio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether read_folio exists" >&5
printf %s "checking whether read_folio exists... " >&6; }

	if test -d build/vfs_has_read_folio
then :

		if test -f build/vfs_has_read_folio/vfs_has_read_folio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_READ_FOLIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_read_folio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_getattr() wants 4 args" >&5
printf %s "checking whether vfs_getattr() wants 4 args... " >&6; }

	if test -d build/vfs_getattr_4args
then :

		if test -f build/vfs_getattr_4args/vfs_getattr_4args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_4ARGS_VFS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_getattr_4args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_getattr() wants 2 args" >&5
printf %s "checking whether vfs_getattr() wants 2 args... " >&6; }

	if test -d build/vfs_getattr_2args
then :

		if test -f build/vfs_getattr_2args/vfs_getattr_2args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_VFS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_getattr_2args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_getattr() wants 3 args" >&5
printf %s "checking whether vfs_getattr() wants 3 args... " >&6; }

	if test -d build/vfs_getattr_3args
then :

		if test -f build/vfs_getattr_3args/vfs_getattr_3args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_VFS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_getattr_3args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_fsync() wants 2 args" >&5
printf %s "checking whether vfs_fsync() wants 2 args... " >&6; }

	if test -d build/vfs_fsync_2args
then :

		if test -f build/vfs_fsync_2args/vfs_fsync_2args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"vfs_fsync()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_fsync_2args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->iterate_shared() is available" >&5
printf %s "checking whether fops->iterate_shared() is available... " >&6; }

	if test -d build/file_operations_iterate_shared
then :

		if test -f build/file_operations_iterate_shared/file_operations_iterate_shared.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_ITERATE_SHARED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->iterate() is available" >&5
printf %s "checking whether fops->iterate() is available... " >&6; }

	if test -d build/file_operations_iterate
then :

		if test -f build/file_operations_iterate/file_operations_iterate.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_ITERATE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->readdir() is available" >&5
printf %s "checking whether fops->readdir() is available... " >&6; }

	if test -d build/file_operations_readdir
then :

		if test -f build/file_operations_readdir/file_operations_readdir.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_READDIR 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"vfs_iterate\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_readdir\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_iterate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_iterate_shared\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses iov_iter" >&5
printf %s "checking whether aops->direct_IO() uses iov_iter... " >&6; }

	if test -d build/direct_io_iter
then :

		if test -f build/direct_io_iter/direct_io_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses offset" >&5
printf %s "checking whether aops->direct_IO() uses offset... " >&6; }

	if test -d build/direct_io_iter_offset
then :

		if test -f build/direct_io_iter_offset/direct_io_iter_offset.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_ITER_OFFSET 1" >>confdefs.h



else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses rw and offset" >&5
printf %s "checking whether aops->direct_IO() uses rw and offset... " >&6; }

	if test -d build/direct_io_iter_rw_offset
then :

		if test -f build/direct_io_iter_rw_offset/direct_io_iter_rw_offset.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_ITER_RW_OFFSET 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses iovec" >&5
printf %s "checking whether aops->direct_IO() uses iovec... " >&6; }

	if test -d build/direct_io_iovec
then :

		if test -f build/direct_io_iovec/direct_io_iovec.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_IOVEC 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"direct IO\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iovec\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iter_rw_offset\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iter_offset\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->readpages exists" >&5
printf %s "checking whether aops->readpages exists... " >&6; }

	if test -d build/vfs_has_readpages
then :

		if test -f build/vfs_has_readpages/vfs_has_readpages.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_READPAGES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_readpages\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __set_page_dirty_nobuffers exists" >&5
printf %s "checking whether __set_page_dirty_nobuffers exists... " >&6; }

	if test -d build/vfs_has_set_page_dirty_nobuffers
then :

		if test -f build/vfs_has_set_page_dirty_nobuffers/vfs_has_set_page_dirty_nobuffers.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_SET_PAGE_DIRTY_NOBUFFERS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_set_page_dirty_nobuffers\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->read/write_iter() are available" >&5
printf %s "checking whether fops->read/write_iter() are available... " >&6; }

	if test -d build/file_operations_rw
then :

		if test -f build/file_operations_rw/file_operations_rw.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_RW_ITERATE 1" >>confdefs.h


								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether new_sync_read/write() are available" >&5
printf %s "checking whether new_sync_read/write() are available... " >&6; }

	if test -d build/new_sync_rw
then :

		if test -f build/new_sync_rw/new_sync_rw.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_NEW_SYNC_READ 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"new_sync_rw\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_rw\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_write_checks() takes kiocb" >&5
printf %s "checking whether generic_write_checks() takes kiocb... " >&6; }

	if test -d build/generic_write_checks
then :

		if test -f build/generic_write_checks/generic_write_checks.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_WRITE_CHECKS_KIOCB 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_write_checks\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	enable_vfs_iov_iter="yes"

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter types are available" >&5
printf %s "checking whether iov_iter types are available... " >&6; }

	if test -d build/iov_iter_types
then :

		if test -f build/iov_iter_types/iov_iter_types.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_TYPES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_types\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_advance() is available" >&5
printf %s "checking whether iov_iter_advance() is available... " >&6; }

	if test -d build/iov_iter_advance
then :

		if test -f build/iov_iter_advance/iov_iter_advance.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_ADVANCE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_advance\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_revert() is available" >&5
printf %s "checking whether iov_iter_revert() is available... " >&6; }

	if test -d build/iov_iter_revert
then :

		if test -f build/iov_iter_revert/iov_iter_revert.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_REVERT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_revert\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_fault_in_readable() is available" >&5
printf %s "checking whether iov_iter_fault_in_readable() is available... " >&6; }

	if test -d build/iov_iter_fault_in_readable
then :

		if test -f build/iov_iter_fault_in_readable/iov_iter_fault_in_readable.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_FAULT_IN_READABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fault_in_iov_iter_readable() is available" >&5
printf %s "checking whether fault_in_iov_iter_readable() is available... " >&6; }

	if test -d build/fault_in_iov_iter_readable
then :

		if test -f build/fault_in_iov_iter_readable/fault_in_iov_iter_readable.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FAULT_IN_IOV_ITER_READABLE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"fault_in_iov_iter_readable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_fault_in_readable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_count() is available" >&5
printf %s "checking whether iov_iter_count() is available... " >&6; }

	if test -d build/iov_iter_count
then :

		if test -f build/iov_iter_count/iov_iter_count.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_COUNT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_count\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether copy_to_iter() is available" >&5
printf %s "checking whether copy_to_iter() is available... " >&6; }

	if test -d build/copy_to_iter
then :

		if test -f build/copy_to_iter/copy_to_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_COPY_TO_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"copy_to_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether copy_from_iter() is available" >&5
printf %s "checking whether copy_from_iter() is available... " >&6; }

	if test -d build/copy_from_iter
then :

		if test -f build/copy_from_iter/copy_from_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_COPY_FROM_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"copy_from_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_type() is available" >&5
printf %s "checking whether iov_iter_type() is available... " >&6; }

	if test -d build/iov_iter_type
then :

		if test -f build/iov_iter_type/iov_iter_type.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_TYPE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_type\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


							if test "x$enable_vfs_iov_iter" = "xyes"
then :


printf "%s\n" "#define HAVE_VFS_IOV_ITER 1" >>confdefs.h


fi

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iter_iov() is available" >&5
printf %s "checking whether iter_iov() is available... " >&6; }

	if test -d build/iter_iov
then :

		if test -f build/iter_iov/iter_iov.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ITER_IOV 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iter_iov\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->copy_file_range() is available" >&5
printf %s "checking whether fops->copy_file_range() is available... " >&6; }

	if test -d build/vfs_copy_file_range
then :

		if test -f build/vfs_copy_file_range/vfs_copy_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_COPY_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_copy_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_copy_file_range() is available" >&5
printf %s "checking whether generic_copy_file_range() is available... " >&6; }

	if  ! test -f build/generic_copy_file_range/generic_copy_file_range.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_copy_file_range[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/read_write.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_copy_file_range)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_GENERIC_COPY_FILE_RANGE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_GENERIC_COPY_FILE_RANGE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_GENERIC_COPY_FILE_RANGE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->remap_file_range() is available" >&5
printf %s "checking whether fops->remap_file_range() is available... " >&6; }

	if test -d build/vfs_remap_file_range
then :

		if test -f build/vfs_remap_file_range/vfs_remap_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_REMAP_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_remap_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->clone_file_range() is available" >&5
printf %s "checking whether fops->clone_file_range() is available... " >&6; }

	if test -d build/vfs_clone_file_range
then :

		if test -f build/vfs_clone_file_range/vfs_clone_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_CLONE_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_clone_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->dedupe_file_range() is available" >&5
printf %s "checking whether fops->dedupe_file_range() is available... " >&6; }

	if test -d build/vfs_dedupe_file_range
then :

		if test -f build/vfs_dedupe_file_range/vfs_dedupe_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DEDUPE_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_dedupe_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether file_operations_extend takes \
.copy_file_range() and .clone_file_range()" >&5
printf %s "checking whether file_operations_extend takes \
.copy_file_range() and .clone_file_range()... " >&6; }

	if test -d build/vfs_file_operations_extend
then :

		if test -f build/vfs_file_operations_extend/vfs_file_operations_extend.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_FILE_OPERATIONS_EXTEND 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_file_operations_extend\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kmap_atomic wants 1 args" >&5
printf %s "checking whether kmap_atomic wants 1 args... " >&6; }

	if test -d build/kmap_atomic
then :

		if test -f build/kmap_atomic/kmap_atomic.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"kmap_atomic()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kmap_atomic\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether follow_down_one() is available" >&5
printf %s "checking whether follow_down_one() is available... " >&6; }

	if test -d build/follow_down_one
then :

		if test -f build/follow_down_one/follow_down_one.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"follow_down_one()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"follow_down_one\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether submit_bio is member of struct block_device_operations" >&5
printf %s "checking whether submit_bio is member of struct block_device_operations... " >&6; }

	if test -d build/block_device_operations_submit_bio
then :

		if test -f build/block_device_operations_submit_bio/block_device_operations_submit_bio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_SUBMIT_BIO_IN_BLOCK_DEVICE_OPERATIONS 1" >>confdefs.h


												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_alloc_disk() exists" >&5
printf %s "checking whether blk_alloc_disk() exists... " >&6; }

	if test -d build/blk_alloc_disk
then :

		if test -f build/blk_alloc_disk/blk_alloc_disk.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_ALLOC_DISK 1" >>confdefs.h


															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_cleanup_disk() exists" >&5
printf %s "checking whether blk_cleanup_disk() exists... " >&6; }

	if test -d build/blk_cleanup_disk
then :

		if test -f build/blk_cleanup_disk/blk_cleanup_disk.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_CLEANUP_DISK 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_cleanup_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_alloc_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_alloc_queue() expects request function" >&5
printf %s "checking whether blk_alloc_queue() expects request function... " >&6; }

	if test -d build/blk_alloc_queue_request_fn
then :

		if test -f build/blk_alloc_queue_request_fn/blk_alloc_queue_request_fn.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn() returns blk_qc_t" >&5
printf %s "checking whether make_request_fn() returns blk_qc_t... " >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_BLK_ALLOC_QUEUE_REQUEST_FN 1" >>confdefs.h


printf "%s\n" "#define MAKE_REQUEST_FN_RET blk_qc_t" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_QC 1" >>confdefs.h


else $as_nop


	if test -d build/blk_alloc_queue_request_fn_rh
then :

		if test -f build/blk_alloc_queue_request_fn_rh/blk_alloc_queue_request_fn_rh.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn_rh() returns blk_qc_t" >&5
printf %s "checking whether make_request_fn_rh() returns blk_qc_t... " >&6; }
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_BLK_ALLOC_QUEUE_REQUEST_FN_RH 1" >>confdefs.h


printf "%s\n" "#define MAKE_REQUEST_FN_RET blk_qc_t" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_QC 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn() returns void" >&5
printf %s "checking whether make_request_fn() returns void... " >&6; }

	if test -d build/make_request_fn_void
then :

		if test -f build/make_request_fn_void/make_request_fn_void.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define MAKE_REQUEST_FN_RET void" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_VOID 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																									{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn() returns blk_qc_t" >&5
printf %s "checking whether make_request_fn() returns blk_qc_t... " >&6; }

	if test -d build/make_request_fn_blk_qc_t
then :

		if test -f build/make_request_fn_blk_qc_t/make_request_fn_blk_qc_t.ko
then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define MAKE_REQUEST_FN_RET blk_qc_t" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_QC 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"make_request_fn\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"make_request_fn_blk_qc_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"make_request_fn_void\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_alloc_queue_request_fn_rh\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_alloc_queue_request_fn\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_submit_bio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether 6.3+ bdev_*_io_acct() are available" >&5
printf %s "checking whether 6.3+ bdev_*_io_acct() are available... " >&6; }

	if test -d build/bdev_io_acct_63
then :

		if test -f build/bdev_io_acct_63/bdev_io_acct_63.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_IO_ACCT_63 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

														{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether pre-6.3 bdev_*_io_acct() are available" >&5
printf %s "checking whether pre-6.3 bdev_*_io_acct() are available... " >&6; }

	if test -d build/bdev_io_acct_old
then :

		if test -f build/bdev_io_acct_old/bdev_io_acct_old.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_IO_ACCT_OLD 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
																					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic disk_*_io_acct() are available" >&5
printf %s "checking whether generic disk_*_io_acct() are available... " >&6; }

	if test -d build/disk_io_acct
then :

		if test -f build/disk_io_acct/disk_io_acct.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DISK_IO_ACCT 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic bio_*_io_acct() are available" >&5
printf %s "checking whether generic bio_*_io_acct() are available... " >&6; }

	if test -d build/bio_io_acct
then :

		if test -f build/bio_io_acct/bio_io_acct.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_IO_ACCT 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																																								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_*_io_acct wants 4 args" >&5
printf %s "checking whether generic_*_io_acct wants 4 args... " >&6; }

	if  ! test -f build/generic_acct_4args/generic_acct_4args.ko
then :


						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																																										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_*_io_acct wants 3 args" >&5
printf %s "checking whether generic_*_io_acct wants 3 args... " >&6; }

	if  ! test -f build/generic_acct_3args/generic_acct_3args.ko
then :


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_start_io_acct[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/bio.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_start_io_acct)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


		fi
	else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


	fi


else $as_nop


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_start_io_acct[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/bio.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_start_io_acct)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																																										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_*_io_acct wants 3 args" >&5
printf %s "checking whether generic_*_io_acct wants 3 args... " >&6; }

	if  ! test -f build/generic_acct_3args/generic_acct_3args.ko
then :


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_start_io_acct[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/bio.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_start_io_acct)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


		fi
	else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


	fi


else $as_nop


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h



fi

fi


		else :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_4ARG 1" >>confdefs.h


		fi
	else :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_4ARG 1" >>confdefs.h


	fi


else $as_nop


						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_4ARG 1" >>confdefs.h



fi

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_io_acct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"disk_io_acct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_io_acct_old\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_io_acct_63\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel fpu is available" >&5
printf %s "checking whether kernel fpu is available... " >&6; }

	if test -d build/kernel_fpu_license
then :

		if test -f build/kernel_fpu_license/kernel_fpu_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: kernel_fpu_*" >&5
printf "%s\n" "kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h


else $as_nop


	if  ! test -f build/__kernel_fpu_license/__kernel_fpu_license.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: internal" >&5
printf "%s\n" "internal" >&6; }

printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL 1" >>confdefs.h



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]__kernel_fpu_begin[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in arch/x86/kernel/fpu/core.c arch/x86/kernel/i387.c; do
			grep -q -E "EXPORT_SYMBOL.*(__kernel_fpu_begin)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: internal" >&5
printf "%s\n" "internal" >&6; }

printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL 1" >>confdefs.h


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: __kernel_fpu_*" >&5
printf "%s\n" "__kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_UNDERSCORE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: __kernel_fpu_*" >&5
printf "%s\n" "__kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_UNDERSCORE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: __kernel_fpu_*" >&5
printf "%s\n" "__kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_UNDERSCORE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h



fi

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kernel_fpu_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel defines fmode_t" >&5
printf %s "checking whether kernel defines fmode_t... " >&6; }

	if test -d build/type_fmode_t
then :

		if test -f build/type_fmode_t/type_fmode_t.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"type_fmode_t\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"type_fmode_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kuid_t/kgid_t is available" >&5
printf %s "checking whether kuid_t/kgid_t is available... " >&6; }

	if test -d build/kuidgid_t
then :

		if test -f build/kuidgid_t/kuidgid_t.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"kuid_t/kgid_t\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kuidgid_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether i_(uid|gid)_(read|write) exist" >&5
printf %s "checking whether i_(uid|gid)_(read|write) exist... " >&6; }

	if test -d build/i_uid_read
then :

		if test -f build/i_uid_read/i_uid_read.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"i_uid_read\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"i_uid_read\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->rename() takes struct mnt_idmap*... " >&6; }

	if test -d build/inode_operations_rename_mnt_idmap
then :

		if test -f build/inode_operations_rename_mnt_idmap/inode_operations_rename_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_RENAME_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename() takes struct user_namespace*" >&5
printf %s "checking whether iops->rename() takes struct user_namespace*... " >&6; }

	if test -d build/inode_operations_rename_userns
then :

		if test -f build/inode_operations_rename_userns/inode_operations_rename_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_RENAME_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename2() exists" >&5
printf %s "checking whether iops->rename2() exists... " >&6; }

	if test -d build/inode_operations_rename2
then :

		if test -f build/inode_operations_rename2/inode_operations_rename2.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RENAME2 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename() wants flags" >&5
printf %s "checking whether iops->rename() wants flags... " >&6; }

	if test -d build/inode_operations_rename_flags
then :

		if test -f build/inode_operations_rename_flags/inode_operations_rename_flags.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RENAME_WANTS_FLAGS 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct inode_operations_wrapper takes .rename2()" >&5
printf %s "checking whether struct inode_operations_wrapper takes .rename2()... " >&6; }

	if test -d build/dir_inode_operations_wrapper_rename2
then :

		if test -f build/dir_inode_operations_wrapper_rename2/dir_inode_operations_wrapper_rename2.ko
then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RENAME2_OPERATIONS_WRAPPER 1" >>confdefs.h


else $as_nop

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dir_inode_operations_wrapper_rename2\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename2\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether current_time() exists" >&5
printf %s "checking whether current_time() exists... " >&6; }

	if  ! test -f build/current_time/current_time.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]current_time[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/inode.c; do
			grep -q -E "EXPORT_SYMBOL.*(current_time)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CURRENT_TIME 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CURRENT_TIME 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CURRENT_TIME 1" >>confdefs.h



fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ns_capable exists" >&5
printf %s "checking whether ns_capable exists... " >&6; }

	if test -d build/ns_capable
then :

		if test -f build/ns_capable/ns_capable.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"ns_capable()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"ns_capable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether has_capability() is available" >&5
printf %s "checking whether has_capability() is available... " >&6; }

	if  ! test -f build/has_capability/has_capability.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]has_capability[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in kernel/capability.c; do
			grep -q -E "EXPORT_SYMBOL.*(has_capability)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_HAS_CAPABILITY 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_HAS_CAPABILITY 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_HAS_CAPABILITY 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether cred_t->user_ns exists" >&5
printf %s "checking whether cred_t->user_ns exists... " >&6; }

	if test -d build/cred_user_ns
then :

		if test -f build/cred_user_ns/cred_user_ns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"cred_t->user_ns()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"cred_user_ns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kuid_has_mapping/kgid_has_mapping exist" >&5
printf %s "checking whether kuid_has_mapping/kgid_has_mapping exist... " >&6; }

	if test -d build/kuid_has_mapping
then :

		if test -f build/kuid_has_mapping/kuid_has_mapping.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"kuid_has_mapping()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kuid_has_mapping\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether in_compat_syscall() is available" >&5
printf %s "checking whether in_compat_syscall() is available... " >&6; }

	if test -d build/in_compat_syscall
then :

		if test -f build/in_compat_syscall/in_compat_syscall.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IN_COMPAT_SYSCALL 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"in_compat_syscall\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ktime_get_coarse_real_ts64() exists" >&5
printf %s "checking whether ktime_get_coarse_real_ts64() exists... " >&6; }

	if test -d build/ktime_get_coarse_real_ts64
then :

		if test -f build/ktime_get_coarse_real_ts64/ktime_get_coarse_real_ts64.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KTIME_GET_COARSE_REAL_TS64 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"ktime_get_coarse_real_ts64\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ktime_get_raw_ts64() exists" >&5
printf %s "checking whether ktime_get_raw_ts64() exists... " >&6; }

	if test -d build/ktime_get_raw_ts64
then :

		if test -f build/ktime_get_raw_ts64/ktime_get_raw_ts64.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KTIME_GET_RAW_TS64 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"ktime_get_raw_ts64\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether totalram_pages() exists" >&5
printf %s "checking whether totalram_pages() exists... " >&6; }

	if test -d build/totalram_pages
then :

		if test -f build/totalram_pages/totalram_pages.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TOTALRAM_PAGES_FUNC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"totalram_pages\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether totalhigh_pages() exists" >&5
printf %s "checking whether totalhigh_pages() exists... " >&6; }

	if test -d build/totalhigh_pages
then :

		if test -f build/totalhigh_pages/totalhigh_pages.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TOTALHIGH_PAGES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"totalhigh_pages\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kstrtoul() exists" >&5
printf %s "checking whether kstrtoul() exists... " >&6; }

	if test -d build/kstrtoul
then :

		if test -f build/kstrtoul/kstrtoul.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KSTRTOUL 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"kstrtoul()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kstrtoul\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether percpu_counter_init() wants gfp_t" >&5
printf %s "checking whether percpu_counter_init() wants gfp_t... " >&6; }

	if test -d build/percpu_counter_init_with_gfp
then :

		if test -f build/percpu_counter_init_with_gfp/percpu_counter_init_with_gfp.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PERCPU_COUNTER_INIT_WITH_GFP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"percpu_counter_init_with_gfp\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether percpu_counter_add_batch() is defined" >&5
printf %s "checking whether percpu_counter_add_batch() is defined... " >&6; }

	if test -d build/percpu_counter_add_batch
then :

		if test -f build/percpu_counter_add_batch/percpu_counter_add_batch.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PERCPU_COUNTER_ADD_BATCH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"percpu_counter_add_batch\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether is inside percpu_ref.data" >&5
printf %s "checking whether is inside percpu_ref.data... " >&6; }

	if test -d build/percpu_ref_count_in_data
then :

		if test -f build/percpu_ref_count_in_data/percpu_ref_count_in_data.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_PERCPU_REF_COUNT_IN_DATA 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"percpu_ref_count_in_data\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CPU hotplug APIs exist" >&5
printf %s "checking whether CPU hotplug APIs exist... " >&6; }

	if test -d build/cpu_hotplug
then :

		if test -f build/cpu_hotplug/cpu_hotplug.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CPU_HOTPLUG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"cpu_hotplug\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_fillattr requires struct mnt_idmap*" >&5
printf %s "checking whether generic_fillattr requires struct mnt_idmap*... " >&6; }

	if test -d build/generic_fillattr_mnt_idmap
then :

		if test -f build/generic_fillattr_mnt_idmap/generic_fillattr_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FILLATTR_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_fillattr requires struct user_namespace*" >&5
printf %s "checking whether generic_fillattr requires struct user_namespace*... " >&6; }

	if test -d build/generic_fillattr_userns
then :

		if test -f build/generic_fillattr_userns/generic_fillattr_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FILLATTR_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_fillattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_fillattr_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mknod() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->mknod() takes struct mnt_idmap*... " >&6; }

	if test -d build/mknod_mnt_idmap
then :

		if test -f build/mknod_mnt_idmap/mknod_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKNOD_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mknod() takes struct user_namespace*" >&5
printf %s "checking whether iops->mknod() takes struct user_namespace*... " >&6; }

	if test -d build/mknod_userns
then :

		if test -f build/mknod_userns/mknod_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKNOD_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mknod_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mknod_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->symlink() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->symlink() takes struct mnt_idmap*... " >&6; }

	if test -d build/symlink_mnt_idmap
then :

		if test -f build/symlink_mnt_idmap/symlink_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_SYMLINK_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->symlink() takes struct user_namespace*" >&5
printf %s "checking whether iops->symlink() takes struct user_namespace*... " >&6; }

	if test -d build/symlink_userns
then :

		if test -f build/symlink_userns/symlink_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_SYMLINK_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"symlink_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"symlink_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_max_segs() exists" >&5
printf %s "checking whether bio_max_segs() exists... " >&6; }

	if test -d build/bio_max_segs
then :

		if test -f build/bio_max_segs/bio_max_segs.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_BIO_MAX_SEGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_max_segs\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether signal_stop() exists" >&5
printf %s "checking whether signal_stop() exists... " >&6; }

	if test -d build/signal_stop
then :

		if test -f build/signal_stop/signal_stop.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SIGNAL_STOP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"signal_stop\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel_siginfo_t tyepedef exists" >&5
printf %s "checking whether kernel_siginfo_t tyepedef exists... " >&6; }

	if test -d build/siginfo
then :

		if test -f build/siginfo/siginfo.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SIGINFO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"siginfo\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct kobj_type.default_groups exists" >&5
printf %s "checking whether struct kobj_type.default_groups exists... " >&6; }

	if test -d build/sysfs_default_groups
then :

		if test -f build/sysfs_default_groups/sysfs_default_groups.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SYSFS_DEFAULT_GROUPS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sysfs_default_groups\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether set_special_state() exists" >&5
printf %s "checking whether set_special_state() exists... " >&6; }

	if test -d build/set_special_state
then :

		if test -f build/set_special_state/set_special_state.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_SPECIAL_STATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"set_special_state\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether standalone <linux/stdarg.h> exists" >&5
printf %s "checking whether standalone <linux/stdarg.h> exists... " >&6; }

	if test -d build/has_standalone_linux_stdarg
then :

		if test -f build/has_standalone_linux_stdarg/has_standalone_linux_stdarg.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_STANDALONE_LINUX_STDARG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"has_standalone_linux_stdarg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether folio_wait_bit() exists" >&5
printf %s "checking whether folio_wait_bit() exists... " >&6; }

	if test -d build/pagemap_has_folio_wait_bit
then :

		if test -f build/pagemap_has_folio_wait_bit/pagemap_has_folio_wait_bit.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PAGEMAP_FOLIO_WAIT_BIT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"pagemap_has_folio_wait_bit\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether add_disk() returns int" >&5
printf %s "checking whether add_disk() returns int... " >&6; }

	if test -d build/add_disk_ret
then :

		if test -f build/add_disk_ret/add_disk_ret.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ADD_DISK_RET 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"add_disk_ret\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kthread_complete_and_exit() is available" >&5
printf %s "checking whether kthread_complete_and_exit() is available... " >&6; }

	if test -d build/kthread_complete_and_exit
then :

		if test -f build/kthread_complete_and_exit/kthread_complete_and_exit.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define SPL_KTHREAD_COMPLETE_AND_EXIT kthread_complete_and_exit" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

printf "%s\n" "#define SPL_KTHREAD_COMPLETE_AND_EXIT complete_and_exit" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kthread_complete_and_exit\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dequeue_signal() takes 4 arguments" >&5
printf %s "checking whether dequeue_signal() takes 4 arguments... " >&6; }

	if test -d build/kthread_dequeue_signal
then :

		if test -f build/kthread_dequeue_signal/kthread_dequeue_signal.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEQUEUE_SIGNAL_4ARG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kthread_dequeue_signal\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ZERO_PAGE() is GPL-only" >&5
printf %s "checking whether ZERO_PAGE() is GPL-only... " >&6; }

	if test -d build/zero_page_license
then :

		if test -f build/zero_page_license/zero_page_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ZERO_PAGE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"zero_page_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __copy_from_user_inatomic is available" >&5
printf %s "checking whether __copy_from_user_inatomic is available... " >&6; }

	if test -d build/__copy_from_user_inatomic_license
then :

		if test -f build/__copy_from_user_inatomic_license/__copy_from_user_inatomic_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** The \`__copy_from_user_inatomic()\` Linux kernel function is
	*** incompatible with the CDDL license and will prevent the module
	*** linking stage from succeeding.  OpenZFS cannot be compiled.
		" "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"__copy_from_user_inatomic_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether user_namespace->ns.inum exists" >&5
printf %s "checking whether user_namespace->ns.inum exists... " >&6; }

	if test -d build/user_ns_common_inum
then :

		if test -f build/user_ns_common_inum/user_ns_common_inum.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_USER_NS_COMMON_INUM 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"user_ns_common_inum\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether APIs for idmapped mount are present" >&5
printf %s "checking whether APIs for idmapped mount are present... " >&6; }

	if test -d build/idmap_mnt_api
then :

		if test -f build/idmap_mnt_api/idmap_mnt_api.ko
then :

                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IDMAP_MNT_API 1" >>confdefs.h


else $as_nop

                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"idmap_mnt_api\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iattr->ia_vfsuid and iattr->ia_vfsgid exist" >&5
printf %s "checking whether iattr->ia_vfsuid and iattr->ia_vfsgid exist... " >&6; }

	if test -d build/iattr_vfsid
then :

		if test -f build/iattr_vfsid/iattr_vfsid.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IATTR_VFSID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iattr_vfsid\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether filemap_range_has_page() is available" >&5
printf %s "checking whether filemap_range_has_page() is available... " >&6; }

	if test -d build/filemap_range_has_page
then :

		if test -f build/filemap_range_has_page/filemap_range_has_page.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILEMAP_RANGE_HAS_PAGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"filemap_range_has_page\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether int (*writepage_t)() takes struct folio*" >&5
printf %s "checking whether int (*writepage_t)() takes struct folio*... " >&6; }

	if test -d build/writepage_t_folio
then :

		if test -f build/writepage_t_folio/writepage_t_folio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WRITEPAGE_T_FOLIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"writepage_t_folio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct reclaim_state has reclaimed field" >&5
printf %s "checking whether struct reclaim_state has reclaimed field... " >&6; }

	if test -d build/reclaim_state_reclaimed
then :

		if test -f build/reclaim_state_reclaimed/reclaim_state_reclaimed.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RECLAIM_STATE_RECLAIMED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"reclaim_state_reclaimed\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether register_sysctl_table exists" >&5
printf %s "checking whether register_sysctl_table exists... " >&6; }

	if test -d build/has_register_sysctl_table
then :

		if test -f build/has_register_sysctl_table/has_register_sysctl_table.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REGISTER_SYSCTL_TABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"has_register_sysctl_table\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether copy_splice_read() exists" >&5
printf %s "checking whether copy_splice_read() exists... " >&6; }

	if test -d build/has_copy_splice_read
then :

		if test -f build/has_copy_splice_read/has_copy_splice_read.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_COPY_SPLICE_READ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"has_copy_splice_read\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	case "$host_cpu" in
		powerpc*)

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether cpu_has_feature() is GPL-only" >&5
printf %s "checking whether cpu_has_feature() is GPL-only... " >&6; }

	if test -d build/cpu_has_feature_license
then :

		if test -f build/cpu_has_feature_license/cpu_has_feature_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CPU_HAS_FEATURE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"cpu_has_feature_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether flush_dcache_page() is GPL-only" >&5
printf %s "checking whether flush_dcache_page() is GPL-only... " >&6; }

	if test -d build/flush_dcache_page_license
then :

		if test -f build/flush_dcache_page_license/flush_dcache_page_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FLUSH_DCACHE_PAGE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"flush_dcache_page_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


			;;
	esac


		if test "$LINUX_OBJ" != "$LINUX"
then :

			KERNEL_MAKE="$KERNEL_MAKE O=$LINUX_OBJ"

fi



fi
 ;;
		user)
























    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for CFPreferencesCopyAppValue" >&5
printf %s "checking for CFPreferencesCopyAppValue... " >&6; }
if test ${gt_cv_func_CFPreferencesCopyAppValue+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <CoreFoundation/CFPreferences.h>
int
main (void)
{
CFPreferencesCopyAppValue(NULL, NULL)
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  gt_cv_func_CFPreferencesCopyAppValue=yes
else $as_nop
  gt_cv_func_CFPreferencesCopyAppValue=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
     LIBS="$gt_save_LIBS"
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_cv_func_CFPreferencesCopyAppValue" >&5
printf "%s\n" "$gt_cv_func_CFPreferencesCopyAppValue" >&6; }
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes; then

printf "%s\n" "#define HAVE_CFPREFERENCESCOPYAPPVALUE 1" >>confdefs.h

  fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for CFLocaleCopyCurrent" >&5
printf %s "checking for CFLocaleCopyCurrent... " >&6; }
if test ${gt_cv_func_CFLocaleCopyCurrent+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <CoreFoundation/CFLocale.h>
int
main (void)
{
CFLocaleCopyCurrent();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  gt_cv_func_CFLocaleCopyCurrent=yes
else $as_nop
  gt_cv_func_CFLocaleCopyCurrent=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
     LIBS="$gt_save_LIBS"
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_cv_func_CFLocaleCopyCurrent" >&5
printf "%s\n" "$gt_cv_func_CFLocaleCopyCurrent" >&6; }
  if test $gt_cv_func_CFLocaleCopyCurrent = yes; then

printf "%s\n" "#define HAVE_CFLOCALECOPYCURRENT 1" >>confdefs.h

  fi
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for CFLocaleCopyPreferredLanguages" >&5
printf %s "checking for CFLocaleCopyPreferredLanguages... " >&6; }
if test ${gt_cv_func_CFLocaleCopyPreferredLanguages+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <CoreFoundation/CFLocale.h>
int
main (void)
{
CFLocaleCopyPreferredLanguages();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  gt_cv_func_CFLocaleCopyPreferredLanguages=yes
else $as_nop
  gt_cv_func_CFLocaleCopyPreferredLanguages=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
     LIBS="$gt_save_LIBS"
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_cv_func_CFLocaleCopyPreferredLanguages" >&5
printf "%s\n" "$gt_cv_func_CFLocaleCopyPreferredLanguages" >&6; }
  if test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then

printf "%s\n" "#define HAVE_CFLOCALECOPYPREFERREDLANGUAGES 1" >>confdefs.h

  fi
  INTL_MACOSX_LIBS=
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes \
     || test $gt_cv_func_CFLocaleCopyCurrent = yes \
     || test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then
    INTL_MACOSX_LIBS="-Wl,-framework -Wl,CoreFoundation"
  fi






  LIBINTL=
  LTLIBINTL=
  POSUB=

    case " $gt_needs " in
    *" need-formatstring-macros "*) gt_api_version=3 ;;
    *" need-ngettext "*) gt_api_version=2 ;;
    *) gt_api_version=1 ;;
  esac
  gt_func_gnugettext_libc="gt_cv_func_gnugettext${gt_api_version}_libc"
  gt_func_gnugettext_libintl="gt_cv_func_gnugettext${gt_api_version}_libintl"

    if test "$USE_NLS" = "yes"; then
    gt_use_preinstalled_gnugettext=no


        if test $gt_api_version -ge 3; then
          gt_revision_test_code='
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
#define __GNU_GETTEXT_SUPPORTED_REVISION(major) ((major) == 0 ? 0 : -1)
#endif
typedef int array [2 * (__GNU_GETTEXT_SUPPORTED_REVISION(0) >= 1) - 1];
'
        else
          gt_revision_test_code=
        fi
        if test $gt_api_version -ge 2; then
          gt_expression_test_code=' + * ngettext ("", "", 0)'
        else
          gt_expression_test_code=
        fi

        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU gettext in libc" >&5
printf %s "checking for GNU gettext in libc... " >&6; }
if eval test \${$gt_func_gnugettext_libc+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <libintl.h>
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
extern int _nl_msg_cat_cntr;
extern int *_nl_domain_bindings;
#define __GNU_GETTEXT_SYMBOL_EXPRESSION (_nl_msg_cat_cntr + *_nl_domain_bindings)
#else
#define __GNU_GETTEXT_SYMBOL_EXPRESSION 0
#endif
$gt_revision_test_code

int
main (void)
{

bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + __GNU_GETTEXT_SYMBOL_EXPRESSION

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  eval "$gt_func_gnugettext_libc=yes"
else $as_nop
  eval "$gt_func_gnugettext_libc=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
fi
eval ac_res=\$$gt_func_gnugettext_libc
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }

        if { eval "gt_val=\$$gt_func_gnugettext_libc"; test "$gt_val" != "yes"; }; then





          am_save_CPPFLAGS="$CPPFLAGS"

  for element in $INCICONV; do
    haveit=
    for x in $CPPFLAGS; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

      if test "X$x" = "X$element"; then
        haveit=yes
        break
      fi
    done
    if test -z "$haveit"; then
      CPPFLAGS="${CPPFLAGS}${CPPFLAGS:+ }$element"
    fi
  done


  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for iconv" >&5
printf %s "checking for iconv... " >&6; }
if test ${am_cv_func_iconv+y}
then :
  printf %s "(cached) " >&6
else $as_nop

    am_cv_func_iconv="no, consider installing GNU libiconv"
    am_cv_lib_iconv=no
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <stdlib.h>
#include <iconv.h>

int
main (void)
{
iconv_t cd = iconv_open("","");
           iconv(cd,NULL,NULL,NULL,NULL);
           iconv_close(cd);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  am_cv_func_iconv=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
    if test "$am_cv_func_iconv" != yes; then
      am_save_LIBS="$LIBS"
      LIBS="$LIBS $LIBICONV"
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <stdlib.h>
#include <iconv.h>

int
main (void)
{
iconv_t cd = iconv_open("","");
             iconv(cd,NULL,NULL,NULL,NULL);
             iconv_close(cd);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  am_cv_lib_iconv=yes
        am_cv_func_iconv=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
      LIBS="$am_save_LIBS"
    fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_func_iconv" >&5
printf "%s\n" "$am_cv_func_iconv" >&6; }
  if test "$am_cv_func_iconv" = yes; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for working iconv" >&5
printf %s "checking for working iconv... " >&6; }
if test ${am_cv_func_iconv_works+y}
then :
  printf %s "(cached) " >&6
else $as_nop

                  am_save_LIBS="$LIBS"
      if test $am_cv_lib_iconv = yes; then
        LIBS="$LIBS $LIBICONV"
      fi
      am_cv_func_iconv_works=no
      for ac_iconv_const in '' 'const'; do
        if test "$cross_compiling" = yes
then :
  case "$host_os" in
             aix* | hpux*) am_cv_func_iconv_works="guessing no" ;;
             *)            am_cv_func_iconv_works="guessing yes" ;;
           esac
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <iconv.h>
#include <string.h>

#ifndef ICONV_CONST
# define ICONV_CONST $ac_iconv_const
#endif

int
main (void)
{
int result = 0;
  /* Test against AIX 5.1 bug: Failures are not distinguishable from successful
     returns.  */
  {
    iconv_t cd_utf8_to_88591 = iconv_open ("ISO8859-1", "UTF-8");
    if (cd_utf8_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\342\202\254"; /* EURO SIGN */
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_utf8_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 1;
        iconv_close (cd_utf8_to_88591);
      }
  }
  /* Test against Solaris 10 bug: Failures are not distinguishable from
     successful returns.  */
  {
    iconv_t cd_ascii_to_88591 = iconv_open ("ISO8859-1", "646");
    if (cd_ascii_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\263";
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_ascii_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 2;
        iconv_close (cd_ascii_to_88591);
      }
  }
  /* Test against AIX 6.1..7.1 bug: Buffer overrun.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("UTF-8", "ISO-8859-1");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304";
        static char buf[2] = { (char)0xDE, (char)0xAD };
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = 1;
        char *outptr = buf;
        size_t outbytesleft = 1;
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res != (size_t)(-1) || outptr - buf > 1 || buf[1] != (char)0xAD)
          result |= 4;
        iconv_close (cd_88591_to_utf8);
      }
  }
#if 0 /* This bug could be worked around by the caller.  */
  /* Test against HP-UX 11.11 bug: Positive return value instead of 0.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("utf8", "iso88591");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304rger mit b\366sen B\374bchen ohne Augenma\337";
        char buf[50];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if ((int)res > 0)
          result |= 8;
        iconv_close (cd_88591_to_utf8);
      }
  }
#endif
  /* Test against HP-UX 11.11 bug: No converter from EUC-JP to UTF-8 is
     provided.  */
  {
    /* Try standardized names.  */
    iconv_t cd1 = iconv_open ("UTF-8", "EUC-JP");
    /* Try IRIX, OSF/1 names.  */
    iconv_t cd2 = iconv_open ("UTF-8", "eucJP");
    /* Try AIX names.  */
    iconv_t cd3 = iconv_open ("UTF-8", "IBM-eucJP");
    /* Try HP-UX names.  */
    iconv_t cd4 = iconv_open ("utf8", "eucJP");
    if (cd1 == (iconv_t)(-1) && cd2 == (iconv_t)(-1)
        && cd3 == (iconv_t)(-1) && cd4 == (iconv_t)(-1))
      result |= 16;
    if (cd1 != (iconv_t)(-1))
      iconv_close (cd1);
    if (cd2 != (iconv_t)(-1))
      iconv_close (cd2);
    if (cd3 != (iconv_t)(-1))
      iconv_close (cd3);
    if (cd4 != (iconv_t)(-1))
      iconv_close (cd4);
  }
  return result;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"
then :
  am_cv_func_iconv_works=yes
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

        test "$am_cv_func_iconv_works" = no || break
      done
      LIBS="$am_save_LIBS"

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_func_iconv_works" >&5
printf "%s\n" "$am_cv_func_iconv_works" >&6; }
    case "$am_cv_func_iconv_works" in
      *no) am_func_iconv=no am_cv_lib_iconv=no ;;
      *)   am_func_iconv=yes ;;
    esac
  else
    am_func_iconv=no am_cv_lib_iconv=no
  fi
  if test "$am_func_iconv" = yes; then

printf "%s\n" "#define HAVE_ICONV 1" >>confdefs.h

  fi
  if test "$am_cv_lib_iconv" = yes; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to link with libiconv" >&5
printf %s "checking how to link with libiconv... " >&6; }
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LIBICONV" >&5
printf "%s\n" "$LIBICONV" >&6; }
  else
            CPPFLAGS="$am_save_CPPFLAGS"
    LIBICONV=
    LTLIBICONV=
  fi










    use_additional=yes

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"

    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"

  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"


# Check whether --with-libintl-prefix was given.
if test ${with_libintl_prefix+y}
then :
  withval=$with_libintl_prefix;
    if test "X$withval" = "Xno"; then
      use_additional=no
    else
      if test "X$withval" = "X"; then

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"

          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"

  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

      else
        additional_includedir="$withval/include"
        additional_libdir="$withval/$acl_libdirstem"
        if test "$acl_libdirstem2" != "$acl_libdirstem" \
           && test ! -d "$withval/$acl_libdirstem"; then
          additional_libdir="$withval/$acl_libdirstem2"
        fi
      fi
    fi

fi

      LIBINTL=
  LTLIBINTL=
  INCINTL=
  LIBINTL_PREFIX=
      HAVE_LIBINTL=
  rpathdirs=
  ltrpathdirs=
  names_already_handled=
  names_next_round='intl '
  while test -n "$names_next_round"; do
    names_this_round="$names_next_round"
    names_next_round=
    for name in $names_this_round; do
      already_handled=
      for n in $names_already_handled; do
        if test "$n" = "$name"; then
          already_handled=yes
          break
        fi
      done
      if test -z "$already_handled"; then
        names_already_handled="$names_already_handled $name"
                        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
        eval value=\"\$HAVE_LIB$uppername\"
        if test -n "$value"; then
          if test "$value" = yes; then
            eval value=\"\$LIB$uppername\"
            test -z "$value" || LIBINTL="${LIBINTL}${LIBINTL:+ }$value"
            eval value=\"\$LTLIB$uppername\"
            test -z "$value" || LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }$value"
          else
                                    :
          fi
        else
                              found_dir=
          found_la=
          found_so=
          found_a=
          eval libname=\"$acl_libname_spec\"    # typically: libname=lib$name
          if test -n "$acl_shlibext"; then
            shrext=".$acl_shlibext"             # typically: shrext=.so
          else
            shrext=
          fi
          if test $use_additional = yes; then
            dir="$additional_libdir"
                                    if test -n "$acl_shlibext"; then
              if test -f "$dir/$libname$shrext"; then
                found_dir="$dir"
                found_so="$dir/$libname$shrext"
              else
                if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                  ver=`(cd "$dir" && \
                        for f in "$libname$shrext".*; do echo "$f"; done \
                        | sed -e "s,^$libname$shrext\\\\.,," \
                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                        | sed 1q ) 2>/dev/null`
                  if test -n "$ver" && test -f "$dir/$libname$shrext.$ver"; then
                    found_dir="$dir"
                    found_so="$dir/$libname$shrext.$ver"
                  fi
                else
                  eval library_names=\"$acl_library_names_spec\"
                  for f in $library_names; do
                    if test -f "$dir/$f"; then
                      found_dir="$dir"
                      found_so="$dir/$f"
                      break
                    fi
                  done
                fi
              fi
            fi
                        if test "X$found_dir" = "X"; then
              if test -f "$dir/$libname.$acl_libext"; then
                found_dir="$dir"
                found_a="$dir/$libname.$acl_libext"
              fi
            fi
            if test "X$found_dir" != "X"; then
              if test -f "$dir/$libname.la"; then
                found_la="$dir/$libname.la"
              fi
            fi
          fi
          if test "X$found_dir" = "X"; then
            for x in $LDFLAGS $LTLIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

              case "$x" in
                -L*)
                  dir=`echo "X$x" | sed -e 's/^X-L//'`
                                    if test -n "$acl_shlibext"; then
                    if test -f "$dir/$libname$shrext"; then
                      found_dir="$dir"
                      found_so="$dir/$libname$shrext"
                    else
                      if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                        ver=`(cd "$dir" && \
                              for f in "$libname$shrext".*; do echo "$f"; done \
                              | sed -e "s,^$libname$shrext\\\\.,," \
                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                              | sed 1q ) 2>/dev/null`
                        if test -n "$ver" && test -f "$dir/$libname$shrext.$ver"; then
                          found_dir="$dir"
                          found_so="$dir/$libname$shrext.$ver"
                        fi
                      else
                        eval library_names=\"$acl_library_names_spec\"
                        for f in $library_names; do
                          if test -f "$dir/$f"; then
                            found_dir="$dir"
                            found_so="$dir/$f"
                            break
                          fi
                        done
                      fi
                    fi
                  fi
                                    if test "X$found_dir" = "X"; then
                    if test -f "$dir/$libname.$acl_libext"; then
                      found_dir="$dir"
                      found_a="$dir/$libname.$acl_libext"
                    fi
                  fi
                  if test "X$found_dir" != "X"; then
                    if test -f "$dir/$libname.la"; then
                      found_la="$dir/$libname.la"
                    fi
                  fi
                  ;;
              esac
              if test "X$found_dir" != "X"; then
                break
              fi
            done
          fi
          if test "X$found_dir" != "X"; then
                        LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-L$found_dir -l$name"
            if test "X$found_so" != "X"; then
                                                        if test "$enable_rpath" = no \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem" \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem2"; then
                                LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
              else
                                                                                haveit=
                for x in $ltrpathdirs; do
                  if test "X$x" = "X$found_dir"; then
                    haveit=yes
                    break
                  fi
                done
                if test -z "$haveit"; then
                  ltrpathdirs="$ltrpathdirs $found_dir"
                fi
                                if test "$acl_hardcode_direct" = yes; then
                                                      LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
                else
                  if test -n "$acl_hardcode_libdir_flag_spec" && test "$acl_hardcode_minus_L" = no; then
                                                            LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
                                                            haveit=
                    for x in $rpathdirs; do
                      if test "X$x" = "X$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      rpathdirs="$rpathdirs $found_dir"
                    fi
                  else
                                                                                haveit=
                    for x in $LDFLAGS $LIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                      if test "X$x" = "X-L$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      LIBINTL="${LIBINTL}${LIBINTL:+ }-L$found_dir"
                    fi
                    if test "$acl_hardcode_minus_L" != no; then
                                                                                        LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
                    else
                                                                                                                                                                                LIBINTL="${LIBINTL}${LIBINTL:+ }-l$name"
                    fi
                  fi
                fi
              fi
            else
              if test "X$found_a" != "X"; then
                                LIBINTL="${LIBINTL}${LIBINTL:+ }$found_a"
              else
                                                LIBINTL="${LIBINTL}${LIBINTL:+ }-L$found_dir -l$name"
              fi
            fi
                        additional_includedir=
            case "$found_dir" in
              */$acl_libdirstem | */$acl_libdirstem/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem/"'*$,,'`
                if test "$name" = 'intl'; then
                  LIBINTL_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
              */$acl_libdirstem2 | */$acl_libdirstem2/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem2/"'*$,,'`
                if test "$name" = 'intl'; then
                  LIBINTL_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
            esac
            if test "X$additional_includedir" != "X"; then
                                                                                                                if test "X$additional_includedir" != "X/usr/include"; then
                haveit=
                if test "X$additional_includedir" = "X/usr/local/include"; then
                  if test -n "$GCC"; then
                    case $host_os in
                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                    esac
                  fi
                fi
                if test -z "$haveit"; then
                  for x in $CPPFLAGS $INCINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                    if test "X$x" = "X-I$additional_includedir"; then
                      haveit=yes
                      break
                    fi
                  done
                  if test -z "$haveit"; then
                    if test -d "$additional_includedir"; then
                                            INCINTL="${INCINTL}${INCINTL:+ }-I$additional_includedir"
                    fi
                  fi
                fi
              fi
            fi
                        if test -n "$found_la"; then
                                                        save_libdir="$libdir"
              case "$found_la" in
                */* | *\\*) . "$found_la" ;;
                *) . "./$found_la" ;;
              esac
              libdir="$save_libdir"
                            for dep in $dependency_libs; do
                case "$dep" in
                  -L*)
                    additional_libdir=`echo "X$dep" | sed -e 's/^X-L//'`
                                                                                                                                                                if test "X$additional_libdir" != "X/usr/$acl_libdirstem" \
                       && test "X$additional_libdir" != "X/usr/$acl_libdirstem2"; then
                      haveit=
                      if test "X$additional_libdir" = "X/usr/local/$acl_libdirstem" \
                         || test "X$additional_libdir" = "X/usr/local/$acl_libdirstem2"; then
                        if test -n "$GCC"; then
                          case $host_os in
                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                          esac
                        fi
                      fi
                      if test -z "$haveit"; then
                        haveit=
                        for x in $LDFLAGS $LIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                          if test "X$x" = "X-L$additional_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$additional_libdir"; then
                                                        LIBINTL="${LIBINTL}${LIBINTL:+ }-L$additional_libdir"
                          fi
                        fi
                        haveit=
                        for x in $LDFLAGS $LTLIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                          if test "X$x" = "X-L$additional_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$additional_libdir"; then
                                                        LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-L$additional_libdir"
                          fi
                        fi
                      fi
                    fi
                    ;;
                  -R*)
                    dir=`echo "X$dep" | sed -e 's/^X-R//'`
                    if test "$enable_rpath" != no; then
                                                                  haveit=
                      for x in $rpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        rpathdirs="$rpathdirs $dir"
                      fi
                                                                  haveit=
                      for x in $ltrpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        ltrpathdirs="$ltrpathdirs $dir"
                      fi
                    fi
                    ;;
                  -l*)
                                        names_next_round="$names_next_round "`echo "X$dep" | sed -e 's/^X-l//'`
                    ;;
                  *.la)
                                                                                names_next_round="$names_next_round "`echo "X$dep" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\.la$,,'`
                    ;;
                  *)
                                        LIBINTL="${LIBINTL}${LIBINTL:+ }$dep"
                    LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }$dep"
                    ;;
                esac
              done
            fi
          else
                                                            LIBINTL="${LIBINTL}${LIBINTL:+ }-l$name"
            LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-l$name"
          fi
        fi
      fi
    done
  done
  if test "X$rpathdirs" != "X"; then
    if test -n "$acl_hardcode_libdir_separator"; then
                        alldirs=
      for found_dir in $rpathdirs; do
        alldirs="${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir"
      done
            acl_save_libdir="$libdir"
      libdir="$alldirs"
      eval flag=\"$acl_hardcode_libdir_flag_spec\"
      libdir="$acl_save_libdir"
      LIBINTL="${LIBINTL}${LIBINTL:+ }$flag"
    else
            for found_dir in $rpathdirs; do
        acl_save_libdir="$libdir"
        libdir="$found_dir"
        eval flag=\"$acl_hardcode_libdir_flag_spec\"
        libdir="$acl_save_libdir"
        LIBINTL="${LIBINTL}${LIBINTL:+ }$flag"
      done
    fi
  fi
  if test "X$ltrpathdirs" != "X"; then
            for found_dir in $ltrpathdirs; do
      LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-R$found_dir"
    done
  fi





          { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU gettext in libintl" >&5
printf %s "checking for GNU gettext in libintl... " >&6; }
if eval test \${$gt_func_gnugettext_libintl+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_CPPFLAGS="$CPPFLAGS"
            CPPFLAGS="$CPPFLAGS $INCINTL"
            gt_save_LIBS="$LIBS"
            LIBS="$LIBS $LIBINTL"
                        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <libintl.h>
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
extern int _nl_msg_cat_cntr;
extern
#ifdef __cplusplus
"C"
#endif
const char *_nl_expand_alias (const char *);
#define __GNU_GETTEXT_SYMBOL_EXPRESSION (_nl_msg_cat_cntr + *_nl_expand_alias (""))
#else
#define __GNU_GETTEXT_SYMBOL_EXPRESSION 0
#endif
$gt_revision_test_code

int
main (void)
{

bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + __GNU_GETTEXT_SYMBOL_EXPRESSION

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  eval "$gt_func_gnugettext_libintl=yes"
else $as_nop
  eval "$gt_func_gnugettext_libintl=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
                        if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" != yes; } && test -n "$LIBICONV"; then
              LIBS="$LIBS $LIBICONV"
              cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <libintl.h>
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
extern int _nl_msg_cat_cntr;
extern
#ifdef __cplusplus
"C"
#endif
const char *_nl_expand_alias (const char *);
#define __GNU_GETTEXT_SYMBOL_EXPRESSION (_nl_msg_cat_cntr + *_nl_expand_alias (""))
#else
#define __GNU_GETTEXT_SYMBOL_EXPRESSION 0
#endif
$gt_revision_test_code

int
main (void)
{

bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + __GNU_GETTEXT_SYMBOL_EXPRESSION

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  LIBINTL="$LIBINTL $LIBICONV"
                 LTLIBINTL="$LTLIBINTL $LTLIBICONV"
                 eval "$gt_func_gnugettext_libintl=yes"

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
            fi
            CPPFLAGS="$gt_save_CPPFLAGS"
            LIBS="$gt_save_LIBS"
fi
eval ac_res=\$$gt_func_gnugettext_libintl
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
        fi

                                        if { eval "gt_val=\$$gt_func_gnugettext_libc"; test "$gt_val" = "yes"; } \
           || { { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; } \
                && test "$PACKAGE" != gettext-runtime \
                && test "$PACKAGE" != gettext-tools; }; then
          gt_use_preinstalled_gnugettext=yes
        else
                    LIBINTL=
          LTLIBINTL=
          INCINTL=
        fi



    if test -n "$INTL_MACOSX_LIBS"; then
      if test "$gt_use_preinstalled_gnugettext" = "yes" \
         || test "$nls_cv_use_gnu_gettext" = "yes"; then
                LIBINTL="$LIBINTL $INTL_MACOSX_LIBS"
        LTLIBINTL="$LTLIBINTL $INTL_MACOSX_LIBS"
      fi
    fi

    if test "$gt_use_preinstalled_gnugettext" = "yes" \
       || test "$nls_cv_use_gnu_gettext" = "yes"; then

printf "%s\n" "#define ENABLE_NLS 1" >>confdefs.h

    else
      USE_NLS=no
    fi
  fi

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to use NLS" >&5
printf %s "checking whether to use NLS... " >&6; }
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $USE_NLS" >&5
printf "%s\n" "$USE_NLS" >&6; }
  if test "$USE_NLS" = "yes"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking where the gettext function comes from" >&5
printf %s "checking where the gettext function comes from... " >&6; }
    if test "$gt_use_preinstalled_gnugettext" = "yes"; then
      if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; }; then
        gt_source="external libintl"
      else
        gt_source="libc"
      fi
    else
      gt_source="included intl directory"
    fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_source" >&5
printf "%s\n" "$gt_source" >&6; }
  fi

  if test "$USE_NLS" = "yes"; then

    if test "$gt_use_preinstalled_gnugettext" = "yes"; then
      if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; }; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to link with libintl" >&5
printf %s "checking how to link with libintl... " >&6; }
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LIBINTL" >&5
printf "%s\n" "$LIBINTL" >&6; }

  for element in $INCINTL; do
    haveit=
    for x in $CPPFLAGS; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

      if test "X$x" = "X$element"; then
        haveit=yes
        break
      fi
    done
    if test -z "$haveit"; then
      CPPFLAGS="${CPPFLAGS}${CPPFLAGS:+ }$element"
    fi
  done

      fi


printf "%s\n" "#define HAVE_GETTEXT 1" >>confdefs.h


printf "%s\n" "#define HAVE_DCGETTEXT 1" >>confdefs.h

    fi

        POSUB=po
  fi



    INTLLIBS="$LIBINTL"









# Check whether --with-mounthelperdir was given.
if test ${with_mounthelperdir+y}
then :
  withval=$with_mounthelperdir; mounthelperdir=$withval
else $as_nop
  mounthelperdir=/sbin
fi





	# Check whether --enable-sysvinit was given.
if test ${enable_sysvinit+y}
then :
  enableval=$enable_sysvinit;
else $as_nop
  enable_sysvinit=yes
fi


	ZFS_INIT_SYSV=$enable_sysvinit


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for dracut directory" >&5
printf %s "checking for dracut directory... " >&6; }

# Check whether --with-dracutdir was given.
if test ${with_dracutdir+y}
then :
  withval=$with_dracutdir; dracutdir=$withval
else $as_nop
  dracutdir=check
fi


	if test "x$dracutdir" = xcheck
then :

		path1=/usr/share/dracut
		path2=/usr/lib/dracut
		default=$path2

		if test -d "$path1"
then :
  dracutdir="$path1"
else $as_nop

			if test -d "$path2"
then :
  dracutdir="$path2"
else $as_nop
  dracutdir="$default"
fi

fi

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $dracutdir" >&5
printf "%s\n" "$dracutdir" >&6; }

	if test -z "$BUILD_FREEBSD_TRUE"; then :




# Check whether --with-pkgconfigdir was given.
if test ${with_pkgconfigdir+y}
then :
  withval=$with_pkgconfigdir;
else $as_nop
  with_pkgconfigdir='${prefix}/libdata/pkgconfig'
fi

pkgconfigdir=$with_pkgconfigdir




else




# Check whether --with-pkgconfigdir was given.
if test ${with_pkgconfigdir+y}
then :
  withval=$with_pkgconfigdir;
else $as_nop
  with_pkgconfigdir='${libdir}/pkgconfig'
fi

pkgconfigdir=$with_pkgconfigdir





fi




    _header_found=
    _library_found=
    _pc_found=

    if test -n "zlib"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for zlib" >&5
printf %s "checking for zlib... " >&6; }

if test -n "$ZLIB_CFLAGS"; then
    pkg_cv_ZLIB_CFLAGS="$ZLIB_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"zlib\""; } >&5
  ($PKG_CONFIG --exists --print-errors "zlib") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_ZLIB_CFLAGS=`$PKG_CONFIG --cflags "zlib" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$ZLIB_LIBS"; then
    pkg_cv_ZLIB_LIBS="$ZLIB_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"zlib\""; } >&5
  ($PKG_CONFIG --exists --print-errors "zlib") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_ZLIB_LIBS=`$PKG_CONFIG --libs "zlib" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        ZLIB_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "zlib" 2>&1`
        else
	        ZLIB_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "zlib" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$ZLIB_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	ZLIB_CFLAGS=$pkg_cv_ZLIB_CFLAGS
	ZLIB_LIBS=$pkg_cv_ZLIB_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$ZLIB_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$ZLIB_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    ZLIB_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		ZLIB_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $ZLIB_CFLAGS"
	{ ac_cv_header_zlib_h=; unset ac_cv_header_zlib_h;}
	ac_fn_c_check_header_compile "$LINENO" "zlib.h" "ac_cv_header_zlib_h" "$ac_includes_default
"
if test "x$ac_cv_header_zlib_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header zlib.h for library z is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    ZLIB_LIBS="$ZLIB_LIBS -lz"

fi
	LDFLAGS="$LDFLAGS $ZLIB_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for compress2 in -lz" >&5
printf %s "checking for compress2 in -lz... " >&6; }
if test ${ac_cv_lib_z_compress2+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lz  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char compress2 ();
int
main (void)
{
return compress2 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_z_compress2=yes
else $as_nop
  ac_cv_lib_z_compress2=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_z_compress2" >&5
printf "%s\n" "$ac_cv_lib_z_compress2" >&6; }
if test "x$ac_cv_lib_z_compress2" = xyes
then :
  :
else $as_nop
  _libcheck=
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uncompress in -lz" >&5
printf %s "checking for uncompress in -lz... " >&6; }
if test ${ac_cv_lib_z_uncompress+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lz  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char uncompress ();
int
main (void)
{
return uncompress ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_z_uncompress=yes
else $as_nop
  ac_cv_lib_z_uncompress=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_z_uncompress" >&5
printf "%s\n" "$ac_cv_lib_z_uncompress" >&6; }
if test "x$ac_cv_lib_z_uncompress" = xyes
then :
  :
else $as_nop
  _libcheck=
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for crc32 in -lz" >&5
printf %s "checking for crc32 in -lz... " >&6; }
if test ${ac_cv_lib_z_crc32+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lz  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char crc32 ();
int
main (void)
{
return crc32 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_z_crc32=yes
else $as_nop
  ac_cv_lib_z_crc32=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_z_crc32" >&5
printf "%s\n" "$ac_cv_lib_z_crc32" >&6; }
if test "x$ac_cv_lib_z_crc32" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library z is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header zlib.h for library z
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    ZLIB_PC=zlib


fi

printf "%s\n" "#define HAVE_ZLIB 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find z via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find z via pkg-config or in the standard locations" >&2;}

	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "*** zlib-devel package required
See \`config.log' for more details" "$LINENO" 5; }


fi


	if test -z "$BUILD_LINUX_TRUE"; then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for udev directories" >&5
printf %s "checking for udev directories... " >&6; }

# Check whether --with-udevdir was given.
if test ${with_udevdir+y}
then :
  withval=$with_udevdir; udevdir=$withval
else $as_nop
  udevdir=check
fi


	if test "x$udevdir" = xcheck
then :

		path1=/lib/udev
		path2=/usr/lib/udev
		default=$path2

		if test -d "$path1"
then :
  udevdir="$path1"
else $as_nop

			if test -d "$path2"
then :
  udevdir="$path2"
else $as_nop
  udevdir="$default"
fi

fi

fi


# Check whether --with-udevruledir was given.
if test ${with_udevruledir+y}
then :
  withval=$with_udevruledir; udevruledir=$withval
else $as_nop
  udevruledir="${udevdir}/rules.d"
fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $udevdir;$udevruledir" >&5
printf "%s\n" "$udevdir;$udevruledir" >&6; }


	# Check whether --enable-systemd was given.
if test ${enable_systemd+y}
then :
  enableval=$enable_systemd; enable_systemd=$enableval
else $as_nop
  enable_systemd=check
fi



# Check whether --with-systemdunitdir was given.
if test ${with_systemdunitdir+y}
then :
  withval=$with_systemdunitdir; systemdunitdir=$withval
else $as_nop
  systemdunitdir=/usr/lib/systemd/system
fi



# Check whether --with-systemdpresetdir was given.
if test ${with_systemdpresetdir+y}
then :
  withval=$with_systemdpresetdir; systemdpresetdir=$withval
else $as_nop
  systemdpresetdir=/usr/lib/systemd/system-preset
fi



# Check whether --with-systemdmodulesloaddir was given.
if test ${with_systemdmodulesloaddir+y}
then :
  withval=$with_systemdmodulesloaddir; systemdmodulesloaddir=$withval
else $as_nop
  systemdmodulesloaddir=/usr/lib/modules-load.d
fi



# Check whether --with-systemdgeneratordir was given.
if test ${with_systemdgeneratordir+y}
then :
  withval=$with_systemdgeneratordir; systemdgeneratordir=$withval
else $as_nop
  systemdgeneratordir=/usr/lib/systemd/system-generators
fi


	if test "x$enable_systemd" = xcheck
then :

		if systemctl --version >/dev/null 2>&1
then :
  enable_systemd=yes
else $as_nop
  enable_systemd=no
fi

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for systemd support" >&5
printf %s "checking for systemd support... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_systemd" >&5
printf "%s\n" "$enable_systemd" >&6; }

	if test "x$enable_systemd" = xyes
then :

		DEFINE_SYSTEMD='--with systemd --define "_unitdir $(systemdunitdir)" --define "_presetdir $(systemdpresetdir)" --define "_generatordir $(systemdgeneratordir)"'
		modulesloaddir=$systemdmodulesloaddir

else $as_nop

		DEFINE_SYSTEMD='--without systemd'

fi

	ZFS_INIT_SYSTEMD=$enable_systemd
	ZFS_WANT_MODULES_LOAD_D=$enable_systemd











    _header_found=
    _library_found=
    _pc_found=

    if test -n "libudev"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libudev" >&5
printf %s "checking for libudev... " >&6; }

if test -n "$LIBUDEV_CFLAGS"; then
    pkg_cv_LIBUDEV_CFLAGS="$LIBUDEV_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libudev\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libudev") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUDEV_CFLAGS=`$PKG_CONFIG --cflags "libudev" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBUDEV_LIBS"; then
    pkg_cv_LIBUDEV_LIBS="$LIBUDEV_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libudev\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libudev") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUDEV_LIBS=`$PKG_CONFIG --libs "libudev" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBUDEV_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libudev" 2>&1`
        else
	        LIBUDEV_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libudev" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBUDEV_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBUDEV_CFLAGS=$pkg_cv_LIBUDEV_CFLAGS
	LIBUDEV_LIBS=$pkg_cv_LIBUDEV_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBUDEV_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBUDEV_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBUDEV_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBUDEV_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBUDEV_CFLAGS"
	{ ac_cv_header_libudev_h=; unset ac_cv_header_libudev_h;}
	ac_fn_c_check_header_compile "$LINENO" "libudev.h" "ac_cv_header_libudev_h" "$ac_includes_default
"
if test "x$ac_cv_header_libudev_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header libudev.h for library udev is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBUDEV_LIBS="$LIBUDEV_LIBS -ludev"

fi
	LDFLAGS="$LDFLAGS $LIBUDEV_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for main in -ludev" >&5
printf %s "checking for main in -ludev... " >&6; }
if test ${ac_cv_lib_udev_main+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ludev  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main (void)
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_udev_main=yes
else $as_nop
  ac_cv_lib_udev_main=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_udev_main" >&5
printf "%s\n" "$ac_cv_lib_udev_main" >&6; }
if test "x$ac_cv_lib_udev_main" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library udev is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header libudev.h for library udev
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBUDEV_PC=libudev


fi

printf "%s\n" "#define HAVE_LIBUDEV 1" >>confdefs.h

	user_libudev=yes

else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find udev via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find udev via pkg-config or in the standard locations" >&2;}
	user_libudev=no

fi


	if test "x$user_libudev" = xyes
then :


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


	    CFLAGS="$CFLAGS $LIBUDEV_CFLAGS"
	    LIBS="$LIBUDEV_LIBS $LIBS"

	    ac_fn_c_check_func "$LINENO" "udev_device_get_is_initialized" "ac_cv_func_udev_device_get_is_initialized"
if test "x$ac_cv_func_udev_device_get_is_initialized" = xyes
then :
  printf "%s\n" "#define HAVE_UDEV_DEVICE_GET_IS_INITIALIZED 1" >>confdefs.h

fi



  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


fi





    _header_found=
    _library_found=
    _pc_found=

    if test -n "uuid"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uuid" >&5
printf %s "checking for uuid... " >&6; }

if test -n "$LIBUUID_CFLAGS"; then
    pkg_cv_LIBUUID_CFLAGS="$LIBUUID_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"uuid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "uuid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUUID_CFLAGS=`$PKG_CONFIG --cflags "uuid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBUUID_LIBS"; then
    pkg_cv_LIBUUID_LIBS="$LIBUUID_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"uuid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "uuid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUUID_LIBS=`$PKG_CONFIG --libs "uuid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBUUID_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "uuid" 2>&1`
        else
	        LIBUUID_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "uuid" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBUUID_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBUUID_CFLAGS=$pkg_cv_LIBUUID_CFLAGS
	LIBUUID_LIBS=$pkg_cv_LIBUUID_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBUUID_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBUUID_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBUUID_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBUUID_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBUUID_CFLAGS"
	{ ac_cv_header_uuid_uuid_h=; unset ac_cv_header_uuid_uuid_h;}
	ac_fn_c_check_header_compile "$LINENO" "uuid/uuid.h" "ac_cv_header_uuid_uuid_h" "$ac_includes_default
"
if test "x$ac_cv_header_uuid_uuid_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header uuid/uuid.h for library uuid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBUUID_LIBS="$LIBUUID_LIBS -luuid"

fi
	LDFLAGS="$LDFLAGS $LIBUUID_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uuid_generate in -luuid" >&5
printf %s "checking for uuid_generate in -luuid... " >&6; }
if test ${ac_cv_lib_uuid_uuid_generate+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-luuid  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char uuid_generate ();
int
main (void)
{
return uuid_generate ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_uuid_uuid_generate=yes
else $as_nop
  ac_cv_lib_uuid_uuid_generate=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_uuid_uuid_generate" >&5
printf "%s\n" "$ac_cv_lib_uuid_uuid_generate" >&6; }
if test "x$ac_cv_lib_uuid_uuid_generate" = xyes
then :
  :
else $as_nop
  _libcheck=
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uuid_is_null in -luuid" >&5
printf %s "checking for uuid_is_null in -luuid... " >&6; }
if test ${ac_cv_lib_uuid_uuid_is_null+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-luuid  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char uuid_is_null ();
int
main (void)
{
return uuid_is_null ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_uuid_uuid_is_null=yes
else $as_nop
  ac_cv_lib_uuid_uuid_is_null=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_uuid_uuid_is_null" >&5
printf "%s\n" "$ac_cv_lib_uuid_uuid_is_null" >&6; }
if test "x$ac_cv_lib_uuid_uuid_is_null" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library uuid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header uuid/uuid.h for library uuid
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBUUID_PC=uuid


fi

printf "%s\n" "#define HAVE_LIBUUID 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find uuid via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find uuid via pkg-config or in the standard locations" >&2;}

	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "*** libuuid-devel package required
See \`config.log' for more details" "$LINENO" 5; }


fi






    _header_found=
    _library_found=
    _pc_found=

    if test -n "blkid"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for blkid" >&5
printf %s "checking for blkid... " >&6; }

if test -n "$LIBBLKID_CFLAGS"; then
    pkg_cv_LIBBLKID_CFLAGS="$LIBBLKID_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"blkid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "blkid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBBLKID_CFLAGS=`$PKG_CONFIG --cflags "blkid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBBLKID_LIBS"; then
    pkg_cv_LIBBLKID_LIBS="$LIBBLKID_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"blkid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "blkid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBBLKID_LIBS=`$PKG_CONFIG --libs "blkid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBBLKID_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "blkid" 2>&1`
        else
	        LIBBLKID_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "blkid" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBBLKID_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBBLKID_CFLAGS=$pkg_cv_LIBBLKID_CFLAGS
	LIBBLKID_LIBS=$pkg_cv_LIBBLKID_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBBLKID_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBBLKID_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBBLKID_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBBLKID_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBBLKID_CFLAGS"
	{ ac_cv_header_blkid_blkid_h=; unset ac_cv_header_blkid_blkid_h;}
	ac_fn_c_check_header_compile "$LINENO" "blkid/blkid.h" "ac_cv_header_blkid_blkid_h" "$ac_includes_default
"
if test "x$ac_cv_header_blkid_blkid_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header blkid/blkid.h for library blkid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBBLKID_LIBS="$LIBBLKID_LIBS -lblkid"

fi
	LDFLAGS="$LDFLAGS $LIBBLKID_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for main in -lblkid" >&5
printf %s "checking for main in -lblkid... " >&6; }
if test ${ac_cv_lib_blkid_main+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lblkid  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main (void)
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_blkid_main=yes
else $as_nop
  ac_cv_lib_blkid_main=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_blkid_main" >&5
printf "%s\n" "$ac_cv_lib_blkid_main" >&6; }
if test "x$ac_cv_lib_blkid_main" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library blkid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header blkid/blkid.h for library blkid
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBBLKID_PC=blkid


fi

printf "%s\n" "#define HAVE_LIBBLKID 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find blkid via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find blkid via pkg-config or in the standard locations" >&2;}

		{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "
		*** blkid.h missing, libblkid-devel package required
See \`config.log' for more details" "$LINENO" 5; }

fi



fi


# Check whether --with-tirpc was given.
if test ${with_tirpc+y}
then :
  withval=$with_tirpc;
else $as_nop
  with_tirpc=check
fi


	have_xdr=

        if test "x$with_tirpc" != "xyes"
then :

	    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for library containing xdrmem_create" >&5
printf %s "checking for library containing xdrmem_create... " >&6; }
if test ${ac_cv_search_xdrmem_create+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char xdrmem_create ();
int
main (void)
{
return xdrmem_create ();
  ;
  return 0;
}
_ACEOF
for ac_lib in ''
do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_search_xdrmem_create=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext
  if test ${ac_cv_search_xdrmem_create+y}
then :
  break
fi
done
if test ${ac_cv_search_xdrmem_create+y}
then :

else $as_nop
  ac_cv_search_xdrmem_create=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_xdrmem_create" >&5
printf "%s\n" "$ac_cv_search_xdrmem_create" >&6; }
ac_res=$ac_cv_search_xdrmem_create
if test "$ac_res" != no
then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  have_xdr=1
else $as_nop

		if test "x$with_tirpc" = "xno"
then :

		    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "xdrmem_create() requires sunrpc support in libc if not using libtirpc
See \`config.log' for more details" "$LINENO" 5; }

fi

fi


fi

	if test "x$have_xdr" = "x"
then :




    _header_found=
    _library_found=
    _pc_found=

    if test -n "libtirpc"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libtirpc" >&5
printf %s "checking for libtirpc... " >&6; }

if test -n "$LIBTIRPC_CFLAGS"; then
    pkg_cv_LIBTIRPC_CFLAGS="$LIBTIRPC_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libtirpc\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libtirpc") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBTIRPC_CFLAGS=`$PKG_CONFIG --cflags "libtirpc" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBTIRPC_LIBS"; then
    pkg_cv_LIBTIRPC_LIBS="$LIBTIRPC_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libtirpc\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libtirpc") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBTIRPC_LIBS=`$PKG_CONFIG --libs "libtirpc" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBTIRPC_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libtirpc" 2>&1`
        else
	        LIBTIRPC_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libtirpc" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBTIRPC_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBTIRPC_CFLAGS=$pkg_cv_LIBTIRPC_CFLAGS
	LIBTIRPC_LIBS=$pkg_cv_LIBTIRPC_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBTIRPC_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBTIRPC_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBTIRPC_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBTIRPC_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBTIRPC_CFLAGS"
	{ ac_cv_header_rpc_xdr_h=; unset ac_cv_header_rpc_xdr_h;}
	ac_fn_c_check_header_compile "$LINENO" "rpc/xdr.h" "ac_cv_header_rpc_xdr_h" "$ac_includes_default
"
if test "x$ac_cv_header_rpc_xdr_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header rpc/xdr.h for library tirpc is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES

	    LIBTIRPC_CFLAGS="-I$lt_sysroot$_prefixdir/include/tirpc"
	    CFLAGS="$orig_CFLAGS $LIBTIRPC_CFLAGS"
	    { ac_cv_header_rpc_xdr_h=; unset ac_cv_header_rpc_xdr_h;}
	    ac_fn_c_check_header_compile "$LINENO" "rpc/xdr.h" "ac_cv_header_rpc_xdr_h" "$ac_includes_default
"
if test "x$ac_cv_header_rpc_xdr_h" = xyes
then :

		_header_found=1
		break

fi



    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBTIRPC_LIBS="$LIBTIRPC_LIBS -ltirpc"

fi
	LDFLAGS="$LDFLAGS $LIBTIRPC_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for xdrmem_create in -ltirpc" >&5
printf %s "checking for xdrmem_create in -ltirpc... " >&6; }
if test ${ac_cv_lib_tirpc_xdrmem_create+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ltirpc  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char xdrmem_create ();
int
main (void)
{
return xdrmem_create ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_tirpc_xdrmem_create=yes
else $as_nop
  ac_cv_lib_tirpc_xdrmem_create=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_tirpc_xdrmem_create" >&5
printf "%s\n" "$ac_cv_lib_tirpc_xdrmem_create" >&6; }
if test "x$ac_cv_lib_tirpc_xdrmem_create" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library tirpc is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header rpc/xdr.h for library tirpc
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBTIRPC_PC=libtirpc


fi

printf "%s\n" "#define HAVE_LIBTIRPC 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find tirpc via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find tirpc via pkg-config or in the standard locations" >&2;}

		if test "x$with_tirpc" = "xyes"
then :

		    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "--with-tirpc was given, but libtirpc is not available, try installing libtirpc-devel
See \`config.log' for more details" "$LINENO" 5; }

else $as_nop
  		    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "neither libc sunrpc support nor libtirpc is available, try installing libtirpc-devel
See \`config.log' for more details" "$LINENO" 5; }

fi


fi


fi





    _header_found=
    _library_found=
    _pc_found=

    if test -n "libcrypto"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libcrypto" >&5
printf %s "checking for libcrypto... " >&6; }

if test -n "$LIBCRYPTO_CFLAGS"; then
    pkg_cv_LIBCRYPTO_CFLAGS="$LIBCRYPTO_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libcrypto\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libcrypto") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBCRYPTO_CFLAGS=`$PKG_CONFIG --cflags "libcrypto" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBCRYPTO_LIBS"; then
    pkg_cv_LIBCRYPTO_LIBS="$LIBCRYPTO_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libcrypto\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libcrypto") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBCRYPTO_LIBS=`$PKG_CONFIG --libs "libcrypto" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBCRYPTO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libcrypto" 2>&1`
        else
	        LIBCRYPTO_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libcrypto" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBCRYPTO_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBCRYPTO_CFLAGS=$pkg_cv_LIBCRYPTO_CFLAGS
	LIBCRYPTO_LIBS=$pkg_cv_LIBCRYPTO_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBCRYPTO_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBCRYPTO_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBCRYPTO_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBCRYPTO_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBCRYPTO_CFLAGS"
	{ ac_cv_header_openssl_evp_h=; unset ac_cv_header_openssl_evp_h;}
	ac_fn_c_check_header_compile "$LINENO" "openssl/evp.h" "ac_cv_header_openssl_evp_h" "$ac_includes_default
"
if test "x$ac_cv_header_openssl_evp_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header openssl/evp.h for library crypto is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBCRYPTO_LIBS="$LIBCRYPTO_LIBS -lcrypto"

fi
	LDFLAGS="$LDFLAGS $LIBCRYPTO_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for PKCS5_PBKDF2_HMAC_SHA1 in -lcrypto" >&5
printf %s "checking for PKCS5_PBKDF2_HMAC_SHA1 in -lcrypto... " >&6; }
if test ${ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lcrypto  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char PKCS5_PBKDF2_HMAC_SHA1 ();
int
main (void)
{
return PKCS5_PBKDF2_HMAC_SHA1 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1=yes
else $as_nop
  ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1" >&5
printf "%s\n" "$ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1" >&6; }
if test "x$ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library crypto is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header openssl/evp.h for library crypto
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBCRYPTO_PC=libcrypto


fi

printf "%s\n" "#define HAVE_LIBCRYPTO 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find crypto via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find crypto via pkg-config or in the standard locations" >&2;}

		{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "
		*** evp.h missing, libssl-devel package required
See \`config.log' for more details" "$LINENO" 5; }

fi






    _header_found=
    _library_found=
    _pc_found=

    if test -n ""
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for " >&5
printf %s "checking for ... " >&6; }

if test -n "$LIBAIO_CFLAGS"; then
    pkg_cv_LIBAIO_CFLAGS="$LIBAIO_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBAIO_CFLAGS=`$PKG_CONFIG --cflags "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBAIO_LIBS"; then
    pkg_cv_LIBAIO_LIBS="$LIBAIO_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBAIO_LIBS=`$PKG_CONFIG --libs "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBAIO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "" 2>&1`
        else
	        LIBAIO_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBAIO_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBAIO_CFLAGS=$pkg_cv_LIBAIO_CFLAGS
	LIBAIO_LIBS=$pkg_cv_LIBAIO_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBAIO_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBAIO_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBAIO_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBAIO_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBAIO_CFLAGS"
	{ ac_cv_header_libaio_h=; unset ac_cv_header_libaio_h;}
	ac_fn_c_check_header_compile "$LINENO" "libaio.h" "ac_cv_header_libaio_h" "$ac_includes_default
"
if test "x$ac_cv_header_libaio_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header libaio.h for library aio is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBAIO_LIBS="$LIBAIO_LIBS -laio"

fi
	LDFLAGS="$LDFLAGS $LIBAIO_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for main in -laio" >&5
printf %s "checking for main in -laio... " >&6; }
if test ${ac_cv_lib_aio_main+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-laio  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main (void)
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_aio_main=yes
else $as_nop
  ac_cv_lib_aio_main=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_aio_main" >&5
printf "%s\n" "$ac_cv_lib_aio_main" >&6; }
if test "x$ac_cv_lib_aio_main" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library aio is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header libaio.h for library aio
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :



fi

printf "%s\n" "#define HAVE_LIBAIO 1" >>confdefs.h

	user_libaio=yes

else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find aio via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find aio via pkg-config or in the standard locations" >&2;}
	user_libaio=no

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether -latomic is required" >&5
printf %s "checking whether -latomic is required... " >&6; }

	saved_libs="$LIBS"
	LIBS="$LIBS -latomic"
	LIBATOMIC_LIBS=""

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		LIBS="$saved_libs"
		saved_cflags="$CFLAGS"
		CFLAGS="$CFLAGS -isystem lib/libspl/include"
		cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include "lib/libspl/atomic.c"
int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

else $as_nop
  LIBATOMIC_LIBS="-latomic"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
		CFLAGS="$saved_cflags"

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

	if test -n "$LIBATOMIC_LIBS"; then
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
	else
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	fi

	LIBS="$saved_libs"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libfetch" >&5
printf %s "checking for libfetch... " >&6; }
	LIBFETCH_LIBS=
	LIBFETCH_IS_FETCH=0
	LIBFETCH_IS_LIBCURL=0
	LIBFETCH_DYNAMIC=0
	LIBFETCH_SONAME=
	have_libfetch=

	saved_libs="$LIBS"
	LIBS="$LIBS -lfetch"
	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <sys/param.h>
		#include <stdio.h>
		#include <fetch.h>

int
main (void)
{
fetchGetURL("", "");
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		have_libfetch=1
		LIBFETCH_IS_FETCH=1
		LIBFETCH_DYNAMIC=1
		LIBFETCH_SONAME="libfetch.so.6"
		LIBFETCH_LIBS="-ldl"
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: fetch(3)" >&5
printf "%s\n" "fetch(3)" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
	LIBS="$saved_libs"

	if test -z "$have_libfetch"; then
		if curl-config --protocols 2>/dev/null | grep -q HTTPS &&
		    test "$(printf "%u" "0x$(curl-config --vernum)")" -ge "$(printf "%u" "0x071000")"; then
			have_libfetch=1
			LIBFETCH_IS_LIBCURL=1
			if test "$(curl-config --built-shared)" = "yes"; then
				LIBFETCH_DYNAMIC=1
				LIBFETCH_SONAME="libcurl.so.4"
				LIBFETCH_LIBS="-ldl"
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: libcurl" >&5
printf "%s\n" "libcurl" >&6; }
			else
				LIBFETCH_LIBS="$(curl-config --libs)"
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: libcurl (static)" >&5
printf "%s\n" "libcurl (static)" >&6; }
			fi

			CCFLAGS="$CCFLAGS $(curl-config --cflags)"
		fi
	fi

	if test -z "$have_libfetch"; then
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none" >&5
printf "%s\n" "none" >&6; }
	fi





printf "%s\n" "#define LIBFETCH_IS_FETCH $LIBFETCH_IS_FETCH" >>confdefs.h


printf "%s\n" "#define LIBFETCH_IS_LIBCURL $LIBFETCH_IS_LIBCURL" >>confdefs.h


printf "%s\n" "#define LIBFETCH_DYNAMIC $LIBFETCH_DYNAMIC" >>confdefs.h


printf "%s\n" "#define LIBFETCH_SONAME \"$LIBFETCH_SONAME\"" >>confdefs.h






    _header_found=
    _library_found=
    _pc_found=

    if test -n ""
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for " >&5
printf %s "checking for ... " >&6; }

if test -n "$AIO_H_CFLAGS"; then
    pkg_cv_AIO_H_CFLAGS="$AIO_H_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_AIO_H_CFLAGS=`$PKG_CONFIG --cflags "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$AIO_H_LIBS"; then
    pkg_cv_AIO_H_LIBS="$AIO_H_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_AIO_H_LIBS=`$PKG_CONFIG --libs "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        AIO_H_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "" 2>&1`
        else
	        AIO_H_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$AIO_H_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	AIO_H_CFLAGS=$pkg_cv_AIO_H_CFLAGS
	AIO_H_LIBS=$pkg_cv_AIO_H_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$AIO_H_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$AIO_H_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    AIO_H_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		AIO_H_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $AIO_H_CFLAGS"
	{ ac_cv_header_aio_h=; unset ac_cv_header_aio_h;}
	ac_fn_c_check_header_compile "$LINENO" "aio.h" "ac_cv_header_aio_h" "$ac_includes_default
"
if test "x$ac_cv_header_aio_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header aio.h for library rt is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    AIO_H_LIBS="$AIO_H_LIBS -lrt"

fi
	LDFLAGS="$LDFLAGS $AIO_H_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for lio_listio in -lrt" >&5
printf %s "checking for lio_listio in -lrt... " >&6; }
if test ${ac_cv_lib_rt_lio_listio+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lrt  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char lio_listio ();
int
main (void)
{
return lio_listio ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_rt_lio_listio=yes
else $as_nop
  ac_cv_lib_rt_lio_listio=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_lio_listio" >&5
printf "%s\n" "$ac_cv_lib_rt_lio_listio" >&6; }
if test "x$ac_cv_lib_rt_lio_listio" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library rt is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header aio.h for library rt
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :



fi

printf "%s\n" "#define HAVE_AIO_H 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find rt via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find rt via pkg-config or in the standard locations" >&2;}


fi



	ac_fn_c_check_func "$LINENO" "clock_gettime" "ac_cv_func_clock_gettime"
if test "x$ac_cv_func_clock_gettime" = xyes
then :

else $as_nop

	    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for clock_gettime in -lrt" >&5
printf %s "checking for clock_gettime in -lrt... " >&6; }
if test ${ac_cv_lib_rt_clock_gettime+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lrt  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char clock_gettime ();
int
main (void)
{
return clock_gettime ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_rt_clock_gettime=yes
else $as_nop
  ac_cv_lib_rt_clock_gettime=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_clock_gettime" >&5
printf "%s\n" "$ac_cv_lib_rt_clock_gettime" >&6; }
if test "x$ac_cv_lib_rt_clock_gettime" = xyes
then :

		LIBCLOCK_GETTIME=-lrt

else $as_nop

		{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "*** clock_gettime is missing in libc and librt
See \`config.log' for more details" "$LINENO" 5; }

fi


fi



	# Check whether --enable-pam was given.
if test ${enable_pam+y}
then :
  enableval=$enable_pam; enable_pam=$enableval
else $as_nop
  enable_pam=check
fi



# Check whether --with-pammoduledir was given.
if test ${with_pammoduledir+y}
then :
  withval=$with_pammoduledir; pammoduledir="$withval"
else $as_nop
  pammoduledir=$libdir/security
fi



# Check whether --with-pamconfigsdir was given.
if test ${with_pamconfigsdir+y}
then :
  withval=$with_pamconfigsdir; pamconfigsdir="$withval"
else $as_nop
  pamconfigsdir='${datadir}/pam-configs'
fi


	if test "x$enable_pam" != "xno"
then :

		       for ac_header in security/pam_modules.h
do :
  ac_fn_c_check_header_compile "$LINENO" "security/pam_modules.h" "ac_cv_header_security_pam_modules_h" "$ac_includes_default"
if test "x$ac_cv_header_security_pam_modules_h" = xyes
then :
  printf "%s\n" "#define HAVE_SECURITY_PAM_MODULES_H 1" >>confdefs.h

			enable_pam=yes

else $as_nop

			if test "x$enable_pam" = "xyes"
then :

				{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "
	*** security/pam_modules.h missing, libpam0g-dev package required

See \`config.log' for more details" "$LINENO" 5; }

else $as_nop

				enable_pam=no

fi

fi

done

fi
	if test "x$enable_pam" = "xyes"
then :

		DEFINE_PAM='--with pam'

fi





	if test "x$runstatedir" = x; then
		runstatedir='${localstatedir}/run'

	fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking makedev() is declared in sys/sysmacros.h" >&5
printf %s "checking makedev() is declared in sys/sysmacros.h... " >&6; }
	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <sys/sysmacros.h>

int
main (void)
{

		int k;
		k = makedev(0,0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MAKEDEV_IN_SYSMACROS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking makedev() is declared in sys/mkdev.h" >&5
printf %s "checking makedev() is declared in sys/mkdev.h... " >&6; }
	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <sys/mkdev.h>

int
main (void)
{

		int k;
		k = makedev(0,0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MAKEDEV_IN_MKDEV 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext



# Check whether --with-zfsexecdir was given.
if test ${with_zfsexecdir+y}
then :
  withval=$with_zfsexecdir; zfsexecdir=$withval
else $as_nop
  zfsexecdir="${libexecdir}/zfs"
fi





	ac_fn_c_check_func "$LINENO" "issetugid" "ac_cv_func_issetugid"
if test "x$ac_cv_func_issetugid" = xyes
then :
  printf "%s\n" "#define HAVE_ISSETUGID 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "mlockall" "ac_cv_func_mlockall"
if test "x$ac_cv_func_mlockall" = xyes
then :
  printf "%s\n" "#define HAVE_MLOCKALL 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "strlcat" "ac_cv_func_strlcat"
if test "x$ac_cv_func_strlcat" = xyes
then :
  printf "%s\n" "#define HAVE_STRLCAT 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "strlcpy" "ac_cv_func_strlcpy"
if test "x$ac_cv_func_strlcpy" = xyes
then :
  printf "%s\n" "#define HAVE_STRLCPY 1" >>confdefs.h

fi



   ;;
		all)





















    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for CFPreferencesCopyAppValue" >&5
printf %s "checking for CFPreferencesCopyAppValue... " >&6; }
if test ${gt_cv_func_CFPreferencesCopyAppValue+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <CoreFoundation/CFPreferences.h>
int
main (void)
{
CFPreferencesCopyAppValue(NULL, NULL)
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  gt_cv_func_CFPreferencesCopyAppValue=yes
else $as_nop
  gt_cv_func_CFPreferencesCopyAppValue=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
     LIBS="$gt_save_LIBS"
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_cv_func_CFPreferencesCopyAppValue" >&5
printf "%s\n" "$gt_cv_func_CFPreferencesCopyAppValue" >&6; }
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes; then

printf "%s\n" "#define HAVE_CFPREFERENCESCOPYAPPVALUE 1" >>confdefs.h

  fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for CFLocaleCopyCurrent" >&5
printf %s "checking for CFLocaleCopyCurrent... " >&6; }
if test ${gt_cv_func_CFLocaleCopyCurrent+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <CoreFoundation/CFLocale.h>
int
main (void)
{
CFLocaleCopyCurrent();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  gt_cv_func_CFLocaleCopyCurrent=yes
else $as_nop
  gt_cv_func_CFLocaleCopyCurrent=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
     LIBS="$gt_save_LIBS"
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_cv_func_CFLocaleCopyCurrent" >&5
printf "%s\n" "$gt_cv_func_CFLocaleCopyCurrent" >&6; }
  if test $gt_cv_func_CFLocaleCopyCurrent = yes; then

printf "%s\n" "#define HAVE_CFLOCALECOPYCURRENT 1" >>confdefs.h

  fi
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for CFLocaleCopyPreferredLanguages" >&5
printf %s "checking for CFLocaleCopyPreferredLanguages... " >&6; }
if test ${gt_cv_func_CFLocaleCopyPreferredLanguages+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_LIBS="$LIBS"
     LIBS="$LIBS -Wl,-framework -Wl,CoreFoundation"
     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <CoreFoundation/CFLocale.h>
int
main (void)
{
CFLocaleCopyPreferredLanguages();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  gt_cv_func_CFLocaleCopyPreferredLanguages=yes
else $as_nop
  gt_cv_func_CFLocaleCopyPreferredLanguages=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
     LIBS="$gt_save_LIBS"
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_cv_func_CFLocaleCopyPreferredLanguages" >&5
printf "%s\n" "$gt_cv_func_CFLocaleCopyPreferredLanguages" >&6; }
  if test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then

printf "%s\n" "#define HAVE_CFLOCALECOPYPREFERREDLANGUAGES 1" >>confdefs.h

  fi
  INTL_MACOSX_LIBS=
  if test $gt_cv_func_CFPreferencesCopyAppValue = yes \
     || test $gt_cv_func_CFLocaleCopyCurrent = yes \
     || test $gt_cv_func_CFLocaleCopyPreferredLanguages = yes; then
    INTL_MACOSX_LIBS="-Wl,-framework -Wl,CoreFoundation"
  fi






  LIBINTL=
  LTLIBINTL=
  POSUB=

    case " $gt_needs " in
    *" need-formatstring-macros "*) gt_api_version=3 ;;
    *" need-ngettext "*) gt_api_version=2 ;;
    *) gt_api_version=1 ;;
  esac
  gt_func_gnugettext_libc="gt_cv_func_gnugettext${gt_api_version}_libc"
  gt_func_gnugettext_libintl="gt_cv_func_gnugettext${gt_api_version}_libintl"

    if test "$USE_NLS" = "yes"; then
    gt_use_preinstalled_gnugettext=no


        if test $gt_api_version -ge 3; then
          gt_revision_test_code='
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
#define __GNU_GETTEXT_SUPPORTED_REVISION(major) ((major) == 0 ? 0 : -1)
#endif
typedef int array [2 * (__GNU_GETTEXT_SUPPORTED_REVISION(0) >= 1) - 1];
'
        else
          gt_revision_test_code=
        fi
        if test $gt_api_version -ge 2; then
          gt_expression_test_code=' + * ngettext ("", "", 0)'
        else
          gt_expression_test_code=
        fi

        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU gettext in libc" >&5
printf %s "checking for GNU gettext in libc... " >&6; }
if eval test \${$gt_func_gnugettext_libc+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <libintl.h>
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
extern int _nl_msg_cat_cntr;
extern int *_nl_domain_bindings;
#define __GNU_GETTEXT_SYMBOL_EXPRESSION (_nl_msg_cat_cntr + *_nl_domain_bindings)
#else
#define __GNU_GETTEXT_SYMBOL_EXPRESSION 0
#endif
$gt_revision_test_code

int
main (void)
{

bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + __GNU_GETTEXT_SYMBOL_EXPRESSION

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  eval "$gt_func_gnugettext_libc=yes"
else $as_nop
  eval "$gt_func_gnugettext_libc=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
fi
eval ac_res=\$$gt_func_gnugettext_libc
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }

        if { eval "gt_val=\$$gt_func_gnugettext_libc"; test "$gt_val" != "yes"; }; then





          am_save_CPPFLAGS="$CPPFLAGS"

  for element in $INCICONV; do
    haveit=
    for x in $CPPFLAGS; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

      if test "X$x" = "X$element"; then
        haveit=yes
        break
      fi
    done
    if test -z "$haveit"; then
      CPPFLAGS="${CPPFLAGS}${CPPFLAGS:+ }$element"
    fi
  done


  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for iconv" >&5
printf %s "checking for iconv... " >&6; }
if test ${am_cv_func_iconv+y}
then :
  printf %s "(cached) " >&6
else $as_nop

    am_cv_func_iconv="no, consider installing GNU libiconv"
    am_cv_lib_iconv=no
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <stdlib.h>
#include <iconv.h>

int
main (void)
{
iconv_t cd = iconv_open("","");
           iconv(cd,NULL,NULL,NULL,NULL);
           iconv_close(cd);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  am_cv_func_iconv=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
    if test "$am_cv_func_iconv" != yes; then
      am_save_LIBS="$LIBS"
      LIBS="$LIBS $LIBICONV"
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <stdlib.h>
#include <iconv.h>

int
main (void)
{
iconv_t cd = iconv_open("","");
             iconv(cd,NULL,NULL,NULL,NULL);
             iconv_close(cd);
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  am_cv_lib_iconv=yes
        am_cv_func_iconv=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
      LIBS="$am_save_LIBS"
    fi

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_func_iconv" >&5
printf "%s\n" "$am_cv_func_iconv" >&6; }
  if test "$am_cv_func_iconv" = yes; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for working iconv" >&5
printf %s "checking for working iconv... " >&6; }
if test ${am_cv_func_iconv_works+y}
then :
  printf %s "(cached) " >&6
else $as_nop

                  am_save_LIBS="$LIBS"
      if test $am_cv_lib_iconv = yes; then
        LIBS="$LIBS $LIBICONV"
      fi
      am_cv_func_iconv_works=no
      for ac_iconv_const in '' 'const'; do
        if test "$cross_compiling" = yes
then :
  case "$host_os" in
             aix* | hpux*) am_cv_func_iconv_works="guessing no" ;;
             *)            am_cv_func_iconv_works="guessing yes" ;;
           esac
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <iconv.h>
#include <string.h>

#ifndef ICONV_CONST
# define ICONV_CONST $ac_iconv_const
#endif

int
main (void)
{
int result = 0;
  /* Test against AIX 5.1 bug: Failures are not distinguishable from successful
     returns.  */
  {
    iconv_t cd_utf8_to_88591 = iconv_open ("ISO8859-1", "UTF-8");
    if (cd_utf8_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\342\202\254"; /* EURO SIGN */
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_utf8_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 1;
        iconv_close (cd_utf8_to_88591);
      }
  }
  /* Test against Solaris 10 bug: Failures are not distinguishable from
     successful returns.  */
  {
    iconv_t cd_ascii_to_88591 = iconv_open ("ISO8859-1", "646");
    if (cd_ascii_to_88591 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\263";
        char buf[10];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_ascii_to_88591,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res == 0)
          result |= 2;
        iconv_close (cd_ascii_to_88591);
      }
  }
  /* Test against AIX 6.1..7.1 bug: Buffer overrun.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("UTF-8", "ISO-8859-1");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304";
        static char buf[2] = { (char)0xDE, (char)0xAD };
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = 1;
        char *outptr = buf;
        size_t outbytesleft = 1;
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if (res != (size_t)(-1) || outptr - buf > 1 || buf[1] != (char)0xAD)
          result |= 4;
        iconv_close (cd_88591_to_utf8);
      }
  }
#if 0 /* This bug could be worked around by the caller.  */
  /* Test against HP-UX 11.11 bug: Positive return value instead of 0.  */
  {
    iconv_t cd_88591_to_utf8 = iconv_open ("utf8", "iso88591");
    if (cd_88591_to_utf8 != (iconv_t)(-1))
      {
        static ICONV_CONST char input[] = "\304rger mit b\366sen B\374bchen ohne Augenma\337";
        char buf[50];
        ICONV_CONST char *inptr = input;
        size_t inbytesleft = strlen (input);
        char *outptr = buf;
        size_t outbytesleft = sizeof (buf);
        size_t res = iconv (cd_88591_to_utf8,
                            &inptr, &inbytesleft,
                            &outptr, &outbytesleft);
        if ((int)res > 0)
          result |= 8;
        iconv_close (cd_88591_to_utf8);
      }
  }
#endif
  /* Test against HP-UX 11.11 bug: No converter from EUC-JP to UTF-8 is
     provided.  */
  {
    /* Try standardized names.  */
    iconv_t cd1 = iconv_open ("UTF-8", "EUC-JP");
    /* Try IRIX, OSF/1 names.  */
    iconv_t cd2 = iconv_open ("UTF-8", "eucJP");
    /* Try AIX names.  */
    iconv_t cd3 = iconv_open ("UTF-8", "IBM-eucJP");
    /* Try HP-UX names.  */
    iconv_t cd4 = iconv_open ("utf8", "eucJP");
    if (cd1 == (iconv_t)(-1) && cd2 == (iconv_t)(-1)
        && cd3 == (iconv_t)(-1) && cd4 == (iconv_t)(-1))
      result |= 16;
    if (cd1 != (iconv_t)(-1))
      iconv_close (cd1);
    if (cd2 != (iconv_t)(-1))
      iconv_close (cd2);
    if (cd3 != (iconv_t)(-1))
      iconv_close (cd3);
    if (cd4 != (iconv_t)(-1))
      iconv_close (cd4);
  }
  return result;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"
then :
  am_cv_func_iconv_works=yes
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

        test "$am_cv_func_iconv_works" = no || break
      done
      LIBS="$am_save_LIBS"

fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $am_cv_func_iconv_works" >&5
printf "%s\n" "$am_cv_func_iconv_works" >&6; }
    case "$am_cv_func_iconv_works" in
      *no) am_func_iconv=no am_cv_lib_iconv=no ;;
      *)   am_func_iconv=yes ;;
    esac
  else
    am_func_iconv=no am_cv_lib_iconv=no
  fi
  if test "$am_func_iconv" = yes; then

printf "%s\n" "#define HAVE_ICONV 1" >>confdefs.h

  fi
  if test "$am_cv_lib_iconv" = yes; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to link with libiconv" >&5
printf %s "checking how to link with libiconv... " >&6; }
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LIBICONV" >&5
printf "%s\n" "$LIBICONV" >&6; }
  else
            CPPFLAGS="$am_save_CPPFLAGS"
    LIBICONV=
    LTLIBICONV=
  fi










    use_additional=yes

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"

    eval additional_includedir=\"$includedir\"
    eval additional_libdir=\"$libdir\"

  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"


# Check whether --with-libintl-prefix was given.
if test ${with_libintl_prefix+y}
then :
  withval=$with_libintl_prefix;
    if test "X$withval" = "Xno"; then
      use_additional=no
    else
      if test "X$withval" = "X"; then

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"

          eval additional_includedir=\"$includedir\"
          eval additional_libdir=\"$libdir\"

  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

      else
        additional_includedir="$withval/include"
        additional_libdir="$withval/$acl_libdirstem"
        if test "$acl_libdirstem2" != "$acl_libdirstem" \
           && test ! -d "$withval/$acl_libdirstem"; then
          additional_libdir="$withval/$acl_libdirstem2"
        fi
      fi
    fi

fi

      LIBINTL=
  LTLIBINTL=
  INCINTL=
  LIBINTL_PREFIX=
      HAVE_LIBINTL=
  rpathdirs=
  ltrpathdirs=
  names_already_handled=
  names_next_round='intl '
  while test -n "$names_next_round"; do
    names_this_round="$names_next_round"
    names_next_round=
    for name in $names_this_round; do
      already_handled=
      for n in $names_already_handled; do
        if test "$n" = "$name"; then
          already_handled=yes
          break
        fi
      done
      if test -z "$already_handled"; then
        names_already_handled="$names_already_handled $name"
                        uppername=`echo "$name" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`
        eval value=\"\$HAVE_LIB$uppername\"
        if test -n "$value"; then
          if test "$value" = yes; then
            eval value=\"\$LIB$uppername\"
            test -z "$value" || LIBINTL="${LIBINTL}${LIBINTL:+ }$value"
            eval value=\"\$LTLIB$uppername\"
            test -z "$value" || LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }$value"
          else
                                    :
          fi
        else
                              found_dir=
          found_la=
          found_so=
          found_a=
          eval libname=\"$acl_libname_spec\"    # typically: libname=lib$name
          if test -n "$acl_shlibext"; then
            shrext=".$acl_shlibext"             # typically: shrext=.so
          else
            shrext=
          fi
          if test $use_additional = yes; then
            dir="$additional_libdir"
                                    if test -n "$acl_shlibext"; then
              if test -f "$dir/$libname$shrext"; then
                found_dir="$dir"
                found_so="$dir/$libname$shrext"
              else
                if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                  ver=`(cd "$dir" && \
                        for f in "$libname$shrext".*; do echo "$f"; done \
                        | sed -e "s,^$libname$shrext\\\\.,," \
                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                        | sed 1q ) 2>/dev/null`
                  if test -n "$ver" && test -f "$dir/$libname$shrext.$ver"; then
                    found_dir="$dir"
                    found_so="$dir/$libname$shrext.$ver"
                  fi
                else
                  eval library_names=\"$acl_library_names_spec\"
                  for f in $library_names; do
                    if test -f "$dir/$f"; then
                      found_dir="$dir"
                      found_so="$dir/$f"
                      break
                    fi
                  done
                fi
              fi
            fi
                        if test "X$found_dir" = "X"; then
              if test -f "$dir/$libname.$acl_libext"; then
                found_dir="$dir"
                found_a="$dir/$libname.$acl_libext"
              fi
            fi
            if test "X$found_dir" != "X"; then
              if test -f "$dir/$libname.la"; then
                found_la="$dir/$libname.la"
              fi
            fi
          fi
          if test "X$found_dir" = "X"; then
            for x in $LDFLAGS $LTLIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

              case "$x" in
                -L*)
                  dir=`echo "X$x" | sed -e 's/^X-L//'`
                                    if test -n "$acl_shlibext"; then
                    if test -f "$dir/$libname$shrext"; then
                      found_dir="$dir"
                      found_so="$dir/$libname$shrext"
                    else
                      if test "$acl_library_names_spec" = '$libname$shrext$versuffix'; then
                        ver=`(cd "$dir" && \
                              for f in "$libname$shrext".*; do echo "$f"; done \
                              | sed -e "s,^$libname$shrext\\\\.,," \
                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \
                              | sed 1q ) 2>/dev/null`
                        if test -n "$ver" && test -f "$dir/$libname$shrext.$ver"; then
                          found_dir="$dir"
                          found_so="$dir/$libname$shrext.$ver"
                        fi
                      else
                        eval library_names=\"$acl_library_names_spec\"
                        for f in $library_names; do
                          if test -f "$dir/$f"; then
                            found_dir="$dir"
                            found_so="$dir/$f"
                            break
                          fi
                        done
                      fi
                    fi
                  fi
                                    if test "X$found_dir" = "X"; then
                    if test -f "$dir/$libname.$acl_libext"; then
                      found_dir="$dir"
                      found_a="$dir/$libname.$acl_libext"
                    fi
                  fi
                  if test "X$found_dir" != "X"; then
                    if test -f "$dir/$libname.la"; then
                      found_la="$dir/$libname.la"
                    fi
                  fi
                  ;;
              esac
              if test "X$found_dir" != "X"; then
                break
              fi
            done
          fi
          if test "X$found_dir" != "X"; then
                        LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-L$found_dir -l$name"
            if test "X$found_so" != "X"; then
                                                        if test "$enable_rpath" = no \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem" \
                 || test "X$found_dir" = "X/usr/$acl_libdirstem2"; then
                                LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
              else
                                                                                haveit=
                for x in $ltrpathdirs; do
                  if test "X$x" = "X$found_dir"; then
                    haveit=yes
                    break
                  fi
                done
                if test -z "$haveit"; then
                  ltrpathdirs="$ltrpathdirs $found_dir"
                fi
                                if test "$acl_hardcode_direct" = yes; then
                                                      LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
                else
                  if test -n "$acl_hardcode_libdir_flag_spec" && test "$acl_hardcode_minus_L" = no; then
                                                            LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
                                                            haveit=
                    for x in $rpathdirs; do
                      if test "X$x" = "X$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      rpathdirs="$rpathdirs $found_dir"
                    fi
                  else
                                                                                haveit=
                    for x in $LDFLAGS $LIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                      if test "X$x" = "X-L$found_dir"; then
                        haveit=yes
                        break
                      fi
                    done
                    if test -z "$haveit"; then
                      LIBINTL="${LIBINTL}${LIBINTL:+ }-L$found_dir"
                    fi
                    if test "$acl_hardcode_minus_L" != no; then
                                                                                        LIBINTL="${LIBINTL}${LIBINTL:+ }$found_so"
                    else
                                                                                                                                                                                LIBINTL="${LIBINTL}${LIBINTL:+ }-l$name"
                    fi
                  fi
                fi
              fi
            else
              if test "X$found_a" != "X"; then
                                LIBINTL="${LIBINTL}${LIBINTL:+ }$found_a"
              else
                                                LIBINTL="${LIBINTL}${LIBINTL:+ }-L$found_dir -l$name"
              fi
            fi
                        additional_includedir=
            case "$found_dir" in
              */$acl_libdirstem | */$acl_libdirstem/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem/"'*$,,'`
                if test "$name" = 'intl'; then
                  LIBINTL_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
              */$acl_libdirstem2 | */$acl_libdirstem2/)
                basedir=`echo "X$found_dir" | sed -e 's,^X,,' -e "s,/$acl_libdirstem2/"'*$,,'`
                if test "$name" = 'intl'; then
                  LIBINTL_PREFIX="$basedir"
                fi
                additional_includedir="$basedir/include"
                ;;
            esac
            if test "X$additional_includedir" != "X"; then
                                                                                                                if test "X$additional_includedir" != "X/usr/include"; then
                haveit=
                if test "X$additional_includedir" = "X/usr/local/include"; then
                  if test -n "$GCC"; then
                    case $host_os in
                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                    esac
                  fi
                fi
                if test -z "$haveit"; then
                  for x in $CPPFLAGS $INCINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                    if test "X$x" = "X-I$additional_includedir"; then
                      haveit=yes
                      break
                    fi
                  done
                  if test -z "$haveit"; then
                    if test -d "$additional_includedir"; then
                                            INCINTL="${INCINTL}${INCINTL:+ }-I$additional_includedir"
                    fi
                  fi
                fi
              fi
            fi
                        if test -n "$found_la"; then
                                                        save_libdir="$libdir"
              case "$found_la" in
                */* | *\\*) . "$found_la" ;;
                *) . "./$found_la" ;;
              esac
              libdir="$save_libdir"
                            for dep in $dependency_libs; do
                case "$dep" in
                  -L*)
                    additional_libdir=`echo "X$dep" | sed -e 's/^X-L//'`
                                                                                                                                                                if test "X$additional_libdir" != "X/usr/$acl_libdirstem" \
                       && test "X$additional_libdir" != "X/usr/$acl_libdirstem2"; then
                      haveit=
                      if test "X$additional_libdir" = "X/usr/local/$acl_libdirstem" \
                         || test "X$additional_libdir" = "X/usr/local/$acl_libdirstem2"; then
                        if test -n "$GCC"; then
                          case $host_os in
                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;
                          esac
                        fi
                      fi
                      if test -z "$haveit"; then
                        haveit=
                        for x in $LDFLAGS $LIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                          if test "X$x" = "X-L$additional_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$additional_libdir"; then
                                                        LIBINTL="${LIBINTL}${LIBINTL:+ }-L$additional_libdir"
                          fi
                        fi
                        haveit=
                        for x in $LDFLAGS $LTLIBINTL; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

                          if test "X$x" = "X-L$additional_libdir"; then
                            haveit=yes
                            break
                          fi
                        done
                        if test -z "$haveit"; then
                          if test -d "$additional_libdir"; then
                                                        LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-L$additional_libdir"
                          fi
                        fi
                      fi
                    fi
                    ;;
                  -R*)
                    dir=`echo "X$dep" | sed -e 's/^X-R//'`
                    if test "$enable_rpath" != no; then
                                                                  haveit=
                      for x in $rpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        rpathdirs="$rpathdirs $dir"
                      fi
                                                                  haveit=
                      for x in $ltrpathdirs; do
                        if test "X$x" = "X$dir"; then
                          haveit=yes
                          break
                        fi
                      done
                      if test -z "$haveit"; then
                        ltrpathdirs="$ltrpathdirs $dir"
                      fi
                    fi
                    ;;
                  -l*)
                                        names_next_round="$names_next_round "`echo "X$dep" | sed -e 's/^X-l//'`
                    ;;
                  *.la)
                                                                                names_next_round="$names_next_round "`echo "X$dep" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\.la$,,'`
                    ;;
                  *)
                                        LIBINTL="${LIBINTL}${LIBINTL:+ }$dep"
                    LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }$dep"
                    ;;
                esac
              done
            fi
          else
                                                            LIBINTL="${LIBINTL}${LIBINTL:+ }-l$name"
            LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-l$name"
          fi
        fi
      fi
    done
  done
  if test "X$rpathdirs" != "X"; then
    if test -n "$acl_hardcode_libdir_separator"; then
                        alldirs=
      for found_dir in $rpathdirs; do
        alldirs="${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir"
      done
            acl_save_libdir="$libdir"
      libdir="$alldirs"
      eval flag=\"$acl_hardcode_libdir_flag_spec\"
      libdir="$acl_save_libdir"
      LIBINTL="${LIBINTL}${LIBINTL:+ }$flag"
    else
            for found_dir in $rpathdirs; do
        acl_save_libdir="$libdir"
        libdir="$found_dir"
        eval flag=\"$acl_hardcode_libdir_flag_spec\"
        libdir="$acl_save_libdir"
        LIBINTL="${LIBINTL}${LIBINTL:+ }$flag"
      done
    fi
  fi
  if test "X$ltrpathdirs" != "X"; then
            for found_dir in $ltrpathdirs; do
      LTLIBINTL="${LTLIBINTL}${LTLIBINTL:+ }-R$found_dir"
    done
  fi





          { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for GNU gettext in libintl" >&5
printf %s "checking for GNU gettext in libintl... " >&6; }
if eval test \${$gt_func_gnugettext_libintl+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  gt_save_CPPFLAGS="$CPPFLAGS"
            CPPFLAGS="$CPPFLAGS $INCINTL"
            gt_save_LIBS="$LIBS"
            LIBS="$LIBS $LIBINTL"
                        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <libintl.h>
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
extern int _nl_msg_cat_cntr;
extern
#ifdef __cplusplus
"C"
#endif
const char *_nl_expand_alias (const char *);
#define __GNU_GETTEXT_SYMBOL_EXPRESSION (_nl_msg_cat_cntr + *_nl_expand_alias (""))
#else
#define __GNU_GETTEXT_SYMBOL_EXPRESSION 0
#endif
$gt_revision_test_code

int
main (void)
{

bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + __GNU_GETTEXT_SYMBOL_EXPRESSION

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  eval "$gt_func_gnugettext_libintl=yes"
else $as_nop
  eval "$gt_func_gnugettext_libintl=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
                        if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" != yes; } && test -n "$LIBICONV"; then
              LIBS="$LIBS $LIBICONV"
              cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <libintl.h>
#ifndef __GNU_GETTEXT_SUPPORTED_REVISION
extern int _nl_msg_cat_cntr;
extern
#ifdef __cplusplus
"C"
#endif
const char *_nl_expand_alias (const char *);
#define __GNU_GETTEXT_SYMBOL_EXPRESSION (_nl_msg_cat_cntr + *_nl_expand_alias (""))
#else
#define __GNU_GETTEXT_SYMBOL_EXPRESSION 0
#endif
$gt_revision_test_code

int
main (void)
{

bindtextdomain ("", "");
return * gettext ("")$gt_expression_test_code + __GNU_GETTEXT_SYMBOL_EXPRESSION

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  LIBINTL="$LIBINTL $LIBICONV"
                 LTLIBINTL="$LTLIBINTL $LTLIBICONV"
                 eval "$gt_func_gnugettext_libintl=yes"

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
            fi
            CPPFLAGS="$gt_save_CPPFLAGS"
            LIBS="$gt_save_LIBS"
fi
eval ac_res=\$$gt_func_gnugettext_libintl
	       { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
printf "%s\n" "$ac_res" >&6; }
        fi

                                        if { eval "gt_val=\$$gt_func_gnugettext_libc"; test "$gt_val" = "yes"; } \
           || { { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; } \
                && test "$PACKAGE" != gettext-runtime \
                && test "$PACKAGE" != gettext-tools; }; then
          gt_use_preinstalled_gnugettext=yes
        else
                    LIBINTL=
          LTLIBINTL=
          INCINTL=
        fi



    if test -n "$INTL_MACOSX_LIBS"; then
      if test "$gt_use_preinstalled_gnugettext" = "yes" \
         || test "$nls_cv_use_gnu_gettext" = "yes"; then
                LIBINTL="$LIBINTL $INTL_MACOSX_LIBS"
        LTLIBINTL="$LTLIBINTL $INTL_MACOSX_LIBS"
      fi
    fi

    if test "$gt_use_preinstalled_gnugettext" = "yes" \
       || test "$nls_cv_use_gnu_gettext" = "yes"; then

printf "%s\n" "#define ENABLE_NLS 1" >>confdefs.h

    else
      USE_NLS=no
    fi
  fi

  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether to use NLS" >&5
printf %s "checking whether to use NLS... " >&6; }
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $USE_NLS" >&5
printf "%s\n" "$USE_NLS" >&6; }
  if test "$USE_NLS" = "yes"; then
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking where the gettext function comes from" >&5
printf %s "checking where the gettext function comes from... " >&6; }
    if test "$gt_use_preinstalled_gnugettext" = "yes"; then
      if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; }; then
        gt_source="external libintl"
      else
        gt_source="libc"
      fi
    else
      gt_source="included intl directory"
    fi
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $gt_source" >&5
printf "%s\n" "$gt_source" >&6; }
  fi

  if test "$USE_NLS" = "yes"; then

    if test "$gt_use_preinstalled_gnugettext" = "yes"; then
      if { eval "gt_val=\$$gt_func_gnugettext_libintl"; test "$gt_val" = "yes"; }; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking how to link with libintl" >&5
printf %s "checking how to link with libintl... " >&6; }
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LIBINTL" >&5
printf "%s\n" "$LIBINTL" >&6; }

  for element in $INCINTL; do
    haveit=
    for x in $CPPFLAGS; do

  acl_save_prefix="$prefix"
  prefix="$acl_final_prefix"
  acl_save_exec_prefix="$exec_prefix"
  exec_prefix="$acl_final_exec_prefix"
  eval x=\"$x\"
  exec_prefix="$acl_save_exec_prefix"
  prefix="$acl_save_prefix"

      if test "X$x" = "X$element"; then
        haveit=yes
        break
      fi
    done
    if test -z "$haveit"; then
      CPPFLAGS="${CPPFLAGS}${CPPFLAGS:+ }$element"
    fi
  done

      fi


printf "%s\n" "#define HAVE_GETTEXT 1" >>confdefs.h


printf "%s\n" "#define HAVE_DCGETTEXT 1" >>confdefs.h

    fi

        POSUB=po
  fi



    INTLLIBS="$LIBINTL"









# Check whether --with-mounthelperdir was given.
if test ${with_mounthelperdir+y}
then :
  withval=$with_mounthelperdir; mounthelperdir=$withval
else $as_nop
  mounthelperdir=/sbin
fi





	# Check whether --enable-sysvinit was given.
if test ${enable_sysvinit+y}
then :
  enableval=$enable_sysvinit;
else $as_nop
  enable_sysvinit=yes
fi


	ZFS_INIT_SYSV=$enable_sysvinit


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for dracut directory" >&5
printf %s "checking for dracut directory... " >&6; }

# Check whether --with-dracutdir was given.
if test ${with_dracutdir+y}
then :
  withval=$with_dracutdir; dracutdir=$withval
else $as_nop
  dracutdir=check
fi


	if test "x$dracutdir" = xcheck
then :

		path1=/usr/share/dracut
		path2=/usr/lib/dracut
		default=$path2

		if test -d "$path1"
then :
  dracutdir="$path1"
else $as_nop

			if test -d "$path2"
then :
  dracutdir="$path2"
else $as_nop
  dracutdir="$default"
fi

fi

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $dracutdir" >&5
printf "%s\n" "$dracutdir" >&6; }

	if test -z "$BUILD_FREEBSD_TRUE"; then :




# Check whether --with-pkgconfigdir was given.
if test ${with_pkgconfigdir+y}
then :
  withval=$with_pkgconfigdir;
else $as_nop
  with_pkgconfigdir='${prefix}/libdata/pkgconfig'
fi

pkgconfigdir=$with_pkgconfigdir




else




# Check whether --with-pkgconfigdir was given.
if test ${with_pkgconfigdir+y}
then :
  withval=$with_pkgconfigdir;
else $as_nop
  with_pkgconfigdir='${libdir}/pkgconfig'
fi

pkgconfigdir=$with_pkgconfigdir





fi




    _header_found=
    _library_found=
    _pc_found=

    if test -n "zlib"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for zlib" >&5
printf %s "checking for zlib... " >&6; }

if test -n "$ZLIB_CFLAGS"; then
    pkg_cv_ZLIB_CFLAGS="$ZLIB_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"zlib\""; } >&5
  ($PKG_CONFIG --exists --print-errors "zlib") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_ZLIB_CFLAGS=`$PKG_CONFIG --cflags "zlib" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$ZLIB_LIBS"; then
    pkg_cv_ZLIB_LIBS="$ZLIB_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"zlib\""; } >&5
  ($PKG_CONFIG --exists --print-errors "zlib") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_ZLIB_LIBS=`$PKG_CONFIG --libs "zlib" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        ZLIB_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "zlib" 2>&1`
        else
	        ZLIB_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "zlib" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$ZLIB_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	ZLIB_CFLAGS=$pkg_cv_ZLIB_CFLAGS
	ZLIB_LIBS=$pkg_cv_ZLIB_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$ZLIB_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$ZLIB_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    ZLIB_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		ZLIB_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $ZLIB_CFLAGS"
	{ ac_cv_header_zlib_h=; unset ac_cv_header_zlib_h;}
	ac_fn_c_check_header_compile "$LINENO" "zlib.h" "ac_cv_header_zlib_h" "$ac_includes_default
"
if test "x$ac_cv_header_zlib_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header zlib.h for library z is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    ZLIB_LIBS="$ZLIB_LIBS -lz"

fi
	LDFLAGS="$LDFLAGS $ZLIB_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for compress2 in -lz" >&5
printf %s "checking for compress2 in -lz... " >&6; }
if test ${ac_cv_lib_z_compress2+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lz  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char compress2 ();
int
main (void)
{
return compress2 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_z_compress2=yes
else $as_nop
  ac_cv_lib_z_compress2=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_z_compress2" >&5
printf "%s\n" "$ac_cv_lib_z_compress2" >&6; }
if test "x$ac_cv_lib_z_compress2" = xyes
then :
  :
else $as_nop
  _libcheck=
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uncompress in -lz" >&5
printf %s "checking for uncompress in -lz... " >&6; }
if test ${ac_cv_lib_z_uncompress+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lz  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char uncompress ();
int
main (void)
{
return uncompress ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_z_uncompress=yes
else $as_nop
  ac_cv_lib_z_uncompress=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_z_uncompress" >&5
printf "%s\n" "$ac_cv_lib_z_uncompress" >&6; }
if test "x$ac_cv_lib_z_uncompress" = xyes
then :
  :
else $as_nop
  _libcheck=
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for crc32 in -lz" >&5
printf %s "checking for crc32 in -lz... " >&6; }
if test ${ac_cv_lib_z_crc32+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lz  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char crc32 ();
int
main (void)
{
return crc32 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_z_crc32=yes
else $as_nop
  ac_cv_lib_z_crc32=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_z_crc32" >&5
printf "%s\n" "$ac_cv_lib_z_crc32" >&6; }
if test "x$ac_cv_lib_z_crc32" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library z is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header zlib.h for library z
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    ZLIB_PC=zlib


fi

printf "%s\n" "#define HAVE_ZLIB 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find z via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find z via pkg-config or in the standard locations" >&2;}

	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "*** zlib-devel package required
See \`config.log' for more details" "$LINENO" 5; }


fi


	if test -z "$BUILD_LINUX_TRUE"; then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for udev directories" >&5
printf %s "checking for udev directories... " >&6; }

# Check whether --with-udevdir was given.
if test ${with_udevdir+y}
then :
  withval=$with_udevdir; udevdir=$withval
else $as_nop
  udevdir=check
fi


	if test "x$udevdir" = xcheck
then :

		path1=/lib/udev
		path2=/usr/lib/udev
		default=$path2

		if test -d "$path1"
then :
  udevdir="$path1"
else $as_nop

			if test -d "$path2"
then :
  udevdir="$path2"
else $as_nop
  udevdir="$default"
fi

fi

fi


# Check whether --with-udevruledir was given.
if test ${with_udevruledir+y}
then :
  withval=$with_udevruledir; udevruledir=$withval
else $as_nop
  udevruledir="${udevdir}/rules.d"
fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $udevdir;$udevruledir" >&5
printf "%s\n" "$udevdir;$udevruledir" >&6; }


	# Check whether --enable-systemd was given.
if test ${enable_systemd+y}
then :
  enableval=$enable_systemd; enable_systemd=$enableval
else $as_nop
  enable_systemd=check
fi



# Check whether --with-systemdunitdir was given.
if test ${with_systemdunitdir+y}
then :
  withval=$with_systemdunitdir; systemdunitdir=$withval
else $as_nop
  systemdunitdir=/usr/lib/systemd/system
fi



# Check whether --with-systemdpresetdir was given.
if test ${with_systemdpresetdir+y}
then :
  withval=$with_systemdpresetdir; systemdpresetdir=$withval
else $as_nop
  systemdpresetdir=/usr/lib/systemd/system-preset
fi



# Check whether --with-systemdmodulesloaddir was given.
if test ${with_systemdmodulesloaddir+y}
then :
  withval=$with_systemdmodulesloaddir; systemdmodulesloaddir=$withval
else $as_nop
  systemdmodulesloaddir=/usr/lib/modules-load.d
fi



# Check whether --with-systemdgeneratordir was given.
if test ${with_systemdgeneratordir+y}
then :
  withval=$with_systemdgeneratordir; systemdgeneratordir=$withval
else $as_nop
  systemdgeneratordir=/usr/lib/systemd/system-generators
fi


	if test "x$enable_systemd" = xcheck
then :

		if systemctl --version >/dev/null 2>&1
then :
  enable_systemd=yes
else $as_nop
  enable_systemd=no
fi

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for systemd support" >&5
printf %s "checking for systemd support... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_systemd" >&5
printf "%s\n" "$enable_systemd" >&6; }

	if test "x$enable_systemd" = xyes
then :

		DEFINE_SYSTEMD='--with systemd --define "_unitdir $(systemdunitdir)" --define "_presetdir $(systemdpresetdir)" --define "_generatordir $(systemdgeneratordir)"'
		modulesloaddir=$systemdmodulesloaddir

else $as_nop

		DEFINE_SYSTEMD='--without systemd'

fi

	ZFS_INIT_SYSTEMD=$enable_systemd
	ZFS_WANT_MODULES_LOAD_D=$enable_systemd











    _header_found=
    _library_found=
    _pc_found=

    if test -n "libudev"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libudev" >&5
printf %s "checking for libudev... " >&6; }

if test -n "$LIBUDEV_CFLAGS"; then
    pkg_cv_LIBUDEV_CFLAGS="$LIBUDEV_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libudev\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libudev") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUDEV_CFLAGS=`$PKG_CONFIG --cflags "libudev" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBUDEV_LIBS"; then
    pkg_cv_LIBUDEV_LIBS="$LIBUDEV_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libudev\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libudev") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUDEV_LIBS=`$PKG_CONFIG --libs "libudev" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBUDEV_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libudev" 2>&1`
        else
	        LIBUDEV_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libudev" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBUDEV_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBUDEV_CFLAGS=$pkg_cv_LIBUDEV_CFLAGS
	LIBUDEV_LIBS=$pkg_cv_LIBUDEV_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBUDEV_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBUDEV_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBUDEV_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBUDEV_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBUDEV_CFLAGS"
	{ ac_cv_header_libudev_h=; unset ac_cv_header_libudev_h;}
	ac_fn_c_check_header_compile "$LINENO" "libudev.h" "ac_cv_header_libudev_h" "$ac_includes_default
"
if test "x$ac_cv_header_libudev_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header libudev.h for library udev is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBUDEV_LIBS="$LIBUDEV_LIBS -ludev"

fi
	LDFLAGS="$LDFLAGS $LIBUDEV_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for main in -ludev" >&5
printf %s "checking for main in -ludev... " >&6; }
if test ${ac_cv_lib_udev_main+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ludev  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main (void)
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_udev_main=yes
else $as_nop
  ac_cv_lib_udev_main=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_udev_main" >&5
printf "%s\n" "$ac_cv_lib_udev_main" >&6; }
if test "x$ac_cv_lib_udev_main" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library udev is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header libudev.h for library udev
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBUDEV_PC=libudev


fi

printf "%s\n" "#define HAVE_LIBUDEV 1" >>confdefs.h

	user_libudev=yes

else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find udev via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find udev via pkg-config or in the standard locations" >&2;}
	user_libudev=no

fi


	if test "x$user_libudev" = xyes
then :


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


	    CFLAGS="$CFLAGS $LIBUDEV_CFLAGS"
	    LIBS="$LIBUDEV_LIBS $LIBS"

	    ac_fn_c_check_func "$LINENO" "udev_device_get_is_initialized" "ac_cv_func_udev_device_get_is_initialized"
if test "x$ac_cv_func_udev_device_get_is_initialized" = xyes
then :
  printf "%s\n" "#define HAVE_UDEV_DEVICE_GET_IS_INITIALIZED 1" >>confdefs.h

fi



  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


fi





    _header_found=
    _library_found=
    _pc_found=

    if test -n "uuid"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uuid" >&5
printf %s "checking for uuid... " >&6; }

if test -n "$LIBUUID_CFLAGS"; then
    pkg_cv_LIBUUID_CFLAGS="$LIBUUID_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"uuid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "uuid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUUID_CFLAGS=`$PKG_CONFIG --cflags "uuid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBUUID_LIBS"; then
    pkg_cv_LIBUUID_LIBS="$LIBUUID_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"uuid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "uuid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBUUID_LIBS=`$PKG_CONFIG --libs "uuid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBUUID_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "uuid" 2>&1`
        else
	        LIBUUID_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "uuid" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBUUID_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBUUID_CFLAGS=$pkg_cv_LIBUUID_CFLAGS
	LIBUUID_LIBS=$pkg_cv_LIBUUID_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBUUID_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBUUID_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBUUID_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBUUID_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBUUID_CFLAGS"
	{ ac_cv_header_uuid_uuid_h=; unset ac_cv_header_uuid_uuid_h;}
	ac_fn_c_check_header_compile "$LINENO" "uuid/uuid.h" "ac_cv_header_uuid_uuid_h" "$ac_includes_default
"
if test "x$ac_cv_header_uuid_uuid_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header uuid/uuid.h for library uuid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBUUID_LIBS="$LIBUUID_LIBS -luuid"

fi
	LDFLAGS="$LDFLAGS $LIBUUID_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uuid_generate in -luuid" >&5
printf %s "checking for uuid_generate in -luuid... " >&6; }
if test ${ac_cv_lib_uuid_uuid_generate+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-luuid  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char uuid_generate ();
int
main (void)
{
return uuid_generate ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_uuid_uuid_generate=yes
else $as_nop
  ac_cv_lib_uuid_uuid_generate=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_uuid_uuid_generate" >&5
printf "%s\n" "$ac_cv_lib_uuid_uuid_generate" >&6; }
if test "x$ac_cv_lib_uuid_uuid_generate" = xyes
then :
  :
else $as_nop
  _libcheck=
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for uuid_is_null in -luuid" >&5
printf %s "checking for uuid_is_null in -luuid... " >&6; }
if test ${ac_cv_lib_uuid_uuid_is_null+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-luuid  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char uuid_is_null ();
int
main (void)
{
return uuid_is_null ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_uuid_uuid_is_null=yes
else $as_nop
  ac_cv_lib_uuid_uuid_is_null=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_uuid_uuid_is_null" >&5
printf "%s\n" "$ac_cv_lib_uuid_uuid_is_null" >&6; }
if test "x$ac_cv_lib_uuid_uuid_is_null" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library uuid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header uuid/uuid.h for library uuid
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBUUID_PC=uuid


fi

printf "%s\n" "#define HAVE_LIBUUID 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find uuid via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find uuid via pkg-config or in the standard locations" >&2;}

	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "*** libuuid-devel package required
See \`config.log' for more details" "$LINENO" 5; }


fi






    _header_found=
    _library_found=
    _pc_found=

    if test -n "blkid"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for blkid" >&5
printf %s "checking for blkid... " >&6; }

if test -n "$LIBBLKID_CFLAGS"; then
    pkg_cv_LIBBLKID_CFLAGS="$LIBBLKID_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"blkid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "blkid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBBLKID_CFLAGS=`$PKG_CONFIG --cflags "blkid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBBLKID_LIBS"; then
    pkg_cv_LIBBLKID_LIBS="$LIBBLKID_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"blkid\""; } >&5
  ($PKG_CONFIG --exists --print-errors "blkid") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBBLKID_LIBS=`$PKG_CONFIG --libs "blkid" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBBLKID_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "blkid" 2>&1`
        else
	        LIBBLKID_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "blkid" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBBLKID_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBBLKID_CFLAGS=$pkg_cv_LIBBLKID_CFLAGS
	LIBBLKID_LIBS=$pkg_cv_LIBBLKID_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBBLKID_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBBLKID_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBBLKID_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBBLKID_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBBLKID_CFLAGS"
	{ ac_cv_header_blkid_blkid_h=; unset ac_cv_header_blkid_blkid_h;}
	ac_fn_c_check_header_compile "$LINENO" "blkid/blkid.h" "ac_cv_header_blkid_blkid_h" "$ac_includes_default
"
if test "x$ac_cv_header_blkid_blkid_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header blkid/blkid.h for library blkid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBBLKID_LIBS="$LIBBLKID_LIBS -lblkid"

fi
	LDFLAGS="$LDFLAGS $LIBBLKID_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for main in -lblkid" >&5
printf %s "checking for main in -lblkid... " >&6; }
if test ${ac_cv_lib_blkid_main+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lblkid  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main (void)
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_blkid_main=yes
else $as_nop
  ac_cv_lib_blkid_main=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_blkid_main" >&5
printf "%s\n" "$ac_cv_lib_blkid_main" >&6; }
if test "x$ac_cv_lib_blkid_main" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library blkid is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header blkid/blkid.h for library blkid
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBBLKID_PC=blkid


fi

printf "%s\n" "#define HAVE_LIBBLKID 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find blkid via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find blkid via pkg-config or in the standard locations" >&2;}

		{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "
		*** blkid.h missing, libblkid-devel package required
See \`config.log' for more details" "$LINENO" 5; }

fi



fi


# Check whether --with-tirpc was given.
if test ${with_tirpc+y}
then :
  withval=$with_tirpc;
else $as_nop
  with_tirpc=check
fi


	have_xdr=

        if test "x$with_tirpc" != "xyes"
then :

	    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for library containing xdrmem_create" >&5
printf %s "checking for library containing xdrmem_create... " >&6; }
if test ${ac_cv_search_xdrmem_create+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_func_search_save_LIBS=$LIBS
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char xdrmem_create ();
int
main (void)
{
return xdrmem_create ();
  ;
  return 0;
}
_ACEOF
for ac_lib in ''
do
  if test -z "$ac_lib"; then
    ac_res="none required"
  else
    ac_res=-l$ac_lib
    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
  fi
  if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_search_xdrmem_create=$ac_res
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext
  if test ${ac_cv_search_xdrmem_create+y}
then :
  break
fi
done
if test ${ac_cv_search_xdrmem_create+y}
then :

else $as_nop
  ac_cv_search_xdrmem_create=no
fi
rm conftest.$ac_ext
LIBS=$ac_func_search_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_xdrmem_create" >&5
printf "%s\n" "$ac_cv_search_xdrmem_create" >&6; }
ac_res=$ac_cv_search_xdrmem_create
if test "$ac_res" != no
then :
  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
  have_xdr=1
else $as_nop

		if test "x$with_tirpc" = "xno"
then :

		    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "xdrmem_create() requires sunrpc support in libc if not using libtirpc
See \`config.log' for more details" "$LINENO" 5; }

fi

fi


fi

	if test "x$have_xdr" = "x"
then :




    _header_found=
    _library_found=
    _pc_found=

    if test -n "libtirpc"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libtirpc" >&5
printf %s "checking for libtirpc... " >&6; }

if test -n "$LIBTIRPC_CFLAGS"; then
    pkg_cv_LIBTIRPC_CFLAGS="$LIBTIRPC_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libtirpc\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libtirpc") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBTIRPC_CFLAGS=`$PKG_CONFIG --cflags "libtirpc" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBTIRPC_LIBS"; then
    pkg_cv_LIBTIRPC_LIBS="$LIBTIRPC_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libtirpc\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libtirpc") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBTIRPC_LIBS=`$PKG_CONFIG --libs "libtirpc" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBTIRPC_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libtirpc" 2>&1`
        else
	        LIBTIRPC_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libtirpc" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBTIRPC_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBTIRPC_CFLAGS=$pkg_cv_LIBTIRPC_CFLAGS
	LIBTIRPC_LIBS=$pkg_cv_LIBTIRPC_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBTIRPC_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBTIRPC_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBTIRPC_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBTIRPC_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBTIRPC_CFLAGS"
	{ ac_cv_header_rpc_xdr_h=; unset ac_cv_header_rpc_xdr_h;}
	ac_fn_c_check_header_compile "$LINENO" "rpc/xdr.h" "ac_cv_header_rpc_xdr_h" "$ac_includes_default
"
if test "x$ac_cv_header_rpc_xdr_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header rpc/xdr.h for library tirpc is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES

	    LIBTIRPC_CFLAGS="-I$lt_sysroot$_prefixdir/include/tirpc"
	    CFLAGS="$orig_CFLAGS $LIBTIRPC_CFLAGS"
	    { ac_cv_header_rpc_xdr_h=; unset ac_cv_header_rpc_xdr_h;}
	    ac_fn_c_check_header_compile "$LINENO" "rpc/xdr.h" "ac_cv_header_rpc_xdr_h" "$ac_includes_default
"
if test "x$ac_cv_header_rpc_xdr_h" = xyes
then :

		_header_found=1
		break

fi



    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBTIRPC_LIBS="$LIBTIRPC_LIBS -ltirpc"

fi
	LDFLAGS="$LDFLAGS $LIBTIRPC_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for xdrmem_create in -ltirpc" >&5
printf %s "checking for xdrmem_create in -ltirpc... " >&6; }
if test ${ac_cv_lib_tirpc_xdrmem_create+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ltirpc  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char xdrmem_create ();
int
main (void)
{
return xdrmem_create ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_tirpc_xdrmem_create=yes
else $as_nop
  ac_cv_lib_tirpc_xdrmem_create=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_tirpc_xdrmem_create" >&5
printf "%s\n" "$ac_cv_lib_tirpc_xdrmem_create" >&6; }
if test "x$ac_cv_lib_tirpc_xdrmem_create" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library tirpc is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header rpc/xdr.h for library tirpc
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBTIRPC_PC=libtirpc


fi

printf "%s\n" "#define HAVE_LIBTIRPC 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find tirpc via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find tirpc via pkg-config or in the standard locations" >&2;}

		if test "x$with_tirpc" = "xyes"
then :

		    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "--with-tirpc was given, but libtirpc is not available, try installing libtirpc-devel
See \`config.log' for more details" "$LINENO" 5; }

else $as_nop
  		    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "neither libc sunrpc support nor libtirpc is available, try installing libtirpc-devel
See \`config.log' for more details" "$LINENO" 5; }

fi


fi


fi





    _header_found=
    _library_found=
    _pc_found=

    if test -n "libcrypto"
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libcrypto" >&5
printf %s "checking for libcrypto... " >&6; }

if test -n "$LIBCRYPTO_CFLAGS"; then
    pkg_cv_LIBCRYPTO_CFLAGS="$LIBCRYPTO_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libcrypto\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libcrypto") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBCRYPTO_CFLAGS=`$PKG_CONFIG --cflags "libcrypto" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBCRYPTO_LIBS"; then
    pkg_cv_LIBCRYPTO_LIBS="$LIBCRYPTO_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libcrypto\""; } >&5
  ($PKG_CONFIG --exists --print-errors "libcrypto") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBCRYPTO_LIBS=`$PKG_CONFIG --libs "libcrypto" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBCRYPTO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libcrypto" 2>&1`
        else
	        LIBCRYPTO_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libcrypto" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBCRYPTO_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBCRYPTO_CFLAGS=$pkg_cv_LIBCRYPTO_CFLAGS
	LIBCRYPTO_LIBS=$pkg_cv_LIBCRYPTO_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBCRYPTO_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBCRYPTO_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBCRYPTO_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBCRYPTO_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBCRYPTO_CFLAGS"
	{ ac_cv_header_openssl_evp_h=; unset ac_cv_header_openssl_evp_h;}
	ac_fn_c_check_header_compile "$LINENO" "openssl/evp.h" "ac_cv_header_openssl_evp_h" "$ac_includes_default
"
if test "x$ac_cv_header_openssl_evp_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header openssl/evp.h for library crypto is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBCRYPTO_LIBS="$LIBCRYPTO_LIBS -lcrypto"

fi
	LDFLAGS="$LDFLAGS $LIBCRYPTO_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for PKCS5_PBKDF2_HMAC_SHA1 in -lcrypto" >&5
printf %s "checking for PKCS5_PBKDF2_HMAC_SHA1 in -lcrypto... " >&6; }
if test ${ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lcrypto  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char PKCS5_PBKDF2_HMAC_SHA1 ();
int
main (void)
{
return PKCS5_PBKDF2_HMAC_SHA1 ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1=yes
else $as_nop
  ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1" >&5
printf "%s\n" "$ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1" >&6; }
if test "x$ac_cv_lib_crypto_PKCS5_PBKDF2_HMAC_SHA1" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library crypto is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header openssl/evp.h for library crypto
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :

	    LIBCRYPTO_PC=libcrypto


fi

printf "%s\n" "#define HAVE_LIBCRYPTO 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find crypto via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find crypto via pkg-config or in the standard locations" >&2;}

		{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "
		*** evp.h missing, libssl-devel package required
See \`config.log' for more details" "$LINENO" 5; }

fi






    _header_found=
    _library_found=
    _pc_found=

    if test -n ""
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for " >&5
printf %s "checking for ... " >&6; }

if test -n "$LIBAIO_CFLAGS"; then
    pkg_cv_LIBAIO_CFLAGS="$LIBAIO_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBAIO_CFLAGS=`$PKG_CONFIG --cflags "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$LIBAIO_LIBS"; then
    pkg_cv_LIBAIO_LIBS="$LIBAIO_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_LIBAIO_LIBS=`$PKG_CONFIG --libs "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        LIBAIO_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "" 2>&1`
        else
	        LIBAIO_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$LIBAIO_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	LIBAIO_CFLAGS=$pkg_cv_LIBAIO_CFLAGS
	LIBAIO_LIBS=$pkg_cv_LIBAIO_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$LIBAIO_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$LIBAIO_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    LIBAIO_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		LIBAIO_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $LIBAIO_CFLAGS"
	{ ac_cv_header_libaio_h=; unset ac_cv_header_libaio_h;}
	ac_fn_c_check_header_compile "$LINENO" "libaio.h" "ac_cv_header_libaio_h" "$ac_includes_default
"
if test "x$ac_cv_header_libaio_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header libaio.h for library aio is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    LIBAIO_LIBS="$LIBAIO_LIBS -laio"

fi
	LDFLAGS="$LDFLAGS $LIBAIO_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for main in -laio" >&5
printf %s "checking for main in -laio... " >&6; }
if test ${ac_cv_lib_aio_main+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-laio  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


int
main (void)
{
return main ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_aio_main=yes
else $as_nop
  ac_cv_lib_aio_main=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_aio_main" >&5
printf "%s\n" "$ac_cv_lib_aio_main" >&6; }
if test "x$ac_cv_lib_aio_main" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library aio is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header libaio.h for library aio
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :



fi

printf "%s\n" "#define HAVE_LIBAIO 1" >>confdefs.h

	user_libaio=yes

else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find aio via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find aio via pkg-config or in the standard locations" >&2;}
	user_libaio=no

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether -latomic is required" >&5
printf %s "checking whether -latomic is required... " >&6; }

	saved_libs="$LIBS"
	LIBS="$LIBS -latomic"
	LIBATOMIC_LIBS=""

	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		LIBS="$saved_libs"
		saved_cflags="$CFLAGS"
		CFLAGS="$CFLAGS -isystem lib/libspl/include"
		cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include "lib/libspl/atomic.c"
int
main (void)
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

else $as_nop
  LIBATOMIC_LIBS="-latomic"
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
		CFLAGS="$saved_cflags"

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext

	if test -n "$LIBATOMIC_LIBS"; then
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
	else
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	fi

	LIBS="$saved_libs"



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libfetch" >&5
printf %s "checking for libfetch... " >&6; }
	LIBFETCH_LIBS=
	LIBFETCH_IS_FETCH=0
	LIBFETCH_IS_LIBCURL=0
	LIBFETCH_DYNAMIC=0
	LIBFETCH_SONAME=
	have_libfetch=

	saved_libs="$LIBS"
	LIBS="$LIBS -lfetch"
	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <sys/param.h>
		#include <stdio.h>
		#include <fetch.h>

int
main (void)
{
fetchGetURL("", "");
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :

		have_libfetch=1
		LIBFETCH_IS_FETCH=1
		LIBFETCH_DYNAMIC=1
		LIBFETCH_SONAME="libfetch.so.6"
		LIBFETCH_LIBS="-ldl"
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: fetch(3)" >&5
printf "%s\n" "fetch(3)" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
	LIBS="$saved_libs"

	if test -z "$have_libfetch"; then
		if curl-config --protocols 2>/dev/null | grep -q HTTPS &&
		    test "$(printf "%u" "0x$(curl-config --vernum)")" -ge "$(printf "%u" "0x071000")"; then
			have_libfetch=1
			LIBFETCH_IS_LIBCURL=1
			if test "$(curl-config --built-shared)" = "yes"; then
				LIBFETCH_DYNAMIC=1
				LIBFETCH_SONAME="libcurl.so.4"
				LIBFETCH_LIBS="-ldl"
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: libcurl" >&5
printf "%s\n" "libcurl" >&6; }
			else
				LIBFETCH_LIBS="$(curl-config --libs)"
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: libcurl (static)" >&5
printf "%s\n" "libcurl (static)" >&6; }
			fi

			CCFLAGS="$CCFLAGS $(curl-config --cflags)"
		fi
	fi

	if test -z "$have_libfetch"; then
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: none" >&5
printf "%s\n" "none" >&6; }
	fi





printf "%s\n" "#define LIBFETCH_IS_FETCH $LIBFETCH_IS_FETCH" >>confdefs.h


printf "%s\n" "#define LIBFETCH_IS_LIBCURL $LIBFETCH_IS_LIBCURL" >>confdefs.h


printf "%s\n" "#define LIBFETCH_DYNAMIC $LIBFETCH_DYNAMIC" >>confdefs.h


printf "%s\n" "#define LIBFETCH_SONAME \"$LIBFETCH_SONAME\"" >>confdefs.h






    _header_found=
    _library_found=
    _pc_found=

    if test -n ""
then :

pkg_failed=no
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for " >&5
printf %s "checking for ... " >&6; }

if test -n "$AIO_H_CFLAGS"; then
    pkg_cv_AIO_H_CFLAGS="$AIO_H_CFLAGS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_AIO_H_CFLAGS=`$PKG_CONFIG --cflags "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi
if test -n "$AIO_H_LIBS"; then
    pkg_cv_AIO_H_LIBS="$AIO_H_LIBS"
 elif test -n "$PKG_CONFIG"; then
    if test -n "$PKG_CONFIG" && \
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"\""; } >&5
  ($PKG_CONFIG --exists --print-errors "") 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then
  pkg_cv_AIO_H_LIBS=`$PKG_CONFIG --libs "" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes
else
  pkg_failed=yes
fi
 else
    pkg_failed=untried
fi



if test $pkg_failed = yes; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi
        if test $_pkg_short_errors_supported = yes; then
	        AIO_H_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "" 2>&1`
        else
	        AIO_H_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$AIO_H_PKG_ERRORS" >&5

	:
elif test $pkg_failed = untried; then
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	:
else
	AIO_H_CFLAGS=$pkg_cv_AIO_H_CFLAGS
	AIO_H_LIBS=$pkg_cv_AIO_H_LIBS
        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	_header_found=1
	_library_found=1
	_pc_found=1

fi
fi

    # set _header_found/_library_found if the user passed in CFLAGS/LIBS
    if test "x$AIO_H_CFLAGS" != x
then :
  _header_found=1
fi
    if test "x$AIO_H_LIBS" != x
then :
  _library_found=1
fi


  CPPFLAGS_save="${CPPFLAGS}"
  CFLAGS_save="${CFLAGS}"
  CXXFLAGS_save="${CXXFLAGS}"
  OBJCFLAGS_save="${OBJCFLAGS}"
  LDFLAGS_save="${LDFLAGS}"
  LIBS_save="${LIBS}"


    orig_CFLAGS="$CFLAGS"

    for _prefixdir in /usr /usr/local
    do

	if test "x$_prefixdir" != "x/usr"
then :

	    AIO_H_CFLAGS="-I$lt_sysroot$_prefixdir/include"
	    if test "x$_library_found" = x
then :

		AIO_H_LIBS="-L$lt_sysroot$_prefixdir/lib"

fi

fi
	CFLAGS="$orig_CFLAGS $AIO_H_CFLAGS"
	{ ac_cv_header_aio_h=; unset ac_cv_header_aio_h;}
	ac_fn_c_check_header_compile "$LINENO" "aio.h" "ac_cv_header_aio_h" "$ac_includes_default
"
if test "x$ac_cv_header_aio_h" = xyes
then :

	    _header_found=1
	    break

else $as_nop
  if test "x$_header_found" = "x1"
then :

	    # if pkg-config or the user set CFLAGS, fail if the header is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "header aio.h for library rt is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi
fi

	# search for header under HEADER-PREFIXES


    done

    if test "x$_header_found" = "x1"
then :

	if test "x$_library_found" = x
then :

	    AIO_H_LIBS="$AIO_H_LIBS -lrt"

fi
	LDFLAGS="$LDFLAGS $AIO_H_LIBS"

	_libcheck=1
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for lio_listio in -lrt" >&5
printf %s "checking for lio_listio in -lrt... " >&6; }
if test ${ac_cv_lib_rt_lio_listio+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lrt  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char lio_listio ();
int
main (void)
{
return lio_listio ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_rt_lio_listio=yes
else $as_nop
  ac_cv_lib_rt_lio_listio=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_lio_listio" >&5
printf "%s\n" "$ac_cv_lib_rt_lio_listio" >&6; }
if test "x$ac_cv_lib_rt_lio_listio" = xyes
then :
  :
else $as_nop
  _libcheck=
fi


	if test "x$_libcheck" = "x1"
then :
  _library_found=1
elif test "x$_library_found" = "x1"
then :

	    # if pkg-config or the user set LIBS, fail if the library is unusable
	    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "library rt is not usable
See \`config.log' for more details" "$LINENO" 5; }

fi

elif test "x$_library_found" = "x1"
then :

	# if the user set LIBS, fail if we didn't find the header
	{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot find header aio.h for library rt
See \`config.log' for more details" "$LINENO" 5; }

fi


  CPPFLAGS="${CPPFLAGS_save}"
  CFLAGS="${CFLAGS_save}"
  CXXFLAGS="${CXXFLAGS_save}"
  OBJCFLAGS="${OBJCFLAGS_save}"
  LDFLAGS="${LDFLAGS_save}"
  LIBS="${LIBS_save}"


    if test "x$_header_found" = "x1" && test "x$_library_found" = "x1"
then :



	if test "x$_pc_found" = "x1"
then :



fi

printf "%s\n" "#define HAVE_AIO_H 1" >>confdefs.h



else $as_nop


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cannot find rt via pkg-config or in the standard locations" >&5
printf "%s\n" "$as_me: WARNING: cannot find rt via pkg-config or in the standard locations" >&2;}


fi



	ac_fn_c_check_func "$LINENO" "clock_gettime" "ac_cv_func_clock_gettime"
if test "x$ac_cv_func_clock_gettime" = xyes
then :

else $as_nop

	    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for clock_gettime in -lrt" >&5
printf %s "checking for clock_gettime in -lrt... " >&6; }
if test ${ac_cv_lib_rt_clock_gettime+y}
then :
  printf %s "(cached) " >&6
else $as_nop
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lrt  $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
char clock_gettime ();
int
main (void)
{
return clock_gettime ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"
then :
  ac_cv_lib_rt_clock_gettime=yes
else $as_nop
  ac_cv_lib_rt_clock_gettime=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.beam \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_clock_gettime" >&5
printf "%s\n" "$ac_cv_lib_rt_clock_gettime" >&6; }
if test "x$ac_cv_lib_rt_clock_gettime" = xyes
then :

		LIBCLOCK_GETTIME=-lrt

else $as_nop

		{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "*** clock_gettime is missing in libc and librt
See \`config.log' for more details" "$LINENO" 5; }

fi


fi



	# Check whether --enable-pam was given.
if test ${enable_pam+y}
then :
  enableval=$enable_pam; enable_pam=$enableval
else $as_nop
  enable_pam=check
fi



# Check whether --with-pammoduledir was given.
if test ${with_pammoduledir+y}
then :
  withval=$with_pammoduledir; pammoduledir="$withval"
else $as_nop
  pammoduledir=$libdir/security
fi



# Check whether --with-pamconfigsdir was given.
if test ${with_pamconfigsdir+y}
then :
  withval=$with_pamconfigsdir; pamconfigsdir="$withval"
else $as_nop
  pamconfigsdir='${datadir}/pam-configs'
fi


	if test "x$enable_pam" != "xno"
then :

		       for ac_header in security/pam_modules.h
do :
  ac_fn_c_check_header_compile "$LINENO" "security/pam_modules.h" "ac_cv_header_security_pam_modules_h" "$ac_includes_default"
if test "x$ac_cv_header_security_pam_modules_h" = xyes
then :
  printf "%s\n" "#define HAVE_SECURITY_PAM_MODULES_H 1" >>confdefs.h

			enable_pam=yes

else $as_nop

			if test "x$enable_pam" = "xyes"
then :

				{ { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "
	*** security/pam_modules.h missing, libpam0g-dev package required

See \`config.log' for more details" "$LINENO" 5; }

else $as_nop

				enable_pam=no

fi

fi

done

fi
	if test "x$enable_pam" = "xyes"
then :

		DEFINE_PAM='--with pam'

fi





	if test "x$runstatedir" = x; then
		runstatedir='${localstatedir}/run'

	fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking makedev() is declared in sys/sysmacros.h" >&5
printf %s "checking makedev() is declared in sys/sysmacros.h... " >&6; }
	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <sys/sysmacros.h>

int
main (void)
{

		int k;
		k = makedev(0,0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MAKEDEV_IN_SYSMACROS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking makedev() is declared in sys/mkdev.h" >&5
printf %s "checking makedev() is declared in sys/mkdev.h... " >&6; }
	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

		#include <sys/mkdev.h>

int
main (void)
{

		int k;
		k = makedev(0,0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MAKEDEV_IN_MKDEV 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi
rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext



# Check whether --with-zfsexecdir was given.
if test ${with_zfsexecdir+y}
then :
  withval=$with_zfsexecdir; zfsexecdir=$withval
else $as_nop
  zfsexecdir="${libexecdir}/zfs"
fi





	ac_fn_c_check_func "$LINENO" "issetugid" "ac_cv_func_issetugid"
if test "x$ac_cv_func_issetugid" = xyes
then :
  printf "%s\n" "#define HAVE_ISSETUGID 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "mlockall" "ac_cv_func_mlockall"
if test "x$ac_cv_func_mlockall" = xyes
then :
  printf "%s\n" "#define HAVE_MLOCKALL 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "strlcat" "ac_cv_func_strlcat"
if test "x$ac_cv_func_strlcat" = xyes
then :
  printf "%s\n" "#define HAVE_STRLCAT 1" >>confdefs.h

fi
ac_fn_c_check_func "$LINENO" "strlcpy" "ac_cv_func_strlcpy"
if test "x$ac_cv_func_strlcpy" = xyes
then :
  printf "%s\n" "#define HAVE_STRLCPY 1" >>confdefs.h

fi





	if test -z "$BUILD_LINUX_TRUE"; then :



# Check whether --with-linux was given.
if test ${with_linux+y}
then :
  withval=$with_linux; kernelsrc="$withval"
fi



# Check whether --with-linux-obj was given.
if test ${with_linux_obj+y}
then :
  withval=$with_linux_obj; kernelbuild="$withval"
fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel source and build directories" >&5
printf %s "checking kernel source and build directories... " >&6; }
	if test -n "$kernelsrc" && test -z "$kernelbuild"
then :

		kernelbuild="$kernelsrc"

elif test -z "$kernelsrc"
then :

		if test -e "/lib/modules/$(uname -r)/source" && \
		       test -e "/lib/modules/$(uname -r)/build"
then :

			src="/lib/modules/$(uname -r)/source"
			build="/lib/modules/$(uname -r)/build"

elif test -e "/lib/modules/$(uname -r)/build"
then :

			build="/lib/modules/$(uname -r)/build"
			src="$build"

else $as_nop

			src=

			for d in $(ls -1d /lib/modules/* 2>/dev/null | sort -Vr); do
				if test -e "$d/source" && test -e "$d/build"; then
					src="$d/source"
					build="$d/build"
					break
				fi

				if test -e "$d/build"; then
					src="$d/build"
					build="$d/build"
					break
				fi
			done

			# the least reliable method
			if test -z "$src"; then
				src=$(ls -1d /usr/src/kernels/* /usr/src/linux-* \
				      2>/dev/null | grep -v obj | sort -Vr | head -1)
				build="$src"
			fi

fi

		if test -n "$src" && test -e "$src"
then :

			kernelsrc=$(readlink -e "$src")

else $as_nop

			kernelsrc="Not found"

fi
		if test -n "$build" && test -e "$build"
then :

			kernelbuild=$(readlink -e "$build")

else $as_nop

			kernelbuild="Not found"

fi

else $as_nop

		if test "$kernelsrc" = "NONE"
then :

			kernsrcver=NONE

fi
		withlinux=yes

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel source directory" >&5
printf %s "checking kernel source directory... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $kernelsrc" >&5
printf "%s\n" "$kernelsrc" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel build directory" >&5
printf %s "checking kernel build directory... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $kernelbuild" >&5
printf "%s\n" "$kernelbuild" >&6; }
	if test ! -d "$kernelsrc" || test ! -d "$kernelbuild"
then :

		as_fn_error $? "
	*** Please make sure the kernel devel package for your distribution
	*** is installed and then try again.  If that fails, you can specify the
	*** location of the kernel source and build with the '--with-linux=PATH' and
	*** '--with-linux-obj=PATH' options respectively." "$LINENO" 5

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel source version" >&5
printf %s "checking kernel source version... " >&6; }
	utsrelease1=$kernelbuild/include/linux/version.h
	utsrelease2=$kernelbuild/include/linux/utsrelease.h
	utsrelease3=$kernelbuild/include/generated/utsrelease.h
	if test -r $utsrelease1 && grep -qF UTS_RELEASE $utsrelease1
then :

		utsrelease=$utsrelease1

elif test -r $utsrelease2 && grep -qF UTS_RELEASE $utsrelease2
then :

		utsrelease=$utsrelease2

elif test -r $utsrelease3 && grep -qF UTS_RELEASE $utsrelease3
then :

		utsrelease=$utsrelease3

fi

	if test -n "$utsrelease"
then :

		kernsrcver=$($AWK '/UTS_RELEASE/ { gsub(/"/, "", $3); print $3 }' $utsrelease)
		if test -z "$kernsrcver"
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: Not found" >&5
printf "%s\n" "Not found" >&6; }
			as_fn_error $? "
	*** Cannot determine kernel version.
			" "$LINENO" 5

fi

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: Not found" >&5
printf "%s\n" "Not found" >&6; }
		if test "x$enable_linux_builtin" != xyes; then
			as_fn_error $? "
	*** Cannot find UTS_RELEASE definition.
			" "$LINENO" 5
		else
			as_fn_error $? "
	*** Cannot find UTS_RELEASE definition.
	*** Please run 'make prepare' inside the kernel source tree." "$LINENO" 5
		fi

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $kernsrcver" >&5
printf "%s\n" "$kernsrcver" >&6; }

	as_arg_v1=$kernsrcver
as_arg_v2=$ZFS_META_KVER_MIN
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		 as_fn_error $? "
	*** Cannot build against kernel version $kernsrcver.
	*** The minimum supported kernel version is $ZFS_META_KVER_MIN.
		" "$LINENO" 5
	 ;; #(
  0) :
     ;; #(
  2) :
     ;; #(
  *) :
     ;;
esac

	LINUX=${kernelsrc}
	LINUX_OBJ=${kernelbuild}
	LINUX_VERSION=${kernsrcver}







# Check whether --with-qat was given.
if test ${with_qat+y}
then :
  withval=$with_qat; if test "$withval" = "yes"
then :
  as_fn_error $? "--with-qat=PATH requires a PATH" "$LINENO" 5
else $as_nop
  qatsrc="$withval"
fi
fi



# Check whether --with-qat-obj was given.
if test ${with_qat_obj+y}
then :
  withval=$with_qat_obj; qatbuild="$withval"
fi


	if test ! -z "${qatsrc}"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking qat source directory" >&5
printf %s "checking qat source directory... " >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $qatsrc" >&5
printf "%s\n" "$qatsrc" >&6; }
		QAT_SRC="${qatsrc}/quickassist"
		if  test ! -e "$QAT_SRC/include/cpa.h"
then :

			as_fn_error $? "
	*** Please make sure the qat driver package is installed
	*** and specify the location of the qat source with the
	*** '--with-qat=PATH' option then try again. Failed to
	*** find cpa.h in:
	${QAT_SRC}/include" "$LINENO" 5

fi

fi

	if test ! -z "${qatsrc}"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking qat build directory" >&5
printf %s "checking qat build directory... " >&6; }
		if test -z "$qatbuild"
then :

			qatbuild="${qatsrc}/build"

fi

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $qatbuild" >&5
printf "%s\n" "$qatbuild" >&6; }
		QAT_OBJ=${qatbuild}
		if  ! test -e "$QAT_OBJ/icp_qa_al.ko" && ! test -e "$QAT_OBJ/qat_api.ko"
then :

			as_fn_error $? "
	*** Please make sure the qat driver is installed then try again.
	*** Failed to find icp_qa_al.ko or qat_api.ko in:
	$QAT_OBJ" "$LINENO" 5

fi





printf "%s\n" "#define HAVE_QAT 1" >>confdefs.h


fi

				if test ! -z "${qatsrc}"
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking qat file for module symbols" >&5
printf %s "checking qat file for module symbols... " >&6; }
		QAT_SYMBOLS=$QAT_SRC/lookaside/access_layer/src/Module.symvers

		if test -r $QAT_SYMBOLS
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $QAT_SYMBOLS" >&5
printf "%s\n" "$QAT_SYMBOLS" >&6; }


else $as_nop

			as_fn_error $? "
	*** Please make sure the qat driver is installed then try again.
	*** Failed to find Module.symvers in:
	$QAT_SYMBOLS
			" "$LINENO" 5

fi

fi



	if test "x$cross_compiling" != xyes
then :

		if test "$cross_compiling" = yes
then :
  { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot run test program while cross compiling
See \`config.log' for more details" "$LINENO" 5; }
else $as_nop
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */


				#include "$LINUX/include/linux/license.h"

int
main (void)
{

				return !license_is_gpl_compatible(
				    "$ZFS_META_LICENSE");

  ;
  return 0;
}

_ACEOF
if ac_fn_c_try_run "$LINENO"
then :


printf "%s\n" "#define ZFS_IS_GPL_COMPATIBLE 1" >>confdefs.h


fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi


fi




test -d build/config_modules || mkdir -p build/config_modules
cat confdefs.h - <<_ACEOF >build/config_modules/config_modules.c

#include <linux/module.h>

		#if !defined(CONFIG_MODULES)
		#error CONFIG_MODULES not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_modules || mkdir -p build/config_modules

	file=build/config_modules/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_modules

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_modules.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_modules/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_modules_license || mkdir -p build/config_modules_license
cat confdefs.h - <<_ACEOF >build/config_modules_license/config_modules_license.c

#include <linux/module.h>

		#if !defined(CONFIG_MODULES)
		#error CONFIG_MODULES not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_modules_license || mkdir -p build/config_modules_license

	file=build/config_modules_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_modules_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_modules_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_modules_license/" >>build/Makefile
fi


fi





test -d build/config_block || mkdir -p build/config_block
cat confdefs.h - <<_ACEOF >build/config_block/config_block.c

#include <linux/module.h>

		#if !defined(CONFIG_BLOCK)
		#error CONFIG_BLOCK not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_block || mkdir -p build/config_block

	file=build/config_block/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_block

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_block.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_block/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_block_license || mkdir -p build/config_block_license
cat confdefs.h - <<_ACEOF >build/config_block_license/config_block_license.c

#include <linux/module.h>

		#if !defined(CONFIG_BLOCK)
		#error CONFIG_BLOCK not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_block_license || mkdir -p build/config_block_license

	file=build/config_block_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_block_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_block_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_block_license/" >>build/Makefile
fi


fi





test -d build/config_debug_lock_alloc || mkdir -p build/config_debug_lock_alloc
cat confdefs.h - <<_ACEOF >build/config_debug_lock_alloc/config_debug_lock_alloc.c

#include <linux/module.h>

		#include <linux/mutex.h>


int
main (void)
{

		struct mutex lock;

		mutex_init(&lock);
		mutex_lock(&lock);
		mutex_unlock(&lock);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_debug_lock_alloc || mkdir -p build/config_debug_lock_alloc

	file=build/config_debug_lock_alloc/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_debug_lock_alloc

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_debug_lock_alloc.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_debug_lock_alloc/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/config_debug_lock_alloc_license || mkdir -p build/config_debug_lock_alloc_license
cat confdefs.h - <<_ACEOF >build/config_debug_lock_alloc_license/config_debug_lock_alloc_license.c

#include <linux/module.h>

		#include <linux/mutex.h>


int
main (void)
{

		struct mutex lock;

		mutex_init(&lock);
		mutex_lock(&lock);
		mutex_unlock(&lock);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_debug_lock_alloc_license || mkdir -p build/config_debug_lock_alloc_license

	file=build/config_debug_lock_alloc_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_debug_lock_alloc_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_debug_lock_alloc_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_debug_lock_alloc_license/" >>build/Makefile
fi


fi





test -d build/config_trim_unusued_ksyms || mkdir -p build/config_trim_unusued_ksyms
cat confdefs.h - <<_ACEOF >build/config_trim_unusued_ksyms/config_trim_unusued_ksyms.c

#include <linux/module.h>

		#if defined(CONFIG_TRIM_UNUSED_KSYMS)
		#error CONFIG_TRIM_UNUSED_KSYMS not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_trim_unusued_ksyms || mkdir -p build/config_trim_unusued_ksyms

	file=build/config_trim_unusued_ksyms/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_trim_unusued_ksyms

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_trim_unusued_ksyms.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_trim_unusued_ksyms/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_trim_unusued_ksyms_license || mkdir -p build/config_trim_unusued_ksyms_license
cat confdefs.h - <<_ACEOF >build/config_trim_unusued_ksyms_license/config_trim_unusued_ksyms_license.c

#include <linux/module.h>

		#if defined(CONFIG_TRIM_UNUSED_KSYMS)
		#error CONFIG_TRIM_UNUSED_KSYMS not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_trim_unusued_ksyms_license || mkdir -p build/config_trim_unusued_ksyms_license

	file=build/config_trim_unusued_ksyms_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_trim_unusued_ksyms_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_trim_unusued_ksyms_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_trim_unusued_ksyms_license/" >>build/Makefile
fi


fi





test -d build/config_zlib_deflate || mkdir -p build/config_zlib_deflate
cat confdefs.h - <<_ACEOF >build/config_zlib_deflate/config_zlib_deflate.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_DEFLATE) && \
		    !defined(CONFIG_ZLIB_DEFLATE_MODULE)
		#error CONFIG_ZLIB_DEFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_deflate || mkdir -p build/config_zlib_deflate

	file=build/config_zlib_deflate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_deflate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_deflate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_deflate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_zlib_deflate_license || mkdir -p build/config_zlib_deflate_license
cat confdefs.h - <<_ACEOF >build/config_zlib_deflate_license/config_zlib_deflate_license.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_DEFLATE) && \
		    !defined(CONFIG_ZLIB_DEFLATE_MODULE)
		#error CONFIG_ZLIB_DEFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_deflate_license || mkdir -p build/config_zlib_deflate_license

	file=build/config_zlib_deflate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_deflate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_deflate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_deflate_license/" >>build/Makefile
fi


fi





test -d build/config_zlib_inflate || mkdir -p build/config_zlib_inflate
cat confdefs.h - <<_ACEOF >build/config_zlib_inflate/config_zlib_inflate.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_INFLATE) && \
		    !defined(CONFIG_ZLIB_INFLATE_MODULE)
		#error CONFIG_ZLIB_INFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_inflate || mkdir -p build/config_zlib_inflate

	file=build/config_zlib_inflate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_inflate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_inflate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_inflate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/config_zlib_inflate_license || mkdir -p build/config_zlib_inflate_license
cat confdefs.h - <<_ACEOF >build/config_zlib_inflate_license/config_zlib_inflate_license.c

#include <linux/module.h>

		#if !defined(CONFIG_ZLIB_INFLATE) && \
		    !defined(CONFIG_ZLIB_INFLATE_MODULE)
		#error CONFIG_ZLIB_INFLATE not defined
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/config_zlib_inflate_license || mkdir -p build/config_zlib_inflate_license

	file=build/config_zlib_inflate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/config_zlib_inflate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := config_zlib_inflate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += config_zlib_inflate_license/" >>build/Makefile
fi


fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for kernel config option compatibility" >&5
printf %s "checking for kernel config option compatibility... " >&6; }






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="yes" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.compile.config
		mv build/build.log build/build.log.config

else $as_nop

	        as_fn_error $? "
        *** Unable to compile test source to determine kernel interfaces." "$LINENO" 5

fi



																		if test "x$enable_linux_builtin" = "xno"
then :

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.config); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				if test "${name##*_}" = "license"
then :






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/$name >build/$name/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/$name/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/$name/Makefile build/$name/Makefile.modpost.config
		cat build/$name/build.log >>build/build.log.config

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi


					echo "obj-n += $dir" >>build/Makefile

else $as_nop

					echo "obj-m += $dir" >>build/Makefile

fi

else $as_nop

				echo "obj-n += $dir" >>build/Makefile

fi
		done






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.modpost.config
		cat build/build.log >>build/build.log.config

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi



else $as_nop

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.config); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				touch build/$name/$name.ko

fi
		done

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_MODULES is defined" >&5
printf %s "checking whether CONFIG_MODULES is defined... " >&6; }
	if test "x$enable_linux_builtin" != xyes
then :


	if test -d build/config_modules
then :

		if test -f build/config_modules/config_modules.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			as_fn_error $? "
		*** This kernel does not include the required loadable module
		*** support!
		***
		*** To build OpenZFS as a loadable Linux kernel module
		*** enable loadable module support by setting
		*** \`CONFIG_MODULES=y\` in the kernel configuration and run
		*** \`make modules_prepare\` in the Linux source tree.
		***
		*** If you don't intend to enable loadable kernel module
		*** support, please compile OpenZFS as a Linux kernel built-in.
		***
		*** Prepare the Linux source tree by running \`make prepare\`,
		*** use the OpenZFS \`--enable-linux-builtin\` configure option,
		*** copy the OpenZFS sources into the Linux source tree using
		*** \`./copy-builtin <linux source directory>\`,
		*** set \`CONFIG_ZFS=y\` in the kernel configuration and compile
		*** kernel as usual.
			" "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_modules\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop


	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: not needed" >&5
printf "%s\n" "not needed" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: error" >&5
printf "%s\n" "error" >&6; }
			as_fn_error $? "
		*** This kernel is unable to compile object files.
		***
		*** Please make sure you prepared the Linux source tree
		*** by running \`make prepare\` there.
			" "$LINENO" 5

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: not needed" >&5
printf "%s\n" "not needed" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: error" >&5
printf "%s\n" "error" >&6; }
			as_fn_error $? "
		*** This kernel is unable to compile object files.
		***
		*** Please make sure you prepared the Linux source tree
		*** by running \`make prepare\` there.
			" "$LINENO" 5

fi



fi


fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_BLOCK is defined" >&5
printf %s "checking whether CONFIG_BLOCK is defined... " >&6; }

	if test -d build/config_block
then :

		if test -f build/config_block/config_block.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** This kernel does not include the required block device support.
	*** Rebuild the kernel with CONFIG_BLOCK=y set." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_block\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether mutex_lock() is GPL-only" >&5
printf %s "checking whether mutex_lock() is GPL-only... " >&6; }

	if test -d build/config_debug_lock_alloc_license
then :

		if test -f build/config_debug_lock_alloc_license/config_debug_lock_alloc_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
		as_fn_error $? "
	*** Kernel built with CONFIG_DEBUG_LOCK_ALLOC which is incompatible
	*** with the CDDL license and will prevent the module linking stage
	*** from succeeding.  You must rebuild your kernel without this
	*** option enabled." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_debug_lock_alloc_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_TRIM_UNUSED_KSYM is disabled" >&5
printf %s "checking whether CONFIG_TRIM_UNUSED_KSYM is disabled... " >&6; }

	if test -d build/config_trim_unusued_ksyms
then :

		if test -f build/config_trim_unusued_ksyms/config_trim_unusued_ksyms.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		if test "x$enable_linux_builtin" != xyes
then :

			as_fn_error $? "
	*** This kernel has unused symbols trimming enabled, please disable.
	*** Rebuild the kernel with CONFIG_TRIM_UNUSED_KSYMS=n set." "$LINENO" 5

fi

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_trim_unusued_ksyms\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_ZLIB_DEFLATE is defined" >&5
printf %s "checking whether CONFIG_ZLIB_DEFLATE is defined... " >&6; }

	if test -d build/config_zlib_deflate
then :

		if test -f build/config_zlib_deflate/config_zlib_deflate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** This kernel does not include the required zlib deflate support.
	*** Rebuild the kernel with CONFIG_ZLIB_DEFLATE=y|m set." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_zlib_deflate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CONFIG_ZLIB_INFLATE is defined" >&5
printf %s "checking whether CONFIG_ZLIB_INFLATE is defined... " >&6; }

	if test -d build/config_zlib_inflate
then :

		if test -f build/config_zlib_inflate/config_zlib_inflate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** This kernel does not include the required zlib inflate support.
	*** Rebuild the kernel with CONFIG_ZLIB_INFLATE=y|m set." "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"config_zlib_inflate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	modpost=$LINUX/scripts/Makefile.modpost
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking kernel file name for module symbols" >&5
printf %s "checking kernel file name for module symbols... " >&6; }
	if test "x$enable_linux_builtin" != xyes -a -f "$modpost"
then :

		if grep -q Modules.symvers $modpost
then :

			LINUX_SYMBOLS=Modules.symvers

else $as_nop

			LINUX_SYMBOLS=Module.symvers

fi

		if test ! -f "$LINUX_OBJ/$LINUX_SYMBOLS"
then :

			as_fn_error $? "
	*** Please make sure the kernel devel package for your distribution
	*** is installed.  If you are building with a custom kernel, make sure
	*** the kernel is configured, built, and the '--with-linux=PATH'
	*** configure option refers to the location of the kernel source.
			" "$LINENO" 5

fi

else $as_nop

		LINUX_SYMBOLS=NONE

fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $LINUX_SYMBOLS" >&5
printf "%s\n" "$LINUX_SYMBOLS" >&6; }




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fpu headers are available" >&5
printf %s "checking whether fpu headers are available... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		#include <asm/fpu/api.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_API_HEADER 1" >>confdefs.h



	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: i387.h" >&5
printf "%s\n" "i387.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		#include <asm/fpu/api.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_API_HEADER 1" >>confdefs.h



	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

			#include <linux/module.h>
			#include <asm/fpu/internal.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL_HEADER 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h asm/fpu/internal.h" >&5
printf "%s\n" "asm/fpu/api.h asm/fpu/internal.h" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: asm/fpu/api.h" >&5
printf "%s\n" "asm/fpu/api.h" >&6; }

fi



fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: i387.h" >&5
printf "%s\n" "i387.h" >&6; }

fi



fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether objtool header is available" >&5
printf %s "checking whether objtool header is available... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/objtool.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_OBJTOOL_HEADER 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/objtool.h" >&5
printf "%s\n" "linux/objtool.h" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/frame.h" >&5
printf "%s\n" "linux/frame.h" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/objtool.h>


int
main (void)
{


	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :


printf "%s\n" "#define HAVE_KERNEL_OBJTOOL_HEADER 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/objtool.h" >&5
printf "%s\n" "linux/objtool.h" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: linux/frame.h" >&5
printf "%s\n" "linux/frame.h" >&6; }

fi



fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether wait_queue_entry_t exists" >&5
printf %s "checking whether wait_queue_entry_t exists... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		wait_queue_entry_t *entry __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_QUEUE_ENTRY_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		wait_queue_entry_t *entry __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_QUEUE_ENTRY_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether /dev/zfs minor is available" >&5
printf %s "checking whether /dev/zfs minor is available... " >&6; }

	for i in $(seq 249 -1 200); do
		if ! grep -q "^#define\s\+.*_MINOR\s\+.*$i" \
		    ${LINUX}/include/linux/miscdevice.h; then
			ZFS_DEVICE_MINOR="$i"
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ZFS_DEVICE_MINOR" >&5
printf "%s\n" "$ZFS_DEVICE_MINOR" >&6; }

printf "%s\n" "#define ZFS_DEVICE_MINOR $ZFS_DEVICE_MINOR" >>confdefs.h

			break
		fi
	done

	if  test -z "$ZFS_DEVICE_MINOR"
then :

		as_fn_error $? "
	*** No available misc minor numbers available for use." "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether DECLARE_EVENT_CLASS() is available" >&5
printf %s "checking whether DECLARE_EVENT_CLASS() is available... " >&6; }

	if test "x$enable_linux_builtin" = "xyes"
then :



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		MODULE_LICENSE("$ZFS_META_LICENSE");

		#define CREATE_TRACE_POINTS
		#include "conftest.h"


int
main (void)
{

		trace_zfs_autoconf_event_one(1UL);
		trace_zfs_autoconf_event_two(2UL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

		#if !defined(_CONFTEST_H) || defined(TRACE_HEADER_MULTI_READ)
		#define _CONFTEST_H

		#undef  TRACE_SYSTEM
		#define TRACE_SYSTEM zfs
		#include <linux/tracepoint.h>

		DECLARE_EVENT_CLASS(zfs_autoconf_event_class,
			TP_PROTO(unsigned long i),
			TP_ARGS(i),
			TP_STRUCT__entry(
				__field(unsigned long, i)
			),
			TP_fast_assign(
				__entry->i = i;
			),
			TP_printk("i = %lu", __entry->i)
		);

		#define DEFINE_AUTOCONF_EVENT(name) \
		DEFINE_EVENT(zfs_autoconf_event_class, name, \
			TP_PROTO(unsigned long i), \
			TP_ARGS(i))
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_one);
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_two);

		#endif /* _CONFTEST_H */

		#undef  TRACE_INCLUDE_PATH
		#define TRACE_INCLUDE_PATH .
		#define TRACE_INCLUDE_FILE conftest
		#include <trace/define_trace.h>

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -I$PWD/build/conftest
" >>$file

		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.o'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DECLARE_EVENT_CLASS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



else $as_nop



	test -d build/conftest && rm -Rf build/conftest
	test -f build/Makefile && sed '/conftest/d' build/Makefile



test -d build/conftest || mkdir -p build/conftest
cat confdefs.h - <<_ACEOF >build/conftest/conftest.c

#include <linux/module.h>

		#include <linux/module.h>
		MODULE_LICENSE("$ZFS_META_LICENSE");

		#define CREATE_TRACE_POINTS
		#include "conftest.h"


int
main (void)
{

		trace_zfs_autoconf_event_one(1UL);
		trace_zfs_autoconf_event_two(2UL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF



test -d build/conftest || mkdir -p build/conftest
cat - <<_ACEOF >build/conftest/conftest.h

		#if !defined(_CONFTEST_H) || defined(TRACE_HEADER_MULTI_READ)
		#define _CONFTEST_H

		#undef  TRACE_SYSTEM
		#define TRACE_SYSTEM zfs
		#include <linux/tracepoint.h>

		DECLARE_EVENT_CLASS(zfs_autoconf_event_class,
			TP_PROTO(unsigned long i),
			TP_ARGS(i),
			TP_STRUCT__entry(
				__field(unsigned long, i)
			),
			TP_fast_assign(
				__entry->i = i;
			),
			TP_printk("i = %lu", __entry->i)
		);

		#define DEFINE_AUTOCONF_EVENT(name) \
		DEFINE_EVENT(zfs_autoconf_event_class, name, \
			TP_PROTO(unsigned long i), \
			TP_ARGS(i))
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_one);
		DEFINE_AUTOCONF_EVENT(zfs_autoconf_event_two);

		#endif /* _CONFTEST_H */

		#undef  TRACE_INCLUDE_PATH
		#define TRACE_INCLUDE_PATH .
		#define TRACE_INCLUDE_FILE conftest
		#include <trace/define_trace.h>

_ACEOF




	test -d build || mkdir -p build
	test -d build/conftest || mkdir -p build/conftest

	file=build/conftest/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -I$PWD/build/conftest
" >>$file

		echo "obj-m := conftest.o" >>$file

	if test "xno" = "xyes"
then :
  echo "obj-m += conftest/" >>build/Makefile
fi





	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/conftest >build/conftest/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/conftest/conftest.ko'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DECLARE_EVENT_CLASS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



fi








test -d build/objtool || mkdir -p build/objtool
cat confdefs.h - <<_ACEOF >build/objtool/objtool.c

#include <linux/module.h>

		#undef __ASSEMBLY__
		#include <asm/ptrace.h>
		#include <asm/frame.h>


int
main (void)
{

		#if !defined(FRAME_BEGIN)
		#error "FRAME_BEGIN is not defined"
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/objtool || mkdir -p build/objtool

	file=build/objtool/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/objtool

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := objtool.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += objtool/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/objtool_license || mkdir -p build/objtool_license
cat confdefs.h - <<_ACEOF >build/objtool_license/objtool_license.c

#include <linux/module.h>

		#undef __ASSEMBLY__
		#include <asm/ptrace.h>
		#include <asm/frame.h>


int
main (void)
{

		#if !defined(FRAME_BEGIN)
		#error "FRAME_BEGIN is not defined"
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/objtool_license || mkdir -p build/objtool_license

	file=build/objtool_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/objtool_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := objtool_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += objtool_license/" >>build/Makefile
fi


fi




test -d build/stack_frame_non_standard || mkdir -p build/stack_frame_non_standard
cat confdefs.h - <<_ACEOF >build/stack_frame_non_standard/stack_frame_non_standard.c

#include <linux/module.h>

		#ifdef HAVE_KERNEL_OBJTOOL_HEADER
		#include <linux/objtool.h>
		#else
		#include <linux/frame.h>
		#endif


int
main (void)
{

		#if !defined(STACK_FRAME_NON_STANDARD)
		#error "STACK_FRAME_NON_STANDARD is not defined."
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/stack_frame_non_standard || mkdir -p build/stack_frame_non_standard

	file=build/stack_frame_non_standard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/stack_frame_non_standard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := stack_frame_non_standard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += stack_frame_non_standard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/stack_frame_non_standard_license || mkdir -p build/stack_frame_non_standard_license
cat confdefs.h - <<_ACEOF >build/stack_frame_non_standard_license/stack_frame_non_standard_license.c

#include <linux/module.h>

		#ifdef HAVE_KERNEL_OBJTOOL_HEADER
		#include <linux/objtool.h>
		#else
		#include <linux/frame.h>
		#endif


int
main (void)
{

		#if !defined(STACK_FRAME_NON_STANDARD)
		#error "STACK_FRAME_NON_STANDARD is not defined."
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/stack_frame_non_standard_license || mkdir -p build/stack_frame_non_standard_license

	file=build/stack_frame_non_standard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/stack_frame_non_standard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := stack_frame_non_standard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += stack_frame_non_standard_license/" >>build/Makefile
fi


fi






test -d build/global_node_page_state || mkdir -p build/global_node_page_state
cat confdefs.h - <<_ACEOF >build/global_node_page_state/global_node_page_state.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_node_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_node_page_state || mkdir -p build/global_node_page_state

	file=build/global_node_page_state/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_node_page_state

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_node_page_state.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_node_page_state/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/global_node_page_state_license || mkdir -p build/global_node_page_state_license
cat confdefs.h - <<_ACEOF >build/global_node_page_state_license/global_node_page_state_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_node_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_node_page_state_license || mkdir -p build/global_node_page_state_license

	file=build/global_node_page_state_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_node_page_state_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_node_page_state_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_node_page_state_license/" >>build/Makefile
fi


fi





test -d build/global_zone_page_state || mkdir -p build/global_zone_page_state
cat confdefs.h - <<_ACEOF >build/global_zone_page_state/global_zone_page_state.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_zone_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_zone_page_state || mkdir -p build/global_zone_page_state

	file=build/global_zone_page_state/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_zone_page_state

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_zone_page_state.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_zone_page_state/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/global_zone_page_state_license || mkdir -p build/global_zone_page_state_license
cat confdefs.h - <<_ACEOF >build/global_zone_page_state_license/global_zone_page_state_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmstat.h>


int
main (void)
{

		(void) global_zone_page_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/global_zone_page_state_license || mkdir -p build/global_zone_page_state_license

	file=build/global_zone_page_state_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/global_zone_page_state_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := global_zone_page_state_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += global_zone_page_state_license/" >>build/Makefile
fi


fi






test -d build/access_ok_type || mkdir -p build/access_ok_type
cat confdefs.h - <<_ACEOF >build/access_ok_type/access_ok_type.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		const void __user __attribute__((unused)) *addr =
		    (void *) 0xdeadbeef;
		unsigned long __attribute__((unused)) size = 1;
		int error __attribute__((unused)) = access_ok(0, addr, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/access_ok_type || mkdir -p build/access_ok_type

	file=build/access_ok_type/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/access_ok_type

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := access_ok_type.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += access_ok_type/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/access_ok_type_license || mkdir -p build/access_ok_type_license
cat confdefs.h - <<_ACEOF >build/access_ok_type_license/access_ok_type_license.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		const void __user __attribute__((unused)) *addr =
		    (void *) 0xdeadbeef;
		unsigned long __attribute__((unused)) size = 1;
		int error __attribute__((unused)) = access_ok(0, addr, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/access_ok_type_license || mkdir -p build/access_ok_type_license

	file=build/access_ok_type_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/access_ok_type_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := access_ok_type_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += access_ok_type_license/" >>build/Makefile
fi


fi





test -d build/pde_data || mkdir -p build/pde_data
cat confdefs.h - <<_ACEOF >build/pde_data/pde_data.c

#include <linux/module.h>

		#include <linux/proc_fs.h>


int
main (void)
{

		pde_data(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/pde_data || mkdir -p build/pde_data

	file=build/pde_data/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pde_data

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pde_data.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pde_data/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/pde_data_license || mkdir -p build/pde_data_license
cat confdefs.h - <<_ACEOF >build/pde_data_license/pde_data_license.c

#include <linux/module.h>

		#include <linux/proc_fs.h>


int
main (void)
{

		pde_data(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/pde_data_license || mkdir -p build/pde_data_license

	file=build/pde_data_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pde_data_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pde_data_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pde_data_license/" >>build/Makefile
fi


fi





test -d build/file_fallocate || mkdir -p build/file_fallocate
cat confdefs.h - <<_ACEOF >build/file_fallocate/file_fallocate.c

#include <linux/module.h>

		#include <linux/fs.h>

		long test_fallocate(struct file *file, int mode,
		    loff_t offset, loff_t len) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fallocate = test_fallocate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fallocate || mkdir -p build/file_fallocate

	file=build/file_fallocate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fallocate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fallocate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fallocate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_fallocate_license || mkdir -p build/file_fallocate_license
cat confdefs.h - <<_ACEOF >build/file_fallocate_license/file_fallocate_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		long test_fallocate(struct file *file, int mode,
		    loff_t offset, loff_t len) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fallocate = test_fallocate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fallocate_license || mkdir -p build/file_fallocate_license

	file=build/file_fallocate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fallocate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fallocate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fallocate_license/" >>build/Makefile
fi


fi



test -d build/falloc_fl_zero_range || mkdir -p build/falloc_fl_zero_range
cat confdefs.h - <<_ACEOF >build/falloc_fl_zero_range/falloc_fl_zero_range.c

#include <linux/module.h>

		#include <linux/falloc.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = FALLOC_FL_ZERO_RANGE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/falloc_fl_zero_range || mkdir -p build/falloc_fl_zero_range

	file=build/falloc_fl_zero_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/falloc_fl_zero_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := falloc_fl_zero_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += falloc_fl_zero_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/falloc_fl_zero_range_license || mkdir -p build/falloc_fl_zero_range_license
cat confdefs.h - <<_ACEOF >build/falloc_fl_zero_range_license/falloc_fl_zero_range_license.c

#include <linux/module.h>

		#include <linux/falloc.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = FALLOC_FL_ZERO_RANGE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/falloc_fl_zero_range_license || mkdir -p build/falloc_fl_zero_range_license

	file=build/falloc_fl_zero_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/falloc_fl_zero_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := falloc_fl_zero_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += falloc_fl_zero_range_license/" >>build/Makefile
fi


fi





test -d build/file_fadvise || mkdir -p build/file_fadvise
cat confdefs.h - <<_ACEOF >build/file_fadvise/file_fadvise.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fadvise = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fadvise || mkdir -p build/file_fadvise

	file=build/file_fadvise/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fadvise

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fadvise.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fadvise/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_fadvise_license || mkdir -p build/file_fadvise_license
cat confdefs.h - <<_ACEOF >build/file_fadvise_license/file_fadvise_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fadvise = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_fadvise_license || mkdir -p build/file_fadvise_license

	file=build/file_fadvise_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_fadvise_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_fadvise_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_fadvise_license/" >>build/Makefile
fi


fi





test -d build/generic_fadvise || mkdir -p build/generic_fadvise
cat confdefs.h - <<_ACEOF >build/generic_fadvise/generic_fadvise.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t len __attribute__ ((unused)) = 0;
		int advise __attribute__ ((unused)) = 0;
		generic_fadvise(fp, offset, len, advise);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fadvise || mkdir -p build/generic_fadvise

	file=build/generic_fadvise/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fadvise

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fadvise.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fadvise/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_fadvise_license || mkdir -p build/generic_fadvise_license
cat confdefs.h - <<_ACEOF >build/generic_fadvise_license/generic_fadvise_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t len __attribute__ ((unused)) = 0;
		int advise __attribute__ ((unused)) = 0;
		generic_fadvise(fp, offset, len, advise);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fadvise_license || mkdir -p build/generic_fadvise_license

	file=build/generic_fadvise_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fadvise_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fadvise_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fadvise_license/" >>build/Makefile
fi


fi





test -d build/2args_zlib_deflate_workspacesize || mkdir -p build/2args_zlib_deflate_workspacesize
cat confdefs.h - <<_ACEOF >build/2args_zlib_deflate_workspacesize/2args_zlib_deflate_workspacesize.c

#include <linux/module.h>

		#include <linux/zlib.h>


int
main (void)
{

		return zlib_deflate_workspacesize(MAX_WBITS, MAX_MEM_LEVEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/2args_zlib_deflate_workspacesize || mkdir -p build/2args_zlib_deflate_workspacesize

	file=build/2args_zlib_deflate_workspacesize/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/2args_zlib_deflate_workspacesize

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := 2args_zlib_deflate_workspacesize.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += 2args_zlib_deflate_workspacesize/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/2args_zlib_deflate_workspacesize_license || mkdir -p build/2args_zlib_deflate_workspacesize_license
cat confdefs.h - <<_ACEOF >build/2args_zlib_deflate_workspacesize_license/2args_zlib_deflate_workspacesize_license.c

#include <linux/module.h>

		#include <linux/zlib.h>


int
main (void)
{

		return zlib_deflate_workspacesize(MAX_WBITS, MAX_MEM_LEVEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/2args_zlib_deflate_workspacesize_license || mkdir -p build/2args_zlib_deflate_workspacesize_license

	file=build/2args_zlib_deflate_workspacesize_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/2args_zlib_deflate_workspacesize_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := 2args_zlib_deflate_workspacesize_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += 2args_zlib_deflate_workspacesize_license/" >>build/Makefile
fi


fi






test -d build/rwsem_activity || mkdir -p build/rwsem_activity
cat confdefs.h - <<_ACEOF >build/rwsem_activity/rwsem_activity.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		struct rw_semaphore dummy_semaphore __attribute__ ((unused));
		dummy_semaphore.activity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_activity || mkdir -p build/rwsem_activity

	file=build/rwsem_activity/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_activity

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_activity.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_activity/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/rwsem_activity_license || mkdir -p build/rwsem_activity_license
cat confdefs.h - <<_ACEOF >build/rwsem_activity_license/rwsem_activity_license.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		struct rw_semaphore dummy_semaphore __attribute__ ((unused));
		dummy_semaphore.activity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_activity_license || mkdir -p build/rwsem_activity_license

	file=build/rwsem_activity_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_activity_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_activity_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_activity_license/" >>build/Makefile
fi


fi





test -d build/rwsem_atomic_long_count || mkdir -p build/rwsem_atomic_long_count
cat confdefs.h - <<_ACEOF >build/rwsem_atomic_long_count/rwsem_atomic_long_count.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		DECLARE_RWSEM(dummy_semaphore);
		(void) atomic_long_read(&dummy_semaphore.count);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_atomic_long_count || mkdir -p build/rwsem_atomic_long_count

	file=build/rwsem_atomic_long_count/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_atomic_long_count

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_atomic_long_count.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_atomic_long_count/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/rwsem_atomic_long_count_license || mkdir -p build/rwsem_atomic_long_count_license
cat confdefs.h - <<_ACEOF >build/rwsem_atomic_long_count_license/rwsem_atomic_long_count_license.c

#include <linux/module.h>

		#include <linux/rwsem.h>


int
main (void)
{

		DECLARE_RWSEM(dummy_semaphore);
		(void) atomic_long_read(&dummy_semaphore.count);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/rwsem_atomic_long_count_license || mkdir -p build/rwsem_atomic_long_count_license

	file=build/rwsem_atomic_long_count_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/rwsem_atomic_long_count_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := rwsem_atomic_long_count_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += rwsem_atomic_long_count_license/" >>build/Makefile
fi


fi







test -d build/sched_rt_header || mkdir -p build/sched_rt_header
cat confdefs.h - <<_ACEOF >build/sched_rt_header/sched_rt_header.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/rt.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_rt_header || mkdir -p build/sched_rt_header

	file=build/sched_rt_header/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_rt_header

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_rt_header.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_rt_header/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sched_rt_header_license || mkdir -p build/sched_rt_header_license
cat confdefs.h - <<_ACEOF >build/sched_rt_header_license/sched_rt_header_license.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/rt.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_rt_header_license || mkdir -p build/sched_rt_header_license

	file=build/sched_rt_header_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_rt_header_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_rt_header_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_rt_header_license/" >>build/Makefile
fi


fi





test -d build/sched_signal_header || mkdir -p build/sched_signal_header
cat confdefs.h - <<_ACEOF >build/sched_signal_header/sched_signal_header.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/signal.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_signal_header || mkdir -p build/sched_signal_header

	file=build/sched_signal_header/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_signal_header

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_signal_header.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_signal_header/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sched_signal_header_license || mkdir -p build/sched_signal_header_license
cat confdefs.h - <<_ACEOF >build/sched_signal_header_license/sched_signal_header_license.c

#include <linux/module.h>

		#include <linux/sched.h>
		#include <linux/sched/signal.h>


int
main (void)
{

		return 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sched_signal_header_license || mkdir -p build/sched_signal_header_license

	file=build/sched_signal_header_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sched_signal_header_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sched_signal_header_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sched_signal_header_license/" >>build/Makefile
fi


fi





test -d build/io_schedule_timeout || mkdir -p build/io_schedule_timeout
cat confdefs.h - <<_ACEOF >build/io_schedule_timeout/io_schedule_timeout.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		(void) io_schedule_timeout(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/io_schedule_timeout || mkdir -p build/io_schedule_timeout

	file=build/io_schedule_timeout/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/io_schedule_timeout

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := io_schedule_timeout.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += io_schedule_timeout/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/io_schedule_timeout_license || mkdir -p build/io_schedule_timeout_license
cat confdefs.h - <<_ACEOF >build/io_schedule_timeout_license/io_schedule_timeout_license.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		(void) io_schedule_timeout(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/io_schedule_timeout_license || mkdir -p build/io_schedule_timeout_license

	file=build/io_schedule_timeout_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/io_schedule_timeout_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := io_schedule_timeout_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += io_schedule_timeout_license/" >>build/Makefile
fi


fi






test -d build/usleep_range || mkdir -p build/usleep_range
cat confdefs.h - <<_ACEOF >build/usleep_range/usleep_range.c

#include <linux/module.h>

		#include <linux/delay.h>


int
main (void)
{

		usleep_range(0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/usleep_range || mkdir -p build/usleep_range

	file=build/usleep_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/usleep_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := usleep_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += usleep_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/usleep_range_license || mkdir -p build/usleep_range_license
cat confdefs.h - <<_ACEOF >build/usleep_range_license/usleep_range_license.c

#include <linux/module.h>

		#include <linux/delay.h>


int
main (void)
{

		usleep_range(0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/usleep_range_license || mkdir -p build/usleep_range_license

	file=build/usleep_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/usleep_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := usleep_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += usleep_range_license/" >>build/Makefile
fi


fi






test -d build/kmem_cache_create_usercopy || mkdir -p build/kmem_cache_create_usercopy
cat confdefs.h - <<_ACEOF >build/kmem_cache_create_usercopy/kmem_cache_create_usercopy.c

#include <linux/module.h>

		#include <linux/slab.h>
		static void ctor(void *foo) { /* fake ctor */ }


int
main (void)
{

		struct kmem_cache *skc_linux_cache;
		const char *name = "test";
		size_t size = 4096;
		size_t align = 8;
		unsigned long flags = 0;
		size_t useroffset = 0;
		size_t usersize = size - useroffset;

		skc_linux_cache = kmem_cache_create_usercopy(
		    name, size, align, flags, useroffset, usersize, ctor);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmem_cache_create_usercopy || mkdir -p build/kmem_cache_create_usercopy

	file=build/kmem_cache_create_usercopy/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmem_cache_create_usercopy

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmem_cache_create_usercopy.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmem_cache_create_usercopy/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kmem_cache_create_usercopy_license || mkdir -p build/kmem_cache_create_usercopy_license
cat confdefs.h - <<_ACEOF >build/kmem_cache_create_usercopy_license/kmem_cache_create_usercopy_license.c

#include <linux/module.h>

		#include <linux/slab.h>
		static void ctor(void *foo) { /* fake ctor */ }


int
main (void)
{

		struct kmem_cache *skc_linux_cache;
		const char *name = "test";
		size_t size = 4096;
		size_t align = 8;
		unsigned long flags = 0;
		size_t useroffset = 0;
		size_t usersize = size - useroffset;

		skc_linux_cache = kmem_cache_create_usercopy(
		    name, size, align, flags, useroffset, usersize, ctor);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmem_cache_create_usercopy_license || mkdir -p build/kmem_cache_create_usercopy_license

	file=build/kmem_cache_create_usercopy_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmem_cache_create_usercopy_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmem_cache_create_usercopy_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmem_cache_create_usercopy_license/" >>build/Makefile
fi


fi






test -d build/kvmalloc || mkdir -p build/kvmalloc
cat confdefs.h - <<_ACEOF >build/kvmalloc/kvmalloc.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/slab.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = kvmalloc(0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kvmalloc || mkdir -p build/kvmalloc

	file=build/kvmalloc/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kvmalloc

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kvmalloc.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kvmalloc/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kvmalloc_license || mkdir -p build/kvmalloc_license
cat confdefs.h - <<_ACEOF >build/kvmalloc_license/kvmalloc_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/slab.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = kvmalloc(0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kvmalloc_license || mkdir -p build/kvmalloc_license

	file=build/kvmalloc_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kvmalloc_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kvmalloc_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kvmalloc_license/" >>build/Makefile
fi


fi





test -d build/__vmalloc || mkdir -p build/__vmalloc
cat confdefs.h - <<_ACEOF >build/__vmalloc/__vmalloc.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmalloc.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = __vmalloc(0, GFP_KERNEL, PAGE_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__vmalloc || mkdir -p build/__vmalloc

	file=build/__vmalloc/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__vmalloc

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __vmalloc.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __vmalloc/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/__vmalloc_license || mkdir -p build/__vmalloc_license
cat confdefs.h - <<_ACEOF >build/__vmalloc_license/__vmalloc_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		#include <linux/vmalloc.h>


int
main (void)
{

		void *p __attribute__ ((unused));

		p = __vmalloc(0, GFP_KERNEL, PAGE_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/__vmalloc_license || mkdir -p build/__vmalloc_license

	file=build/__vmalloc_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__vmalloc_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __vmalloc_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __vmalloc_license/" >>build/Makefile
fi


fi






test -d build/wait_on_bit || mkdir -p build/wait_on_bit
cat confdefs.h - <<_ACEOF >build/wait_on_bit/wait_on_bit.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		int (*action)(void *) = NULL;
		wait_on_bit(NULL, 0, action, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_on_bit || mkdir -p build/wait_on_bit

	file=build/wait_on_bit/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_on_bit

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_on_bit.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_on_bit/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/wait_on_bit_license || mkdir -p build/wait_on_bit_license
cat confdefs.h - <<_ACEOF >build/wait_on_bit_license/wait_on_bit_license.c

#include <linux/module.h>

		#include <linux/wait.h>


int
main (void)
{

		int (*action)(void *) = NULL;
		wait_on_bit(NULL, 0, action, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_on_bit_license || mkdir -p build/wait_on_bit_license

	file=build/wait_on_bit_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_on_bit_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_on_bit_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_on_bit_license/" >>build/Makefile
fi


fi





test -d build/wait_queue_head_entry || mkdir -p build/wait_queue_head_entry
cat confdefs.h - <<_ACEOF >build/wait_queue_head_entry/wait_queue_head_entry.c

#include <linux/module.h>

		#include <linux/wait.h>

		#ifdef HAVE_WAIT_QUEUE_ENTRY_T
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_entry_t	spl_wait_queue_entry_t;
		#else
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_t		spl_wait_queue_entry_t;
		#endif


int
main (void)
{

		spl_wait_queue_head_t wq_head;
		spl_wait_queue_entry_t wq_entry;
		struct list_head *head __attribute__ ((unused));
		struct list_head *entry __attribute__ ((unused));

		head = &wq_head.head;
		entry = &wq_entry.entry;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_queue_head_entry || mkdir -p build/wait_queue_head_entry

	file=build/wait_queue_head_entry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_queue_head_entry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_queue_head_entry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_queue_head_entry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/wait_queue_head_entry_license || mkdir -p build/wait_queue_head_entry_license
cat confdefs.h - <<_ACEOF >build/wait_queue_head_entry_license/wait_queue_head_entry_license.c

#include <linux/module.h>

		#include <linux/wait.h>

		#ifdef HAVE_WAIT_QUEUE_ENTRY_T
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_entry_t	spl_wait_queue_entry_t;
		#else
		typedef wait_queue_head_t	spl_wait_queue_head_t;
		typedef wait_queue_t		spl_wait_queue_entry_t;
		#endif


int
main (void)
{

		spl_wait_queue_head_t wq_head;
		spl_wait_queue_entry_t wq_entry;
		struct list_head *head __attribute__ ((unused));
		struct list_head *entry __attribute__ ((unused));

		head = &wq_head.head;
		entry = &wq_entry.entry;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/wait_queue_head_entry_license || mkdir -p build/wait_queue_head_entry_license

	file=build/wait_queue_head_entry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/wait_queue_head_entry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := wait_queue_head_entry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += wait_queue_head_entry_license/" >>build/Makefile
fi


fi







test -d build/timestamp_truncate || mkdir -p build/timestamp_truncate
cat confdefs.h - <<_ACEOF >build/timestamp_truncate/timestamp_truncate.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct timespec64 ts;
		struct inode ip;

		memset(&ts, 0, sizeof(ts));
		ts = timestamp_truncate(ts, &ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timestamp_truncate || mkdir -p build/timestamp_truncate

	file=build/timestamp_truncate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timestamp_truncate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timestamp_truncate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timestamp_truncate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timestamp_truncate_license || mkdir -p build/timestamp_truncate_license
cat confdefs.h - <<_ACEOF >build/timestamp_truncate_license/timestamp_truncate_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct timespec64 ts;
		struct inode ip;

		memset(&ts, 0, sizeof(ts));
		ts = timestamp_truncate(ts, &ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timestamp_truncate_license || mkdir -p build/timestamp_truncate_license

	file=build/timestamp_truncate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timestamp_truncate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timestamp_truncate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timestamp_truncate_license/" >>build/Makefile
fi


fi




test -d build/inode_times || mkdir -p build/inode_times
cat confdefs.h - <<_ACEOF >build/inode_times/inode_times.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip;
		struct timespec ts;

		memset(&ip, 0, sizeof(ip));
		ts = ip.i_mtime;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_times || mkdir -p build/inode_times

	file=build/inode_times/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_times

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_times.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_times/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_times_license || mkdir -p build/inode_times_license
cat confdefs.h - <<_ACEOF >build/inode_times_license/inode_times_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip;
		struct timespec ts;

		memset(&ip, 0, sizeof(ip));
		ts = ip.i_mtime;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_times_license || mkdir -p build/inode_times_license

	file=build/inode_times_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_times_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_times_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_times_license/" >>build/Makefile
fi


fi





test -d build/inode_lock || mkdir -p build/inode_lock
cat confdefs.h - <<_ACEOF >build/inode_lock/inode_lock.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *inode = NULL;
		inode_lock_shared(inode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_lock || mkdir -p build/inode_lock

	file=build/inode_lock/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_lock

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_lock.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_lock/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_lock_license || mkdir -p build/inode_lock_license
cat confdefs.h - <<_ACEOF >build/inode_lock_license/inode_lock_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *inode = NULL;
		inode_lock_shared(inode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_lock_license || mkdir -p build/inode_lock_license

	file=build/inode_lock_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_lock_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_lock_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_lock_license/" >>build/Makefile
fi


fi





test -d build/group_info_gid || mkdir -p build/group_info_gid
cat confdefs.h - <<_ACEOF >build/group_info_gid/group_info_gid.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct group_info gi __attribute__ ((unused)) = {};
		gi.gid[0] = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/group_info_gid || mkdir -p build/group_info_gid

	file=build/group_info_gid/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/group_info_gid

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := group_info_gid.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += group_info_gid/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/group_info_gid_license || mkdir -p build/group_info_gid_license
cat confdefs.h - <<_ACEOF >build/group_info_gid_license/group_info_gid_license.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct group_info gi __attribute__ ((unused)) = {};
		gi.gid[0] = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/group_info_gid_license || mkdir -p build/group_info_gid_license

	file=build/group_info_gid_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/group_info_gid_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := group_info_gid_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += group_info_gid_license/" >>build/Makefile
fi


fi






test -d build/kernel_write || mkdir -p build/kernel_write
cat confdefs.h - <<_ACEOF >build/kernel_write/kernel_write.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		const void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_write(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_write || mkdir -p build/kernel_write

	file=build/kernel_write/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_write

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_write.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_write/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kernel_write_license || mkdir -p build/kernel_write_license
cat confdefs.h - <<_ACEOF >build/kernel_write_license/kernel_write_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		const void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_write(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_write_license || mkdir -p build/kernel_write_license

	file=build/kernel_write_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_write_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_write_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_write_license/" >>build/Makefile
fi


fi





test -d build/kernel_read || mkdir -p build/kernel_read
cat confdefs.h - <<_ACEOF >build/kernel_read/kernel_read.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_read(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_read || mkdir -p build/kernel_read

	file=build/kernel_read/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_read

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_read.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_read/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kernel_read_license || mkdir -p build/kernel_read_license
cat confdefs.h - <<_ACEOF >build/kernel_read_license/kernel_read_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *file = NULL;
		void *buf = NULL;
		size_t count = 0;
		loff_t *pos = NULL;
		ssize_t ret;

		ret = kernel_read(file, buf, count, pos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_read_license || mkdir -p build/kernel_read_license

	file=build/kernel_read_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_read_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_read_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_read_license/" >>build/Makefile
fi


fi






test -d build/timer_setup || mkdir -p build/timer_setup
cat confdefs.h - <<_ACEOF >build/timer_setup/timer_setup.c

#include <linux/module.h>

		#include <linux/timer.h>

		struct my_task_timer {
			struct timer_list timer;
			int data;
		};

		void task_expire(struct timer_list *tl)
		{
			struct my_task_timer *task_timer =
			    from_timer(task_timer, tl, timer);
			task_timer->data = 42;
		}


int
main (void)
{

		struct my_task_timer task_timer;
		timer_setup(&task_timer.timer, task_expire, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_setup || mkdir -p build/timer_setup

	file=build/timer_setup/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_setup

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_setup.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_setup/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timer_setup_license || mkdir -p build/timer_setup_license
cat confdefs.h - <<_ACEOF >build/timer_setup_license/timer_setup_license.c

#include <linux/module.h>

		#include <linux/timer.h>

		struct my_task_timer {
			struct timer_list timer;
			int data;
		};

		void task_expire(struct timer_list *tl)
		{
			struct my_task_timer *task_timer =
			    from_timer(task_timer, tl, timer);
			task_timer->data = 42;
		}


int
main (void)
{

		struct my_task_timer task_timer;
		timer_setup(&task_timer.timer, task_expire, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_setup_license || mkdir -p build/timer_setup_license

	file=build/timer_setup_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_setup_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_setup_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_setup_license/" >>build/Makefile
fi


fi




test -d build/timer_list_function || mkdir -p build/timer_list_function
cat confdefs.h - <<_ACEOF >build/timer_list_function/timer_list_function.c

#include <linux/module.h>

		#include <linux/timer.h>
		void task_expire(struct timer_list *tl) {}


int
main (void)
{

		struct timer_list tl;
		tl.function = task_expire;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_function || mkdir -p build/timer_list_function

	file=build/timer_list_function/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_function

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_function.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_function/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timer_list_function_license || mkdir -p build/timer_list_function_license
cat confdefs.h - <<_ACEOF >build/timer_list_function_license/timer_list_function_license.c

#include <linux/module.h>

		#include <linux/timer.h>
		void task_expire(struct timer_list *tl) {}


int
main (void)
{

		struct timer_list tl;
		tl.function = task_expire;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_function_license || mkdir -p build/timer_list_function_license

	file=build/timer_list_function_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_function_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_function_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_function_license/" >>build/Makefile
fi


fi




test -d build/timer_list_flags || mkdir -p build/timer_list_flags
cat confdefs.h - <<_ACEOF >build/timer_list_flags/timer_list_flags.c

#include <linux/module.h>

		#include <linux/timer.h>


int
main (void)
{

		struct timer_list tl;
		tl.flags = 2;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_flags || mkdir -p build/timer_list_flags

	file=build/timer_list_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/timer_list_flags_license || mkdir -p build/timer_list_flags_license
cat confdefs.h - <<_ACEOF >build/timer_list_flags_license/timer_list_flags_license.c

#include <linux/module.h>

		#include <linux/timer.h>


int
main (void)
{

		struct timer_list tl;
		tl.flags = 2;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/timer_list_flags_license || mkdir -p build/timer_list_flags_license

	file=build/timer_list_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/timer_list_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := timer_list_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += timer_list_flags_license/" >>build/Makefile
fi


fi





test -d build/super_user_ns || mkdir -p build/super_user_ns
cat confdefs.h - <<_ACEOF >build/super_user_ns/super_user_ns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/user_namespace.h>


int
main (void)
{

		struct super_block super;
		super.s_user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_user_ns || mkdir -p build/super_user_ns

	file=build/super_user_ns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_user_ns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_user_ns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_user_ns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_user_ns_license || mkdir -p build/super_user_ns_license
cat confdefs.h - <<_ACEOF >build/super_user_ns_license/super_user_ns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/user_namespace.h>


int
main (void)
{

		struct super_block super;
		super.s_user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_user_ns_license || mkdir -p build/super_user_ns_license

	file=build/super_user_ns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_user_ns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_user_ns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_user_ns_license/" >>build/Makefile
fi


fi





test -d build/proc_ops_struct || mkdir -p build/proc_ops_struct
cat confdefs.h - <<_ACEOF >build/proc_ops_struct/proc_ops_struct.c

#include <linux/module.h>

		#include <linux/proc_fs.h>

		int test_open(struct inode *ip, struct file *fp) { return 0; }
		ssize_t test_read(struct file *fp, char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		ssize_t test_write(struct file *fp, const char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		loff_t test_lseek(struct file *fp, loff_t off, int flag)
		    { return 0; }
		int test_release(struct inode *ip, struct file *fp)
		    { return 0; }

		const struct proc_ops test_ops __attribute__ ((unused)) = {
			.proc_open      = test_open,
			.proc_read      = test_read,
			.proc_write	= test_write,
			.proc_lseek     = test_lseek,
			.proc_release   = test_release,
		};


int
main (void)
{

		struct proc_dir_entry *entry __attribute__ ((unused)) =
		    proc_create_data("test", 0444, NULL, &test_ops, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/proc_ops_struct || mkdir -p build/proc_ops_struct

	file=build/proc_ops_struct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/proc_ops_struct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := proc_ops_struct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += proc_ops_struct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/proc_ops_struct_license || mkdir -p build/proc_ops_struct_license
cat confdefs.h - <<_ACEOF >build/proc_ops_struct_license/proc_ops_struct_license.c

#include <linux/module.h>

		#include <linux/proc_fs.h>

		int test_open(struct inode *ip, struct file *fp) { return 0; }
		ssize_t test_read(struct file *fp, char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		ssize_t test_write(struct file *fp, const char __user *ptr,
		    size_t size, loff_t *offp) { return 0; }
		loff_t test_lseek(struct file *fp, loff_t off, int flag)
		    { return 0; }
		int test_release(struct inode *ip, struct file *fp)
		    { return 0; }

		const struct proc_ops test_ops __attribute__ ((unused)) = {
			.proc_open      = test_open,
			.proc_read      = test_read,
			.proc_write	= test_write,
			.proc_lseek     = test_lseek,
			.proc_release   = test_release,
		};


int
main (void)
{

		struct proc_dir_entry *entry __attribute__ ((unused)) =
		    proc_create_data("test", 0444, NULL, &test_ops, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/proc_ops_struct_license || mkdir -p build/proc_ops_struct_license

	file=build/proc_ops_struct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/proc_ops_struct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := proc_ops_struct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += proc_ops_struct_license/" >>build/Makefile
fi


fi






test -d build/block_device_operations_check_events || mkdir -p build/block_device_operations_check_events
cat confdefs.h - <<_ACEOF >build/block_device_operations_check_events/block_device_operations_check_events.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		unsigned int blk_check_events(struct gendisk *disk,
		    unsigned int clearing) {
			(void) disk, (void) clearing;
			return (0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.check_events	= blk_check_events,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_check_events || mkdir -p build/block_device_operations_check_events

	file=build/block_device_operations_check_events/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_check_events

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_check_events.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_check_events/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_check_events_license || mkdir -p build/block_device_operations_check_events_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_check_events_license/block_device_operations_check_events_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		unsigned int blk_check_events(struct gendisk *disk,
		    unsigned int clearing) {
			(void) disk, (void) clearing;
			return (0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.check_events	= blk_check_events,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_check_events_license || mkdir -p build/block_device_operations_check_events_license

	file=build/block_device_operations_check_events_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_check_events_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_check_events_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_check_events_license/" >>build/Makefile
fi


fi





test -d build/block_device_operations_release_void || mkdir -p build/block_device_operations_release_void
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void/block_device_operations_release_void.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g, fmode_t mode) {
			(void) g, (void) mode;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void || mkdir -p build/block_device_operations_release_void

	file=build/block_device_operations_release_void/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_release_void_license || mkdir -p build/block_device_operations_release_void_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void_license/block_device_operations_release_void_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g, fmode_t mode) {
			(void) g, (void) mode;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void_license || mkdir -p build/block_device_operations_release_void_license

	file=build/block_device_operations_release_void_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void_license/" >>build/Makefile
fi


fi





test -d build/block_device_operations_release_void_1arg || mkdir -p build/block_device_operations_release_void_1arg
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void_1arg/block_device_operations_release_void_1arg.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g) {
			(void) g;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void_1arg || mkdir -p build/block_device_operations_release_void_1arg

	file=build/block_device_operations_release_void_1arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void_1arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void_1arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void_1arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_release_void_1arg_license || mkdir -p build/block_device_operations_release_void_1arg_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_release_void_1arg_license/block_device_operations_release_void_1arg_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		void blk_release(struct gendisk *g) {
			(void) g;
			return;
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.open		= NULL,
			.release	= blk_release,
			.ioctl		= NULL,
			.compat_ioctl	= NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_release_void_1arg_license || mkdir -p build/block_device_operations_release_void_1arg_license

	file=build/block_device_operations_release_void_1arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_release_void_1arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_release_void_1arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_release_void_1arg_license/" >>build/Makefile
fi


fi





test -d build/block_device_operations_revalidate_disk || mkdir -p build/block_device_operations_revalidate_disk
cat confdefs.h - <<_ACEOF >build/block_device_operations_revalidate_disk/block_device_operations_revalidate_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		int blk_revalidate_disk(struct gendisk *disk) {
			(void) disk;
			return(0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.revalidate_disk	= blk_revalidate_disk,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_revalidate_disk || mkdir -p build/block_device_operations_revalidate_disk

	file=build/block_device_operations_revalidate_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_revalidate_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_revalidate_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_revalidate_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_revalidate_disk_license || mkdir -p build/block_device_operations_revalidate_disk_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_revalidate_disk_license/block_device_operations_revalidate_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>

		int blk_revalidate_disk(struct gendisk *disk) {
			(void) disk;
			return(0);
		}

		static const struct block_device_operations
		    bops __attribute__ ((unused)) = {
			.revalidate_disk	= blk_revalidate_disk,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_revalidate_disk_license || mkdir -p build/block_device_operations_revalidate_disk_license

	file=build/block_device_operations_revalidate_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_revalidate_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_revalidate_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_revalidate_disk_license/" >>build/Makefile
fi


fi







test -d build/req_failfast_mask || mkdir -p build/req_failfast_mask
cat confdefs.h - <<_ACEOF >build/req_failfast_mask/req_failfast_mask.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FAILFAST_MASK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_failfast_mask || mkdir -p build/req_failfast_mask

	file=build/req_failfast_mask/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_failfast_mask

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_failfast_mask.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_failfast_mask/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_failfast_mask_license || mkdir -p build/req_failfast_mask_license
cat confdefs.h - <<_ACEOF >build/req_failfast_mask_license/req_failfast_mask_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FAILFAST_MASK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_failfast_mask_license || mkdir -p build/req_failfast_mask_license

	file=build/req_failfast_mask_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_failfast_mask_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_failfast_mask_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_failfast_mask_license/" >>build/Makefile
fi


fi




test -d build/req_discard || mkdir -p build/req_discard
cat confdefs.h - <<_ACEOF >build/req_discard/req_discard.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_discard || mkdir -p build/req_discard

	file=build/req_discard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_discard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_discard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_discard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_discard_license || mkdir -p build/req_discard_license
cat confdefs.h - <<_ACEOF >build/req_discard_license/req_discard_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_discard_license || mkdir -p build/req_discard_license

	file=build/req_discard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_discard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_discard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_discard_license/" >>build/Makefile
fi


fi




test -d build/req_flush || mkdir -p build/req_flush
cat confdefs.h - <<_ACEOF >build/req_flush/req_flush.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_flush || mkdir -p build/req_flush

	file=build/req_flush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_flush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_flush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_flush/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_flush_license || mkdir -p build/req_flush_license
cat confdefs.h - <<_ACEOF >build/req_flush_license/req_flush_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_flush_license || mkdir -p build/req_flush_license

	file=build/req_flush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_flush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_flush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_flush_license/" >>build/Makefile
fi


fi




test -d build/req_preflush || mkdir -p build/req_preflush
cat confdefs.h - <<_ACEOF >build/req_preflush/req_preflush.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_PREFLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_preflush || mkdir -p build/req_preflush

	file=build/req_preflush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_preflush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_preflush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_preflush/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_preflush_license || mkdir -p build/req_preflush_license
cat confdefs.h - <<_ACEOF >build/req_preflush_license/req_preflush_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		int flags __attribute__ ((unused));
		flags = REQ_PREFLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_preflush_license || mkdir -p build/req_preflush_license

	file=build/req_preflush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_preflush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_preflush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_preflush_license/" >>build/Makefile
fi


fi





test -d build/req_op_discard || mkdir -p build/req_op_discard
cat confdefs.h - <<_ACEOF >build/req_op_discard/req_op_discard.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_discard || mkdir -p build/req_op_discard

	file=build/req_op_discard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_discard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_discard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_discard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_op_discard_license || mkdir -p build/req_op_discard_license
cat confdefs.h - <<_ACEOF >build/req_op_discard_license/req_op_discard_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_DISCARD;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_discard_license || mkdir -p build/req_op_discard_license

	file=build/req_op_discard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_discard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_discard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_discard_license/" >>build/Makefile
fi


fi




test -d build/req_op_secure_erase || mkdir -p build/req_op_secure_erase
cat confdefs.h - <<_ACEOF >build/req_op_secure_erase/req_op_secure_erase.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_SECURE_ERASE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_secure_erase || mkdir -p build/req_op_secure_erase

	file=build/req_op_secure_erase/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_secure_erase

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_secure_erase.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_secure_erase/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_op_secure_erase_license || mkdir -p build/req_op_secure_erase_license
cat confdefs.h - <<_ACEOF >build/req_op_secure_erase_license/req_op_secure_erase_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_SECURE_ERASE;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_secure_erase_license || mkdir -p build/req_op_secure_erase_license

	file=build/req_op_secure_erase_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_secure_erase_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_secure_erase_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_secure_erase_license/" >>build/Makefile
fi


fi




test -d build/req_op_flush || mkdir -p build/req_op_flush
cat confdefs.h - <<_ACEOF >build/req_op_flush/req_op_flush.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_flush || mkdir -p build/req_op_flush

	file=build/req_op_flush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_flush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_flush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_flush/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/req_op_flush_license || mkdir -p build/req_op_flush_license
cat confdefs.h - <<_ACEOF >build/req_op_flush_license/req_op_flush_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>


int
main (void)
{

		int op __attribute__ ((unused)) = REQ_OP_FLUSH;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/req_op_flush_license || mkdir -p build/req_op_flush_license

	file=build/req_op_flush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/req_op_flush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := req_op_flush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += req_op_flush_license/" >>build/Makefile
fi


fi




test -d build/bio_bi_opf || mkdir -p build/bio_bi_opf
cat confdefs.h - <<_ACEOF >build/bio_bi_opf/bio_bi_opf.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		bio.bi_opf = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_opf || mkdir -p build/bio_bi_opf

	file=build/bio_bi_opf/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_opf

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_opf.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_opf/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bi_opf_license || mkdir -p build/bio_bi_opf_license
cat confdefs.h - <<_ACEOF >build/bio_bi_opf_license/bio_bi_opf_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		bio.bi_opf = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_opf_license || mkdir -p build/bio_bi_opf_license

	file=build/bio_bi_opf_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_opf_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_opf_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_opf_license/" >>build/Makefile
fi


fi




test -d build/bio_set_op_attrs || mkdir -p build/bio_set_op_attrs
cat confdefs.h - <<_ACEOF >build/bio_set_op_attrs/bio_set_op_attrs.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio __attribute__ ((unused)) = NULL;
		bio_set_op_attrs(bio, 0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_op_attrs || mkdir -p build/bio_set_op_attrs

	file=build/bio_set_op_attrs/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_op_attrs

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_op_attrs.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_op_attrs/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_set_op_attrs_license || mkdir -p build/bio_set_op_attrs_license
cat confdefs.h - <<_ACEOF >build/bio_set_op_attrs_license/bio_set_op_attrs_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio __attribute__ ((unused)) = NULL;
		bio_set_op_attrs(bio, 0, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_op_attrs_license || mkdir -p build/bio_set_op_attrs_license

	file=build/bio_set_op_attrs_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_op_attrs_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_op_attrs_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_op_attrs_license/" >>build/Makefile
fi


fi





test -d build/bio_set_dev || mkdir -p build/bio_set_dev
cat confdefs.h - <<_ACEOF >build/bio_set_dev/bio_set_dev.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		bio_set_dev(bio, bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev || mkdir -p build/bio_set_dev

	file=build/bio_set_dev/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/bio_set_dev_license || mkdir -p build/bio_set_dev_license
cat confdefs.h - <<_ACEOF >build/bio_set_dev_license/bio_set_dev_license.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		bio_set_dev(bio, bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev_license || mkdir -p build/bio_set_dev_license

	file=build/bio_set_dev_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev_license/" >>build/Makefile
fi


fi





test -d build/bio_end_io_t_args || mkdir -p build/bio_end_io_t_args
cat confdefs.h - <<_ACEOF >build/bio_end_io_t_args/bio_end_io_t_args.c

#include <linux/module.h>

		#include <linux/bio.h>
		void wanted_end_io(struct bio *bio) { return; }
		bio_end_io_t *end_io __attribute__ ((unused)) = wanted_end_io;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_end_io_t_args || mkdir -p build/bio_end_io_t_args

	file=build/bio_end_io_t_args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_end_io_t_args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_end_io_t_args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_end_io_t_args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_end_io_t_args_license || mkdir -p build/bio_end_io_t_args_license
cat confdefs.h - <<_ACEOF >build/bio_end_io_t_args_license/bio_end_io_t_args_license.c

#include <linux/module.h>

		#include <linux/bio.h>
		void wanted_end_io(struct bio *bio) { return; }
		bio_end_io_t *end_io __attribute__ ((unused)) = wanted_end_io;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_end_io_t_args_license || mkdir -p build/bio_end_io_t_args_license

	file=build/bio_end_io_t_args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_end_io_t_args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_end_io_t_args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_end_io_t_args_license/" >>build/Makefile
fi


fi





test -d build/bio_bi_status || mkdir -p build/bio_bi_status
cat confdefs.h - <<_ACEOF >build/bio_bi_status/bio_bi_status.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		blk_status_t status __attribute__ ((unused)) = BLK_STS_OK;
		bio.bi_status = status;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_status || mkdir -p build/bio_bi_status

	file=build/bio_bi_status/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_status

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_status.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_status/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bi_status_license || mkdir -p build/bio_bi_status_license
cat confdefs.h - <<_ACEOF >build/bio_bi_status_license/bio_bi_status_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio __attribute__ ((unused));
		blk_status_t status __attribute__ ((unused)) = BLK_STS_OK;
		bio.bi_status = status;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bi_status_license || mkdir -p build/bio_bi_status_license

	file=build/bio_bi_status_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bi_status_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bi_status_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bi_status_license/" >>build/Makefile
fi


fi





test -d build/bio_bvec_iter || mkdir -p build/bio_bvec_iter
cat confdefs.h - <<_ACEOF >build/bio_bvec_iter/bio_bvec_iter.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio;
		bio.bi_iter.bi_sector = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bvec_iter || mkdir -p build/bio_bvec_iter

	file=build/bio_bvec_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bvec_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bvec_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bvec_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bvec_iter_license || mkdir -p build/bio_bvec_iter_license
cat confdefs.h - <<_ACEOF >build/bio_bvec_iter_license/bio_bvec_iter_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio bio;
		bio.bi_iter.bi_sector = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bvec_iter_license || mkdir -p build/bio_bvec_iter_license

	file=build/bio_bvec_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bvec_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bvec_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bvec_iter_license/" >>build/Makefile
fi


fi





test -d build/submit_bio || mkdir -p build/submit_bio
cat confdefs.h - <<_ACEOF >build/submit_bio/submit_bio.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio = NULL;
		(void) submit_bio(bio);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/submit_bio || mkdir -p build/submit_bio

	file=build/submit_bio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/submit_bio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := submit_bio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += submit_bio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/submit_bio_license || mkdir -p build/submit_bio_license
cat confdefs.h - <<_ACEOF >build/submit_bio_license/submit_bio_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		struct bio *bio = NULL;
		(void) submit_bio(bio);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/submit_bio_license || mkdir -p build/submit_bio_license

	file=build/submit_bio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/submit_bio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := submit_bio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += submit_bio_license/" >>build/Makefile
fi


fi





test -d build/current_bio_list || mkdir -p build/current_bio_list
cat confdefs.h - <<_ACEOF >build/current_bio_list/current_bio_list.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		current->bio_list = (struct bio_list *) NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_bio_list || mkdir -p build/current_bio_list

	file=build/current_bio_list/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_bio_list

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_bio_list.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_bio_list/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/current_bio_list_license || mkdir -p build/current_bio_list_license
cat confdefs.h - <<_ACEOF >build/current_bio_list_license/current_bio_list_license.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		current->bio_list = (struct bio_list *) NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_bio_list_license || mkdir -p build/current_bio_list_license

	file=build/current_bio_list_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_bio_list_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_bio_list_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_bio_list_license/" >>build/Makefile
fi


fi





test -d build/blkg_tryget || mkdir -p build/blkg_tryget
cat confdefs.h - <<_ACEOF >build/blkg_tryget/blkg_tryget.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>
		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct blkcg_gq blkg __attribute__ ((unused)) = {};
		bool rc __attribute__ ((unused));
		rc = blkg_tryget(&blkg);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkg_tryget || mkdir -p build/blkg_tryget

	file=build/blkg_tryget/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkg_tryget

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkg_tryget.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkg_tryget/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/blkg_tryget_license || mkdir -p build/blkg_tryget_license
cat confdefs.h - <<_ACEOF >build/blkg_tryget_license/blkg_tryget_license.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>
		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		struct blkcg_gq blkg __attribute__ ((unused)) = {};
		bool rc __attribute__ ((unused));
		rc = blkg_tryget(&blkg);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkg_tryget_license || mkdir -p build/blkg_tryget_license

	file=build/blkg_tryget_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkg_tryget_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkg_tryget_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkg_tryget_license/" >>build/Makefile
fi


fi





test -d build/bio_bdev_disk || mkdir -p build/bio_bdev_disk
cat confdefs.h - <<_ACEOF >build/bio_bdev_disk/bio_bdev_disk.c

#include <linux/module.h>

		#include <linux/blk_types.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *b = NULL;
		struct gendisk *d = b->bi_bdev->bd_disk;
		blk_register_queue(d);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_disk || mkdir -p build/bio_bdev_disk

	file=build/bio_bdev_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bdev_disk_license || mkdir -p build/bio_bdev_disk_license
cat confdefs.h - <<_ACEOF >build/bio_bdev_disk_license/bio_bdev_disk_license.c

#include <linux/module.h>

		#include <linux/blk_types.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *b = NULL;
		struct gendisk *d = b->bi_bdev->bd_disk;
		blk_register_queue(d);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_disk_license || mkdir -p build/bio_bdev_disk_license

	file=build/bio_bdev_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_disk_license/" >>build/Makefile
fi


fi





test -d build/bio_bdev_submit_bio_void || mkdir -p build/bio_bdev_submit_bio_void
cat confdefs.h - <<_ACEOF >build/bio_bdev_submit_bio_void/bio_bdev_submit_bio_void.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations *bdev = NULL;
		__attribute__((unused)) void(*f)(struct bio *) = bdev->submit_bio;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_submit_bio_void || mkdir -p build/bio_bdev_submit_bio_void

	file=build/bio_bdev_submit_bio_void/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_submit_bio_void

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_submit_bio_void.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_submit_bio_void/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_bdev_submit_bio_void_license || mkdir -p build/bio_bdev_submit_bio_void_license
cat confdefs.h - <<_ACEOF >build/bio_bdev_submit_bio_void_license/bio_bdev_submit_bio_void_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations *bdev = NULL;
		__attribute__((unused)) void(*f)(struct bio *) = bdev->submit_bio;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_bdev_submit_bio_void_license || mkdir -p build/bio_bdev_submit_bio_void_license

	file=build/bio_bdev_submit_bio_void_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_bdev_submit_bio_void_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_bdev_submit_bio_void_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_bdev_submit_bio_void_license/" >>build/Makefile
fi


fi





test -d build/bio_set_dev_macro || mkdir -p build/bio_set_dev_macro
cat confdefs.h - <<_ACEOF >build/bio_set_dev_macro/bio_set_dev_macro.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		#ifndef bio_set_dev
		#error Not a macro
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev_macro || mkdir -p build/bio_set_dev_macro

	file=build/bio_set_dev_macro/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev_macro

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev_macro.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev_macro/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/bio_set_dev_macro_license || mkdir -p build/bio_set_dev_macro_license
cat confdefs.h - <<_ACEOF >build/bio_set_dev_macro_license/bio_set_dev_macro_license.c

#include <linux/module.h>

		#include <linux/bio.h>
		#include <linux/fs.h>


int
main (void)
{

		#ifndef bio_set_dev
		#error Not a macro
		#endif

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_set_dev_macro_license || mkdir -p build/bio_set_dev_macro_license

	file=build/bio_set_dev_macro_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_set_dev_macro_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_set_dev_macro_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_set_dev_macro_license/" >>build/Makefile
fi


fi





test -d build/blk_cgroup_header || mkdir -p build/blk_cgroup_header
cat confdefs.h - <<_ACEOF >build/blk_cgroup_header/blk_cgroup_header.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cgroup_header || mkdir -p build/blk_cgroup_header

	file=build/blk_cgroup_header/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cgroup_header

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cgroup_header.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cgroup_header/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_cgroup_header_license || mkdir -p build/blk_cgroup_header_license
cat confdefs.h - <<_ACEOF >build/blk_cgroup_header_license/blk_cgroup_header_license.c

#include <linux/module.h>

		#include <linux/blk-cgroup.h>


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cgroup_header_license || mkdir -p build/blk_cgroup_header_license

	file=build/blk_cgroup_header_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cgroup_header_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cgroup_header_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cgroup_header_license/" >>build/Makefile
fi


fi





test -d build/bio_alloc_4arg || mkdir -p build/bio_alloc_4arg
cat confdefs.h - <<_ACEOF >build/bio_alloc_4arg/bio_alloc_4arg.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		gfp_t gfp_mask = 0;
		unsigned short nr_iovecs = 0;
		struct block_device *bdev = NULL;
		unsigned int opf = 0;

		struct bio *__attribute__((unused)) allocated = bio_alloc(bdev, nr_iovecs, opf, gfp_mask);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_alloc_4arg || mkdir -p build/bio_alloc_4arg

	file=build/bio_alloc_4arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_alloc_4arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_alloc_4arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_alloc_4arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_alloc_4arg_license || mkdir -p build/bio_alloc_4arg_license
cat confdefs.h - <<_ACEOF >build/bio_alloc_4arg_license/bio_alloc_4arg_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		gfp_t gfp_mask = 0;
		unsigned short nr_iovecs = 0;
		struct block_device *bdev = NULL;
		unsigned int opf = 0;

		struct bio *__attribute__((unused)) allocated = bio_alloc(bdev, nr_iovecs, opf, gfp_mask);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_alloc_4arg_license || mkdir -p build/bio_alloc_4arg_license

	file=build/bio_alloc_4arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_alloc_4arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_alloc_4arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_alloc_4arg_license/" >>build/Makefile
fi


fi







test -d build/blkdev_get_by_path || mkdir -p build/blkdev_get_by_path
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path/blkdev_get_by_path.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;

		bdev = blkdev_get_by_path(path, mode, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path || mkdir -p build/blkdev_get_by_path

	file=build/blkdev_get_by_path/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_get_by_path_license || mkdir -p build/blkdev_get_by_path_license
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path_license/blkdev_get_by_path_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;

		bdev = blkdev_get_by_path(path, mode, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path_license || mkdir -p build/blkdev_get_by_path_license

	file=build/blkdev_get_by_path_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path_license/" >>build/Makefile
fi


fi





test -d build/blkdev_get_by_path_4arg || mkdir -p build/blkdev_get_by_path_4arg
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path_4arg/blkdev_get_by_path_4arg.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;
		struct blk_holder_ops h;

		bdev = blkdev_get_by_path(path, mode, holder, &h);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path_4arg || mkdir -p build/blkdev_get_by_path_4arg

	file=build/blkdev_get_by_path_4arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path_4arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path_4arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path_4arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_get_by_path_4arg_license || mkdir -p build/blkdev_get_by_path_4arg_license
cat confdefs.h - <<_ACEOF >build/blkdev_get_by_path_4arg_license/blkdev_get_by_path_4arg_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		const char *path = "path";
		fmode_t mode = 0;
		void *holder = NULL;
		struct blk_holder_ops h;

		bdev = blkdev_get_by_path(path, mode, holder, &h);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_get_by_path_4arg_license || mkdir -p build/blkdev_get_by_path_4arg_license

	file=build/blkdev_get_by_path_4arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_get_by_path_4arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_get_by_path_4arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_get_by_path_4arg_license/" >>build/Makefile
fi


fi





test -d build/blkdev_put || mkdir -p build/blkdev_put
cat confdefs.h - <<_ACEOF >build/blkdev_put/blkdev_put.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		fmode_t mode = 0;

		blkdev_put(bdev, mode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put || mkdir -p build/blkdev_put

	file=build/blkdev_put/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_put_license || mkdir -p build/blkdev_put_license
cat confdefs.h - <<_ACEOF >build/blkdev_put_license/blkdev_put_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		fmode_t mode = 0;

		blkdev_put(bdev, mode);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put_license || mkdir -p build/blkdev_put_license

	file=build/blkdev_put_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put_license/" >>build/Makefile
fi


fi





test -d build/blkdev_put_holder || mkdir -p build/blkdev_put_holder
cat confdefs.h - <<_ACEOF >build/blkdev_put_holder/blkdev_put_holder.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		void *holder = NULL;

		blkdev_put(bdev, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put_holder || mkdir -p build/blkdev_put_holder

	file=build/blkdev_put_holder/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put_holder

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put_holder.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put_holder/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_put_holder_license || mkdir -p build/blkdev_put_holder_license
cat confdefs.h - <<_ACEOF >build/blkdev_put_holder_license/blkdev_put_holder_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		void *holder = NULL;

		blkdev_put(bdev, holder);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_put_holder_license || mkdir -p build/blkdev_put_holder_license

	file=build/blkdev_put_holder_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_put_holder_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_put_holder_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_put_holder_license/" >>build/Makefile
fi


fi





test -d build/blkdev_reread_part || mkdir -p build/blkdev_reread_part
cat confdefs.h - <<_ACEOF >build/blkdev_reread_part/blkdev_reread_part.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = blkdev_reread_part(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_reread_part || mkdir -p build/blkdev_reread_part

	file=build/blkdev_reread_part/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_reread_part

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_reread_part.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_reread_part/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_reread_part_license || mkdir -p build/blkdev_reread_part_license
cat confdefs.h - <<_ACEOF >build/blkdev_reread_part_license/blkdev_reread_part_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = blkdev_reread_part(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_reread_part_license || mkdir -p build/blkdev_reread_part_license

	file=build/blkdev_reread_part_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_reread_part_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_reread_part_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_reread_part_license/" >>build/Makefile
fi


fi





test -d build/invalidate_bdev || mkdir -p build/invalidate_bdev
cat confdefs.h - <<_ACEOF >build/invalidate_bdev/invalidate_bdev.c

#include <linux/module.h>

		#include <linux/buffer_head.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		invalidate_bdev(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/invalidate_bdev || mkdir -p build/invalidate_bdev

	file=build/invalidate_bdev/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/invalidate_bdev

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := invalidate_bdev.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += invalidate_bdev/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/invalidate_bdev_license || mkdir -p build/invalidate_bdev_license
cat confdefs.h - <<_ACEOF >build/invalidate_bdev_license/invalidate_bdev_license.c

#include <linux/module.h>

		#include <linux/buffer_head.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		invalidate_bdev(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/invalidate_bdev_license || mkdir -p build/invalidate_bdev_license

	file=build/invalidate_bdev_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/invalidate_bdev_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := invalidate_bdev_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += invalidate_bdev_license/" >>build/Makefile
fi


fi





test -d build/lookup_bdev_devt || mkdir -p build/lookup_bdev_devt
cat confdefs.h - <<_ACEOF >build/lookup_bdev_devt/lookup_bdev_devt.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int error __attribute__ ((unused));
		const char path[] = "/example/path";
		dev_t dev;

		error = lookup_bdev(path, &dev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_devt || mkdir -p build/lookup_bdev_devt

	file=build/lookup_bdev_devt/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_devt

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_devt.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_devt/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_bdev_devt_license || mkdir -p build/lookup_bdev_devt_license
cat confdefs.h - <<_ACEOF >build/lookup_bdev_devt_license/lookup_bdev_devt_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int error __attribute__ ((unused));
		const char path[] = "/example/path";
		dev_t dev;

		error = lookup_bdev(path, &dev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_devt_license || mkdir -p build/lookup_bdev_devt_license

	file=build/lookup_bdev_devt_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_devt_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_devt_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_devt_license/" >>build/Makefile
fi


fi




test -d build/lookup_bdev_1arg || mkdir -p build/lookup_bdev_1arg
cat confdefs.h - <<_ACEOF >build/lookup_bdev_1arg/lookup_bdev_1arg.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_1arg || mkdir -p build/lookup_bdev_1arg

	file=build/lookup_bdev_1arg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_1arg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_1arg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_1arg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_bdev_1arg_license || mkdir -p build/lookup_bdev_1arg_license
cat confdefs.h - <<_ACEOF >build/lookup_bdev_1arg_license/lookup_bdev_1arg_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_1arg_license || mkdir -p build/lookup_bdev_1arg_license

	file=build/lookup_bdev_1arg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_1arg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_1arg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_1arg_license/" >>build/Makefile
fi


fi




test -d build/lookup_bdev_mode || mkdir -p build/lookup_bdev_mode
cat confdefs.h - <<_ACEOF >build/lookup_bdev_mode/lookup_bdev_mode.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path, FMODE_READ);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_mode || mkdir -p build/lookup_bdev_mode

	file=build/lookup_bdev_mode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_mode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_mode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_mode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_bdev_mode_license || mkdir -p build/lookup_bdev_mode_license
cat confdefs.h - <<_ACEOF >build/lookup_bdev_mode_license/lookup_bdev_mode_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused));
		const char path[] = "/example/path";

		bdev = lookup_bdev(path, FMODE_READ);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_bdev_mode_license || mkdir -p build/lookup_bdev_mode_license

	file=build/lookup_bdev_mode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_bdev_mode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_bdev_mode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_bdev_mode_license/" >>build/Makefile
fi


fi





test -d build/bdev_logical_block_size || mkdir -p build/bdev_logical_block_size
cat confdefs.h - <<_ACEOF >build/bdev_logical_block_size/bdev_logical_block_size.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_logical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_logical_block_size || mkdir -p build/bdev_logical_block_size

	file=build/bdev_logical_block_size/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_logical_block_size

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_logical_block_size.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_logical_block_size/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_logical_block_size_license || mkdir -p build/bdev_logical_block_size_license
cat confdefs.h - <<_ACEOF >build/bdev_logical_block_size_license/bdev_logical_block_size_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_logical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_logical_block_size_license || mkdir -p build/bdev_logical_block_size_license

	file=build/bdev_logical_block_size_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_logical_block_size_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_logical_block_size_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_logical_block_size_license/" >>build/Makefile
fi


fi





test -d build/bdev_physical_block_size || mkdir -p build/bdev_physical_block_size
cat confdefs.h - <<_ACEOF >build/bdev_physical_block_size/bdev_physical_block_size.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_physical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_physical_block_size || mkdir -p build/bdev_physical_block_size

	file=build/bdev_physical_block_size/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_physical_block_size

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_physical_block_size.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_physical_block_size/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_physical_block_size_license || mkdir -p build/bdev_physical_block_size_license
cat confdefs.h - <<_ACEOF >build/bdev_physical_block_size_license/bdev_physical_block_size_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		bdev_physical_block_size(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_physical_block_size_license || mkdir -p build/bdev_physical_block_size_license

	file=build/bdev_physical_block_size_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_physical_block_size_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_physical_block_size_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_physical_block_size_license/" >>build/Makefile
fi


fi





test -d build/check_disk_change || mkdir -p build/check_disk_change
cat confdefs.h - <<_ACEOF >build/check_disk_change/check_disk_change.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = check_disk_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/check_disk_change || mkdir -p build/check_disk_change

	file=build/check_disk_change/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/check_disk_change

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := check_disk_change.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += check_disk_change/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/check_disk_change_license || mkdir -p build/check_disk_change_license
cat confdefs.h - <<_ACEOF >build/check_disk_change_license/check_disk_change_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = check_disk_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/check_disk_change_license || mkdir -p build/check_disk_change_license

	file=build/check_disk_change_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/check_disk_change_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := check_disk_change_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += check_disk_change_license/" >>build/Makefile
fi


fi





test -d build/bdev_check_media_change || mkdir -p build/bdev_check_media_change
cat confdefs.h - <<_ACEOF >build/bdev_check_media_change/bdev_check_media_change.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = bdev_check_media_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_check_media_change || mkdir -p build/bdev_check_media_change

	file=build/bdev_check_media_change/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_check_media_change

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_check_media_change.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_check_media_change/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_check_media_change_license || mkdir -p build/bdev_check_media_change_license
cat confdefs.h - <<_ACEOF >build/bdev_check_media_change_license/bdev_check_media_change_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		int error;

		error = bdev_check_media_change(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_check_media_change_license || mkdir -p build/bdev_check_media_change_license

	file=build/bdev_check_media_change_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_check_media_change_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_check_media_change_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_check_media_change_license/" >>build/Makefile
fi


fi





test -d build/bdev_whole || mkdir -p build/bdev_whole
cat confdefs.h - <<_ACEOF >build/bdev_whole/bdev_whole.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bdev = bdev_whole(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_whole || mkdir -p build/bdev_whole

	file=build/bdev_whole/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_whole

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_whole.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_whole/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_whole_license || mkdir -p build/bdev_whole_license
cat confdefs.h - <<_ACEOF >build/bdev_whole_license/bdev_whole_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bdev = bdev_whole(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_whole_license || mkdir -p build/bdev_whole_license

	file=build/bdev_whole_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_whole_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_whole_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_whole_license/" >>build/Makefile
fi


fi





test -d build/bdevname || mkdir -p build/bdevname
cat confdefs.h - <<_ACEOF >build/bdevname/bdevname.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		char path[BDEVNAME_SIZE];

		(void) bdevname(bdev, path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdevname || mkdir -p build/bdevname

	file=build/bdevname/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdevname

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdevname.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdevname/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdevname_license || mkdir -p build/bdevname_license
cat confdefs.h - <<_ACEOF >build/bdevname_license/bdevname_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		char path[BDEVNAME_SIZE];

		(void) bdevname(bdev, path);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdevname_license || mkdir -p build/bdevname_license

	file=build/bdevname_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdevname_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdevname_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdevname_license/" >>build/Makefile
fi


fi





test -d build/blkdev_issue_secure_erase || mkdir -p build/blkdev_issue_secure_erase
cat confdefs.h - <<_ACEOF >build/blkdev_issue_secure_erase/blkdev_issue_secure_erase.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_secure_erase(bdev,
		    sector, nr_sects, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_secure_erase || mkdir -p build/blkdev_issue_secure_erase

	file=build/blkdev_issue_secure_erase/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_secure_erase

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_secure_erase.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_secure_erase/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_issue_secure_erase_license || mkdir -p build/blkdev_issue_secure_erase_license
cat confdefs.h - <<_ACEOF >build/blkdev_issue_secure_erase_license/blkdev_issue_secure_erase_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_secure_erase(bdev,
		    sector, nr_sects, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_secure_erase_license || mkdir -p build/blkdev_issue_secure_erase_license

	file=build/blkdev_issue_secure_erase_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_secure_erase_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_secure_erase_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_secure_erase_license/" >>build/Makefile
fi


fi




test -d build/blkdev_issue_discard_flags || mkdir -p build/blkdev_issue_discard_flags
cat confdefs.h - <<_ACEOF >build/blkdev_issue_discard_flags/blkdev_issue_discard_flags.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		unsigned long flags = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_discard(bdev,
		    sector, nr_sects, GFP_KERNEL, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_discard_flags || mkdir -p build/blkdev_issue_discard_flags

	file=build/blkdev_issue_discard_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_discard_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_discard_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_discard_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blkdev_issue_discard_flags_license || mkdir -p build/blkdev_issue_discard_flags_license
cat confdefs.h - <<_ACEOF >build/blkdev_issue_discard_flags_license/blkdev_issue_discard_flags_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		sector_t sector = 0;
		sector_t nr_sects = 0;
		unsigned long flags = 0;
		int error __attribute__ ((unused));

		error = blkdev_issue_discard(bdev,
		    sector, nr_sects, GFP_KERNEL, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blkdev_issue_discard_flags_license || mkdir -p build/blkdev_issue_discard_flags_license

	file=build/blkdev_issue_discard_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blkdev_issue_discard_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blkdev_issue_discard_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blkdev_issue_discard_flags_license/" >>build/Makefile
fi


fi





test -d build/bdev_kobj || mkdir -p build/bdev_kobj
cat confdefs.h - <<_ACEOF >build/bdev_kobj/bdev_kobj.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>
		#include <linux/kobject.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct kobject *disk_kobj;
		disk_kobj = bdev_kobj(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_kobj || mkdir -p build/bdev_kobj

	file=build/bdev_kobj/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_kobj

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_kobj.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_kobj/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_kobj_license || mkdir -p build/bdev_kobj_license
cat confdefs.h - <<_ACEOF >build/bdev_kobj_license/bdev_kobj_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>
		#include <linux/kobject.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct kobject *disk_kobj;
		disk_kobj = bdev_kobj(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_kobj_license || mkdir -p build/bdev_kobj_license

	file=build/bdev_kobj_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_kobj_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_kobj_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_kobj_license/" >>build/Makefile
fi


fi





test -d build/part_to_dev || mkdir -p build/part_to_dev
cat confdefs.h - <<_ACEOF >build/part_to_dev/part_to_dev.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct hd_struct *p = NULL;
		struct device *pdev;
		pdev = part_to_dev(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/part_to_dev || mkdir -p build/part_to_dev

	file=build/part_to_dev/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/part_to_dev

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := part_to_dev.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += part_to_dev/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/part_to_dev_license || mkdir -p build/part_to_dev_license
cat confdefs.h - <<_ACEOF >build/part_to_dev_license/part_to_dev_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct hd_struct *p = NULL;
		struct device *pdev;
		pdev = part_to_dev(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/part_to_dev_license || mkdir -p build/part_to_dev_license

	file=build/part_to_dev_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/part_to_dev_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := part_to_dev_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += part_to_dev_license/" >>build/Makefile
fi


fi





test -d build/disk_check_media_change || mkdir -p build/disk_check_media_change
cat confdefs.h - <<_ACEOF >build/disk_check_media_change/disk_check_media_change.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = disk_check_media_change(bdev->bd_disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_check_media_change || mkdir -p build/disk_check_media_change

	file=build/disk_check_media_change/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_check_media_change

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_check_media_change.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_check_media_change/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/disk_check_media_change_license || mkdir -p build/disk_check_media_change_license
cat confdefs.h - <<_ACEOF >build/disk_check_media_change_license/disk_check_media_change_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		bool error;

		error = disk_check_media_change(bdev->bd_disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_check_media_change_license || mkdir -p build/disk_check_media_change_license

	file=build/disk_check_media_change_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_check_media_change_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_check_media_change_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_check_media_change_license/" >>build/Makefile
fi


fi





test -d build/blk_sts_resv_conflict || mkdir -p build/blk_sts_resv_conflict
cat confdefs.h - <<_ACEOF >build/blk_sts_resv_conflict/blk_sts_resv_conflict.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		blk_status_t s __attribute__ ((unused)) = BLK_STS_RESV_CONFLICT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_sts_resv_conflict || mkdir -p build/blk_sts_resv_conflict

	file=build/blk_sts_resv_conflict/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_sts_resv_conflict

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_sts_resv_conflict.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_sts_resv_conflict/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_sts_resv_conflict_license || mkdir -p build/blk_sts_resv_conflict_license
cat confdefs.h - <<_ACEOF >build/blk_sts_resv_conflict_license/blk_sts_resv_conflict_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		blk_status_t s __attribute__ ((unused)) = BLK_STS_RESV_CONFLICT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_sts_resv_conflict_license || mkdir -p build/blk_sts_resv_conflict_license

	file=build/blk_sts_resv_conflict_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_sts_resv_conflict_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_sts_resv_conflict_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_sts_resv_conflict_license/" >>build/Makefile
fi


fi





test -d build/blk_mode_t || mkdir -p build/blk_mode_t
cat confdefs.h - <<_ACEOF >build/blk_mode_t/blk_mode_t.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		blk_mode_t m __attribute((unused)) = (blk_mode_t)0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mode_t || mkdir -p build/blk_mode_t

	file=build/blk_mode_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mode_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mode_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mode_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_mode_t_license || mkdir -p build/blk_mode_t_license
cat confdefs.h - <<_ACEOF >build/blk_mode_t_license/blk_mode_t_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/blkdev.h>


int
main (void)
{

		blk_mode_t m __attribute((unused)) = (blk_mode_t)0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mode_t_license || mkdir -p build/blk_mode_t_license

	file=build/blk_mode_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mode_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mode_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mode_t_license/" >>build/Makefile
fi


fi







test -d build/blk_plug || mkdir -p build/blk_plug
cat confdefs.h - <<_ACEOF >build/blk_plug/blk_plug.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct blk_plug plug __attribute__ ((unused));

		blk_start_plug(&plug);
		blk_finish_plug(&plug);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_plug || mkdir -p build/blk_plug

	file=build/blk_plug/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_plug

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_plug.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_plug/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_plug_license || mkdir -p build/blk_plug_license
cat confdefs.h - <<_ACEOF >build/blk_plug_license/blk_plug_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct blk_plug plug __attribute__ ((unused));

		blk_start_plug(&plug);
		blk_finish_plug(&plug);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_plug_license || mkdir -p build/blk_plug_license

	file=build/blk_plug_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_plug_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_plug_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_plug_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_bdi || mkdir -p build/blk_queue_bdi
cat confdefs.h - <<_ACEOF >build/blk_queue_bdi/blk_queue_bdi.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		struct backing_dev_info bdi;
		q.backing_dev_info = &bdi;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_bdi || mkdir -p build/blk_queue_bdi

	file=build/blk_queue_bdi/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_bdi

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_bdi.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_bdi/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_bdi_license || mkdir -p build/blk_queue_bdi_license
cat confdefs.h - <<_ACEOF >build/blk_queue_bdi_license/blk_queue_bdi_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		struct backing_dev_info bdi;
		q.backing_dev_info = &bdi;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_bdi_license || mkdir -p build/blk_queue_bdi_license

	file=build/blk_queue_bdi_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_bdi_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_bdi_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_bdi_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_update_readahead || mkdir -p build/blk_queue_update_readahead
cat confdefs.h - <<_ACEOF >build/blk_queue_update_readahead/blk_queue_update_readahead.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		blk_queue_update_readahead(&q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_update_readahead || mkdir -p build/blk_queue_update_readahead

	file=build/blk_queue_update_readahead/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_update_readahead

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_update_readahead.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_update_readahead/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_update_readahead_license || mkdir -p build/blk_queue_update_readahead_license
cat confdefs.h - <<_ACEOF >build/blk_queue_update_readahead_license/blk_queue_update_readahead_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue q;
		blk_queue_update_readahead(&q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_update_readahead_license || mkdir -p build/blk_queue_update_readahead_license

	file=build/blk_queue_update_readahead_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_update_readahead_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_update_readahead_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_update_readahead_license/" >>build/Makefile
fi


fi




test -d build/disk_update_readahead || mkdir -p build/disk_update_readahead
cat confdefs.h - <<_ACEOF >build/disk_update_readahead/disk_update_readahead.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk disk;
		disk_update_readahead(&disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_update_readahead || mkdir -p build/disk_update_readahead

	file=build/disk_update_readahead/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_update_readahead

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_update_readahead.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_update_readahead/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/disk_update_readahead_license || mkdir -p build/disk_update_readahead_license
cat confdefs.h - <<_ACEOF >build/disk_update_readahead_license/disk_update_readahead_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk disk;
		disk_update_readahead(&disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_update_readahead_license || mkdir -p build/disk_update_readahead_license

	file=build/disk_update_readahead_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_update_readahead_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_update_readahead_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_update_readahead_license/" >>build/Makefile
fi


fi





test -d build/bdev_max_discard_sectors || mkdir -p build/bdev_max_discard_sectors
cat confdefs.h - <<_ACEOF >build/bdev_max_discard_sectors/bdev_max_discard_sectors.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_discard_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_discard_sectors || mkdir -p build/bdev_max_discard_sectors

	file=build/bdev_max_discard_sectors/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_discard_sectors

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_discard_sectors.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_discard_sectors/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_max_discard_sectors_license || mkdir -p build/bdev_max_discard_sectors_license
cat confdefs.h - <<_ACEOF >build/bdev_max_discard_sectors_license/bdev_max_discard_sectors_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_discard_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_discard_sectors_license || mkdir -p build/bdev_max_discard_sectors_license

	file=build/bdev_max_discard_sectors_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_discard_sectors_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_discard_sectors_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_discard_sectors_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_discard || mkdir -p build/blk_queue_discard
cat confdefs.h - <<_ACEOF >build/blk_queue_discard/blk_queue_discard.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_discard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_discard || mkdir -p build/blk_queue_discard

	file=build/blk_queue_discard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_discard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_discard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_discard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_discard_license || mkdir -p build/blk_queue_discard_license
cat confdefs.h - <<_ACEOF >build/blk_queue_discard_license/blk_queue_discard_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_discard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_discard_license || mkdir -p build/blk_queue_discard_license

	file=build/blk_queue_discard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_discard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_discard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_discard_license/" >>build/Makefile
fi


fi





test -d build/bdev_max_secure_erase_sectors || mkdir -p build/bdev_max_secure_erase_sectors
cat confdefs.h - <<_ACEOF >build/bdev_max_secure_erase_sectors/bdev_max_secure_erase_sectors.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_secure_erase_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_secure_erase_sectors || mkdir -p build/bdev_max_secure_erase_sectors

	file=build/bdev_max_secure_erase_sectors/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_secure_erase_sectors

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_secure_erase_sectors.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_secure_erase_sectors/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_max_secure_erase_sectors_license || mkdir -p build/bdev_max_secure_erase_sectors_license
cat confdefs.h - <<_ACEOF >build/bdev_max_secure_erase_sectors_license/bdev_max_secure_erase_sectors_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev __attribute__ ((unused)) = NULL;
		unsigned int error __attribute__ ((unused));

		error = bdev_max_secure_erase_sectors(bdev);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_max_secure_erase_sectors_license || mkdir -p build/bdev_max_secure_erase_sectors_license

	file=build/bdev_max_secure_erase_sectors_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_max_secure_erase_sectors_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_max_secure_erase_sectors_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_max_secure_erase_sectors_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_secure_erase || mkdir -p build/blk_queue_secure_erase
cat confdefs.h - <<_ACEOF >build/blk_queue_secure_erase/blk_queue_secure_erase.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secure_erase(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secure_erase || mkdir -p build/blk_queue_secure_erase

	file=build/blk_queue_secure_erase/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secure_erase

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_secure_erase.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secure_erase/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_secure_erase_license || mkdir -p build/blk_queue_secure_erase_license
cat confdefs.h - <<_ACEOF >build/blk_queue_secure_erase_license/blk_queue_secure_erase_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secure_erase(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secure_erase_license || mkdir -p build/blk_queue_secure_erase_license

	file=build/blk_queue_secure_erase_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secure_erase_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF

		echo "ccflags-y += -Wframe-larger-than=8192" >>$file

		echo "obj-m := blk_queue_secure_erase_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secure_erase_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_secdiscard || mkdir -p build/blk_queue_secdiscard
cat confdefs.h - <<_ACEOF >build/blk_queue_secdiscard/blk_queue_secdiscard.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secdiscard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secdiscard || mkdir -p build/blk_queue_secdiscard

	file=build/blk_queue_secdiscard/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secdiscard

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_secdiscard.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secdiscard/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_secdiscard_license || mkdir -p build/blk_queue_secdiscard_license
cat confdefs.h - <<_ACEOF >build/blk_queue_secdiscard_license/blk_queue_secdiscard_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue r;
		struct request_queue *q = &r;
		int value __attribute__ ((unused));
		memset(q, 0, sizeof(r));
		value = blk_queue_secdiscard(q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_secdiscard_license || mkdir -p build/blk_queue_secdiscard_license

	file=build/blk_queue_secdiscard_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_secdiscard_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_secdiscard_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_secdiscard_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_flag_set || mkdir -p build/blk_queue_flag_set
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_set/blk_queue_flag_set.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_set(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_set || mkdir -p build/blk_queue_flag_set

	file=build/blk_queue_flag_set/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_set

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_set.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_set/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_flag_set_license || mkdir -p build/blk_queue_flag_set_license
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_set_license/blk_queue_flag_set_license.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_set(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_set_license || mkdir -p build/blk_queue_flag_set_license

	file=build/blk_queue_flag_set_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_set_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_set_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_set_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_flag_clear || mkdir -p build/blk_queue_flag_clear
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_clear/blk_queue_flag_clear.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_clear(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_clear || mkdir -p build/blk_queue_flag_clear

	file=build/blk_queue_flag_clear/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_clear

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_clear.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_clear/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_flag_clear_license || mkdir -p build/blk_queue_flag_clear_license
cat confdefs.h - <<_ACEOF >build/blk_queue_flag_clear_license/blk_queue_flag_clear_license.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q = NULL;
		blk_queue_flag_clear(0, q);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flag_clear_license || mkdir -p build/blk_queue_flag_clear_license

	file=build/blk_queue_flag_clear_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flag_clear_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flag_clear_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flag_clear_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_flush || mkdir -p build/blk_queue_flush
cat confdefs.h - <<_ACEOF >build/blk_queue_flush/blk_queue_flush.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_flush(q, REQ_FLUSH);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flush || mkdir -p build/blk_queue_flush

	file=build/blk_queue_flush/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flush

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flush.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flush/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/blk_queue_flush_license || mkdir -p build/blk_queue_flush_license
cat confdefs.h - <<_ACEOF >build/blk_queue_flush_license/blk_queue_flush_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_flush(q, REQ_FLUSH);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_flush_license || mkdir -p build/blk_queue_flush_license

	file=build/blk_queue_flush_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_flush_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_flush_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_flush_license/" >>build/Makefile
fi


fi




test -d build/blk_queue_write_cache || mkdir -p build/blk_queue_write_cache
cat confdefs.h - <<_ACEOF >build/blk_queue_write_cache/blk_queue_write_cache.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		blk_queue_write_cache(q, true, true);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_write_cache || mkdir -p build/blk_queue_write_cache

	file=build/blk_queue_write_cache/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_write_cache

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_write_cache.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_write_cache/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/blk_queue_write_cache_license || mkdir -p build/blk_queue_write_cache_license
cat confdefs.h - <<_ACEOF >build/blk_queue_write_cache_license/blk_queue_write_cache_license.c

#include <linux/module.h>

		#include <linux/kernel.h>
		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		blk_queue_write_cache(q, true, true);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_write_cache_license || mkdir -p build/blk_queue_write_cache_license

	file=build/blk_queue_write_cache_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_write_cache_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_write_cache_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_write_cache_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_max_hw_sectors || mkdir -p build/blk_queue_max_hw_sectors
cat confdefs.h - <<_ACEOF >build/blk_queue_max_hw_sectors/blk_queue_max_hw_sectors.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_hw_sectors(q, BLK_SAFE_MAX_SECTORS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_hw_sectors || mkdir -p build/blk_queue_max_hw_sectors

	file=build/blk_queue_max_hw_sectors/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_hw_sectors

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_hw_sectors.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_hw_sectors/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_max_hw_sectors_license || mkdir -p build/blk_queue_max_hw_sectors_license
cat confdefs.h - <<_ACEOF >build/blk_queue_max_hw_sectors_license/blk_queue_max_hw_sectors_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_hw_sectors(q, BLK_SAFE_MAX_SECTORS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_hw_sectors_license || mkdir -p build/blk_queue_max_hw_sectors_license

	file=build/blk_queue_max_hw_sectors_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_hw_sectors_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_hw_sectors_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_hw_sectors_license/" >>build/Makefile
fi


fi





test -d build/blk_queue_max_segments || mkdir -p build/blk_queue_max_segments
cat confdefs.h - <<_ACEOF >build/blk_queue_max_segments/blk_queue_max_segments.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_segments(q, BLK_MAX_SEGMENTS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_segments || mkdir -p build/blk_queue_max_segments

	file=build/blk_queue_max_segments/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_segments

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_segments.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_segments/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_queue_max_segments_license || mkdir -p build/blk_queue_max_segments_license
cat confdefs.h - <<_ACEOF >build/blk_queue_max_segments_license/blk_queue_max_segments_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct request_queue *q __attribute__ ((unused)) = NULL;
		(void) blk_queue_max_segments(q, BLK_MAX_SEGMENTS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_queue_max_segments_license || mkdir -p build/blk_queue_max_segments_license

	file=build/blk_queue_max_segments_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_queue_max_segments_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_queue_max_segments_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_queue_max_segments_license/" >>build/Makefile
fi


fi





test -d build/blk_mq || mkdir -p build/blk_mq
cat confdefs.h - <<_ACEOF >build/blk_mq/blk_mq.c

#include <linux/module.h>

		#include <linux/blk-mq.h>


int
main (void)
{

		struct blk_mq_tag_set tag_set __attribute__ ((unused)) = {0};
		(void) blk_mq_alloc_tag_set(&tag_set);
		return BLK_STS_OK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mq || mkdir -p build/blk_mq

	file=build/blk_mq/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mq

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mq.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mq/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_mq_license || mkdir -p build/blk_mq_license
cat confdefs.h - <<_ACEOF >build/blk_mq_license/blk_mq_license.c

#include <linux/module.h>

		#include <linux/blk-mq.h>


int
main (void)
{

		struct blk_mq_tag_set tag_set __attribute__ ((unused)) = {0};
		(void) blk_mq_alloc_tag_set(&tag_set);
		return BLK_STS_OK;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_mq_license || mkdir -p build/blk_mq_license

	file=build/blk_mq_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_mq_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_mq_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_mq_license/" >>build/Makefile
fi


fi







test -d build/genhd_fl_ext_devt || mkdir -p build/genhd_fl_ext_devt
cat confdefs.h - <<_ACEOF >build/genhd_fl_ext_devt/genhd_fl_ext_devt.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_EXT_DEVT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_ext_devt || mkdir -p build/genhd_fl_ext_devt

	file=build/genhd_fl_ext_devt/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_ext_devt

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_ext_devt.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_ext_devt/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/genhd_fl_ext_devt_license || mkdir -p build/genhd_fl_ext_devt_license
cat confdefs.h - <<_ACEOF >build/genhd_fl_ext_devt_license/genhd_fl_ext_devt_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_EXT_DEVT;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_ext_devt_license || mkdir -p build/genhd_fl_ext_devt_license

	file=build/genhd_fl_ext_devt_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_ext_devt_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_ext_devt_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_ext_devt_license/" >>build/Makefile
fi


fi




test -d build/genhd_fl_no_part || mkdir -p build/genhd_fl_no_part
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part/genhd_fl_no_part.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part || mkdir -p build/genhd_fl_no_part

	file=build/genhd_fl_no_part/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/genhd_fl_no_part_license || mkdir -p build/genhd_fl_no_part_license
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part_license/genhd_fl_no_part_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part_license || mkdir -p build/genhd_fl_no_part_license

	file=build/genhd_fl_no_part_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part_license/" >>build/Makefile
fi


fi




test -d build/genhd_fl_no_part_scan || mkdir -p build/genhd_fl_no_part_scan
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part_scan/genhd_fl_no_part_scan.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART_SCAN;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part_scan || mkdir -p build/genhd_fl_no_part_scan

	file=build/genhd_fl_no_part_scan/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part_scan

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part_scan.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part_scan/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/genhd_fl_no_part_scan_license || mkdir -p build/genhd_fl_no_part_scan_license
cat confdefs.h - <<_ACEOF >build/genhd_fl_no_part_scan_license/genhd_fl_no_part_scan_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		int flags __attribute__ ((unused)) = GENHD_FL_NO_PART_SCAN;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/genhd_fl_no_part_scan_license || mkdir -p build/genhd_fl_no_part_scan_license

	file=build/genhd_fl_no_part_scan_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/genhd_fl_no_part_scan_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := genhd_fl_no_part_scan_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += genhd_fl_no_part_scan_license/" >>build/Makefile
fi


fi






test -d build/revalidate_disk_size || mkdir -p build/revalidate_disk_size
cat confdefs.h - <<_ACEOF >build/revalidate_disk_size/revalidate_disk_size.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk_size(disk, false);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk_size || mkdir -p build/revalidate_disk_size

	file=build/revalidate_disk_size/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk_size

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk_size.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk_size/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/revalidate_disk_size_license || mkdir -p build/revalidate_disk_size_license
cat confdefs.h - <<_ACEOF >build/revalidate_disk_size_license/revalidate_disk_size_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk_size(disk, false);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk_size_license || mkdir -p build/revalidate_disk_size_license

	file=build/revalidate_disk_size_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk_size_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk_size_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk_size_license/" >>build/Makefile
fi


fi




test -d build/revalidate_disk || mkdir -p build/revalidate_disk
cat confdefs.h - <<_ACEOF >build/revalidate_disk/revalidate_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk || mkdir -p build/revalidate_disk

	file=build/revalidate_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/revalidate_disk_license || mkdir -p build/revalidate_disk_license
cat confdefs.h - <<_ACEOF >build/revalidate_disk_license/revalidate_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		(void) revalidate_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/revalidate_disk_license || mkdir -p build/revalidate_disk_license

	file=build/revalidate_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/revalidate_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := revalidate_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += revalidate_disk_license/" >>build/Makefile
fi


fi





test -d build/get_disk_ro || mkdir -p build/get_disk_ro
cat confdefs.h - <<_ACEOF >build/get_disk_ro/get_disk_ro.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk __attribute__ ((unused)) = NULL;
		(void) get_disk_ro(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_disk_ro || mkdir -p build/get_disk_ro

	file=build/get_disk_ro/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_disk_ro

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_disk_ro.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_disk_ro/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/get_disk_ro_license || mkdir -p build/get_disk_ro_license
cat confdefs.h - <<_ACEOF >build/get_disk_ro_license/get_disk_ro_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk __attribute__ ((unused)) = NULL;
		(void) get_disk_ro(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_disk_ro_license || mkdir -p build/get_disk_ro_license

	file=build/get_disk_ro_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_disk_ro_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_disk_ro_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_disk_ro_license/" >>build/Makefile
fi


fi





test -d build/generic_readlink_global || mkdir -p build/generic_readlink_global
cat confdefs.h - <<_ACEOF >build/generic_readlink_global/generic_readlink_global.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		int i __attribute__ ((unused));
		i = generic_readlink(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_readlink_global || mkdir -p build/generic_readlink_global

	file=build/generic_readlink_global/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_readlink_global

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_readlink_global.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_readlink_global/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_readlink_global_license || mkdir -p build/generic_readlink_global_license
cat confdefs.h - <<_ACEOF >build/generic_readlink_global_license/generic_readlink_global_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		int i __attribute__ ((unused));
		i = generic_readlink(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_readlink_global_license || mkdir -p build/generic_readlink_global_license

	file=build/generic_readlink_global_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_readlink_global_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_readlink_global_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_readlink_global_license/" >>build/Makefile
fi


fi





test -d build/discard_granularity || mkdir -p build/discard_granularity
cat confdefs.h - <<_ACEOF >build/discard_granularity/discard_granularity.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct queue_limits ql __attribute__ ((unused));
		ql.discard_granularity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/discard_granularity || mkdir -p build/discard_granularity

	file=build/discard_granularity/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/discard_granularity

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := discard_granularity.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += discard_granularity/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/discard_granularity_license || mkdir -p build/discard_granularity_license
cat confdefs.h - <<_ACEOF >build/discard_granularity_license/discard_granularity_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct queue_limits ql __attribute__ ((unused));
		ql.discard_granularity = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/discard_granularity_license || mkdir -p build/discard_granularity_license

	file=build/discard_granularity_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/discard_granularity_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := discard_granularity_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += discard_granularity_license/" >>build/Makefile
fi


fi





test -d build/inode_owner_or_capable || mkdir -p build/inode_owner_or_capable
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable/inode_owner_or_capable.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable || mkdir -p build/inode_owner_or_capable

	file=build/inode_owner_or_capable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_owner_or_capable_license || mkdir -p build/inode_owner_or_capable_license
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_license/inode_owner_or_capable_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_license || mkdir -p build/inode_owner_or_capable_license

	file=build/inode_owner_or_capable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_license/" >>build/Makefile
fi


fi




test -d build/inode_owner_or_capable_userns || mkdir -p build/inode_owner_or_capable_userns
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_userns/inode_owner_or_capable_userns.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&init_user_ns, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_userns || mkdir -p build/inode_owner_or_capable_userns

	file=build/inode_owner_or_capable_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_owner_or_capable_userns_license || mkdir -p build/inode_owner_or_capable_userns_license
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_userns_license/inode_owner_or_capable_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&init_user_ns, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_userns_license || mkdir -p build/inode_owner_or_capable_userns_license

	file=build/inode_owner_or_capable_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_owner_or_capable_mnt_idmap || mkdir -p build/inode_owner_or_capable_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_mnt_idmap/inode_owner_or_capable_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/mnt_idmapping.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&nop_mnt_idmap, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_mnt_idmap || mkdir -p build/inode_owner_or_capable_mnt_idmap

	file=build/inode_owner_or_capable_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_owner_or_capable_mnt_idmap_license || mkdir -p build/inode_owner_or_capable_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_owner_or_capable_mnt_idmap_license/inode_owner_or_capable_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/mnt_idmapping.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) inode_owner_or_capable(&nop_mnt_idmap, ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_owner_or_capable_mnt_idmap_license || mkdir -p build/inode_owner_or_capable_mnt_idmap_license

	file=build/inode_owner_or_capable_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_owner_or_capable_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_owner_or_capable_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_owner_or_capable_mnt_idmap_license/" >>build/Makefile
fi


fi






test -d build/const_xattr_handler || mkdir -p build/const_xattr_handler
cat confdefs.h - <<_ACEOF >build/const_xattr_handler/const_xattr_handler.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		const struct xattr_handler xattr_test_handler = {
			.prefix	= "test",
			.get	= NULL,
			.set	= NULL,
		};

		const struct xattr_handler *xattr_handlers[] = {
			&xattr_test_handler,
		};

		const struct super_block sb __attribute__ ((unused)) = {
			.s_xattr = xattr_handlers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/const_xattr_handler || mkdir -p build/const_xattr_handler

	file=build/const_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/const_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := const_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += const_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/const_xattr_handler_license || mkdir -p build/const_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/const_xattr_handler_license/const_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		const struct xattr_handler xattr_test_handler = {
			.prefix	= "test",
			.get	= NULL,
			.set	= NULL,
		};

		const struct xattr_handler *xattr_handlers[] = {
			&xattr_test_handler,
		};

		const struct super_block sb __attribute__ ((unused)) = {
			.s_xattr = xattr_handlers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/const_xattr_handler_license || mkdir -p build/const_xattr_handler_license

	file=build/const_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/const_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := const_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += const_xattr_handler_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_name || mkdir -p build/xattr_handler_name
cat confdefs.h - <<_ACEOF >build/xattr_handler_name/xattr_handler_name.c

#include <linux/module.h>

		#include <linux/xattr.h>

		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.name = XATTR_NAME_POSIX_ACL_ACCESS,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_name || mkdir -p build/xattr_handler_name

	file=build/xattr_handler_name/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_name

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_name.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_name/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_name_license || mkdir -p build/xattr_handler_name_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_name_license/xattr_handler_name_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.name = XATTR_NAME_POSIX_ACL_ACCESS,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_name_license || mkdir -p build/xattr_handler_name_license

	file=build/xattr_handler_name_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_name_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_name_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_name_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_get_dentry_inode || mkdir -p build/xattr_handler_get_dentry_inode
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode/xattr_handler_get_dentry_inode.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode || mkdir -p build/xattr_handler_get_dentry_inode

	file=build/xattr_handler_get_dentry_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_dentry_inode_license || mkdir -p build/xattr_handler_get_dentry_inode_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode_license/xattr_handler_get_dentry_inode_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode_license || mkdir -p build/xattr_handler_get_dentry_inode_license

	file=build/xattr_handler_get_dentry_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_get_xattr_handler || mkdir -p build/xattr_handler_get_xattr_handler
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_xattr_handler/xattr_handler_get_xattr_handler.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_xattr_handler || mkdir -p build/xattr_handler_get_xattr_handler

	file=build/xattr_handler_get_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_xattr_handler_license || mkdir -p build/xattr_handler_get_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_xattr_handler_license/xattr_handler_get_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    void *buffer, size_t size) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_xattr_handler_license || mkdir -p build/xattr_handler_get_xattr_handler_license

	file=build/xattr_handler_get_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_xattr_handler_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_get_dentry || mkdir -p build/xattr_handler_get_dentry
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry/xattr_handler_get_dentry.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(struct dentry *dentry, const char *name,
		    void *buffer, size_t size, int handler_flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry || mkdir -p build/xattr_handler_get_dentry

	file=build/xattr_handler_get_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_dentry_license || mkdir -p build/xattr_handler_get_dentry_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_license/xattr_handler_get_dentry_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(struct dentry *dentry, const char *name,
		    void *buffer, size_t size, int handler_flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_license || mkdir -p build/xattr_handler_get_dentry_license

	file=build/xattr_handler_get_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_get_dentry_inode_flags || mkdir -p build/xattr_handler_get_dentry_inode_flags
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode_flags/xattr_handler_get_dentry_inode_flags.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer,
		    size_t size, int flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode_flags || mkdir -p build/xattr_handler_get_dentry_inode_flags

	file=build/xattr_handler_get_dentry_inode_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_get_dentry_inode_flags_license || mkdir -p build/xattr_handler_get_dentry_inode_flags_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_get_dentry_inode_flags_license/xattr_handler_get_dentry_inode_flags_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int get(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, void *buffer,
		    size_t size, int flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.get = get,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_get_dentry_inode_flags_license || mkdir -p build/xattr_handler_get_dentry_inode_flags_license

	file=build/xattr_handler_get_dentry_inode_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_get_dentry_inode_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_get_dentry_inode_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_get_dentry_inode_flags_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_set_mnt_idmap || mkdir -p build/xattr_handler_set_mnt_idmap
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_mnt_idmap/xattr_handler_set_mnt_idmap.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct mnt_idmap *idmap,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_mnt_idmap || mkdir -p build/xattr_handler_set_mnt_idmap

	file=build/xattr_handler_set_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_mnt_idmap_license || mkdir -p build/xattr_handler_set_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_mnt_idmap_license/xattr_handler_set_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct mnt_idmap *idmap,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_mnt_idmap_license || mkdir -p build/xattr_handler_set_mnt_idmap_license

	file=build/xattr_handler_set_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_userns || mkdir -p build/xattr_handler_set_userns
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_userns/xattr_handler_set_userns.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct user_namespace *mnt_userns,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_userns || mkdir -p build/xattr_handler_set_userns

	file=build/xattr_handler_set_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_userns_license || mkdir -p build/xattr_handler_set_userns_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_userns_license/xattr_handler_set_userns_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
			struct user_namespace *mnt_userns,
			struct dentry *dentry, struct inode *inode,
			const char *name, const void *buffer,
			size_t size, int flags)
			{ return 0; }
		static const struct xattr_handler
			xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_userns_license || mkdir -p build/xattr_handler_set_userns_license

	file=build/xattr_handler_set_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_userns_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_dentry_inode || mkdir -p build/xattr_handler_set_dentry_inode
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry_inode/xattr_handler_set_dentry_inode.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, const void *buffer,
		    size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry_inode || mkdir -p build/xattr_handler_set_dentry_inode

	file=build/xattr_handler_set_dentry_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_dentry_inode_license || mkdir -p build/xattr_handler_set_dentry_inode_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry_inode_license/xattr_handler_set_dentry_inode_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, struct inode *inode,
		    const char *name, const void *buffer,
		    size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry_inode_license || mkdir -p build/xattr_handler_set_dentry_inode_license

	file=build/xattr_handler_set_dentry_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry_inode_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_xattr_handler || mkdir -p build/xattr_handler_set_xattr_handler
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_xattr_handler/xattr_handler_set_xattr_handler.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_xattr_handler || mkdir -p build/xattr_handler_set_xattr_handler

	file=build/xattr_handler_set_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_xattr_handler_license || mkdir -p build/xattr_handler_set_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_xattr_handler_license/xattr_handler_set_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(const struct xattr_handler *handler,
		    struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags)
		    { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_xattr_handler_license || mkdir -p build/xattr_handler_set_xattr_handler_license

	file=build/xattr_handler_set_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_xattr_handler_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_set_dentry || mkdir -p build/xattr_handler_set_dentry
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry/xattr_handler_set_dentry.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry || mkdir -p build/xattr_handler_set_dentry

	file=build/xattr_handler_set_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_set_dentry_license || mkdir -p build/xattr_handler_set_dentry_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_set_dentry_license/xattr_handler_set_dentry_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		int set(struct dentry *dentry, const char *name,
		    const void *buffer, size_t size, int flags,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.set = set,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_set_dentry_license || mkdir -p build/xattr_handler_set_dentry_license

	file=build/xattr_handler_set_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_set_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_set_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_set_dentry_license/" >>build/Makefile
fi


fi





test -d build/xattr_handler_list_simple || mkdir -p build/xattr_handler_list_simple
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_simple/xattr_handler_list_simple.c

#include <linux/module.h>

		#include <linux/xattr.h>

		bool list(struct dentry *dentry) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_simple || mkdir -p build/xattr_handler_list_simple

	file=build/xattr_handler_list_simple/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_simple

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_simple.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_simple/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_list_simple_license || mkdir -p build/xattr_handler_list_simple_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_simple_license/xattr_handler_list_simple_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		bool list(struct dentry *dentry) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_simple_license || mkdir -p build/xattr_handler_list_simple_license

	file=build/xattr_handler_list_simple_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_simple_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_simple_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_simple_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_list_xattr_handler || mkdir -p build/xattr_handler_list_xattr_handler
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_xattr_handler/xattr_handler_list_xattr_handler.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(const struct xattr_handler *handler,
		    struct dentry *dentry, char *list, size_t list_size,
		    const char *name, size_t name_len) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_xattr_handler || mkdir -p build/xattr_handler_list_xattr_handler

	file=build/xattr_handler_list_xattr_handler/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_xattr_handler

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_xattr_handler.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_xattr_handler/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_list_xattr_handler_license || mkdir -p build/xattr_handler_list_xattr_handler_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_xattr_handler_license/xattr_handler_list_xattr_handler_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(const struct xattr_handler *handler,
		    struct dentry *dentry, char *list, size_t list_size,
		    const char *name, size_t name_len) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_xattr_handler_license || mkdir -p build/xattr_handler_list_xattr_handler_license

	file=build/xattr_handler_list_xattr_handler_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_xattr_handler_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_xattr_handler_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_xattr_handler_license/" >>build/Makefile
fi


fi




test -d build/xattr_handler_list_dentry || mkdir -p build/xattr_handler_list_dentry
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_dentry/xattr_handler_list_dentry.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(struct dentry *dentry,
		    char *list, size_t list_size,
		    const char *name, size_t name_len,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_dentry || mkdir -p build/xattr_handler_list_dentry

	file=build/xattr_handler_list_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/xattr_handler_list_dentry_license || mkdir -p build/xattr_handler_list_dentry_license
cat confdefs.h - <<_ACEOF >build/xattr_handler_list_dentry_license/xattr_handler_list_dentry_license.c

#include <linux/module.h>

		#include <linux/xattr.h>

		size_t list(struct dentry *dentry,
		    char *list, size_t list_size,
		    const char *name, size_t name_len,
		    int handler_flags) { return 0; }
		static const struct xattr_handler
		    xops __attribute__ ((unused)) = {
			.list = list,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/xattr_handler_list_dentry_license || mkdir -p build/xattr_handler_list_dentry_license

	file=build/xattr_handler_list_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/xattr_handler_list_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := xattr_handler_list_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += xattr_handler_list_dentry_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_from_xattr_userns || mkdir -p build/posix_acl_from_xattr_userns
cat confdefs.h - <<_ACEOF >build/posix_acl_from_xattr_userns/posix_acl_from_xattr_userns.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl_xattr.h>


int
main (void)
{

		posix_acl_from_xattr(&init_user_ns, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_from_xattr_userns || mkdir -p build/posix_acl_from_xattr_userns

	file=build/posix_acl_from_xattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_from_xattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_from_xattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_from_xattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_from_xattr_userns_license || mkdir -p build/posix_acl_from_xattr_userns_license
cat confdefs.h - <<_ACEOF >build/posix_acl_from_xattr_userns_license/posix_acl_from_xattr_userns_license.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl_xattr.h>


int
main (void)
{

		posix_acl_from_xattr(&init_user_ns, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_from_xattr_userns_license || mkdir -p build/posix_acl_from_xattr_userns_license

	file=build/posix_acl_from_xattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_from_xattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_from_xattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_from_xattr_userns_license/" >>build/Makefile
fi


fi





test -d build/have_generic_setxattr || mkdir -p build/have_generic_setxattr
cat confdefs.h - <<_ACEOF >build/have_generic_setxattr/have_generic_setxattr.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setxattr = generic_setxattr
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/have_generic_setxattr || mkdir -p build/have_generic_setxattr

	file=build/have_generic_setxattr/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/have_generic_setxattr

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := have_generic_setxattr.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += have_generic_setxattr/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/have_generic_setxattr_license || mkdir -p build/have_generic_setxattr_license
cat confdefs.h - <<_ACEOF >build/have_generic_setxattr_license/have_generic_setxattr_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/xattr.h>

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setxattr = generic_setxattr
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/have_generic_setxattr_license || mkdir -p build/have_generic_setxattr_license

	file=build/have_generic_setxattr_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/have_generic_setxattr_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := have_generic_setxattr_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += have_generic_setxattr_license/" >>build/Makefile
fi


fi







test -d build/posix_acl_release || mkdir -p build/posix_acl_release
cat confdefs.h - <<_ACEOF >build/posix_acl_release/posix_acl_release.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl *tmp = posix_acl_alloc(1, 0);
		posix_acl_release(tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_release || mkdir -p build/posix_acl_release

	file=build/posix_acl_release/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_release

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_release.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_release/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/posix_acl_release_license || mkdir -p build/posix_acl_release_license
cat confdefs.h - <<_ACEOF >build/posix_acl_release_license/posix_acl_release_license.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl *tmp = posix_acl_alloc(1, 0);
		posix_acl_release(tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_release_license || mkdir -p build/posix_acl_release_license

	file=build/posix_acl_release_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_release_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_release_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_release_license/" >>build/Makefile
fi


fi





test -d build/set_cached_acl || mkdir -p build/set_cached_acl
cat confdefs.h - <<_ACEOF >build/set_cached_acl/set_cached_acl.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct inode *ip = NULL;
		struct posix_acl *acl = posix_acl_alloc(1, 0);
		set_cached_acl(ip, ACL_TYPE_ACCESS, acl);
		forget_cached_acl(ip, ACL_TYPE_ACCESS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_cached_acl || mkdir -p build/set_cached_acl

	file=build/set_cached_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_cached_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_cached_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_cached_acl/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/set_cached_acl_license || mkdir -p build/set_cached_acl_license
cat confdefs.h - <<_ACEOF >build/set_cached_acl_license/set_cached_acl_license.c

#include <linux/module.h>

		#include <linux/cred.h>
		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct inode *ip = NULL;
		struct posix_acl *acl = posix_acl_alloc(1, 0);
		set_cached_acl(ip, ACL_TYPE_ACCESS, acl);
		forget_cached_acl(ip, ACL_TYPE_ACCESS);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_cached_acl_license || mkdir -p build/set_cached_acl_license

	file=build/set_cached_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_cached_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_cached_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_cached_acl_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_chmod || mkdir -p build/posix_acl_chmod
cat confdefs.h - <<_ACEOF >build/posix_acl_chmod/posix_acl_chmod.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_chmod || mkdir -p build/posix_acl_chmod

	file=build/posix_acl_chmod/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_chmod

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_chmod.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_chmod/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_chmod_license || mkdir -p build/posix_acl_chmod_license
cat confdefs.h - <<_ACEOF >build/posix_acl_chmod_license/posix_acl_chmod_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_chmod_license || mkdir -p build/posix_acl_chmod_license

	file=build/posix_acl_chmod_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_chmod_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_chmod_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_chmod_license/" >>build/Makefile
fi


fi




test -d build/__posix_acl_chmod || mkdir -p build/__posix_acl_chmod
cat confdefs.h - <<_ACEOF >build/__posix_acl_chmod/__posix_acl_chmod.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		__posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__posix_acl_chmod || mkdir -p build/__posix_acl_chmod

	file=build/__posix_acl_chmod/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__posix_acl_chmod

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __posix_acl_chmod.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __posix_acl_chmod/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/__posix_acl_chmod_license || mkdir -p build/__posix_acl_chmod_license
cat confdefs.h - <<_ACEOF >build/__posix_acl_chmod_license/__posix_acl_chmod_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		__posix_acl_chmod(NULL, 0, 0)

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/__posix_acl_chmod_license || mkdir -p build/__posix_acl_chmod_license

	file=build/__posix_acl_chmod_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__posix_acl_chmod_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __posix_acl_chmod_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __posix_acl_chmod_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_equiv_mode || mkdir -p build/posix_acl_equiv_mode
cat confdefs.h - <<_ACEOF >build/posix_acl_equiv_mode/posix_acl_equiv_mode.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		umode_t tmp;
		posix_acl_equiv_mode(NULL, &tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_equiv_mode || mkdir -p build/posix_acl_equiv_mode

	file=build/posix_acl_equiv_mode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_equiv_mode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_equiv_mode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_equiv_mode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_equiv_mode_license || mkdir -p build/posix_acl_equiv_mode_license
cat confdefs.h - <<_ACEOF >build/posix_acl_equiv_mode_license/posix_acl_equiv_mode_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		umode_t tmp;
		posix_acl_equiv_mode(NULL, &tmp);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_equiv_mode_license || mkdir -p build/posix_acl_equiv_mode_license

	file=build/posix_acl_equiv_mode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_equiv_mode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_equiv_mode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_equiv_mode_license/" >>build/Makefile
fi


fi





test -d build/posix_acl_valid_with_ns || mkdir -p build/posix_acl_valid_with_ns
cat confdefs.h - <<_ACEOF >build/posix_acl_valid_with_ns/posix_acl_valid_with_ns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct user_namespace *user_ns = NULL;
		const struct posix_acl *acl = NULL;
		int error;

		error = posix_acl_valid(user_ns, acl);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_valid_with_ns || mkdir -p build/posix_acl_valid_with_ns

	file=build/posix_acl_valid_with_ns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_valid_with_ns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_valid_with_ns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_valid_with_ns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/posix_acl_valid_with_ns_license || mkdir -p build/posix_acl_valid_with_ns_license
cat confdefs.h - <<_ACEOF >build/posix_acl_valid_with_ns_license/posix_acl_valid_with_ns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct user_namespace *user_ns = NULL;
		const struct posix_acl *acl = NULL;
		int error;

		error = posix_acl_valid(user_ns, acl);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/posix_acl_valid_with_ns_license || mkdir -p build/posix_acl_valid_with_ns_license

	file=build/posix_acl_valid_with_ns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/posix_acl_valid_with_ns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := posix_acl_valid_with_ns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += posix_acl_valid_with_ns_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_get_acl || mkdir -p build/inode_operations_get_acl
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl/inode_operations_get_acl.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type)
		    { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl || mkdir -p build/inode_operations_get_acl

	file=build/inode_operations_get_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_acl_license || mkdir -p build/inode_operations_get_acl_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl_license/inode_operations_get_acl_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type)
		    { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl_license || mkdir -p build/inode_operations_get_acl_license

	file=build/inode_operations_get_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_get_acl_rcu || mkdir -p build/inode_operations_get_acl_rcu
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl_rcu/inode_operations_get_acl_rcu.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl_rcu || mkdir -p build/inode_operations_get_acl_rcu

	file=build/inode_operations_get_acl_rcu/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl_rcu

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl_rcu.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl_rcu/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_acl_rcu_license || mkdir -p build/inode_operations_get_acl_rcu_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_acl_rcu_license/inode_operations_get_acl_rcu_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_acl = get_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_acl_rcu_license || mkdir -p build/inode_operations_get_acl_rcu_license

	file=build/inode_operations_get_acl_rcu_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_acl_rcu_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_acl_rcu_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_acl_rcu_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_get_inode_acl || mkdir -p build/inode_operations_get_inode_acl
cat confdefs.h - <<_ACEOF >build/inode_operations_get_inode_acl/inode_operations_get_inode_acl.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_inode_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_inode_acl = get_inode_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_inode_acl || mkdir -p build/inode_operations_get_inode_acl

	file=build/inode_operations_get_inode_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_inode_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_inode_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_inode_acl/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_inode_acl_license || mkdir -p build/inode_operations_get_inode_acl_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_inode_acl_license/inode_operations_get_inode_acl_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct posix_acl *get_inode_acl_fn(struct inode *inode, int type,
		    bool rcu) { return NULL; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.get_inode_acl = get_inode_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_inode_acl_license || mkdir -p build/inode_operations_get_inode_acl_license

	file=build/inode_operations_get_inode_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_inode_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_inode_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_inode_acl_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_set_acl_mnt_idmap_dentry || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_mnt_idmap_dentry/inode_operations_set_acl_mnt_idmap_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct mnt_idmap *idmap,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_mnt_idmap_dentry || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry

	file=build/inode_operations_set_acl_mnt_idmap_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_mnt_idmap_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_mnt_idmap_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_mnt_idmap_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_mnt_idmap_dentry_license || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_mnt_idmap_dentry_license/inode_operations_set_acl_mnt_idmap_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct mnt_idmap *idmap,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_mnt_idmap_dentry_license || mkdir -p build/inode_operations_set_acl_mnt_idmap_dentry_license

	file=build/inode_operations_set_acl_mnt_idmap_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_mnt_idmap_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_mnt_idmap_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_mnt_idmap_dentry_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_set_acl_userns_dentry || mkdir -p build/inode_operations_set_acl_userns_dentry
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns_dentry/inode_operations_set_acl_userns_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns_dentry || mkdir -p build/inode_operations_set_acl_userns_dentry

	file=build/inode_operations_set_acl_userns_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_userns_dentry_license || mkdir -p build/inode_operations_set_acl_userns_dentry_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns_dentry_license/inode_operations_set_acl_userns_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct dentry *dent, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns_dentry_license || mkdir -p build/inode_operations_set_acl_userns_dentry_license

	file=build/inode_operations_set_acl_userns_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns_dentry_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_set_acl_userns || mkdir -p build/inode_operations_set_acl_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns/inode_operations_set_acl_userns.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns || mkdir -p build/inode_operations_set_acl_userns

	file=build/inode_operations_set_acl_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_userns_license || mkdir -p build/inode_operations_set_acl_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_userns_license/inode_operations_set_acl_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct user_namespace *userns,
		    struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_userns_license || mkdir -p build/inode_operations_set_acl_userns_license

	file=build/inode_operations_set_acl_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_userns_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_set_acl || mkdir -p build/inode_operations_set_acl
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl/inode_operations_set_acl.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl || mkdir -p build/inode_operations_set_acl

	file=build/inode_operations_set_acl/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_set_acl_license || mkdir -p build/inode_operations_set_acl_license
cat confdefs.h - <<_ACEOF >build/inode_operations_set_acl_license/inode_operations_set_acl_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int set_acl_fn(struct inode *inode, struct posix_acl *acl,
		    int type) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.set_acl = set_acl_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_set_acl_license || mkdir -p build/inode_operations_set_acl_license

	file=build/inode_operations_set_acl_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_set_acl_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_set_acl_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_set_acl_license/" >>build/Makefile
fi


fi





test -d build/get_acl_handle_cache || mkdir -p build/get_acl_handle_cache
cat confdefs.h - <<_ACEOF >build/get_acl_handle_cache/get_acl_handle_cache.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		void *sentinel __attribute__ ((unused)) =
		    uncached_acl_sentinel(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_acl_handle_cache || mkdir -p build/get_acl_handle_cache

	file=build/get_acl_handle_cache/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_acl_handle_cache

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_acl_handle_cache.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_acl_handle_cache/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/get_acl_handle_cache_license || mkdir -p build/get_acl_handle_cache_license
cat confdefs.h - <<_ACEOF >build/get_acl_handle_cache_license/get_acl_handle_cache_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		void *sentinel __attribute__ ((unused)) =
		    uncached_acl_sentinel(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/get_acl_handle_cache_license || mkdir -p build/get_acl_handle_cache_license

	file=build/get_acl_handle_cache_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/get_acl_handle_cache_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := get_acl_handle_cache_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += get_acl_handle_cache_license/" >>build/Makefile
fi


fi





test -d build/acl_refcount || mkdir -p build/acl_refcount
cat confdefs.h - <<_ACEOF >build/acl_refcount/acl_refcount.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		#include <linux/refcount.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl acl;
		refcount_t *r __attribute__ ((unused)) = &acl.a_refcount;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/acl_refcount || mkdir -p build/acl_refcount

	file=build/acl_refcount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/acl_refcount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := acl_refcount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += acl_refcount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/acl_refcount_license || mkdir -p build/acl_refcount_license
cat confdefs.h - <<_ACEOF >build/acl_refcount_license/acl_refcount_license.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		#include <linux/refcount.h>
		#include <linux/posix_acl.h>


int
main (void)
{

		struct posix_acl acl;
		refcount_t *r __attribute__ ((unused)) = &acl.a_refcount;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/acl_refcount_license || mkdir -p build/acl_refcount_license

	file=build/acl_refcount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/acl_refcount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := acl_refcount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += acl_refcount_license/" >>build/Makefile
fi


fi






test -d build/inode_operations_setattr_mnt_idmap || mkdir -p build/inode_operations_setattr_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_mnt_idmap/inode_operations_setattr_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct mnt_idmap *idmap,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_mnt_idmap || mkdir -p build/inode_operations_setattr_mnt_idmap

	file=build/inode_operations_setattr_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_setattr_mnt_idmap_license || mkdir -p build/inode_operations_setattr_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_mnt_idmap_license/inode_operations_setattr_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct mnt_idmap *idmap,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_mnt_idmap_license || mkdir -p build/inode_operations_setattr_mnt_idmap_license

	file=build/inode_operations_setattr_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_setattr_userns || mkdir -p build/inode_operations_setattr_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_userns/inode_operations_setattr_userns.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct user_namespace *userns,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_userns || mkdir -p build/inode_operations_setattr_userns

	file=build/inode_operations_setattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_setattr_userns_license || mkdir -p build/inode_operations_setattr_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_userns_license/inode_operations_setattr_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct user_namespace *userns,
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_userns_license || mkdir -p build/inode_operations_setattr_userns_license

	file=build/inode_operations_setattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_setattr || mkdir -p build/inode_operations_setattr
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr/inode_operations_setattr.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr || mkdir -p build/inode_operations_setattr

	file=build/inode_operations_setattr/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_setattr_license || mkdir -p build/inode_operations_setattr_license
cat confdefs.h - <<_ACEOF >build/inode_operations_setattr_license/inode_operations_setattr_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_setattr(
		    struct dentry *de, struct iattr *ia)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.setattr = test_setattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_setattr_license || mkdir -p build/inode_operations_setattr_license

	file=build/inode_operations_setattr_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_setattr_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_setattr_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_setattr_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_getattr_mnt_idmap || mkdir -p build/inode_operations_getattr_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_mnt_idmap/inode_operations_getattr_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct mnt_idmap *idmap,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_mnt_idmap || mkdir -p build/inode_operations_getattr_mnt_idmap

	file=build/inode_operations_getattr_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_mnt_idmap_license || mkdir -p build/inode_operations_getattr_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_mnt_idmap_license/inode_operations_getattr_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct mnt_idmap *idmap,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_mnt_idmap_license || mkdir -p build/inode_operations_getattr_mnt_idmap_license

	file=build/inode_operations_getattr_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_getattr_userns || mkdir -p build/inode_operations_getattr_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_userns/inode_operations_getattr_userns.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
			struct user_namespace *userns,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_userns || mkdir -p build/inode_operations_getattr_userns

	file=build/inode_operations_getattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_userns_license || mkdir -p build/inode_operations_getattr_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_userns_license/inode_operations_getattr_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
			struct user_namespace *userns,
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_userns_license || mkdir -p build/inode_operations_getattr_userns_license

	file=build/inode_operations_getattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_getattr_path || mkdir -p build/inode_operations_getattr_path
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_path/inode_operations_getattr_path.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_path || mkdir -p build/inode_operations_getattr_path

	file=build/inode_operations_getattr_path/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_path

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_path.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_path/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_path_license || mkdir -p build/inode_operations_getattr_path_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_path_license/inode_operations_getattr_path_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    const struct path *p, struct kstat *k,
		    u32 request_mask, unsigned int query_flags)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_path_license || mkdir -p build/inode_operations_getattr_path_license

	file=build/inode_operations_getattr_path_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_path_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_path_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_path_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_getattr_vfsmount || mkdir -p build/inode_operations_getattr_vfsmount
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_vfsmount/inode_operations_getattr_vfsmount.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct vfsmount *mnt, struct dentry *d,
		    struct kstat *k)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_vfsmount || mkdir -p build/inode_operations_getattr_vfsmount

	file=build/inode_operations_getattr_vfsmount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_vfsmount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_vfsmount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_vfsmount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_getattr_vfsmount_license || mkdir -p build/inode_operations_getattr_vfsmount_license
cat confdefs.h - <<_ACEOF >build/inode_operations_getattr_vfsmount_license/inode_operations_getattr_vfsmount_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_getattr(
		    struct vfsmount *mnt, struct dentry *d,
		    struct kstat *k)
		    { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.getattr = test_getattr,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_getattr_vfsmount_license || mkdir -p build/inode_operations_getattr_vfsmount_license

	file=build/inode_operations_getattr_vfsmount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_getattr_vfsmount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_getattr_vfsmount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_getattr_vfsmount_license/" >>build/Makefile
fi


fi





test -d build/inode_set_flags || mkdir -p build/inode_set_flags
cat confdefs.h - <<_ACEOF >build/inode_set_flags/inode_set_flags.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode inode;
		inode_set_flags(&inode, S_IMMUTABLE, S_IMMUTABLE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_flags || mkdir -p build/inode_set_flags

	file=build/inode_set_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_set_flags_license || mkdir -p build/inode_set_flags_license
cat confdefs.h - <<_ACEOF >build/inode_set_flags_license/inode_set_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode inode;
		inode_set_flags(&inode, S_IMMUTABLE, S_IMMUTABLE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_flags_license || mkdir -p build/inode_set_flags_license

	file=build/inode_set_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_flags_license/" >>build/Makefile
fi


fi





test -d build/inode_set_iversion || mkdir -p build/inode_set_iversion
cat confdefs.h - <<_ACEOF >build/inode_set_iversion/inode_set_iversion.c

#include <linux/module.h>

		#include <linux/iversion.h>


int
main (void)
{

		struct inode inode;
		inode_set_iversion(&inode, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_iversion || mkdir -p build/inode_set_iversion

	file=build/inode_set_iversion/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_iversion

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_iversion.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_iversion/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_set_iversion_license || mkdir -p build/inode_set_iversion_license
cat confdefs.h - <<_ACEOF >build/inode_set_iversion_license/inode_set_iversion_license.c

#include <linux/module.h>

		#include <linux/iversion.h>


int
main (void)
{

		struct inode inode;
		inode_set_iversion(&inode, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_set_iversion_license || mkdir -p build/inode_set_iversion_license

	file=build/inode_set_iversion_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_set_iversion_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_set_iversion_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_set_iversion_license/" >>build/Makefile
fi


fi





test -d build/super_operations_show_options || mkdir -p build/super_operations_show_options
cat confdefs.h - <<_ACEOF >build/super_operations_show_options/super_operations_show_options.c

#include <linux/module.h>

		#include <linux/fs.h>

		int show_options(struct seq_file * x, struct dentry * y) {
			return 0;
		};

		static struct super_operations sops __attribute__ ((unused)) = {
			.show_options = show_options,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_operations_show_options || mkdir -p build/super_operations_show_options

	file=build/super_operations_show_options/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_operations_show_options

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_operations_show_options.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_operations_show_options/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_operations_show_options_license || mkdir -p build/super_operations_show_options_license
cat confdefs.h - <<_ACEOF >build/super_operations_show_options_license/super_operations_show_options_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int show_options(struct seq_file * x, struct dentry * y) {
			return 0;
		};

		static struct super_operations sops __attribute__ ((unused)) = {
			.show_options = show_options,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_operations_show_options_license || mkdir -p build/super_operations_show_options_license

	file=build/super_operations_show_options_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_operations_show_options_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_operations_show_options_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_operations_show_options_license/" >>build/Makefile
fi


fi





test -d build/file_inode || mkdir -p build/file_inode
cat confdefs.h - <<_ACEOF >build/file_inode/file_inode.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_inode(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_inode || mkdir -p build/file_inode

	file=build/file_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_inode_license || mkdir -p build/file_inode_license
cat confdefs.h - <<_ACEOF >build/file_inode_license/file_inode_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_inode(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_inode_license || mkdir -p build/file_inode_license

	file=build/file_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_inode_license/" >>build/Makefile
fi


fi





test -d build/file_dentry || mkdir -p build/file_dentry
cat confdefs.h - <<_ACEOF >build/file_dentry/file_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_dentry(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_dentry || mkdir -p build/file_dentry

	file=build/file_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_dentry_license || mkdir -p build/file_dentry_license
cat confdefs.h - <<_ACEOF >build/file_dentry_license/file_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *f = NULL;
		file_dentry(f);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_dentry_license || mkdir -p build/file_dentry_license

	file=build/file_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_dentry_license/" >>build/Makefile
fi


fi





test -d build/fsync_without_dentry || mkdir -p build/fsync_without_dentry
cat confdefs.h - <<_ACEOF >build/fsync_without_dentry/fsync_without_dentry.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, int x) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_without_dentry || mkdir -p build/fsync_without_dentry

	file=build/fsync_without_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_without_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_without_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_without_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/fsync_without_dentry_license || mkdir -p build/fsync_without_dentry_license
cat confdefs.h - <<_ACEOF >build/fsync_without_dentry_license/fsync_without_dentry_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, int x) { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_without_dentry_license || mkdir -p build/fsync_without_dentry_license

	file=build/fsync_without_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_without_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_without_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_without_dentry_license/" >>build/Makefile
fi


fi




test -d build/fsync_range || mkdir -p build/fsync_range
cat confdefs.h - <<_ACEOF >build/fsync_range/fsync_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, loff_t a, loff_t b, int c)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_range || mkdir -p build/fsync_range

	file=build/fsync_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/fsync_range_license || mkdir -p build/fsync_range_license
cat confdefs.h - <<_ACEOF >build/fsync_range_license/fsync_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int test_fsync(struct file *f, loff_t a, loff_t b, int c)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.fsync = test_fsync,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/fsync_range_license || mkdir -p build/fsync_range_license

	file=build/fsync_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fsync_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fsync_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fsync_range_license/" >>build/Makefile
fi


fi





test -d build/aio_fsync || mkdir -p build/aio_fsync
cat confdefs.h - <<_ACEOF >build/aio_fsync/aio_fsync.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.aio_fsync = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/aio_fsync || mkdir -p build/aio_fsync

	file=build/aio_fsync/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/aio_fsync

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := aio_fsync.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += aio_fsync/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/aio_fsync_license || mkdir -p build/aio_fsync_license
cat confdefs.h - <<_ACEOF >build/aio_fsync_license/aio_fsync_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.aio_fsync = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/aio_fsync_license || mkdir -p build/aio_fsync_license

	file=build/aio_fsync_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/aio_fsync_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := aio_fsync_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += aio_fsync_license/" >>build/Makefile
fi


fi





test -d build/evict_inode || mkdir -p build/evict_inode
cat confdefs.h - <<_ACEOF >build/evict_inode/evict_inode.c

#include <linux/module.h>

		#include <linux/fs.h>
		void evict_inode (struct inode * t) { return; }
		static struct super_operations sops __attribute__ ((unused)) = {
			.evict_inode = evict_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/evict_inode || mkdir -p build/evict_inode

	file=build/evict_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/evict_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := evict_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += evict_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/evict_inode_license || mkdir -p build/evict_inode_license
cat confdefs.h - <<_ACEOF >build/evict_inode_license/evict_inode_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void evict_inode (struct inode * t) { return; }
		static struct super_operations sops __attribute__ ((unused)) = {
			.evict_inode = evict_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/evict_inode_license || mkdir -p build/evict_inode_license

	file=build/evict_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/evict_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := evict_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += evict_inode_license/" >>build/Makefile
fi


fi





test -d build/dirty_inode_with_flags || mkdir -p build/dirty_inode_with_flags
cat confdefs.h - <<_ACEOF >build/dirty_inode_with_flags/dirty_inode_with_flags.c

#include <linux/module.h>

		#include <linux/fs.h>

		void dirty_inode(struct inode *a, int b) { return; }

		static const struct super_operations
		    sops __attribute__ ((unused)) = {
			.dirty_inode = dirty_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dirty_inode_with_flags || mkdir -p build/dirty_inode_with_flags

	file=build/dirty_inode_with_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dirty_inode_with_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dirty_inode_with_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dirty_inode_with_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dirty_inode_with_flags_license || mkdir -p build/dirty_inode_with_flags_license
cat confdefs.h - <<_ACEOF >build/dirty_inode_with_flags_license/dirty_inode_with_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		void dirty_inode(struct inode *a, int b) { return; }

		static const struct super_operations
		    sops __attribute__ ((unused)) = {
			.dirty_inode = dirty_inode,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dirty_inode_with_flags_license || mkdir -p build/dirty_inode_with_flags_license

	file=build/dirty_inode_with_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dirty_inode_with_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dirty_inode_with_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dirty_inode_with_flags_license/" >>build/Makefile
fi


fi






test -d build/super_block_s_shrink || mkdir -p build/super_block_s_shrink
cat confdefs.h - <<_ACEOF >build/super_block_s_shrink/super_block_s_shrink.c

#include <linux/module.h>

		#include <linux/fs.h>

		int shrink(struct shrinker *s, struct shrink_control *sc)
		    { return 0; }

		static const struct super_block
		    sb __attribute__ ((unused)) = {
			.s_shrink.seeks = DEFAULT_SEEKS,
			.s_shrink.batch = 0,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_shrink || mkdir -p build/super_block_s_shrink

	file=build/super_block_s_shrink/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_shrink

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_shrink.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_shrink/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_block_s_shrink_license || mkdir -p build/super_block_s_shrink_license
cat confdefs.h - <<_ACEOF >build/super_block_s_shrink_license/super_block_s_shrink_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int shrink(struct shrinker *s, struct shrink_control *sc)
		    { return 0; }

		static const struct super_block
		    sb __attribute__ ((unused)) = {
			.s_shrink.seeks = DEFAULT_SEEKS,
			.s_shrink.batch = 0,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_shrink_license || mkdir -p build/super_block_s_shrink_license

	file=build/super_block_s_shrink_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_shrink_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_shrink_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_shrink_license/" >>build/Makefile
fi


fi





test -d build/shrink_control_nid || mkdir -p build/shrink_control_nid
cat confdefs.h - <<_ACEOF >build/shrink_control_nid/shrink_control_nid.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));
		unsigned long scnidsize __attribute__ ((unused)) =
		    sizeof(sc.nid);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_nid || mkdir -p build/shrink_control_nid

	file=build/shrink_control_nid/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_nid

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_nid.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_nid/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrink_control_nid_license || mkdir -p build/shrink_control_nid_license
cat confdefs.h - <<_ACEOF >build/shrink_control_nid_license/shrink_control_nid_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));
		unsigned long scnidsize __attribute__ ((unused)) =
		    sizeof(sc.nid);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_nid_license || mkdir -p build/shrink_control_nid_license

	file=build/shrink_control_nid_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_nid_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_nid_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_nid_license/" >>build/Makefile
fi


fi





test -d build/shrinker_cb_shrink_control || mkdir -p build/shrinker_cb_shrink_control
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control/shrinker_cb_shrink_control.c

#include <linux/module.h>

		#include <linux/mm.h>
		int shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.shrink = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control || mkdir -p build/shrinker_cb_shrink_control

	file=build/shrinker_cb_shrink_control/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrinker_cb_shrink_control_license || mkdir -p build/shrinker_cb_shrink_control_license
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control_license/shrinker_cb_shrink_control_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		int shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.shrink = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control_license || mkdir -p build/shrinker_cb_shrink_control_license

	file=build/shrinker_cb_shrink_control_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control_license/" >>build/Makefile
fi


fi




test -d build/shrinker_cb_shrink_control_split || mkdir -p build/shrinker_cb_shrink_control_split
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control_split/shrinker_cb_shrink_control_split.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control_split || mkdir -p build/shrinker_cb_shrink_control_split

	file=build/shrinker_cb_shrink_control_split/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control_split

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control_split.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control_split/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrinker_cb_shrink_control_split_license || mkdir -p build/shrinker_cb_shrink_control_split_license
cat confdefs.h - <<_ACEOF >build/shrinker_cb_shrink_control_split_license/shrinker_cb_shrink_control_split_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrinker_cb_shrink_control_split_license || mkdir -p build/shrinker_cb_shrink_control_split_license

	file=build/shrinker_cb_shrink_control_split_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrinker_cb_shrink_control_split_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrinker_cb_shrink_control_split_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrinker_cb_shrink_control_split_license/" >>build/Makefile
fi


fi





test -d build/shrink_control_struct || mkdir -p build/shrink_control_struct
cat confdefs.h - <<_ACEOF >build/shrink_control_struct/shrink_control_struct.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));

		sc.nr_to_scan = 0;
		sc.gfp_mask = GFP_KERNEL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_struct || mkdir -p build/shrink_control_struct

	file=build/shrink_control_struct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_struct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_struct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_struct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/shrink_control_struct_license || mkdir -p build/shrink_control_struct_license
cat confdefs.h - <<_ACEOF >build/shrink_control_struct_license/shrink_control_struct_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct shrink_control sc __attribute__ ((unused));

		sc.nr_to_scan = 0;
		sc.gfp_mask = GFP_KERNEL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/shrink_control_struct_license || mkdir -p build/shrink_control_struct_license

	file=build/shrink_control_struct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/shrink_control_struct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := shrink_control_struct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += shrink_control_struct_license/" >>build/Makefile
fi


fi





test -d build/register_shrinker_vararg || mkdir -p build/register_shrinker_vararg
cat confdefs.h - <<_ACEOF >build/register_shrinker_vararg/register_shrinker_vararg.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker, "vararg-reg-shrink-test");

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/register_shrinker_vararg || mkdir -p build/register_shrinker_vararg

	file=build/register_shrinker_vararg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/register_shrinker_vararg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := register_shrinker_vararg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += register_shrinker_vararg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/register_shrinker_vararg_license || mkdir -p build/register_shrinker_vararg_license
cat confdefs.h - <<_ACEOF >build/register_shrinker_vararg_license/register_shrinker_vararg_license.c

#include <linux/module.h>

		#include <linux/mm.h>
		unsigned long shrinker_cb(struct shrinker *shrink,
		    struct shrink_control *sc) { return 0; }


int
main (void)
{

		struct shrinker cache_shrinker = {
			.count_objects = shrinker_cb,
			.scan_objects = shrinker_cb,
			.seeks = DEFAULT_SEEKS,
		};
		register_shrinker(&cache_shrinker, "vararg-reg-shrink-test");

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/register_shrinker_vararg_license || mkdir -p build/register_shrinker_vararg_license

	file=build/register_shrinker_vararg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/register_shrinker_vararg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := register_shrinker_vararg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += register_shrinker_vararg_license/" >>build/Makefile
fi


fi






test -d build/mkdir_mnt_idmap || mkdir -p build/mkdir_mnt_idmap
cat confdefs.h - <<_ACEOF >build/mkdir_mnt_idmap/mkdir_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct mnt_idmap *idmap,
			struct inode *inode, struct dentry *dentry,
			umode_t umode) { return 0; }
		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_mnt_idmap || mkdir -p build/mkdir_mnt_idmap

	file=build/mkdir_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mkdir_mnt_idmap_license || mkdir -p build/mkdir_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/mkdir_mnt_idmap_license/mkdir_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct mnt_idmap *idmap,
			struct inode *inode, struct dentry *dentry,
			umode_t umode) { return 0; }
		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_mnt_idmap_license || mkdir -p build/mkdir_mnt_idmap_license

	file=build/mkdir_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/mkdir_user_namespace || mkdir -p build/mkdir_user_namespace
cat confdefs.h - <<_ACEOF >build/mkdir_user_namespace/mkdir_user_namespace.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct user_namespace *userns,
			struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_user_namespace || mkdir -p build/mkdir_user_namespace

	file=build/mkdir_user_namespace/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_user_namespace

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_user_namespace.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_user_namespace/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mkdir_user_namespace_license || mkdir -p build/mkdir_user_namespace_license
cat confdefs.h - <<_ACEOF >build/mkdir_user_namespace_license/mkdir_user_namespace_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct user_namespace *userns,
			struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mkdir_user_namespace_license || mkdir -p build/mkdir_user_namespace_license

	file=build/mkdir_user_namespace_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mkdir_user_namespace_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mkdir_user_namespace_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mkdir_user_namespace_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_mkdir || mkdir -p build/inode_operations_mkdir
cat confdefs.h - <<_ACEOF >build/inode_operations_mkdir/inode_operations_mkdir.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_mkdir || mkdir -p build/inode_operations_mkdir

	file=build/inode_operations_mkdir/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_mkdir

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_mkdir.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_mkdir/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_mkdir_license || mkdir -p build/inode_operations_mkdir_license
cat confdefs.h - <<_ACEOF >build/inode_operations_mkdir_license/inode_operations_mkdir_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		int mkdir(struct inode *inode, struct dentry *dentry,
		    umode_t umode) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.mkdir = mkdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_mkdir_license || mkdir -p build/inode_operations_mkdir_license

	file=build/inode_operations_mkdir_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_mkdir_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_mkdir_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_mkdir_license/" >>build/Makefile
fi


fi





test -d build/lookup_flags || mkdir -p build/lookup_flags
cat confdefs.h - <<_ACEOF >build/lookup_flags/lookup_flags.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		struct dentry *inode_lookup(struct inode *inode,
		    struct dentry *dentry, unsigned int flags) { return NULL; }

		static const struct inode_operations iops
		    __attribute__ ((unused)) = {
			.lookup	= inode_lookup,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_flags || mkdir -p build/lookup_flags

	file=build/lookup_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lookup_flags_license || mkdir -p build/lookup_flags_license
cat confdefs.h - <<_ACEOF >build/lookup_flags_license/lookup_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		struct dentry *inode_lookup(struct inode *inode,
		    struct dentry *dentry, unsigned int flags) { return NULL; }

		static const struct inode_operations iops
		    __attribute__ ((unused)) = {
			.lookup	= inode_lookup,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lookup_flags_license || mkdir -p build/lookup_flags_license

	file=build/lookup_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lookup_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lookup_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lookup_flags_license/" >>build/Makefile
fi


fi





test -d build/create_mnt_idmap || mkdir -p build/create_mnt_idmap
cat confdefs.h - <<_ACEOF >build/create_mnt_idmap/create_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create         = inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_mnt_idmap || mkdir -p build/create_mnt_idmap

	file=build/create_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/create_mnt_idmap_license || mkdir -p build/create_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/create_mnt_idmap_license/create_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create         = inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_mnt_idmap_license || mkdir -p build/create_mnt_idmap_license

	file=build/create_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/create_userns || mkdir -p build/create_userns
cat confdefs.h - <<_ACEOF >build/create_userns/create_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_userns || mkdir -p build/create_userns

	file=build/create_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/create_userns_license || mkdir -p build/create_userns_license
cat confdefs.h - <<_ACEOF >build/create_userns_license/create_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_userns_license || mkdir -p build/create_userns_license

	file=build/create_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_userns_license/" >>build/Makefile
fi


fi




test -d build/create_flags || mkdir -p build/create_flags
cat confdefs.h - <<_ACEOF >build/create_flags/create_flags.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_flags || mkdir -p build/create_flags

	file=build/create_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/create_flags_license || mkdir -p build/create_flags_license
cat confdefs.h - <<_ACEOF >build/create_flags_license/create_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_create(struct inode *inode ,struct dentry *dentry,
		    umode_t umode, bool flag) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.create		= inode_create,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/create_flags_license || mkdir -p build/create_flags_license

	file=build/create_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/create_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := create_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += create_flags_license/" >>build/Makefile
fi


fi





test -d build/permission_mnt_idmap || mkdir -p build/permission_mnt_idmap
cat confdefs.h - <<_ACEOF >build/permission_mnt_idmap/permission_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct mnt_idmap *idmap,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission             = inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_mnt_idmap || mkdir -p build/permission_mnt_idmap

	file=build/permission_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/permission_mnt_idmap_license || mkdir -p build/permission_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/permission_mnt_idmap_license/permission_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct mnt_idmap *idmap,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission             = inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_mnt_idmap_license || mkdir -p build/permission_mnt_idmap_license

	file=build/permission_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/permission_userns || mkdir -p build/permission_userns
cat confdefs.h - <<_ACEOF >build/permission_userns/permission_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct user_namespace *userns,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission		= inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_userns || mkdir -p build/permission_userns

	file=build/permission_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/permission_userns_license || mkdir -p build/permission_userns_license
cat confdefs.h - <<_ACEOF >build/permission_userns_license/permission_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int inode_permission(struct user_namespace *userns,
		    struct inode *inode, int mask) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.permission		= inode_permission,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/permission_userns_license || mkdir -p build/permission_userns_license

	file=build/permission_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/permission_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := permission_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += permission_userns_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_get_link || mkdir -p build/inode_operations_get_link
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link/inode_operations_get_link.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct inode *ip,
		    struct delayed_call *done) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link || mkdir -p build/inode_operations_get_link

	file=build/inode_operations_get_link/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_link_license || mkdir -p build/inode_operations_get_link_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link_license/inode_operations_get_link_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct inode *ip,
		    struct delayed_call *done) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link_license || mkdir -p build/inode_operations_get_link_license

	file=build/inode_operations_get_link_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_get_link_cookie || mkdir -p build/inode_operations_get_link_cookie
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link_cookie/inode_operations_get_link_cookie.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct
		    inode *ip, void **cookie) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link_cookie || mkdir -p build/inode_operations_get_link_cookie

	file=build/inode_operations_get_link_cookie/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link_cookie

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link_cookie.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link_cookie/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_get_link_cookie_license || mkdir -p build/inode_operations_get_link_cookie_license
cat confdefs.h - <<_ACEOF >build/inode_operations_get_link_cookie_license/inode_operations_get_link_cookie_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *get_link(struct dentry *de, struct
		    inode *ip, void **cookie) { return "symlink"; }
		static struct inode_operations
		     iops __attribute__ ((unused)) = {
			.get_link = get_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_get_link_cookie_license || mkdir -p build/inode_operations_get_link_cookie_license

	file=build/inode_operations_get_link_cookie_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_get_link_cookie_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_get_link_cookie_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_get_link_cookie_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_follow_link || mkdir -p build/inode_operations_follow_link
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link/inode_operations_follow_link.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *follow_link(struct dentry *de,
		    void **cookie) { return "symlink"; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link || mkdir -p build/inode_operations_follow_link

	file=build/inode_operations_follow_link/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_follow_link_license || mkdir -p build/inode_operations_follow_link_license
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link_license/inode_operations_follow_link_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		const char *follow_link(struct dentry *de,
		    void **cookie) { return "symlink"; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link_license || mkdir -p build/inode_operations_follow_link_license

	file=build/inode_operations_follow_link_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_follow_link_nameidata || mkdir -p build/inode_operations_follow_link_nameidata
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link_nameidata/inode_operations_follow_link_nameidata.c

#include <linux/module.h>

		#include <linux/fs.h>
		void *follow_link(struct dentry *de, struct
		    nameidata *nd) { return (void *)NULL; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link_nameidata || mkdir -p build/inode_operations_follow_link_nameidata

	file=build/inode_operations_follow_link_nameidata/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link_nameidata

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link_nameidata.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link_nameidata/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_follow_link_nameidata_license || mkdir -p build/inode_operations_follow_link_nameidata_license
cat confdefs.h - <<_ACEOF >build/inode_operations_follow_link_nameidata_license/inode_operations_follow_link_nameidata_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void *follow_link(struct dentry *de, struct
		    nameidata *nd) { return (void *)NULL; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.follow_link = follow_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_follow_link_nameidata_license || mkdir -p build/inode_operations_follow_link_nameidata_license

	file=build/inode_operations_follow_link_nameidata_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_follow_link_nameidata_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_follow_link_nameidata_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_follow_link_nameidata_license/" >>build/Makefile
fi


fi





test -d build/put_link_cookie || mkdir -p build/put_link_cookie
cat confdefs.h - <<_ACEOF >build/put_link_cookie/put_link_cookie.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct inode *ip, void *cookie)
		    { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_cookie || mkdir -p build/put_link_cookie

	file=build/put_link_cookie/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_cookie

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_cookie.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_cookie/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/put_link_cookie_license || mkdir -p build/put_link_cookie_license
cat confdefs.h - <<_ACEOF >build/put_link_cookie_license/put_link_cookie_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct inode *ip, void *cookie)
		    { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_cookie_license || mkdir -p build/put_link_cookie_license

	file=build/put_link_cookie_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_cookie_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_cookie_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_cookie_license/" >>build/Makefile
fi


fi




test -d build/put_link_nameidata || mkdir -p build/put_link_nameidata
cat confdefs.h - <<_ACEOF >build/put_link_nameidata/put_link_nameidata.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct dentry *de, struct
		    nameidata *nd, void *ptr) { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_nameidata || mkdir -p build/put_link_nameidata

	file=build/put_link_nameidata/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_nameidata

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_nameidata.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_nameidata/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/put_link_nameidata_license || mkdir -p build/put_link_nameidata_license
cat confdefs.h - <<_ACEOF >build/put_link_nameidata_license/put_link_nameidata_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		void put_link(struct dentry *de, struct
		    nameidata *nd, void *ptr) { return; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.put_link = put_link,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/put_link_nameidata_license || mkdir -p build/put_link_nameidata_license

	file=build/put_link_nameidata_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/put_link_nameidata_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := put_link_nameidata_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += put_link_nameidata_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_tmpfile_mnt_idmap || mkdir -p build/inode_operations_tmpfile_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_mnt_idmap/inode_operations_tmpfile_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct mnt_idmap *idmap,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_mnt_idmap || mkdir -p build/inode_operations_tmpfile_mnt_idmap

	file=build/inode_operations_tmpfile_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_mnt_idmap_license || mkdir -p build/inode_operations_tmpfile_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_mnt_idmap_license/inode_operations_tmpfile_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct mnt_idmap *idmap,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_mnt_idmap_license || mkdir -p build/inode_operations_tmpfile_mnt_idmap_license

	file=build/inode_operations_tmpfile_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_mnt_idmap_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_tmpfile || mkdir -p build/inode_operations_tmpfile
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile/inode_operations_tmpfile.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile || mkdir -p build/inode_operations_tmpfile

	file=build/inode_operations_tmpfile/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_license || mkdir -p build/inode_operations_tmpfile_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_license/inode_operations_tmpfile_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct file *file,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_license || mkdir -p build/inode_operations_tmpfile_license

	file=build/inode_operations_tmpfile_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_tmpfile_dentry_userns || mkdir -p build/inode_operations_tmpfile_dentry_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry_userns/inode_operations_tmpfile_dentry_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct dentry *dentry,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry_userns || mkdir -p build/inode_operations_tmpfile_dentry_userns

	file=build/inode_operations_tmpfile_dentry_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_dentry_userns_license || mkdir -p build/inode_operations_tmpfile_dentry_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry_userns_license/inode_operations_tmpfile_dentry_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int tmpfile(struct user_namespace *userns,
		    struct inode *inode, struct dentry *dentry,
		    umode_t mode) { return 0; }
		static struct inode_operations
		    iops __attribute__ ((unused)) = {
			.tmpfile = tmpfile,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry_userns_license || mkdir -p build/inode_operations_tmpfile_dentry_userns_license

	file=build/inode_operations_tmpfile_dentry_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry_userns_license/" >>build/Makefile
fi


fi



test -d build/inode_operations_tmpfile_dentry || mkdir -p build/inode_operations_tmpfile_dentry
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry/inode_operations_tmpfile_dentry.c

#include <linux/module.h>

			#include <linux/fs.h>
			int tmpfile(struct inode *inode, struct dentry *dentry,
			    umode_t mode) { return 0; }
			static struct inode_operations
			    iops __attribute__ ((unused)) = {
				.tmpfile = tmpfile,
			};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry || mkdir -p build/inode_operations_tmpfile_dentry

	file=build/inode_operations_tmpfile_dentry/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_tmpfile_dentry_license || mkdir -p build/inode_operations_tmpfile_dentry_license
cat confdefs.h - <<_ACEOF >build/inode_operations_tmpfile_dentry_license/inode_operations_tmpfile_dentry_license.c

#include <linux/module.h>

			#include <linux/fs.h>
			int tmpfile(struct inode *inode, struct dentry *dentry,
			    umode_t mode) { return 0; }
			static struct inode_operations
			    iops __attribute__ ((unused)) = {
				.tmpfile = tmpfile,
			};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_tmpfile_dentry_license || mkdir -p build/inode_operations_tmpfile_dentry_license

	file=build/inode_operations_tmpfile_dentry_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_tmpfile_dentry_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_tmpfile_dentry_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_tmpfile_dentry_license/" >>build/Makefile
fi


fi





test -d build/dentry_operations_d_automount || mkdir -p build/dentry_operations_d_automount
cat confdefs.h - <<_ACEOF >build/dentry_operations_d_automount/dentry_operations_d_automount.c

#include <linux/module.h>

		#include <linux/dcache.h>
		struct vfsmount *d_automount(struct path *p) { return NULL; }
		struct dentry_operations dops __attribute__ ((unused)) = {
			.d_automount = d_automount,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_d_automount || mkdir -p build/dentry_operations_d_automount

	file=build/dentry_operations_d_automount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_d_automount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_d_automount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_d_automount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_operations_d_automount_license || mkdir -p build/dentry_operations_d_automount_license
cat confdefs.h - <<_ACEOF >build/dentry_operations_d_automount_license/dentry_operations_d_automount_license.c

#include <linux/module.h>

		#include <linux/dcache.h>
		struct vfsmount *d_automount(struct path *p) { return NULL; }
		struct dentry_operations dops __attribute__ ((unused)) = {
			.d_automount = d_automount,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_d_automount_license || mkdir -p build/dentry_operations_d_automount_license

	file=build/dentry_operations_d_automount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_d_automount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_d_automount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_d_automount_license/" >>build/Makefile
fi


fi





test -d build/export_operations_encode_fh || mkdir -p build/export_operations_encode_fh
cat confdefs.h - <<_ACEOF >build/export_operations_encode_fh/export_operations_encode_fh.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int encode_fh(struct inode *inode, __u32 *fh, int *max_len,
		              struct inode *parent) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.encode_fh = encode_fh,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_encode_fh || mkdir -p build/export_operations_encode_fh

	file=build/export_operations_encode_fh/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_encode_fh

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_encode_fh.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_encode_fh/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/export_operations_encode_fh_license || mkdir -p build/export_operations_encode_fh_license
cat confdefs.h - <<_ACEOF >build/export_operations_encode_fh_license/export_operations_encode_fh_license.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int encode_fh(struct inode *inode, __u32 *fh, int *max_len,
		              struct inode *parent) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.encode_fh = encode_fh,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_encode_fh_license || mkdir -p build/export_operations_encode_fh_license

	file=build/export_operations_encode_fh_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_encode_fh_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_encode_fh_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_encode_fh_license/" >>build/Makefile
fi


fi





test -d build/export_operations_commit_metadata || mkdir -p build/export_operations_commit_metadata
cat confdefs.h - <<_ACEOF >build/export_operations_commit_metadata/export_operations_commit_metadata.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int commit_metadata(struct inode *inode) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.commit_metadata = commit_metadata,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_commit_metadata || mkdir -p build/export_operations_commit_metadata

	file=build/export_operations_commit_metadata/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_commit_metadata

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_commit_metadata.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_commit_metadata/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/export_operations_commit_metadata_license || mkdir -p build/export_operations_commit_metadata_license
cat confdefs.h - <<_ACEOF >build/export_operations_commit_metadata_license/export_operations_commit_metadata_license.c

#include <linux/module.h>

		#include <linux/exportfs.h>
		int commit_metadata(struct inode *inode) { return 0; }
		static struct export_operations eops __attribute__ ((unused))={
			.commit_metadata = commit_metadata,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/export_operations_commit_metadata_license || mkdir -p build/export_operations_commit_metadata_license

	file=build/export_operations_commit_metadata_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/export_operations_commit_metadata_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := export_operations_commit_metadata_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += export_operations_commit_metadata_license/" >>build/Makefile
fi


fi





test -d build/clear_inode || mkdir -p build/clear_inode
cat confdefs.h - <<_ACEOF >build/clear_inode/clear_inode.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		clear_inode(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/clear_inode || mkdir -p build/clear_inode

	file=build/clear_inode/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/clear_inode

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := clear_inode.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += clear_inode/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/clear_inode_license || mkdir -p build/clear_inode_license
cat confdefs.h - <<_ACEOF >build/clear_inode_license/clear_inode_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		clear_inode(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/clear_inode_license || mkdir -p build/clear_inode_license

	file=build/clear_inode_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/clear_inode_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := clear_inode_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += clear_inode_license/" >>build/Makefile
fi


fi





test -d build/setattr_prepare || mkdir -p build/setattr_prepare
cat confdefs.h - <<_ACEOF >build/setattr_prepare/setattr_prepare.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare || mkdir -p build/setattr_prepare

	file=build/setattr_prepare/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/setattr_prepare_license || mkdir -p build/setattr_prepare_license
cat confdefs.h - <<_ACEOF >build/setattr_prepare_license/setattr_prepare_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_license || mkdir -p build/setattr_prepare_license

	file=build/setattr_prepare_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_license/" >>build/Makefile
fi


fi




test -d build/setattr_prepare_userns || mkdir -p build/setattr_prepare_userns
cat confdefs.h - <<_ACEOF >build/setattr_prepare_userns/setattr_prepare_userns.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct user_namespace *userns = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(userns, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_userns || mkdir -p build/setattr_prepare_userns

	file=build/setattr_prepare_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/setattr_prepare_userns_license || mkdir -p build/setattr_prepare_userns_license
cat confdefs.h - <<_ACEOF >build/setattr_prepare_userns_license/setattr_prepare_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct user_namespace *userns = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(userns, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_userns_license || mkdir -p build/setattr_prepare_userns_license

	file=build/setattr_prepare_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_userns_license/" >>build/Makefile
fi


fi




test -d build/setattr_prepare_mnt_idmap || mkdir -p build/setattr_prepare_mnt_idmap
cat confdefs.h - <<_ACEOF >build/setattr_prepare_mnt_idmap/setattr_prepare_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct mnt_idmap *idmap = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(idmap, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_mnt_idmap || mkdir -p build/setattr_prepare_mnt_idmap

	file=build/setattr_prepare_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/setattr_prepare_mnt_idmap_license || mkdir -p build/setattr_prepare_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/setattr_prepare_mnt_idmap_license/setattr_prepare_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct dentry *dentry = NULL;
		struct iattr *attr = NULL;
		struct mnt_idmap *idmap = NULL;
		int error __attribute__ ((unused)) =
			setattr_prepare(idmap, dentry, attr);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/setattr_prepare_mnt_idmap_license || mkdir -p build/setattr_prepare_mnt_idmap_license

	file=build/setattr_prepare_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/setattr_prepare_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := setattr_prepare_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += setattr_prepare_mnt_idmap_license/" >>build/Makefile
fi


fi





test -d build/insert_inode_locked || mkdir -p build/insert_inode_locked
cat confdefs.h - <<_ACEOF >build/insert_inode_locked/insert_inode_locked.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		insert_inode_locked(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/insert_inode_locked || mkdir -p build/insert_inode_locked

	file=build/insert_inode_locked/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/insert_inode_locked

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := insert_inode_locked.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += insert_inode_locked/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/insert_inode_locked_license || mkdir -p build/insert_inode_locked_license
cat confdefs.h - <<_ACEOF >build/insert_inode_locked_license/insert_inode_locked_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		insert_inode_locked(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/insert_inode_locked_license || mkdir -p build/insert_inode_locked_license

	file=build/insert_inode_locked_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/insert_inode_locked_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := insert_inode_locked_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += insert_inode_locked_license/" >>build/Makefile
fi


fi






test -d build/d_make_root || mkdir -p build/d_make_root
cat confdefs.h - <<_ACEOF >build/d_make_root/d_make_root.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_make_root(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_make_root || mkdir -p build/d_make_root

	file=build/d_make_root/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_make_root

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_make_root.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_make_root/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_make_root_license || mkdir -p build/d_make_root_license
cat confdefs.h - <<_ACEOF >build/d_make_root_license/d_make_root_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_make_root(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_make_root_license || mkdir -p build/d_make_root_license

	file=build/d_make_root_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_make_root_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_make_root_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_make_root_license/" >>build/Makefile
fi


fi





test -d build/d_obtain_alias || mkdir -p build/d_obtain_alias
cat confdefs.h - <<_ACEOF >build/d_obtain_alias/d_obtain_alias.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_obtain_alias(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_obtain_alias || mkdir -p build/d_obtain_alias

	file=build/d_obtain_alias/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_obtain_alias

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_obtain_alias.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_obtain_alias/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_obtain_alias_license || mkdir -p build/d_obtain_alias_license
cat confdefs.h - <<_ACEOF >build/d_obtain_alias_license/d_obtain_alias_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_obtain_alias(NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_obtain_alias_license || mkdir -p build/d_obtain_alias_license

	file=build/d_obtain_alias_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_obtain_alias_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_obtain_alias_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_obtain_alias_license/" >>build/Makefile
fi


fi





test -d build/d_prune_aliases || mkdir -p build/d_prune_aliases
cat confdefs.h - <<_ACEOF >build/d_prune_aliases/d_prune_aliases.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		struct inode *ip = NULL;
		d_prune_aliases(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_prune_aliases || mkdir -p build/d_prune_aliases

	file=build/d_prune_aliases/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_prune_aliases

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_prune_aliases.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_prune_aliases/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_prune_aliases_license || mkdir -p build/d_prune_aliases_license
cat confdefs.h - <<_ACEOF >build/d_prune_aliases_license/d_prune_aliases_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		struct inode *ip = NULL;
		d_prune_aliases(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_prune_aliases_license || mkdir -p build/d_prune_aliases_license

	file=build/d_prune_aliases_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_prune_aliases_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_prune_aliases_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_prune_aliases_license/" >>build/Makefile
fi


fi





test -d build/d_set_d_op || mkdir -p build/d_set_d_op
cat confdefs.h - <<_ACEOF >build/d_set_d_op/d_set_d_op.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_set_d_op(NULL, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_set_d_op || mkdir -p build/d_set_d_op

	file=build/d_set_d_op/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_set_d_op

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_set_d_op.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_set_d_op/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/d_set_d_op_license || mkdir -p build/d_set_d_op_license
cat confdefs.h - <<_ACEOF >build/d_set_d_op_license/d_set_d_op_license.c

#include <linux/module.h>

		#include <linux/dcache.h>


int
main (void)
{

		d_set_d_op(NULL, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/d_set_d_op_license || mkdir -p build/d_set_d_op_license

	file=build/d_set_d_op_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/d_set_d_op_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := d_set_d_op_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += d_set_d_op_license/" >>build/Makefile
fi


fi





test -d build/dentry_operations_revalidate || mkdir -p build/dentry_operations_revalidate
cat confdefs.h - <<_ACEOF >build/dentry_operations_revalidate/dentry_operations_revalidate.c

#include <linux/module.h>

		#include <linux/dcache.h>
		#include <linux/sched.h>

		int revalidate (struct dentry *dentry,
		    struct nameidata *nidata) { return 0; }

		static const struct dentry_operations
		    dops __attribute__ ((unused)) = {
			.d_revalidate	= revalidate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_revalidate || mkdir -p build/dentry_operations_revalidate

	file=build/dentry_operations_revalidate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_revalidate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_revalidate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_revalidate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_operations_revalidate_license || mkdir -p build/dentry_operations_revalidate_license
cat confdefs.h - <<_ACEOF >build/dentry_operations_revalidate_license/dentry_operations_revalidate_license.c

#include <linux/module.h>

		#include <linux/dcache.h>
		#include <linux/sched.h>

		int revalidate (struct dentry *dentry,
		    struct nameidata *nidata) { return 0; }

		static const struct dentry_operations
		    dops __attribute__ ((unused)) = {
			.d_revalidate	= revalidate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_revalidate_license || mkdir -p build/dentry_operations_revalidate_license

	file=build/dentry_operations_revalidate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_revalidate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_revalidate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_revalidate_license/" >>build/Makefile
fi


fi





test -d build/dentry_operations_const || mkdir -p build/dentry_operations_const
cat confdefs.h - <<_ACEOF >build/dentry_operations_const/dentry_operations_const.c

#include <linux/module.h>

		#include <linux/dcache.h>

		const struct dentry_operations test_d_op = {
			.d_revalidate = NULL,
		};


int
main (void)
{

		struct dentry d __attribute__ ((unused));
		d.d_op = &test_d_op;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_const || mkdir -p build/dentry_operations_const

	file=build/dentry_operations_const/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_const

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_const.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_const/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_operations_const_license || mkdir -p build/dentry_operations_const_license
cat confdefs.h - <<_ACEOF >build/dentry_operations_const_license/dentry_operations_const_license.c

#include <linux/module.h>

		#include <linux/dcache.h>

		const struct dentry_operations test_d_op = {
			.d_revalidate = NULL,
		};


int
main (void)
{

		struct dentry d __attribute__ ((unused));
		d.d_op = &test_d_op;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_operations_const_license || mkdir -p build/dentry_operations_const_license

	file=build/dentry_operations_const_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_operations_const_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_operations_const_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_operations_const_license/" >>build/Makefile
fi


fi





test -d build/super_block_s_d_op || mkdir -p build/super_block_s_d_op
cat confdefs.h - <<_ACEOF >build/super_block_s_d_op/super_block_s_d_op.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct super_block sb __attribute__ ((unused));
		sb.s_d_op = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_d_op || mkdir -p build/super_block_s_d_op

	file=build/super_block_s_d_op/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_d_op

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_d_op.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_d_op/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_block_s_d_op_license || mkdir -p build/super_block_s_d_op_license
cat confdefs.h - <<_ACEOF >build/super_block_s_d_op_license/super_block_s_d_op_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct super_block sb __attribute__ ((unused));
		sb.s_d_op = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_block_s_d_op_license || mkdir -p build/super_block_s_d_op_license

	file=build/super_block_s_d_op_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_block_s_d_op_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_block_s_d_op_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_block_s_d_op_license/" >>build/Makefile
fi


fi






test -d build/dentry_alias_d_u || mkdir -p build/dentry_alias_d_u
cat confdefs.h - <<_ACEOF >build/dentry_alias_d_u/dentry_alias_d_u.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/dcache.h>
		#include <linux/list.h>


int
main (void)
{

		struct inode *inode __attribute__ ((unused)) = NULL;
		struct dentry *dentry __attribute__ ((unused)) = NULL;
		hlist_for_each_entry(dentry, &inode->i_dentry,
		    d_u.d_alias) {
			d_drop(dentry);
		}

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_alias_d_u || mkdir -p build/dentry_alias_d_u

	file=build/dentry_alias_d_u/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_alias_d_u

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_alias_d_u.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_alias_d_u/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dentry_alias_d_u_license || mkdir -p build/dentry_alias_d_u_license
cat confdefs.h - <<_ACEOF >build/dentry_alias_d_u_license/dentry_alias_d_u_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/dcache.h>
		#include <linux/list.h>


int
main (void)
{

		struct inode *inode __attribute__ ((unused)) = NULL;
		struct dentry *dentry __attribute__ ((unused)) = NULL;
		hlist_for_each_entry(dentry, &inode->i_dentry,
		    d_u.d_alias) {
			d_drop(dentry);
		}

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dentry_alias_d_u_license || mkdir -p build/dentry_alias_d_u_license

	file=build/dentry_alias_d_u_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dentry_alias_d_u_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dentry_alias_d_u_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dentry_alias_d_u_license/" >>build/Makefile
fi


fi





test -d build/truncate_setsize || mkdir -p build/truncate_setsize
cat confdefs.h - <<_ACEOF >build/truncate_setsize/truncate_setsize.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		truncate_setsize(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/truncate_setsize || mkdir -p build/truncate_setsize

	file=build/truncate_setsize/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/truncate_setsize

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := truncate_setsize.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += truncate_setsize/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/truncate_setsize_license || mkdir -p build/truncate_setsize_license
cat confdefs.h - <<_ACEOF >build/truncate_setsize_license/truncate_setsize_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		truncate_setsize(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/truncate_setsize_license || mkdir -p build/truncate_setsize_license

	file=build/truncate_setsize_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/truncate_setsize_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := truncate_setsize_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += truncate_setsize_license/" >>build/Makefile
fi


fi






test -d build/security_inode_init_security || mkdir -p build/security_inode_init_security
cat confdefs.h - <<_ACEOF >build/security_inode_init_security/security_inode_init_security.c

#include <linux/module.h>

		#include <linux/security.h>


int
main (void)
{

		struct inode *ip __attribute__ ((unused)) = NULL;
		struct inode *dip __attribute__ ((unused)) = NULL;
		const struct qstr *str __attribute__ ((unused)) = NULL;
		initxattrs func __attribute__ ((unused)) = NULL;

		security_inode_init_security(ip, dip, str, func, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/security_inode_init_security || mkdir -p build/security_inode_init_security

	file=build/security_inode_init_security/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/security_inode_init_security

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := security_inode_init_security.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += security_inode_init_security/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/security_inode_init_security_license || mkdir -p build/security_inode_init_security_license
cat confdefs.h - <<_ACEOF >build/security_inode_init_security_license/security_inode_init_security_license.c

#include <linux/module.h>

		#include <linux/security.h>


int
main (void)
{

		struct inode *ip __attribute__ ((unused)) = NULL;
		struct inode *dip __attribute__ ((unused)) = NULL;
		const struct qstr *str __attribute__ ((unused)) = NULL;
		initxattrs func __attribute__ ((unused)) = NULL;

		security_inode_init_security(ip, dip, str, func, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/security_inode_init_security_license || mkdir -p build/security_inode_init_security_license

	file=build/security_inode_init_security_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/security_inode_init_security_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := security_inode_init_security_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += security_inode_init_security_license/" >>build/Makefile
fi


fi






test -d build/file_system_type_mount || mkdir -p build/file_system_type_mount
cat confdefs.h - <<_ACEOF >build/file_system_type_mount/file_system_type_mount.c

#include <linux/module.h>

                #include <linux/fs.h>

                static struct dentry *
                mount(struct file_system_type *fs_type, int flags,
                    const char *osname, void *data) {
                        struct dentry *d = NULL;
                        return (d);
                }

                static struct file_system_type fst __attribute__ ((unused)) = {
                        .mount = mount,
                };


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_system_type_mount || mkdir -p build/file_system_type_mount

	file=build/file_system_type_mount/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_system_type_mount

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_system_type_mount.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_system_type_mount/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_system_type_mount_license || mkdir -p build/file_system_type_mount_license
cat confdefs.h - <<_ACEOF >build/file_system_type_mount_license/file_system_type_mount_license.c

#include <linux/module.h>

                #include <linux/fs.h>

                static struct dentry *
                mount(struct file_system_type *fs_type, int flags,
                    const char *osname, void *data) {
                        struct dentry *d = NULL;
                        return (d);
                }

                static struct file_system_type fst __attribute__ ((unused)) = {
                        .mount = mount,
                };


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_system_type_mount_license || mkdir -p build/file_system_type_mount_license

	file=build/file_system_type_mount_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_system_type_mount_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_system_type_mount_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_system_type_mount_license/" >>build/Makefile
fi


fi





test -d build/super_setup_bdi_name || mkdir -p build/super_setup_bdi_name
cat confdefs.h - <<_ACEOF >build/super_setup_bdi_name/super_setup_bdi_name.c

#include <linux/module.h>

		#include <linux/fs.h>
		struct super_block sb;


int
main (void)
{

		char *name = "bdi";
		atomic_long_t zfs_bdi_seq;
		int error __attribute__((unused));
		atomic_long_set(&zfs_bdi_seq, 0);
		error =
		    super_setup_bdi_name(&sb, "%.28s-%ld", name,
		    atomic_long_inc_return(&zfs_bdi_seq));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_setup_bdi_name || mkdir -p build/super_setup_bdi_name

	file=build/super_setup_bdi_name/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_setup_bdi_name

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_setup_bdi_name.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_setup_bdi_name/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/super_setup_bdi_name_license || mkdir -p build/super_setup_bdi_name_license
cat confdefs.h - <<_ACEOF >build/super_setup_bdi_name_license/super_setup_bdi_name_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		struct super_block sb;


int
main (void)
{

		char *name = "bdi";
		atomic_long_t zfs_bdi_seq;
		int error __attribute__((unused));
		atomic_long_set(&zfs_bdi_seq, 0);
		error =
		    super_setup_bdi_name(&sb, "%.28s-%ld", name,
		    atomic_long_inc_return(&zfs_bdi_seq));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/super_setup_bdi_name_license || mkdir -p build/super_setup_bdi_name_license

	file=build/super_setup_bdi_name_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/super_setup_bdi_name_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := super_setup_bdi_name_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += super_setup_bdi_name_license/" >>build/Makefile
fi


fi




test -d build/bdi_setup_and_register || mkdir -p build/bdi_setup_and_register
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register/bdi_setup_and_register.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register || mkdir -p build/bdi_setup_and_register

	file=build/bdi_setup_and_register/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdi_setup_and_register_license || mkdir -p build/bdi_setup_and_register_license
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register_license/bdi_setup_and_register_license.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register_license || mkdir -p build/bdi_setup_and_register_license

	file=build/bdi_setup_and_register_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register_license/" >>build/Makefile
fi


fi




test -d build/bdi_setup_and_register_3args || mkdir -p build/bdi_setup_and_register_3args
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		unsigned int cap = BDI_CAP_MAP_COPY;
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register_3args || mkdir -p build/bdi_setup_and_register_3args

	file=build/bdi_setup_and_register_3args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register_3args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register_3args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register_3args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdi_setup_and_register_3args_license || mkdir -p build/bdi_setup_and_register_3args_license
cat confdefs.h - <<_ACEOF >build/bdi_setup_and_register_3args_license/bdi_setup_and_register_3args_license.c

#include <linux/module.h>

		#include <linux/backing-dev.h>
		struct backing_dev_info bdi;


int
main (void)
{

		char *name = "bdi";
		unsigned int cap = BDI_CAP_MAP_COPY;
		int error __attribute__((unused)) =
		    bdi_setup_and_register(&bdi, name, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdi_setup_and_register_3args_license || mkdir -p build/bdi_setup_and_register_3args_license

	file=build/bdi_setup_and_register_3args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdi_setup_and_register_3args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdi_setup_and_register_3args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdi_setup_and_register_3args_license/" >>build/Makefile
fi


fi





test -d build/set_nlink || mkdir -p build/set_nlink
cat confdefs.h - <<_ACEOF >build/set_nlink/set_nlink.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode node;
		unsigned int link = 0;
		(void) set_nlink(&node, link);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_nlink || mkdir -p build/set_nlink

	file=build/set_nlink/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_nlink

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_nlink.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_nlink/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/set_nlink_license || mkdir -p build/set_nlink_license
cat confdefs.h - <<_ACEOF >build/set_nlink_license/set_nlink_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode node;
		unsigned int link = 0;
		(void) set_nlink(&node, link);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_nlink_license || mkdir -p build/set_nlink_license

	file=build/set_nlink_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_nlink_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_nlink_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_nlink_license/" >>build/Makefile
fi


fi





test -d build/sget_5args || mkdir -p build/sget_5args
cat confdefs.h - <<_ACEOF >build/sget_5args/sget_5args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file_system_type *type = NULL;
		int (*test)(struct super_block *,void *) = NULL;
		int (*set)(struct super_block *,void *) = NULL;
		int flags = 0;
		void *data = NULL;
		(void) sget(type, test, set, flags, data);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sget_5args || mkdir -p build/sget_5args

	file=build/sget_5args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sget_5args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sget_5args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sget_5args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sget_5args_license || mkdir -p build/sget_5args_license
cat confdefs.h - <<_ACEOF >build/sget_5args_license/sget_5args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file_system_type *type = NULL;
		int (*test)(struct super_block *,void *) = NULL;
		int (*set)(struct super_block *,void *) = NULL;
		int flags = 0;
		void *data = NULL;
		(void) sget(type, test, set, flags, data);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sget_5args_license || mkdir -p build/sget_5args_license

	file=build/sget_5args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sget_5args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sget_5args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sget_5args_license/" >>build/Makefile
fi


fi





test -d build/lseek_execute || mkdir -p build/lseek_execute
cat confdefs.h - <<_ACEOF >build/lseek_execute/lseek_execute.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		struct inode *ip __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t maxsize __attribute__ ((unused)) = 0;

		lseek_execute(fp, ip, offset, maxsize);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/lseek_execute || mkdir -p build/lseek_execute

	file=build/lseek_execute/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lseek_execute

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lseek_execute.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lseek_execute/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/lseek_execute_license || mkdir -p build/lseek_execute_license
cat confdefs.h - <<_ACEOF >build/lseek_execute_license/lseek_execute_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *fp __attribute__ ((unused)) = NULL;
		struct inode *ip __attribute__ ((unused)) = NULL;
		loff_t offset __attribute__ ((unused)) = 0;
		loff_t maxsize __attribute__ ((unused)) = 0;

		lseek_execute(fp, ip, offset, maxsize);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/lseek_execute_license || mkdir -p build/lseek_execute_license

	file=build/lseek_execute_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/lseek_execute_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := lseek_execute_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += lseek_execute_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_filemap_dirty_folio || mkdir -p build/vfs_has_filemap_dirty_folio
cat confdefs.h - <<_ACEOF >build/vfs_has_filemap_dirty_folio/vfs_has_filemap_dirty_folio.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/writeback.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.dirty_folio	= filemap_dirty_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_filemap_dirty_folio || mkdir -p build/vfs_has_filemap_dirty_folio

	file=build/vfs_has_filemap_dirty_folio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_filemap_dirty_folio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_filemap_dirty_folio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_filemap_dirty_folio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_filemap_dirty_folio_license || mkdir -p build/vfs_has_filemap_dirty_folio_license
cat confdefs.h - <<_ACEOF >build/vfs_has_filemap_dirty_folio_license/vfs_has_filemap_dirty_folio_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/writeback.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.dirty_folio	= filemap_dirty_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_filemap_dirty_folio_license || mkdir -p build/vfs_has_filemap_dirty_folio_license

	file=build/vfs_has_filemap_dirty_folio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_filemap_dirty_folio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_filemap_dirty_folio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_filemap_dirty_folio_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_read_folio || mkdir -p build/vfs_has_read_folio
cat confdefs.h - <<_ACEOF >build/vfs_has_read_folio/vfs_has_read_folio.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int
		test_read_folio(struct file *file, struct folio *folio) {
			(void) file; (void) folio;
			return (0);
		}

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.read_folio	= test_read_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_read_folio || mkdir -p build/vfs_has_read_folio

	file=build/vfs_has_read_folio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_read_folio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_read_folio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_read_folio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_read_folio_license || mkdir -p build/vfs_has_read_folio_license
cat confdefs.h - <<_ACEOF >build/vfs_has_read_folio_license/vfs_has_read_folio_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int
		test_read_folio(struct file *file, struct folio *folio) {
			(void) file; (void) folio;
			return (0);
		}

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.read_folio	= test_read_folio,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_read_folio_license || mkdir -p build/vfs_has_read_folio_license

	file=build/vfs_has_read_folio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_read_folio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_read_folio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_read_folio_license/" >>build/Makefile
fi


fi






test -d build/vfs_getattr_4args || mkdir -p build/vfs_getattr_4args
cat confdefs.h - <<_ACEOF >build/vfs_getattr_4args/vfs_getattr_4args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((const struct path *)NULL,
			(struct kstat *)NULL,
			(u32)0,
			(unsigned int)0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_4args || mkdir -p build/vfs_getattr_4args

	file=build/vfs_getattr_4args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_4args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_4args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_4args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_getattr_4args_license || mkdir -p build/vfs_getattr_4args_license
cat confdefs.h - <<_ACEOF >build/vfs_getattr_4args_license/vfs_getattr_4args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((const struct path *)NULL,
			(struct kstat *)NULL,
			(u32)0,
			(unsigned int)0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_4args_license || mkdir -p build/vfs_getattr_4args_license

	file=build/vfs_getattr_4args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_4args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_4args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_4args_license/" >>build/Makefile
fi


fi





test -d build/vfs_getattr_2args || mkdir -p build/vfs_getattr_2args
cat confdefs.h - <<_ACEOF >build/vfs_getattr_2args/vfs_getattr_2args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct path *) NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_2args || mkdir -p build/vfs_getattr_2args

	file=build/vfs_getattr_2args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_2args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_2args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_2args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_getattr_2args_license || mkdir -p build/vfs_getattr_2args_license
cat confdefs.h - <<_ACEOF >build/vfs_getattr_2args_license/vfs_getattr_2args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct path *) NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_2args_license || mkdir -p build/vfs_getattr_2args_license

	file=build/vfs_getattr_2args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_2args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_2args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_2args_license/" >>build/Makefile
fi


fi





test -d build/vfs_getattr_3args || mkdir -p build/vfs_getattr_3args
cat confdefs.h - <<_ACEOF >build/vfs_getattr_3args/vfs_getattr_3args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct vfsmount *)NULL,
			(struct dentry *)NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_3args || mkdir -p build/vfs_getattr_3args

	file=build/vfs_getattr_3args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_3args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_3args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_3args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_getattr_3args_license || mkdir -p build/vfs_getattr_3args_license
cat confdefs.h - <<_ACEOF >build/vfs_getattr_3args_license/vfs_getattr_3args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_getattr((struct vfsmount *)NULL,
			(struct dentry *)NULL,
			(struct kstat *)NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_getattr_3args_license || mkdir -p build/vfs_getattr_3args_license

	file=build/vfs_getattr_3args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_getattr_3args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_getattr_3args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_getattr_3args_license/" >>build/Makefile
fi


fi






test -d build/vfs_fsync_2args || mkdir -p build/vfs_fsync_2args
cat confdefs.h - <<_ACEOF >build/vfs_fsync_2args/vfs_fsync_2args.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_fsync(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_fsync_2args || mkdir -p build/vfs_fsync_2args

	file=build/vfs_fsync_2args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_fsync_2args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_fsync_2args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_fsync_2args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_fsync_2args_license || mkdir -p build/vfs_fsync_2args_license
cat confdefs.h - <<_ACEOF >build/vfs_fsync_2args_license/vfs_fsync_2args_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		vfs_fsync(NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_fsync_2args_license || mkdir -p build/vfs_fsync_2args_license

	file=build/vfs_fsync_2args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_fsync_2args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_fsync_2args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_fsync_2args_license/" >>build/Makefile
fi


fi





test -d build/file_operations_iterate_shared || mkdir -p build/file_operations_iterate_shared
cat confdefs.h - <<_ACEOF >build/file_operations_iterate_shared/file_operations_iterate_shared.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp, struct dir_context * context)
		    { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate_shared	 = iterate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate_shared || mkdir -p build/file_operations_iterate_shared

	file=build/file_operations_iterate_shared/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate_shared

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate_shared.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate_shared/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_iterate_shared_license || mkdir -p build/file_operations_iterate_shared_license
cat confdefs.h - <<_ACEOF >build/file_operations_iterate_shared_license/file_operations_iterate_shared_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp, struct dir_context * context)
		    { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate_shared	 = iterate,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate_shared_license || mkdir -p build/file_operations_iterate_shared_license

	file=build/file_operations_iterate_shared_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate_shared_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate_shared_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate_shared_license/" >>build/Makefile
fi


fi




test -d build/file_operations_iterate || mkdir -p build/file_operations_iterate
cat confdefs.h - <<_ACEOF >build/file_operations_iterate/file_operations_iterate.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp,
		    struct dir_context *context) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate	 = iterate,
		};

		#if defined(FMODE_KABI_ITERATE)
		#error "RHEL 7.5, FMODE_KABI_ITERATE interface"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate || mkdir -p build/file_operations_iterate

	file=build/file_operations_iterate/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_iterate_license || mkdir -p build/file_operations_iterate_license
cat confdefs.h - <<_ACEOF >build/file_operations_iterate_license/file_operations_iterate_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int iterate(struct file *filp,
		    struct dir_context *context) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.iterate	 = iterate,
		};

		#if defined(FMODE_KABI_ITERATE)
		#error "RHEL 7.5, FMODE_KABI_ITERATE interface"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_iterate_license || mkdir -p build/file_operations_iterate_license

	file=build/file_operations_iterate_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_iterate_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_iterate_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_iterate_license/" >>build/Makefile
fi


fi




test -d build/file_operations_readdir || mkdir -p build/file_operations_readdir
cat confdefs.h - <<_ACEOF >build/file_operations_readdir/file_operations_readdir.c

#include <linux/module.h>

		#include <linux/fs.h>
		int readdir(struct file *filp, void *entry,
		    filldir_t func) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.readdir = readdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_readdir || mkdir -p build/file_operations_readdir

	file=build/file_operations_readdir/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_readdir

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_readdir.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_readdir/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_readdir_license || mkdir -p build/file_operations_readdir_license
cat confdefs.h - <<_ACEOF >build/file_operations_readdir_license/file_operations_readdir_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int readdir(struct file *filp, void *entry,
		    filldir_t func) { return 0; }

		static const struct file_operations fops
		    __attribute__ ((unused)) = {
			.readdir = readdir,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_readdir_license || mkdir -p build/file_operations_readdir_license

	file=build/file_operations_readdir_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_readdir_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_readdir_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_readdir_license/" >>build/Makefile
fi


fi





test -d build/direct_io_iter || mkdir -p build/direct_io_iter
cat confdefs.h - <<_ACEOF >build/direct_io_iter/direct_io_iter.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter || mkdir -p build/direct_io_iter

	file=build/direct_io_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iter_license || mkdir -p build/direct_io_iter_license
cat confdefs.h - <<_ACEOF >build/direct_io_iter_license/direct_io_iter_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_license || mkdir -p build/direct_io_iter_license

	file=build/direct_io_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_license/" >>build/Makefile
fi


fi




test -d build/direct_io_iter_offset || mkdir -p build/direct_io_iter_offset
cat confdefs.h - <<_ACEOF >build/direct_io_iter_offset/direct_io_iter_offset.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_offset || mkdir -p build/direct_io_iter_offset

	file=build/direct_io_iter_offset/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_offset

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_offset.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_offset/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iter_offset_license || mkdir -p build/direct_io_iter_offset_license
cat confdefs.h - <<_ACEOF >build/direct_io_iter_offset_license/direct_io_iter_offset_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_offset_license || mkdir -p build/direct_io_iter_offset_license

	file=build/direct_io_iter_offset_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_offset_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_offset_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_offset_license/" >>build/Makefile
fi


fi




test -d build/direct_io_iter_rw_offset || mkdir -p build/direct_io_iter_rw_offset
cat confdefs.h - <<_ACEOF >build/direct_io_iter_rw_offset/direct_io_iter_rw_offset.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_rw_offset || mkdir -p build/direct_io_iter_rw_offset

	file=build/direct_io_iter_rw_offset/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_rw_offset

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_rw_offset.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_rw_offset/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iter_rw_offset_license || mkdir -p build/direct_io_iter_rw_offset_license
cat confdefs.h - <<_ACEOF >build/direct_io_iter_rw_offset_license/direct_io_iter_rw_offset_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    struct iov_iter *iter, loff_t offset) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iter_rw_offset_license || mkdir -p build/direct_io_iter_rw_offset_license

	file=build/direct_io_iter_rw_offset_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iter_rw_offset_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iter_rw_offset_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iter_rw_offset_license/" >>build/Makefile
fi


fi




test -d build/direct_io_iovec || mkdir -p build/direct_io_iovec
cat confdefs.h - <<_ACEOF >build/direct_io_iovec/direct_io_iovec.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    const struct iovec *iov, loff_t offset,
		    unsigned long nr_segs) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iovec || mkdir -p build/direct_io_iovec

	file=build/direct_io_iovec/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iovec

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iovec.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iovec/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/direct_io_iovec_license || mkdir -p build/direct_io_iovec_license
cat confdefs.h - <<_ACEOF >build/direct_io_iovec_license/direct_io_iovec_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_direct_IO(int rw, struct kiocb *kiocb,
		    const struct iovec *iov, loff_t offset,
		    unsigned long nr_segs) { return 0; }

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
		    .direct_IO = test_direct_IO,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/direct_io_iovec_license || mkdir -p build/direct_io_iovec_license

	file=build/direct_io_iovec_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/direct_io_iovec_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := direct_io_iovec_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += direct_io_iovec_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_readpages || mkdir -p build/vfs_has_readpages
cat confdefs.h - <<_ACEOF >build/vfs_has_readpages/vfs_has_readpages.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.readpages = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_readpages || mkdir -p build/vfs_has_readpages

	file=build/vfs_has_readpages/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_readpages

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_readpages.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_readpages/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_readpages_license || mkdir -p build/vfs_has_readpages_license
cat confdefs.h - <<_ACEOF >build/vfs_has_readpages_license/vfs_has_readpages_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.readpages = NULL,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_readpages_license || mkdir -p build/vfs_has_readpages_license

	file=build/vfs_has_readpages_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_readpages_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_readpages_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_readpages_license/" >>build/Makefile
fi


fi





test -d build/vfs_has_set_page_dirty_nobuffers || mkdir -p build/vfs_has_set_page_dirty_nobuffers
cat confdefs.h - <<_ACEOF >build/vfs_has_set_page_dirty_nobuffers/vfs_has_set_page_dirty_nobuffers.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.set_page_dirty = __set_page_dirty_nobuffers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_set_page_dirty_nobuffers || mkdir -p build/vfs_has_set_page_dirty_nobuffers

	file=build/vfs_has_set_page_dirty_nobuffers/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_set_page_dirty_nobuffers

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_set_page_dirty_nobuffers.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_set_page_dirty_nobuffers/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_has_set_page_dirty_nobuffers_license || mkdir -p build/vfs_has_set_page_dirty_nobuffers_license
cat confdefs.h - <<_ACEOF >build/vfs_has_set_page_dirty_nobuffers_license/vfs_has_set_page_dirty_nobuffers_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>
		#include <linux/fs.h>

		static const struct address_space_operations
		    aops __attribute__ ((unused)) = {
			.set_page_dirty = __set_page_dirty_nobuffers,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_has_set_page_dirty_nobuffers_license || mkdir -p build/vfs_has_set_page_dirty_nobuffers_license

	file=build/vfs_has_set_page_dirty_nobuffers_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_has_set_page_dirty_nobuffers_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_has_set_page_dirty_nobuffers_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_has_set_page_dirty_nobuffers_license/" >>build/Makefile
fi


fi





test -d build/file_operations_rw || mkdir -p build/file_operations_rw
cat confdefs.h - <<_ACEOF >build/file_operations_rw/file_operations_rw.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_read(struct kiocb *kiocb, struct iov_iter *to)
		    { return 0; }
		ssize_t test_write(struct kiocb *kiocb, struct iov_iter *from)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
		    .read_iter = test_read,
		    .write_iter = test_write,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_rw || mkdir -p build/file_operations_rw

	file=build/file_operations_rw/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_rw

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_rw.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_rw/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/file_operations_rw_license || mkdir -p build/file_operations_rw_license
cat confdefs.h - <<_ACEOF >build/file_operations_rw_license/file_operations_rw_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		ssize_t test_read(struct kiocb *kiocb, struct iov_iter *to)
		    { return 0; }
		ssize_t test_write(struct kiocb *kiocb, struct iov_iter *from)
		    { return 0; }

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
		    .read_iter = test_read,
		    .write_iter = test_write,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/file_operations_rw_license || mkdir -p build/file_operations_rw_license

	file=build/file_operations_rw_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/file_operations_rw_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := file_operations_rw_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += file_operations_rw_license/" >>build/Makefile
fi


fi




test -d build/new_sync_rw || mkdir -p build/new_sync_rw
cat confdefs.h - <<_ACEOF >build/new_sync_rw/new_sync_rw.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

	        ssize_t ret __attribute__ ((unused));
		struct file *filp = NULL;
		char __user *rbuf = NULL;
		const char __user *wbuf = NULL;
		size_t len = 0;
		loff_t ppos;

		ret = new_sync_read(filp, rbuf, len, &ppos);
		ret = new_sync_write(filp, wbuf, len, &ppos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/new_sync_rw || mkdir -p build/new_sync_rw

	file=build/new_sync_rw/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/new_sync_rw

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := new_sync_rw.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += new_sync_rw/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/new_sync_rw_license || mkdir -p build/new_sync_rw_license
cat confdefs.h - <<_ACEOF >build/new_sync_rw_license/new_sync_rw_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

	        ssize_t ret __attribute__ ((unused));
		struct file *filp = NULL;
		char __user *rbuf = NULL;
		const char __user *wbuf = NULL;
		size_t len = 0;
		loff_t ppos;

		ret = new_sync_read(filp, rbuf, len, &ppos);
		ret = new_sync_write(filp, wbuf, len, &ppos);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/new_sync_rw_license || mkdir -p build/new_sync_rw_license

	file=build/new_sync_rw_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/new_sync_rw_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := new_sync_rw_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += new_sync_rw_license/" >>build/Makefile
fi


fi





test -d build/generic_write_checks || mkdir -p build/generic_write_checks
cat confdefs.h - <<_ACEOF >build/generic_write_checks/generic_write_checks.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct kiocb *iocb = NULL;
		struct iov_iter *iov = NULL;
		generic_write_checks(iocb, iov);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_write_checks || mkdir -p build/generic_write_checks

	file=build/generic_write_checks/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_write_checks

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_write_checks.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_write_checks/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_write_checks_license || mkdir -p build/generic_write_checks_license
cat confdefs.h - <<_ACEOF >build/generic_write_checks_license/generic_write_checks_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct kiocb *iocb = NULL;
		struct iov_iter *iov = NULL;
		generic_write_checks(iocb, iov);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_write_checks_license || mkdir -p build/generic_write_checks_license

	file=build/generic_write_checks_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_write_checks_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_write_checks_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_write_checks_license/" >>build/Makefile
fi


fi





test -d build/iov_iter_types || mkdir -p build/iov_iter_types
cat confdefs.h - <<_ACEOF >build/iov_iter_types/iov_iter_types.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		int type __attribute__ ((unused)) = ITER_KVEC;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_types || mkdir -p build/iov_iter_types

	file=build/iov_iter_types/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_types

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_types.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_types/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_types_license || mkdir -p build/iov_iter_types_license
cat confdefs.h - <<_ACEOF >build/iov_iter_types_license/iov_iter_types_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		int type __attribute__ ((unused)) = ITER_KVEC;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_types_license || mkdir -p build/iov_iter_types_license

	file=build/iov_iter_types_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_types_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_types_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_types_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_advance || mkdir -p build/iov_iter_advance
cat confdefs.h - <<_ACEOF >build/iov_iter_advance/iov_iter_advance.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t advance = 512;

		iov_iter_advance(&iter, advance);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_advance || mkdir -p build/iov_iter_advance

	file=build/iov_iter_advance/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_advance

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_advance.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_advance/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_advance_license || mkdir -p build/iov_iter_advance_license
cat confdefs.h - <<_ACEOF >build/iov_iter_advance_license/iov_iter_advance_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t advance = 512;

		iov_iter_advance(&iter, advance);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_advance_license || mkdir -p build/iov_iter_advance_license

	file=build/iov_iter_advance_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_advance_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_advance_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_advance_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_revert || mkdir -p build/iov_iter_revert
cat confdefs.h - <<_ACEOF >build/iov_iter_revert/iov_iter_revert.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t revert = 512;

		iov_iter_revert(&iter, revert);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_revert || mkdir -p build/iov_iter_revert

	file=build/iov_iter_revert/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_revert

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_revert.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_revert/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_revert_license || mkdir -p build/iov_iter_revert_license
cat confdefs.h - <<_ACEOF >build/iov_iter_revert_license/iov_iter_revert_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t revert = 512;

		iov_iter_revert(&iter, revert);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_revert_license || mkdir -p build/iov_iter_revert_license

	file=build/iov_iter_revert_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_revert_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_revert_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_revert_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_fault_in_readable || mkdir -p build/iov_iter_fault_in_readable
cat confdefs.h - <<_ACEOF >build/iov_iter_fault_in_readable/iov_iter_fault_in_readable.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = iov_iter_fault_in_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_fault_in_readable || mkdir -p build/iov_iter_fault_in_readable

	file=build/iov_iter_fault_in_readable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_fault_in_readable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_fault_in_readable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_fault_in_readable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_fault_in_readable_license || mkdir -p build/iov_iter_fault_in_readable_license
cat confdefs.h - <<_ACEOF >build/iov_iter_fault_in_readable_license/iov_iter_fault_in_readable_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = iov_iter_fault_in_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_fault_in_readable_license || mkdir -p build/iov_iter_fault_in_readable_license

	file=build/iov_iter_fault_in_readable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_fault_in_readable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_fault_in_readable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_fault_in_readable_license/" >>build/Makefile
fi


fi




test -d build/fault_in_iov_iter_readable || mkdir -p build/fault_in_iov_iter_readable
cat confdefs.h - <<_ACEOF >build/fault_in_iov_iter_readable/fault_in_iov_iter_readable.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = fault_in_iov_iter_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/fault_in_iov_iter_readable || mkdir -p build/fault_in_iov_iter_readable

	file=build/fault_in_iov_iter_readable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fault_in_iov_iter_readable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fault_in_iov_iter_readable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fault_in_iov_iter_readable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/fault_in_iov_iter_readable_license || mkdir -p build/fault_in_iov_iter_readable_license
cat confdefs.h - <<_ACEOF >build/fault_in_iov_iter_readable_license/fault_in_iov_iter_readable_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t size = 512;
		int error __attribute__ ((unused));

		error = fault_in_iov_iter_readable(&iter, size);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/fault_in_iov_iter_readable_license || mkdir -p build/fault_in_iov_iter_readable_license

	file=build/fault_in_iov_iter_readable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/fault_in_iov_iter_readable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := fault_in_iov_iter_readable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += fault_in_iov_iter_readable_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_count || mkdir -p build/iov_iter_count
cat confdefs.h - <<_ACEOF >build/iov_iter_count/iov_iter_count.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t bytes __attribute__ ((unused));

		bytes = iov_iter_count(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_count || mkdir -p build/iov_iter_count

	file=build/iov_iter_count/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_count

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_count.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_count/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_count_license || mkdir -p build/iov_iter_count_license
cat confdefs.h - <<_ACEOF >build/iov_iter_count_license/iov_iter_count_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		size_t bytes __attribute__ ((unused));

		bytes = iov_iter_count(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_count_license || mkdir -p build/iov_iter_count_license

	file=build/iov_iter_count_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_count_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_count_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_count_license/" >>build/Makefile
fi


fi




test -d build/copy_to_iter || mkdir -p build/copy_to_iter
cat confdefs.h - <<_ACEOF >build/copy_to_iter/copy_to_iter.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_to_iter((const void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_to_iter || mkdir -p build/copy_to_iter

	file=build/copy_to_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_to_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_to_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_to_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/copy_to_iter_license || mkdir -p build/copy_to_iter_license
cat confdefs.h - <<_ACEOF >build/copy_to_iter_license/copy_to_iter_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_to_iter((const void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_to_iter_license || mkdir -p build/copy_to_iter_license

	file=build/copy_to_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_to_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_to_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_to_iter_license/" >>build/Makefile
fi


fi




test -d build/copy_from_iter || mkdir -p build/copy_from_iter
cat confdefs.h - <<_ACEOF >build/copy_from_iter/copy_from_iter.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_from_iter((void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_from_iter || mkdir -p build/copy_from_iter

	file=build/copy_from_iter/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_from_iter

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_from_iter.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_from_iter/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/copy_from_iter_license || mkdir -p build/copy_from_iter_license
cat confdefs.h - <<_ACEOF >build/copy_from_iter_license/copy_from_iter_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		char buf[512] = { 0 };
		size_t size = 512;
		size_t bytes __attribute__ ((unused));

		bytes = copy_from_iter((void *)&buf, size, &iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/copy_from_iter_license || mkdir -p build/copy_from_iter_license

	file=build/copy_from_iter_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/copy_from_iter_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := copy_from_iter_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += copy_from_iter_license/" >>build/Makefile
fi


fi




test -d build/iov_iter_type || mkdir -p build/iov_iter_type
cat confdefs.h - <<_ACEOF >build/iov_iter_type/iov_iter_type.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) enum iter_type i = iov_iter_type(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_type || mkdir -p build/iov_iter_type

	file=build/iov_iter_type/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_type

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_type.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_type/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iov_iter_type_license || mkdir -p build/iov_iter_type_license
cat confdefs.h - <<_ACEOF >build/iov_iter_type_license/iov_iter_type_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) enum iter_type i = iov_iter_type(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iov_iter_type_license || mkdir -p build/iov_iter_type_license

	file=build/iov_iter_type_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iov_iter_type_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iov_iter_type_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iov_iter_type_license/" >>build/Makefile
fi


fi




test -d build/iter_iov || mkdir -p build/iter_iov
cat confdefs.h - <<_ACEOF >build/iter_iov/iter_iov.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) const struct iovec *iov = iter_iov(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iter_iov || mkdir -p build/iter_iov

	file=build/iter_iov/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iter_iov

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iter_iov.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iter_iov/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iter_iov_license || mkdir -p build/iter_iov_license
cat confdefs.h - <<_ACEOF >build/iter_iov_license/iter_iov_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/uio.h>


int
main (void)
{

		struct iov_iter iter = { 0 };
		__attribute__((unused)) const struct iovec *iov = iter_iov(&iter);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iter_iov_license || mkdir -p build/iter_iov_license

	file=build/iter_iov_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iter_iov_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iter_iov_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iter_iov_license/" >>build/Makefile
fi


fi





test -d build/vfs_copy_file_range || mkdir -p build/vfs_copy_file_range
cat confdefs.h - <<_ACEOF >build/vfs_copy_file_range/vfs_copy_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.copy_file_range	= test_copy_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_copy_file_range || mkdir -p build/vfs_copy_file_range

	file=build/vfs_copy_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_copy_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_copy_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_copy_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_copy_file_range_license || mkdir -p build/vfs_copy_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_copy_file_range_license/vfs_copy_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.copy_file_range	= test_copy_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_copy_file_range_license || mkdir -p build/vfs_copy_file_range_license

	file=build/vfs_copy_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_copy_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_copy_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_copy_file_range_license/" >>build/Makefile
fi


fi





test -d build/generic_copy_file_range || mkdir -p build/generic_copy_file_range
cat confdefs.h - <<_ACEOF >build/generic_copy_file_range/generic_copy_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *src_file __attribute__ ((unused)) = NULL;
		loff_t src_off __attribute__ ((unused)) = 0;
		struct file *dst_file __attribute__ ((unused)) = NULL;
		loff_t dst_off __attribute__ ((unused)) = 0;
		size_t len __attribute__ ((unused)) = 0;
		unsigned int flags __attribute__ ((unused)) = 0;
		generic_copy_file_range(src_file, src_off, dst_file, dst_off,
		    len, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_copy_file_range || mkdir -p build/generic_copy_file_range

	file=build/generic_copy_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_copy_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_copy_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_copy_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_copy_file_range_license || mkdir -p build/generic_copy_file_range_license
cat confdefs.h - <<_ACEOF >build/generic_copy_file_range_license/generic_copy_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct file *src_file __attribute__ ((unused)) = NULL;
		loff_t src_off __attribute__ ((unused)) = 0;
		struct file *dst_file __attribute__ ((unused)) = NULL;
		loff_t dst_off __attribute__ ((unused)) = 0;
		size_t len __attribute__ ((unused)) = 0;
		unsigned int flags __attribute__ ((unused)) = 0;
		generic_copy_file_range(src_file, src_off, dst_file, dst_off,
		    len, flags);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_copy_file_range_license || mkdir -p build/generic_copy_file_range_license

	file=build/generic_copy_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_copy_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_copy_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_copy_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_remap_file_range || mkdir -p build/vfs_remap_file_range
cat confdefs.h - <<_ACEOF >build/vfs_remap_file_range/vfs_remap_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static loff_t test_remap_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    loff_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.remap_file_range	= test_remap_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_remap_file_range || mkdir -p build/vfs_remap_file_range

	file=build/vfs_remap_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_remap_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_remap_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_remap_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_remap_file_range_license || mkdir -p build/vfs_remap_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_remap_file_range_license/vfs_remap_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static loff_t test_remap_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    loff_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.remap_file_range	= test_remap_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_remap_file_range_license || mkdir -p build/vfs_remap_file_range_license

	file=build/vfs_remap_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_remap_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_remap_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_remap_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_clone_file_range || mkdir -p build/vfs_clone_file_range
cat confdefs.h - <<_ACEOF >build/vfs_clone_file_range/vfs_clone_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.clone_file_range	= test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_clone_file_range || mkdir -p build/vfs_clone_file_range

	file=build/vfs_clone_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_clone_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_clone_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_clone_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_clone_file_range_license || mkdir -p build/vfs_clone_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_clone_file_range_license/vfs_clone_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
			.clone_file_range	= test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_clone_file_range_license || mkdir -p build/vfs_clone_file_range_license

	file=build/vfs_clone_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_clone_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_clone_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_clone_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_dedupe_file_range || mkdir -p build/vfs_dedupe_file_range
cat confdefs.h - <<_ACEOF >build/vfs_dedupe_file_range/vfs_dedupe_file_range.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_dedupe_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
                .dedupe_file_range	= test_dedupe_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_dedupe_file_range || mkdir -p build/vfs_dedupe_file_range

	file=build/vfs_dedupe_file_range/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_dedupe_file_range

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_dedupe_file_range.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_dedupe_file_range/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_dedupe_file_range_license || mkdir -p build/vfs_dedupe_file_range_license
cat confdefs.h - <<_ACEOF >build/vfs_dedupe_file_range_license/vfs_dedupe_file_range_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static int test_dedupe_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations
		    fops __attribute__ ((unused)) = {
                .dedupe_file_range	= test_dedupe_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_dedupe_file_range_license || mkdir -p build/vfs_dedupe_file_range_license

	file=build/vfs_dedupe_file_range_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_dedupe_file_range_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_dedupe_file_range_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_dedupe_file_range_license/" >>build/Makefile
fi


fi





test -d build/vfs_file_operations_extend || mkdir -p build/vfs_file_operations_extend
cat confdefs.h - <<_ACEOF >build/vfs_file_operations_extend/vfs_file_operations_extend.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations_extend
		    fops __attribute__ ((unused)) = {
			.kabi_fops = {},
			.copy_file_range = test_copy_file_range,
			.clone_file_range = test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_file_operations_extend || mkdir -p build/vfs_file_operations_extend

	file=build/vfs_file_operations_extend/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_file_operations_extend

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_file_operations_extend.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_file_operations_extend/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/vfs_file_operations_extend_license || mkdir -p build/vfs_file_operations_extend_license
cat confdefs.h - <<_ACEOF >build/vfs_file_operations_extend_license/vfs_file_operations_extend_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		static ssize_t test_copy_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    size_t len, unsigned int flags) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len; (void) flags;
			return (0);
		}

		static int test_clone_file_range(struct file *src_file,
		    loff_t src_off, struct file *dst_file, loff_t dst_off,
		    u64 len) {
			(void) src_file; (void) src_off;
			(void) dst_file; (void) dst_off;
			(void) len;
			return (0);
		}

		static const struct file_operations_extend
		    fops __attribute__ ((unused)) = {
			.kabi_fops = {},
			.copy_file_range = test_copy_file_range,
			.clone_file_range = test_clone_file_range,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/vfs_file_operations_extend_license || mkdir -p build/vfs_file_operations_extend_license

	file=build/vfs_file_operations_extend_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/vfs_file_operations_extend_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := vfs_file_operations_extend_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += vfs_file_operations_extend_license/" >>build/Makefile
fi


fi





test -d build/kmap_atomic || mkdir -p build/kmap_atomic
cat confdefs.h - <<_ACEOF >build/kmap_atomic/kmap_atomic.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		struct page page;
		kmap_atomic(&page);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmap_atomic || mkdir -p build/kmap_atomic

	file=build/kmap_atomic/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmap_atomic

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmap_atomic.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmap_atomic/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kmap_atomic_license || mkdir -p build/kmap_atomic_license
cat confdefs.h - <<_ACEOF >build/kmap_atomic_license/kmap_atomic_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		struct page page;
		kmap_atomic(&page);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kmap_atomic_license || mkdir -p build/kmap_atomic_license

	file=build/kmap_atomic_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kmap_atomic_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kmap_atomic_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kmap_atomic_license/" >>build/Makefile
fi


fi





test -d build/follow_down_one || mkdir -p build/follow_down_one
cat confdefs.h - <<_ACEOF >build/follow_down_one/follow_down_one.c

#include <linux/module.h>

		#include <linux/namei.h>


int
main (void)
{

		struct path *p = NULL;
		follow_down_one(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/follow_down_one || mkdir -p build/follow_down_one

	file=build/follow_down_one/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/follow_down_one

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := follow_down_one.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += follow_down_one/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/follow_down_one_license || mkdir -p build/follow_down_one_license
cat confdefs.h - <<_ACEOF >build/follow_down_one_license/follow_down_one_license.c

#include <linux/module.h>

		#include <linux/namei.h>


int
main (void)
{

		struct path *p = NULL;
		follow_down_one(p);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/follow_down_one_license || mkdir -p build/follow_down_one_license

	file=build/follow_down_one_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/follow_down_one_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := follow_down_one_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += follow_down_one_license/" >>build/Makefile
fi


fi





test -d build/make_request_fn_void || mkdir -p build/make_request_fn_void
cat confdefs.h - <<_ACEOF >build/make_request_fn_void/make_request_fn_void.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		void make_request(struct request_queue *q,
		    struct bio *bio) { return; }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_void || mkdir -p build/make_request_fn_void

	file=build/make_request_fn_void/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_void

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_void.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_void/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/make_request_fn_void_license || mkdir -p build/make_request_fn_void_license
cat confdefs.h - <<_ACEOF >build/make_request_fn_void_license/make_request_fn_void_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		void make_request(struct request_queue *q,
		    struct bio *bio) { return; }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_void_license || mkdir -p build/make_request_fn_void_license

	file=build/make_request_fn_void_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_void_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_void_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_void_license/" >>build/Makefile
fi


fi




test -d build/make_request_fn_blk_qc_t || mkdir -p build/make_request_fn_blk_qc_t
cat confdefs.h - <<_ACEOF >build/make_request_fn_blk_qc_t/make_request_fn_blk_qc_t.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_blk_qc_t || mkdir -p build/make_request_fn_blk_qc_t

	file=build/make_request_fn_blk_qc_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_blk_qc_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_blk_qc_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_blk_qc_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/make_request_fn_blk_qc_t_license || mkdir -p build/make_request_fn_blk_qc_t_license
cat confdefs.h - <<_ACEOF >build/make_request_fn_blk_qc_t_license/make_request_fn_blk_qc_t_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		blk_queue_make_request(NULL, &make_request);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/make_request_fn_blk_qc_t_license || mkdir -p build/make_request_fn_blk_qc_t_license

	file=build/make_request_fn_blk_qc_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/make_request_fn_blk_qc_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := make_request_fn_blk_qc_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += make_request_fn_blk_qc_t_license/" >>build/Makefile
fi


fi




test -d build/blk_alloc_queue_request_fn || mkdir -p build/blk_alloc_queue_request_fn
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn/blk_alloc_queue_request_fn.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn || mkdir -p build/blk_alloc_queue_request_fn

	file=build/blk_alloc_queue_request_fn/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_alloc_queue_request_fn_license || mkdir -p build/blk_alloc_queue_request_fn_license
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn_license/blk_alloc_queue_request_fn_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn_license || mkdir -p build/blk_alloc_queue_request_fn_license

	file=build/blk_alloc_queue_request_fn_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn_license/" >>build/Makefile
fi


fi




test -d build/blk_alloc_queue_request_fn_rh || mkdir -p build/blk_alloc_queue_request_fn_rh
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn_rh/blk_alloc_queue_request_fn_rh.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue_rh(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn_rh || mkdir -p build/blk_alloc_queue_request_fn_rh

	file=build/blk_alloc_queue_request_fn_rh/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn_rh

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn_rh.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn_rh/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_alloc_queue_request_fn_rh_license || mkdir -p build/blk_alloc_queue_request_fn_rh_license
cat confdefs.h - <<_ACEOF >build/blk_alloc_queue_request_fn_rh_license/blk_alloc_queue_request_fn_rh_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>
		blk_qc_t make_request(struct request_queue *q,
		    struct bio *bio) { return (BLK_QC_T_NONE); }


int
main (void)
{

		struct request_queue *q __attribute__ ((unused));
		q = blk_alloc_queue_rh(make_request, NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_queue_request_fn_rh_license || mkdir -p build/blk_alloc_queue_request_fn_rh_license

	file=build/blk_alloc_queue_request_fn_rh_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_queue_request_fn_rh_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_queue_request_fn_rh_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_queue_request_fn_rh_license/" >>build/Makefile
fi


fi




test -d build/block_device_operations_submit_bio || mkdir -p build/block_device_operations_submit_bio
cat confdefs.h - <<_ACEOF >build/block_device_operations_submit_bio/block_device_operations_submit_bio.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations o;
		o.submit_bio = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_submit_bio || mkdir -p build/block_device_operations_submit_bio

	file=build/block_device_operations_submit_bio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_submit_bio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_submit_bio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_submit_bio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/block_device_operations_submit_bio_license || mkdir -p build/block_device_operations_submit_bio_license
cat confdefs.h - <<_ACEOF >build/block_device_operations_submit_bio_license/block_device_operations_submit_bio_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device_operations o;
		o.submit_bio = NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/block_device_operations_submit_bio_license || mkdir -p build/block_device_operations_submit_bio_license

	file=build/block_device_operations_submit_bio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/block_device_operations_submit_bio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := block_device_operations_submit_bio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += block_device_operations_submit_bio_license/" >>build/Makefile
fi


fi




test -d build/blk_alloc_disk || mkdir -p build/blk_alloc_disk
cat confdefs.h - <<_ACEOF >build/blk_alloc_disk/blk_alloc_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		disk = blk_alloc_disk(NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_disk || mkdir -p build/blk_alloc_disk

	file=build/blk_alloc_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_alloc_disk_license || mkdir -p build/blk_alloc_disk_license
cat confdefs.h - <<_ACEOF >build/blk_alloc_disk_license/blk_alloc_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		disk = blk_alloc_disk(NUMA_NO_NODE);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_alloc_disk_license || mkdir -p build/blk_alloc_disk_license

	file=build/blk_alloc_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_alloc_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_alloc_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_alloc_disk_license/" >>build/Makefile
fi


fi




test -d build/blk_cleanup_disk || mkdir -p build/blk_cleanup_disk
cat confdefs.h - <<_ACEOF >build/blk_cleanup_disk/blk_cleanup_disk.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		blk_cleanup_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cleanup_disk || mkdir -p build/blk_cleanup_disk

	file=build/blk_cleanup_disk/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cleanup_disk

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cleanup_disk.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cleanup_disk/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/blk_cleanup_disk_license || mkdir -p build/blk_cleanup_disk_license
cat confdefs.h - <<_ACEOF >build/blk_cleanup_disk_license/blk_cleanup_disk_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk  __attribute__ ((unused));
		blk_cleanup_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/blk_cleanup_disk_license || mkdir -p build/blk_cleanup_disk_license

	file=build/blk_cleanup_disk_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/blk_cleanup_disk_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := blk_cleanup_disk_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += blk_cleanup_disk_license/" >>build/Makefile
fi


fi





test -d build/bdev_io_acct_63 || mkdir -p build/bdev_io_acct_63
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_63/bdev_io_acct_63.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_op(bio),
		    passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), bio_sectors(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_63 || mkdir -p build/bdev_io_acct_63

	file=build/bdev_io_acct_63/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_63

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_63.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_63/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_io_acct_63_license || mkdir -p build/bdev_io_acct_63_license
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_63_license/bdev_io_acct_63_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_op(bio),
		    passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), bio_sectors(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_63_license || mkdir -p build/bdev_io_acct_63_license

	file=build/bdev_io_acct_63_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_63_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_63_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_63_license/" >>build/Makefile
fi


fi




test -d build/bdev_io_acct_old || mkdir -p build/bdev_io_acct_old
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_old/bdev_io_acct_old.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_sectors(bio),
		    bio_op(bio), passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_old || mkdir -p build/bdev_io_acct_old

	file=build/bdev_io_acct_old/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_old

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_old.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_old/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bdev_io_acct_old_license || mkdir -p build/bdev_io_acct_old_license
cat confdefs.h - <<_ACEOF >build/bdev_io_acct_old_license/bdev_io_acct_old_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct block_device *bdev = NULL;
		struct bio *bio = NULL;
		unsigned long passed_time = 0;
		unsigned long start_time;

		start_time = bdev_start_io_acct(bdev, bio_sectors(bio),
		    bio_op(bio), passed_time);
		bdev_end_io_acct(bdev, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bdev_io_acct_old_license || mkdir -p build/bdev_io_acct_old_license

	file=build/bdev_io_acct_old_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bdev_io_acct_old_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bdev_io_acct_old_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bdev_io_acct_old_license/" >>build/Makefile
fi


fi




test -d build/disk_io_acct || mkdir -p build/disk_io_acct
cat confdefs.h - <<_ACEOF >build/disk_io_acct/disk_io_acct.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = disk_start_io_acct(disk, bio_sectors(bio), bio_op(bio));
		disk_end_io_acct(disk, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_io_acct || mkdir -p build/disk_io_acct

	file=build/disk_io_acct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_io_acct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_io_acct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_io_acct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/disk_io_acct_license || mkdir -p build/disk_io_acct_license
cat confdefs.h - <<_ACEOF >build/disk_io_acct_license/disk_io_acct_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = disk_start_io_acct(disk, bio_sectors(bio), bio_op(bio));
		disk_end_io_acct(disk, bio_op(bio), start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/disk_io_acct_license || mkdir -p build/disk_io_acct_license

	file=build/disk_io_acct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/disk_io_acct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := disk_io_acct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += disk_io_acct_license/" >>build/Makefile
fi


fi




test -d build/bio_io_acct || mkdir -p build/bio_io_acct
cat confdefs.h - <<_ACEOF >build/bio_io_acct/bio_io_acct.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = bio_start_io_acct(bio);
		bio_end_io_acct(bio, start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_io_acct || mkdir -p build/bio_io_acct

	file=build/bio_io_acct/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_io_acct

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_io_acct.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_io_acct/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_io_acct_license || mkdir -p build/bio_io_acct_license
cat confdefs.h - <<_ACEOF >build/bio_io_acct_license/bio_io_acct_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct bio *bio = NULL;
		unsigned long start_time;

		start_time = bio_start_io_acct(bio);
		bio_end_io_acct(bio, start_time);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_io_acct_license || mkdir -p build/bio_io_acct_license

	file=build/bio_io_acct_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_io_acct_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_io_acct_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_io_acct_license/" >>build/Makefile
fi


fi




test -d build/generic_acct_3args || mkdir -p build/generic_acct_3args
cat confdefs.h - <<_ACEOF >build/generic_acct_3args/generic_acct_3args.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(int, unsigned long,
		    struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(int, struct hd_struct *,
		    unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(0, 0, NULL);
		generic_end_io_acct(0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_3args || mkdir -p build/generic_acct_3args

	file=build/generic_acct_3args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_3args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_3args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_3args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_acct_3args_license || mkdir -p build/generic_acct_3args_license
cat confdefs.h - <<_ACEOF >build/generic_acct_3args_license/generic_acct_3args_license.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(int, unsigned long,
		    struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(int, struct hd_struct *,
		    unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(0, 0, NULL);
		generic_end_io_acct(0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_3args_license || mkdir -p build/generic_acct_3args_license

	file=build/generic_acct_3args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_3args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_3args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_3args_license/" >>build/Makefile
fi


fi




test -d build/generic_acct_4args || mkdir -p build/generic_acct_4args
cat confdefs.h - <<_ACEOF >build/generic_acct_4args/generic_acct_4args.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(struct request_queue *, int,
		    unsigned long, struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(struct request_queue *, int,
		    struct hd_struct *, unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(NULL, 0, 0, NULL);
		generic_end_io_acct(NULL, 0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_4args || mkdir -p build/generic_acct_4args

	file=build/generic_acct_4args/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_4args

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_4args.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_4args/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_acct_4args_license || mkdir -p build/generic_acct_4args_license
cat confdefs.h - <<_ACEOF >build/generic_acct_4args_license/generic_acct_4args_license.c

#include <linux/module.h>

		#include <linux/bio.h>

		void (*generic_start_io_acct_f)(struct request_queue *, int,
		    unsigned long, struct hd_struct *) = &generic_start_io_acct;
		void (*generic_end_io_acct_f)(struct request_queue *, int,
		    struct hd_struct *, unsigned long) = &generic_end_io_acct;


int
main (void)
{

		generic_start_io_acct(NULL, 0, 0, NULL);
		generic_end_io_acct(NULL, 0, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_acct_4args_license || mkdir -p build/generic_acct_4args_license

	file=build/generic_acct_4args_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_acct_4args_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_acct_4args_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_acct_4args_license/" >>build/Makefile
fi


fi





test -d build/kernel_fpu || mkdir -p build/kernel_fpu
cat confdefs.h - <<_ACEOF >build/kernel_fpu/kernel_fpu.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		kernel_fpu_begin();
		kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_fpu || mkdir -p build/kernel_fpu

	file=build/kernel_fpu/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_fpu

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_fpu.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_fpu/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/kernel_fpu_license || mkdir -p build/kernel_fpu_license
cat confdefs.h - <<_ACEOF >build/kernel_fpu_license/kernel_fpu_license.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		kernel_fpu_begin();
		kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/kernel_fpu_license || mkdir -p build/kernel_fpu_license

	file=build/kernel_fpu_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kernel_fpu_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kernel_fpu_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kernel_fpu_license/" >>build/Makefile
fi


fi




test -d build/__kernel_fpu || mkdir -p build/__kernel_fpu
cat confdefs.h - <<_ACEOF >build/__kernel_fpu/__kernel_fpu.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		__kernel_fpu_begin();
		__kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__kernel_fpu || mkdir -p build/__kernel_fpu

	file=build/__kernel_fpu/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__kernel_fpu

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __kernel_fpu.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __kernel_fpu/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/__kernel_fpu_license || mkdir -p build/__kernel_fpu_license
cat confdefs.h - <<_ACEOF >build/__kernel_fpu_license/__kernel_fpu_license.c

#include <linux/module.h>

		#include <linux/types.h>
		#ifdef HAVE_KERNEL_FPU_API_HEADER
		#include <asm/fpu/api.h>
		#ifdef HAVE_KERNEL_FPU_INTERNAL_HEADER
		#include <asm/fpu/internal.h>
		#endif
		#else
		#include <asm/i387.h>
		#endif


int
main (void)
{

		__kernel_fpu_begin();
		__kernel_fpu_end();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/__kernel_fpu_license || mkdir -p build/__kernel_fpu_license

	file=build/__kernel_fpu_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__kernel_fpu_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __kernel_fpu_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __kernel_fpu_license/" >>build/Makefile
fi


fi






test -d build/type_fmode_t || mkdir -p build/type_fmode_t
cat confdefs.h - <<_ACEOF >build/type_fmode_t/type_fmode_t.c

#include <linux/module.h>

		#include <linux/types.h>


int
main (void)
{

		fmode_t *ptr __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/type_fmode_t || mkdir -p build/type_fmode_t

	file=build/type_fmode_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/type_fmode_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := type_fmode_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += type_fmode_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/type_fmode_t_license || mkdir -p build/type_fmode_t_license
cat confdefs.h - <<_ACEOF >build/type_fmode_t_license/type_fmode_t_license.c

#include <linux/module.h>

		#include <linux/types.h>


int
main (void)
{

		fmode_t *ptr __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/type_fmode_t_license || mkdir -p build/type_fmode_t_license

	file=build/type_fmode_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/type_fmode_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := type_fmode_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += type_fmode_t_license/" >>build/Makefile
fi


fi





test -d build/kuidgid_t || mkdir -p build/kuidgid_t
cat confdefs.h - <<_ACEOF >build/kuidgid_t/kuidgid_t.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_t userid __attribute__ ((unused)) = KUIDT_INIT(0);
		kgid_t groupid __attribute__ ((unused)) = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuidgid_t || mkdir -p build/kuidgid_t

	file=build/kuidgid_t/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuidgid_t

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuidgid_t.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuidgid_t/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kuidgid_t_license || mkdir -p build/kuidgid_t_license
cat confdefs.h - <<_ACEOF >build/kuidgid_t_license/kuidgid_t_license.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_t userid __attribute__ ((unused)) = KUIDT_INIT(0);
		kgid_t groupid __attribute__ ((unused)) = KGIDT_INIT(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuidgid_t_license || mkdir -p build/kuidgid_t_license

	file=build/kuidgid_t_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuidgid_t_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuidgid_t_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuidgid_t_license/" >>build/Makefile
fi


fi





test -d build/i_uid_read || mkdir -p build/i_uid_read
cat confdefs.h - <<_ACEOF >build/i_uid_read/i_uid_read.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) i_uid_read(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/i_uid_read || mkdir -p build/i_uid_read

	file=build/i_uid_read/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/i_uid_read

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := i_uid_read.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += i_uid_read/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/i_uid_read_license || mkdir -p build/i_uid_read_license
cat confdefs.h - <<_ACEOF >build/i_uid_read_license/i_uid_read_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode *ip = NULL;
		(void) i_uid_read(ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/i_uid_read_license || mkdir -p build/i_uid_read_license

	file=build/i_uid_read_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/i_uid_read_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := i_uid_read_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += i_uid_read_license/" >>build/Makefile
fi


fi





test -d build/inode_operations_rename2 || mkdir -p build/inode_operations_rename2
cat confdefs.h - <<_ACEOF >build/inode_operations_rename2/inode_operations_rename2.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename2 || mkdir -p build/inode_operations_rename2

	file=build/inode_operations_rename2/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename2

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename2.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename2/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename2_license || mkdir -p build/inode_operations_rename2_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename2_license/inode_operations_rename2_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename2_license || mkdir -p build/inode_operations_rename2_license

	file=build/inode_operations_rename2_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename2_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename2_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename2_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_rename_flags || mkdir -p build/inode_operations_rename_flags
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_flags/inode_operations_rename_flags.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_flags || mkdir -p build/inode_operations_rename_flags

	file=build/inode_operations_rename_flags/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_flags

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_flags.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_flags/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename_flags_license || mkdir -p build/inode_operations_rename_flags_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_flags_license/inode_operations_rename_flags_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_flags_license || mkdir -p build/inode_operations_rename_flags_license

	file=build/inode_operations_rename_flags_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_flags_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_flags_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_flags_license/" >>build/Makefile
fi


fi




test -d build/dir_inode_operations_wrapper_rename2 || mkdir -p build/dir_inode_operations_wrapper_rename2
cat confdefs.h - <<_ACEOF >build/dir_inode_operations_wrapper_rename2/dir_inode_operations_wrapper_rename2.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations_wrapper
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/dir_inode_operations_wrapper_rename2 || mkdir -p build/dir_inode_operations_wrapper_rename2

	file=build/dir_inode_operations_wrapper_rename2/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dir_inode_operations_wrapper_rename2

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dir_inode_operations_wrapper_rename2.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dir_inode_operations_wrapper_rename2/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/dir_inode_operations_wrapper_rename2_license || mkdir -p build/dir_inode_operations_wrapper_rename2_license
cat confdefs.h - <<_ACEOF >build/dir_inode_operations_wrapper_rename2_license/dir_inode_operations_wrapper_rename2_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename2_fn(struct inode *sip, struct dentry *sdp,
			struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations_wrapper
		    iops __attribute__ ((unused)) = {
			.rename2 = rename2_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/dir_inode_operations_wrapper_rename2_license || mkdir -p build/dir_inode_operations_wrapper_rename2_license

	file=build/dir_inode_operations_wrapper_rename2_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/dir_inode_operations_wrapper_rename2_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := dir_inode_operations_wrapper_rename2_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += dir_inode_operations_wrapper_rename2_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_rename_userns || mkdir -p build/inode_operations_rename_userns
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_userns/inode_operations_rename_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct user_namespace *user_ns, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_userns || mkdir -p build/inode_operations_rename_userns

	file=build/inode_operations_rename_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename_userns_license || mkdir -p build/inode_operations_rename_userns_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_userns_license/inode_operations_rename_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct user_namespace *user_ns, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_userns_license || mkdir -p build/inode_operations_rename_userns_license

	file=build/inode_operations_rename_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_userns_license/" >>build/Makefile
fi


fi




test -d build/inode_operations_rename_mnt_idmap || mkdir -p build/inode_operations_rename_mnt_idmap
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_mnt_idmap/inode_operations_rename_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct mnt_idmap *idmap, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_mnt_idmap || mkdir -p build/inode_operations_rename_mnt_idmap

	file=build/inode_operations_rename_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/inode_operations_rename_mnt_idmap_license || mkdir -p build/inode_operations_rename_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/inode_operations_rename_mnt_idmap_license/inode_operations_rename_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		int rename_fn(struct mnt_idmap *idmap, struct inode *sip,
			struct dentry *sdp, struct inode *tip, struct dentry *tdp,
			unsigned int flags) { return 0; }

		static const struct inode_operations
		    iops __attribute__ ((unused)) = {
			.rename = rename_fn,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/inode_operations_rename_mnt_idmap_license || mkdir -p build/inode_operations_rename_mnt_idmap_license

	file=build/inode_operations_rename_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/inode_operations_rename_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := inode_operations_rename_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += inode_operations_rename_mnt_idmap_license/" >>build/Makefile
fi


fi





test -d build/current_time || mkdir -p build/current_time
cat confdefs.h - <<_ACEOF >build/current_time/current_time.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip __attribute__ ((unused));
		ip.i_atime = current_time(&ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_time || mkdir -p build/current_time

	file=build/current_time/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_time

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_time.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_time/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/current_time_license || mkdir -p build/current_time_license
cat confdefs.h - <<_ACEOF >build/current_time_license/current_time_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct inode ip __attribute__ ((unused));
		ip.i_atime = current_time(&ip);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/current_time_license || mkdir -p build/current_time_license

	file=build/current_time_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/current_time_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := current_time_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += current_time_license/" >>build/Makefile
fi


fi






test -d build/ns_capable || mkdir -p build/ns_capable
cat confdefs.h - <<_ACEOF >build/ns_capable/ns_capable.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		ns_capable((struct user_namespace *)NULL, CAP_SYS_ADMIN);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/ns_capable || mkdir -p build/ns_capable

	file=build/ns_capable/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ns_capable

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ns_capable.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ns_capable/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/ns_capable_license || mkdir -p build/ns_capable_license
cat confdefs.h - <<_ACEOF >build/ns_capable_license/ns_capable_license.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		ns_capable((struct user_namespace *)NULL, CAP_SYS_ADMIN);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/ns_capable_license || mkdir -p build/ns_capable_license

	file=build/ns_capable_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ns_capable_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ns_capable_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ns_capable_license/" >>build/Makefile
fi


fi





test -d build/has_capability || mkdir -p build/has_capability
cat confdefs.h - <<_ACEOF >build/has_capability/has_capability.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		struct task_struct *task = NULL;
		int cap = 0;
		bool result __attribute__ ((unused));

		result = has_capability(task, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_capability || mkdir -p build/has_capability

	file=build/has_capability/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_capability

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_capability.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_capability/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_capability_license || mkdir -p build/has_capability_license
cat confdefs.h - <<_ACEOF >build/has_capability_license/has_capability_license.c

#include <linux/module.h>

		#include <linux/capability.h>


int
main (void)
{

		struct task_struct *task = NULL;
		int cap = 0;
		bool result __attribute__ ((unused));

		result = has_capability(task, cap);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_capability_license || mkdir -p build/has_capability_license

	file=build/has_capability_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_capability_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_capability_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_capability_license/" >>build/Makefile
fi


fi





test -d build/cred_user_ns || mkdir -p build/cred_user_ns
cat confdefs.h - <<_ACEOF >build/cred_user_ns/cred_user_ns.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct cred cr;
		cr.user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/cred_user_ns || mkdir -p build/cred_user_ns

	file=build/cred_user_ns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cred_user_ns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cred_user_ns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cred_user_ns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/cred_user_ns_license || mkdir -p build/cred_user_ns_license
cat confdefs.h - <<_ACEOF >build/cred_user_ns_license/cred_user_ns_license.c

#include <linux/module.h>

		#include <linux/cred.h>


int
main (void)
{

		struct cred cr;
		cr.user_ns = (struct user_namespace *)NULL;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/cred_user_ns_license || mkdir -p build/cred_user_ns_license

	file=build/cred_user_ns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cred_user_ns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cred_user_ns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cred_user_ns_license/" >>build/Makefile
fi


fi





test -d build/kuid_has_mapping || mkdir -p build/kuid_has_mapping
cat confdefs.h - <<_ACEOF >build/kuid_has_mapping/kuid_has_mapping.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_has_mapping((struct user_namespace *)NULL, KUIDT_INIT(0));
		kgid_has_mapping((struct user_namespace *)NULL, KGIDT_INIT(0));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuid_has_mapping || mkdir -p build/kuid_has_mapping

	file=build/kuid_has_mapping/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuid_has_mapping

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuid_has_mapping.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuid_has_mapping/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kuid_has_mapping_license || mkdir -p build/kuid_has_mapping_license
cat confdefs.h - <<_ACEOF >build/kuid_has_mapping_license/kuid_has_mapping_license.c

#include <linux/module.h>

		#include <linux/uidgid.h>


int
main (void)
{

		kuid_has_mapping((struct user_namespace *)NULL, KUIDT_INIT(0));
		kgid_has_mapping((struct user_namespace *)NULL, KGIDT_INIT(0));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kuid_has_mapping_license || mkdir -p build/kuid_has_mapping_license

	file=build/kuid_has_mapping_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kuid_has_mapping_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kuid_has_mapping_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kuid_has_mapping_license/" >>build/Makefile
fi


fi






test -d build/in_compat_syscall || mkdir -p build/in_compat_syscall
cat confdefs.h - <<_ACEOF >build/in_compat_syscall/in_compat_syscall.c

#include <linux/module.h>

		#include <linux/compat.h>


int
main (void)
{

		in_compat_syscall();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/in_compat_syscall || mkdir -p build/in_compat_syscall

	file=build/in_compat_syscall/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/in_compat_syscall

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := in_compat_syscall.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += in_compat_syscall/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/in_compat_syscall_license || mkdir -p build/in_compat_syscall_license
cat confdefs.h - <<_ACEOF >build/in_compat_syscall_license/in_compat_syscall_license.c

#include <linux/module.h>

		#include <linux/compat.h>


int
main (void)
{

		in_compat_syscall();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/in_compat_syscall_license || mkdir -p build/in_compat_syscall_license

	file=build/in_compat_syscall_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/in_compat_syscall_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := in_compat_syscall_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += in_compat_syscall_license/" >>build/Makefile
fi


fi






test -d build/ktime_get_coarse_real_ts64 || mkdir -p build/ktime_get_coarse_real_ts64
cat confdefs.h - <<_ACEOF >build/ktime_get_coarse_real_ts64/ktime_get_coarse_real_ts64.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_coarse_real_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_coarse_real_ts64 || mkdir -p build/ktime_get_coarse_real_ts64

	file=build/ktime_get_coarse_real_ts64/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_coarse_real_ts64

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_coarse_real_ts64.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_coarse_real_ts64/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/ktime_get_coarse_real_ts64_license || mkdir -p build/ktime_get_coarse_real_ts64_license
cat confdefs.h - <<_ACEOF >build/ktime_get_coarse_real_ts64_license/ktime_get_coarse_real_ts64_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_coarse_real_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_coarse_real_ts64_license || mkdir -p build/ktime_get_coarse_real_ts64_license

	file=build/ktime_get_coarse_real_ts64_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_coarse_real_ts64_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_coarse_real_ts64_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_coarse_real_ts64_license/" >>build/Makefile
fi


fi





test -d build/ktime_get_raw_ts64 || mkdir -p build/ktime_get_raw_ts64
cat confdefs.h - <<_ACEOF >build/ktime_get_raw_ts64/ktime_get_raw_ts64.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_raw_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_raw_ts64 || mkdir -p build/ktime_get_raw_ts64

	file=build/ktime_get_raw_ts64/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_raw_ts64

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_raw_ts64.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_raw_ts64/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/ktime_get_raw_ts64_license || mkdir -p build/ktime_get_raw_ts64_license
cat confdefs.h - <<_ACEOF >build/ktime_get_raw_ts64_license/ktime_get_raw_ts64_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		struct timespec64 ts;
		ktime_get_raw_ts64(&ts);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/ktime_get_raw_ts64_license || mkdir -p build/ktime_get_raw_ts64_license

	file=build/ktime_get_raw_ts64_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/ktime_get_raw_ts64_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := ktime_get_raw_ts64_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += ktime_get_raw_ts64_license/" >>build/Makefile
fi


fi






test -d build/totalram_pages || mkdir -p build/totalram_pages
cat confdefs.h - <<_ACEOF >build/totalram_pages/totalram_pages.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalram_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalram_pages || mkdir -p build/totalram_pages

	file=build/totalram_pages/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalram_pages

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalram_pages.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalram_pages/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/totalram_pages_license || mkdir -p build/totalram_pages_license
cat confdefs.h - <<_ACEOF >build/totalram_pages_license/totalram_pages_license.c

#include <linux/module.h>

		#include <linux/mm.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalram_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalram_pages_license || mkdir -p build/totalram_pages_license

	file=build/totalram_pages_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalram_pages_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalram_pages_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalram_pages_license/" >>build/Makefile
fi


fi





test -d build/totalhigh_pages || mkdir -p build/totalhigh_pages
cat confdefs.h - <<_ACEOF >build/totalhigh_pages/totalhigh_pages.c

#include <linux/module.h>

		#include <linux/highmem.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalhigh_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalhigh_pages || mkdir -p build/totalhigh_pages

	file=build/totalhigh_pages/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalhigh_pages

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalhigh_pages.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalhigh_pages/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/totalhigh_pages_license || mkdir -p build/totalhigh_pages_license
cat confdefs.h - <<_ACEOF >build/totalhigh_pages_license/totalhigh_pages_license.c

#include <linux/module.h>

		#include <linux/highmem.h>


int
main (void)
{

		unsigned long pages __attribute__ ((unused));
		pages = totalhigh_pages();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/totalhigh_pages_license || mkdir -p build/totalhigh_pages_license

	file=build/totalhigh_pages_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/totalhigh_pages_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := totalhigh_pages_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += totalhigh_pages_license/" >>build/Makefile
fi


fi





test -d build/kstrtoul || mkdir -p build/kstrtoul
cat confdefs.h - <<_ACEOF >build/kstrtoul/kstrtoul.c

#include <linux/module.h>

		#include <linux/kernel.h>


int
main (void)
{

		int ret __attribute__ ((unused)) = kstrtoul(NULL, 10, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kstrtoul || mkdir -p build/kstrtoul

	file=build/kstrtoul/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kstrtoul

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kstrtoul.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kstrtoul/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kstrtoul_license || mkdir -p build/kstrtoul_license
cat confdefs.h - <<_ACEOF >build/kstrtoul_license/kstrtoul_license.c

#include <linux/module.h>

		#include <linux/kernel.h>


int
main (void)
{

		int ret __attribute__ ((unused)) = kstrtoul(NULL, 10, NULL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kstrtoul_license || mkdir -p build/kstrtoul_license

	file=build/kstrtoul_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kstrtoul_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kstrtoul_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kstrtoul_license/" >>build/Makefile
fi


fi






test -d build/percpu_counter_init_with_gfp || mkdir -p build/percpu_counter_init_with_gfp
cat confdefs.h - <<_ACEOF >build/percpu_counter_init_with_gfp/percpu_counter_init_with_gfp.c

#include <linux/module.h>

		#include <linux/gfp.h>
		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;
		int error;

		error = percpu_counter_init(&counter, 0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_init_with_gfp || mkdir -p build/percpu_counter_init_with_gfp

	file=build/percpu_counter_init_with_gfp/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_init_with_gfp

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_init_with_gfp.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_init_with_gfp/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/percpu_counter_init_with_gfp_license || mkdir -p build/percpu_counter_init_with_gfp_license
cat confdefs.h - <<_ACEOF >build/percpu_counter_init_with_gfp_license/percpu_counter_init_with_gfp_license.c

#include <linux/module.h>

		#include <linux/gfp.h>
		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;
		int error;

		error = percpu_counter_init(&counter, 0, GFP_KERNEL);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_init_with_gfp_license || mkdir -p build/percpu_counter_init_with_gfp_license

	file=build/percpu_counter_init_with_gfp_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_init_with_gfp_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_init_with_gfp_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_init_with_gfp_license/" >>build/Makefile
fi


fi





test -d build/percpu_counter_add_batch || mkdir -p build/percpu_counter_add_batch
cat confdefs.h - <<_ACEOF >build/percpu_counter_add_batch/percpu_counter_add_batch.c

#include <linux/module.h>

		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;

		percpu_counter_add_batch(&counter, 1, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_add_batch || mkdir -p build/percpu_counter_add_batch

	file=build/percpu_counter_add_batch/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_add_batch

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_add_batch.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_add_batch/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/percpu_counter_add_batch_license || mkdir -p build/percpu_counter_add_batch_license
cat confdefs.h - <<_ACEOF >build/percpu_counter_add_batch_license/percpu_counter_add_batch_license.c

#include <linux/module.h>

		#include <linux/percpu_counter.h>


int
main (void)
{

		struct percpu_counter counter;

		percpu_counter_add_batch(&counter, 1, 1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_counter_add_batch_license || mkdir -p build/percpu_counter_add_batch_license

	file=build/percpu_counter_add_batch_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_counter_add_batch_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_counter_add_batch_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_counter_add_batch_license/" >>build/Makefile
fi


fi





test -d build/percpu_ref_count_in_data || mkdir -p build/percpu_ref_count_in_data
cat confdefs.h - <<_ACEOF >build/percpu_ref_count_in_data/percpu_ref_count_in_data.c

#include <linux/module.h>

		#include <linux/percpu-refcount.h>


int
main (void)
{

		struct percpu_ref_data d;

		atomic_long_set(&d.count, 1L);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_ref_count_in_data || mkdir -p build/percpu_ref_count_in_data

	file=build/percpu_ref_count_in_data/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_ref_count_in_data

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_ref_count_in_data.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_ref_count_in_data/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/percpu_ref_count_in_data_license || mkdir -p build/percpu_ref_count_in_data_license
cat confdefs.h - <<_ACEOF >build/percpu_ref_count_in_data_license/percpu_ref_count_in_data_license.c

#include <linux/module.h>

		#include <linux/percpu-refcount.h>


int
main (void)
{

		struct percpu_ref_data d;

		atomic_long_set(&d.count, 1L);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/percpu_ref_count_in_data_license || mkdir -p build/percpu_ref_count_in_data_license

	file=build/percpu_ref_count_in_data_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/percpu_ref_count_in_data_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := percpu_ref_count_in_data_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += percpu_ref_count_in_data_license/" >>build/Makefile
fi


fi






test -d build/cpu_hotplug || mkdir -p build/cpu_hotplug
cat confdefs.h - <<_ACEOF >build/cpu_hotplug/cpu_hotplug.c

#include <linux/module.h>

		#include <linux/cpuhotplug.h>


int
main (void)
{

		enum cpuhp_state state = CPUHP_ONLINE;
		int (*fp)(unsigned int, struct hlist_node *) = NULL;
		cpuhp_state_add_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_state_remove_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_setup_state_multi(state, "", fp, fp);
		cpuhp_remove_multi_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_hotplug || mkdir -p build/cpu_hotplug

	file=build/cpu_hotplug/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_hotplug

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_hotplug.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_hotplug/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/cpu_hotplug_license || mkdir -p build/cpu_hotplug_license
cat confdefs.h - <<_ACEOF >build/cpu_hotplug_license/cpu_hotplug_license.c

#include <linux/module.h>

		#include <linux/cpuhotplug.h>


int
main (void)
{

		enum cpuhp_state state = CPUHP_ONLINE;
		int (*fp)(unsigned int, struct hlist_node *) = NULL;
		cpuhp_state_add_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_state_remove_instance_nocalls(0, (struct hlist_node *)NULL);
		cpuhp_setup_state_multi(state, "", fp, fp);
		cpuhp_remove_multi_state(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_hotplug_license || mkdir -p build/cpu_hotplug_license

	file=build/cpu_hotplug_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_hotplug_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_hotplug_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_hotplug_license/" >>build/Makefile
fi


fi





test -d build/generic_fillattr_userns || mkdir -p build/generic_fillattr_userns
cat confdefs.h - <<_ACEOF >build/generic_fillattr_userns/generic_fillattr_userns.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct user_namespace *userns = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(userns, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_userns || mkdir -p build/generic_fillattr_userns

	file=build/generic_fillattr_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_fillattr_userns_license || mkdir -p build/generic_fillattr_userns_license
cat confdefs.h - <<_ACEOF >build/generic_fillattr_userns_license/generic_fillattr_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct user_namespace *userns = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(userns, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_userns_license || mkdir -p build/generic_fillattr_userns_license

	file=build/generic_fillattr_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_userns_license/" >>build/Makefile
fi


fi




test -d build/generic_fillattr_mnt_idmap || mkdir -p build/generic_fillattr_mnt_idmap
cat confdefs.h - <<_ACEOF >build/generic_fillattr_mnt_idmap/generic_fillattr_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct mnt_idmap *idmap = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(idmap, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_mnt_idmap || mkdir -p build/generic_fillattr_mnt_idmap

	file=build/generic_fillattr_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/generic_fillattr_mnt_idmap_license || mkdir -p build/generic_fillattr_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/generic_fillattr_mnt_idmap_license/generic_fillattr_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct mnt_idmap *idmap = NULL;
		struct inode *in = NULL;
		struct kstat *k = NULL;
		generic_fillattr(idmap, in, k);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/generic_fillattr_mnt_idmap_license || mkdir -p build/generic_fillattr_mnt_idmap_license

	file=build/generic_fillattr_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/generic_fillattr_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := generic_fillattr_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += generic_fillattr_mnt_idmap_license/" >>build/Makefile
fi


fi





test -d build/mknod_mnt_idmap || mkdir -p build/mknod_mnt_idmap
cat confdefs.h - <<_ACEOF >build/mknod_mnt_idmap/mknod_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod          = tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_mnt_idmap || mkdir -p build/mknod_mnt_idmap

	file=build/mknod_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mknod_mnt_idmap_license || mkdir -p build/mknod_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/mknod_mnt_idmap_license/mknod_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod          = tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_mnt_idmap_license || mkdir -p build/mknod_mnt_idmap_license

	file=build/mknod_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_mnt_idmap_license/" >>build/Makefile
fi


fi




test -d build/mknod_userns || mkdir -p build/mknod_userns
cat confdefs.h - <<_ACEOF >build/mknod_userns/mknod_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod		= tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_userns || mkdir -p build/mknod_userns

	file=build/mknod_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/mknod_userns_license || mkdir -p build/mknod_userns_license
cat confdefs.h - <<_ACEOF >build/mknod_userns_license/mknod_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_mknod(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    umode_t u, dev_t d) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.mknod		= tmp_mknod,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/mknod_userns_license || mkdir -p build/mknod_userns_license

	file=build/mknod_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/mknod_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := mknod_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += mknod_userns_license/" >>build/Makefile
fi


fi





test -d build/symlink_mnt_idmap || mkdir -p build/symlink_mnt_idmap
cat confdefs.h - <<_ACEOF >build/symlink_mnt_idmap/symlink_mnt_idmap.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>
		int tmp_symlink(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink                = tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_mnt_idmap || mkdir -p build/symlink_mnt_idmap

	file=build/symlink_mnt_idmap/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_mnt_idmap

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_mnt_idmap.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_mnt_idmap/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/symlink_mnt_idmap_license || mkdir -p build/symlink_mnt_idmap_license
cat confdefs.h - <<_ACEOF >build/symlink_mnt_idmap_license/symlink_mnt_idmap_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>
		int tmp_symlink(struct mnt_idmap *idmap,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink                = tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_mnt_idmap_license || mkdir -p build/symlink_mnt_idmap_license

	file=build/symlink_mnt_idmap_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_mnt_idmap_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_mnt_idmap_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_mnt_idmap_license/" >>build/Makefile
fi


fi



test -d build/symlink_userns || mkdir -p build/symlink_userns
cat confdefs.h - <<_ACEOF >build/symlink_userns/symlink_userns.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_symlink(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink		= tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_userns || mkdir -p build/symlink_userns

	file=build/symlink_userns/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_userns

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_userns.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_userns/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/symlink_userns_license || mkdir -p build/symlink_userns_license
cat confdefs.h - <<_ACEOF >build/symlink_userns_license/symlink_userns_license.c

#include <linux/module.h>

		#include <linux/fs.h>
		#include <linux/sched.h>

		int tmp_symlink(struct user_namespace *userns,
		    struct inode *inode ,struct dentry *dentry,
		    const char *path) { return 0; }

		static const struct inode_operations
			iops __attribute__ ((unused)) = {
			.symlink		= tmp_symlink,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/symlink_userns_license || mkdir -p build/symlink_userns_license

	file=build/symlink_userns_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/symlink_userns_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := symlink_userns_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += symlink_userns_license/" >>build/Makefile
fi


fi





test -d build/bio_max_segs || mkdir -p build/bio_max_segs
cat confdefs.h - <<_ACEOF >build/bio_max_segs/bio_max_segs.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		bio_max_segs(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_max_segs || mkdir -p build/bio_max_segs

	file=build/bio_max_segs/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_max_segs

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_max_segs.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_max_segs/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/bio_max_segs_license || mkdir -p build/bio_max_segs_license
cat confdefs.h - <<_ACEOF >build/bio_max_segs_license/bio_max_segs_license.c

#include <linux/module.h>

		#include <linux/bio.h>


int
main (void)
{

		bio_max_segs(1);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/bio_max_segs_license || mkdir -p build/bio_max_segs_license

	file=build/bio_max_segs_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/bio_max_segs_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := bio_max_segs_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += bio_max_segs_license/" >>build/Makefile
fi


fi





test -d build/signal_stop || mkdir -p build/signal_stop
cat confdefs.h - <<_ACEOF >build/signal_stop/signal_stop.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		kernel_signal_stop();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/signal_stop || mkdir -p build/signal_stop

	file=build/signal_stop/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/signal_stop

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := signal_stop.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += signal_stop/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/signal_stop_license || mkdir -p build/signal_stop_license
cat confdefs.h - <<_ACEOF >build/signal_stop_license/signal_stop_license.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		kernel_signal_stop();

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/signal_stop_license || mkdir -p build/signal_stop_license

	file=build/signal_stop_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/signal_stop_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := signal_stop_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += signal_stop_license/" >>build/Makefile
fi


fi





test -d build/siginfo || mkdir -p build/siginfo
cat confdefs.h - <<_ACEOF >build/siginfo/siginfo.c

#include <linux/module.h>

		#include <linux/signal_types.h>


int
main (void)
{

		kernel_siginfo_t info __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/siginfo || mkdir -p build/siginfo

	file=build/siginfo/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/siginfo

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := siginfo.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += siginfo/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/siginfo_license || mkdir -p build/siginfo_license
cat confdefs.h - <<_ACEOF >build/siginfo_license/siginfo_license.c

#include <linux/module.h>

		#include <linux/signal_types.h>


int
main (void)
{

		kernel_siginfo_t info __attribute__ ((unused));

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/siginfo_license || mkdir -p build/siginfo_license

	file=build/siginfo_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/siginfo_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := siginfo_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += siginfo_license/" >>build/Makefile
fi


fi






test -d build/sysfs_default_groups || mkdir -p build/sysfs_default_groups
cat confdefs.h - <<_ACEOF >build/sysfs_default_groups/sysfs_default_groups.c

#include <linux/module.h>

		#include <linux/kobject.h>


int
main (void)
{

		struct kobj_type __attribute__ ((unused)) kt = {
			.default_groups = (const struct attribute_group **)NULL };

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/sysfs_default_groups || mkdir -p build/sysfs_default_groups

	file=build/sysfs_default_groups/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sysfs_default_groups

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sysfs_default_groups.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sysfs_default_groups/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/sysfs_default_groups_license || mkdir -p build/sysfs_default_groups_license
cat confdefs.h - <<_ACEOF >build/sysfs_default_groups_license/sysfs_default_groups_license.c

#include <linux/module.h>

		#include <linux/kobject.h>


int
main (void)
{

		struct kobj_type __attribute__ ((unused)) kt = {
			.default_groups = (const struct attribute_group **)NULL };

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/sysfs_default_groups_license || mkdir -p build/sysfs_default_groups_license

	file=build/sysfs_default_groups_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/sysfs_default_groups_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := sysfs_default_groups_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += sysfs_default_groups_license/" >>build/Makefile
fi


fi






test -d build/set_special_state || mkdir -p build/set_special_state
cat confdefs.h - <<_ACEOF >build/set_special_state/set_special_state.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		set_special_state(TASK_STOPPED);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_special_state || mkdir -p build/set_special_state

	file=build/set_special_state/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_special_state

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_special_state.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_special_state/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/set_special_state_license || mkdir -p build/set_special_state_license
cat confdefs.h - <<_ACEOF >build/set_special_state_license/set_special_state_license.c

#include <linux/module.h>

		#include <linux/sched.h>


int
main (void)
{

		set_special_state(TASK_STOPPED);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/set_special_state_license || mkdir -p build/set_special_state_license

	file=build/set_special_state_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/set_special_state_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := set_special_state_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += set_special_state_license/" >>build/Makefile
fi


fi





test -d build/has_standalone_linux_stdarg || mkdir -p build/has_standalone_linux_stdarg
cat confdefs.h - <<_ACEOF >build/has_standalone_linux_stdarg/has_standalone_linux_stdarg.c

#include <linux/module.h>

		#include <linux/stdarg.h>

		#if !defined(va_start) || !defined(va_end) || \
		    !defined(va_arg) || !defined(va_copy)
		#error "<linux/stdarg.h> is invalid"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_standalone_linux_stdarg || mkdir -p build/has_standalone_linux_stdarg

	file=build/has_standalone_linux_stdarg/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_standalone_linux_stdarg

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_standalone_linux_stdarg.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_standalone_linux_stdarg/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_standalone_linux_stdarg_license || mkdir -p build/has_standalone_linux_stdarg_license
cat confdefs.h - <<_ACEOF >build/has_standalone_linux_stdarg_license/has_standalone_linux_stdarg_license.c

#include <linux/module.h>

		#include <linux/stdarg.h>

		#if !defined(va_start) || !defined(va_end) || \
		    !defined(va_arg) || !defined(va_copy)
		#error "<linux/stdarg.h> is invalid"
		#endif


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_standalone_linux_stdarg_license || mkdir -p build/has_standalone_linux_stdarg_license

	file=build/has_standalone_linux_stdarg_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_standalone_linux_stdarg_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_standalone_linux_stdarg_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_standalone_linux_stdarg_license/" >>build/Makefile
fi


fi





test -d build/pagemap_has_folio_wait_bit || mkdir -p build/pagemap_has_folio_wait_bit
cat confdefs.h - <<_ACEOF >build/pagemap_has_folio_wait_bit/pagemap_has_folio_wait_bit.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		static struct folio *f = NULL;

		folio_wait_bit(f, PG_writeback);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/pagemap_has_folio_wait_bit || mkdir -p build/pagemap_has_folio_wait_bit

	file=build/pagemap_has_folio_wait_bit/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pagemap_has_folio_wait_bit

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pagemap_has_folio_wait_bit.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pagemap_has_folio_wait_bit/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/pagemap_has_folio_wait_bit_license || mkdir -p build/pagemap_has_folio_wait_bit_license
cat confdefs.h - <<_ACEOF >build/pagemap_has_folio_wait_bit_license/pagemap_has_folio_wait_bit_license.c

#include <linux/module.h>

		#include <linux/pagemap.h>


int
main (void)
{

		static struct folio *f = NULL;

		folio_wait_bit(f, PG_writeback);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/pagemap_has_folio_wait_bit_license || mkdir -p build/pagemap_has_folio_wait_bit_license

	file=build/pagemap_has_folio_wait_bit_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/pagemap_has_folio_wait_bit_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := pagemap_has_folio_wait_bit_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += pagemap_has_folio_wait_bit_license/" >>build/Makefile
fi


fi





test -d build/add_disk_ret || mkdir -p build/add_disk_ret
cat confdefs.h - <<_ACEOF >build/add_disk_ret/add_disk_ret.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		int error __attribute__ ((unused)) = add_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/add_disk_ret || mkdir -p build/add_disk_ret

	file=build/add_disk_ret/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/add_disk_ret

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := add_disk_ret.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += add_disk_ret/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/add_disk_ret_license || mkdir -p build/add_disk_ret_license
cat confdefs.h - <<_ACEOF >build/add_disk_ret_license/add_disk_ret_license.c

#include <linux/module.h>

		#include <linux/blkdev.h>


int
main (void)
{

		struct gendisk *disk = NULL;
		int error __attribute__ ((unused)) = add_disk(disk);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/add_disk_ret_license || mkdir -p build/add_disk_ret_license

	file=build/add_disk_ret_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/add_disk_ret_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := add_disk_ret_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += add_disk_ret_license/" >>build/Makefile
fi


fi






test -d build/kthread_complete_and_exit || mkdir -p build/kthread_complete_and_exit
cat confdefs.h - <<_ACEOF >build/kthread_complete_and_exit/kthread_complete_and_exit.c

#include <linux/module.h>

		#include <linux/kthread.h>


int
main (void)
{

		struct completion *completion = NULL;
		long code = 0;

		kthread_complete_and_exit(completion, code);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_complete_and_exit || mkdir -p build/kthread_complete_and_exit

	file=build/kthread_complete_and_exit/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_complete_and_exit

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_complete_and_exit.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_complete_and_exit/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kthread_complete_and_exit_license || mkdir -p build/kthread_complete_and_exit_license
cat confdefs.h - <<_ACEOF >build/kthread_complete_and_exit_license/kthread_complete_and_exit_license.c

#include <linux/module.h>

		#include <linux/kthread.h>


int
main (void)
{

		struct completion *completion = NULL;
		long code = 0;

		kthread_complete_and_exit(completion, code);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_complete_and_exit_license || mkdir -p build/kthread_complete_and_exit_license

	file=build/kthread_complete_and_exit_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_complete_and_exit_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_complete_and_exit_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_complete_and_exit_license/" >>build/Makefile
fi


fi





test -d build/kthread_dequeue_signal || mkdir -p build/kthread_dequeue_signal
cat confdefs.h - <<_ACEOF >build/kthread_dequeue_signal/kthread_dequeue_signal.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		struct task_struct *task = NULL;
		sigset_t *mask = NULL;
		kernel_siginfo_t *info = NULL;
		enum pid_type *type = NULL;
		int error __attribute__ ((unused));

		error = dequeue_signal(task, mask, info, type);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_dequeue_signal || mkdir -p build/kthread_dequeue_signal

	file=build/kthread_dequeue_signal/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_dequeue_signal

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_dequeue_signal.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_dequeue_signal/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/kthread_dequeue_signal_license || mkdir -p build/kthread_dequeue_signal_license
cat confdefs.h - <<_ACEOF >build/kthread_dequeue_signal_license/kthread_dequeue_signal_license.c

#include <linux/module.h>

		#include <linux/sched/signal.h>


int
main (void)
{

		struct task_struct *task = NULL;
		sigset_t *mask = NULL;
		kernel_siginfo_t *info = NULL;
		enum pid_type *type = NULL;
		int error __attribute__ ((unused));

		error = dequeue_signal(task, mask, info, type);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/kthread_dequeue_signal_license || mkdir -p build/kthread_dequeue_signal_license

	file=build/kthread_dequeue_signal_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/kthread_dequeue_signal_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := kthread_dequeue_signal_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += kthread_dequeue_signal_license/" >>build/Makefile
fi


fi






test -d build/zero_page || mkdir -p build/zero_page
cat confdefs.h - <<_ACEOF >build/zero_page/zero_page.c

#include <linux/module.h>

		#include <asm/pgtable.h>


int
main (void)
{

		struct page *p __attribute__ ((unused));
		p = ZERO_PAGE(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/zero_page || mkdir -p build/zero_page

	file=build/zero_page/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/zero_page

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := zero_page.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += zero_page/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/zero_page_license || mkdir -p build/zero_page_license
cat confdefs.h - <<_ACEOF >build/zero_page_license/zero_page_license.c

#include <linux/module.h>

		#include <asm/pgtable.h>


int
main (void)
{

		struct page *p __attribute__ ((unused));
		p = ZERO_PAGE(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/zero_page_license || mkdir -p build/zero_page_license

	file=build/zero_page_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/zero_page_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := zero_page_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += zero_page_license/" >>build/Makefile
fi


fi





test -d build/__copy_from_user_inatomic || mkdir -p build/__copy_from_user_inatomic
cat confdefs.h - <<_ACEOF >build/__copy_from_user_inatomic/__copy_from_user_inatomic.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		int result __attribute__ ((unused)) = __copy_from_user_inatomic(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/__copy_from_user_inatomic || mkdir -p build/__copy_from_user_inatomic

	file=build/__copy_from_user_inatomic/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__copy_from_user_inatomic

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __copy_from_user_inatomic.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __copy_from_user_inatomic/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/__copy_from_user_inatomic_license || mkdir -p build/__copy_from_user_inatomic_license
cat confdefs.h - <<_ACEOF >build/__copy_from_user_inatomic_license/__copy_from_user_inatomic_license.c

#include <linux/module.h>

		#include <linux/uaccess.h>


int
main (void)
{

		int result __attribute__ ((unused)) = __copy_from_user_inatomic(NULL, NULL, 0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/__copy_from_user_inatomic_license || mkdir -p build/__copy_from_user_inatomic_license

	file=build/__copy_from_user_inatomic_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/__copy_from_user_inatomic_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := __copy_from_user_inatomic_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += __copy_from_user_inatomic_license/" >>build/Makefile
fi


fi





test -d build/user_ns_common_inum || mkdir -p build/user_ns_common_inum
cat confdefs.h - <<_ACEOF >build/user_ns_common_inum/user_ns_common_inum.c

#include <linux/module.h>

		#include <linux/user_namespace.h>


int
main (void)
{

		struct user_namespace uns;
		uns.ns.inum = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/user_ns_common_inum || mkdir -p build/user_ns_common_inum

	file=build/user_ns_common_inum/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/user_ns_common_inum

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := user_ns_common_inum.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += user_ns_common_inum/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/user_ns_common_inum_license || mkdir -p build/user_ns_common_inum_license
cat confdefs.h - <<_ACEOF >build/user_ns_common_inum_license/user_ns_common_inum_license.c

#include <linux/module.h>

		#include <linux/user_namespace.h>


int
main (void)
{

		struct user_namespace uns;
		uns.ns.inum = 0;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/user_ns_common_inum_license || mkdir -p build/user_ns_common_inum_license

	file=build/user_ns_common_inum_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/user_ns_common_inum_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := user_ns_common_inum_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += user_ns_common_inum_license/" >>build/Makefile
fi


fi





test -d build/idmap_mnt_api || mkdir -p build/idmap_mnt_api
cat confdefs.h - <<_ACEOF >build/idmap_mnt_api/idmap_mnt_api.c

#include <linux/module.h>

                #include <linux/fs.h>


int
main (void)
{

		int fs_flags = 0;
		fs_flags |= FS_ALLOW_IDMAP;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/idmap_mnt_api || mkdir -p build/idmap_mnt_api

	file=build/idmap_mnt_api/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/idmap_mnt_api

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := idmap_mnt_api.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += idmap_mnt_api/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/idmap_mnt_api_license || mkdir -p build/idmap_mnt_api_license
cat confdefs.h - <<_ACEOF >build/idmap_mnt_api_license/idmap_mnt_api_license.c

#include <linux/module.h>

                #include <linux/fs.h>


int
main (void)
{

		int fs_flags = 0;
		fs_flags |= FS_ALLOW_IDMAP;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/idmap_mnt_api_license || mkdir -p build/idmap_mnt_api_license

	file=build/idmap_mnt_api_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/idmap_mnt_api_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := idmap_mnt_api_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += idmap_mnt_api_license/" >>build/Makefile
fi


fi





test -d build/iattr_vfsid || mkdir -p build/iattr_vfsid
cat confdefs.h - <<_ACEOF >build/iattr_vfsid/iattr_vfsid.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct iattr ia;
		ia.ia_vfsuid = (vfsuid_t){0};
		ia.ia_vfsgid = (vfsgid_t){0};

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/iattr_vfsid || mkdir -p build/iattr_vfsid

	file=build/iattr_vfsid/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iattr_vfsid

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iattr_vfsid.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iattr_vfsid/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/iattr_vfsid_license || mkdir -p build/iattr_vfsid_license
cat confdefs.h - <<_ACEOF >build/iattr_vfsid_license/iattr_vfsid_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct iattr ia;
		ia.ia_vfsuid = (vfsuid_t){0};
		ia.ia_vfsgid = (vfsgid_t){0};

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/iattr_vfsid_license || mkdir -p build/iattr_vfsid_license

	file=build/iattr_vfsid_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/iattr_vfsid_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := iattr_vfsid_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += iattr_vfsid_license/" >>build/Makefile
fi


fi





test -d build/filemap_range_has_page || mkdir -p build/filemap_range_has_page
cat confdefs.h - <<_ACEOF >build/filemap_range_has_page/filemap_range_has_page.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct address_space *mapping = NULL;
		loff_t lstart = 0;
		loff_t lend = 0;
		bool ret __attribute__ ((unused));

		ret = filemap_range_has_page(mapping, lstart, lend);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/filemap_range_has_page || mkdir -p build/filemap_range_has_page

	file=build/filemap_range_has_page/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/filemap_range_has_page

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := filemap_range_has_page.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += filemap_range_has_page/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/filemap_range_has_page_license || mkdir -p build/filemap_range_has_page_license
cat confdefs.h - <<_ACEOF >build/filemap_range_has_page_license/filemap_range_has_page_license.c

#include <linux/module.h>

		#include <linux/fs.h>


int
main (void)
{

		struct address_space *mapping = NULL;
		loff_t lstart = 0;
		loff_t lend = 0;
		bool ret __attribute__ ((unused));

		ret = filemap_range_has_page(mapping, lstart, lend);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/filemap_range_has_page_license || mkdir -p build/filemap_range_has_page_license

	file=build/filemap_range_has_page_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/filemap_range_has_page_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := filemap_range_has_page_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += filemap_range_has_page_license/" >>build/Makefile
fi


fi





test -d build/writepage_t_folio || mkdir -p build/writepage_t_folio
cat confdefs.h - <<_ACEOF >build/writepage_t_folio/writepage_t_folio.c

#include <linux/module.h>

		#include <linux/writeback.h>
		int putpage(struct folio *folio,
		    struct writeback_control *wbc, void *data)
		{ return 0; }
		writepage_t func = putpage;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/writepage_t_folio || mkdir -p build/writepage_t_folio

	file=build/writepage_t_folio/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/writepage_t_folio

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := writepage_t_folio.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += writepage_t_folio/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/writepage_t_folio_license || mkdir -p build/writepage_t_folio_license
cat confdefs.h - <<_ACEOF >build/writepage_t_folio_license/writepage_t_folio_license.c

#include <linux/module.h>

		#include <linux/writeback.h>
		int putpage(struct folio *folio,
		    struct writeback_control *wbc, void *data)
		{ return 0; }
		writepage_t func = putpage;


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/writepage_t_folio_license || mkdir -p build/writepage_t_folio_license

	file=build/writepage_t_folio_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/writepage_t_folio_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := writepage_t_folio_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += writepage_t_folio_license/" >>build/Makefile
fi


fi





test -d build/reclaim_state_reclaimed || mkdir -p build/reclaim_state_reclaimed
cat confdefs.h - <<_ACEOF >build/reclaim_state_reclaimed/reclaim_state_reclaimed.c

#include <linux/module.h>

		#include <linux/swap.h>
		static const struct reclaim_state
		    rs  __attribute__ ((unused)) = {
		    .reclaimed = 100,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/reclaim_state_reclaimed || mkdir -p build/reclaim_state_reclaimed

	file=build/reclaim_state_reclaimed/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/reclaim_state_reclaimed

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := reclaim_state_reclaimed.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += reclaim_state_reclaimed/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/reclaim_state_reclaimed_license || mkdir -p build/reclaim_state_reclaimed_license
cat confdefs.h - <<_ACEOF >build/reclaim_state_reclaimed_license/reclaim_state_reclaimed_license.c

#include <linux/module.h>

		#include <linux/swap.h>
		static const struct reclaim_state
		    rs  __attribute__ ((unused)) = {
		    .reclaimed = 100,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/reclaim_state_reclaimed_license || mkdir -p build/reclaim_state_reclaimed_license

	file=build/reclaim_state_reclaimed_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/reclaim_state_reclaimed_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := reclaim_state_reclaimed_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += reclaim_state_reclaimed_license/" >>build/Makefile
fi


fi





test -d build/has_register_sysctl_table || mkdir -p build/has_register_sysctl_table
cat confdefs.h - <<_ACEOF >build/has_register_sysctl_table/has_register_sysctl_table.c

#include <linux/module.h>

		#include <linux/sysctl.h>

		static struct ctl_table dummy_table[] = {
			{}
		};



int
main (void)
{

		struct ctl_table_header *h
			__attribute((unused)) = register_sysctl_table(dummy_table);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_register_sysctl_table || mkdir -p build/has_register_sysctl_table

	file=build/has_register_sysctl_table/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_register_sysctl_table

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_register_sysctl_table.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_register_sysctl_table/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_register_sysctl_table_license || mkdir -p build/has_register_sysctl_table_license
cat confdefs.h - <<_ACEOF >build/has_register_sysctl_table_license/has_register_sysctl_table_license.c

#include <linux/module.h>

		#include <linux/sysctl.h>

		static struct ctl_table dummy_table[] = {
			{}
		};



int
main (void)
{

		struct ctl_table_header *h
			__attribute((unused)) = register_sysctl_table(dummy_table);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_register_sysctl_table_license || mkdir -p build/has_register_sysctl_table_license

	file=build/has_register_sysctl_table_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_register_sysctl_table_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_register_sysctl_table_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_register_sysctl_table_license/" >>build/Makefile
fi


fi





test -d build/has_copy_splice_read || mkdir -p build/has_copy_splice_read
cat confdefs.h - <<_ACEOF >build/has_copy_splice_read/has_copy_splice_read.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct file_operations fops __attribute__((unused)) = {
			.splice_read = copy_splice_read,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_copy_splice_read || mkdir -p build/has_copy_splice_read

	file=build/has_copy_splice_read/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_copy_splice_read

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_copy_splice_read.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_copy_splice_read/" >>build/Makefile
fi


	if  test -n ""
then :


test -d build/has_copy_splice_read_license || mkdir -p build/has_copy_splice_read_license
cat confdefs.h - <<_ACEOF >build/has_copy_splice_read_license/has_copy_splice_read_license.c

#include <linux/module.h>

		#include <linux/fs.h>

		struct file_operations fops __attribute__((unused)) = {
			.splice_read = copy_splice_read,
		};


int
main (void)
{

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE();

_ACEOF


	test -d build || mkdir -p build
	test -d build/has_copy_splice_read_license || mkdir -p build/has_copy_splice_read_license

	file=build/has_copy_splice_read_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/has_copy_splice_read_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := has_copy_splice_read_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += has_copy_splice_read_license/" >>build/Makefile
fi


fi


	case "$host_cpu" in
		powerpc*)



test -d build/cpu_has_feature || mkdir -p build/cpu_has_feature
cat confdefs.h - <<_ACEOF >build/cpu_has_feature/cpu_has_feature.c

#include <linux/module.h>

		#include <linux/version.h>
		#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 7, 0)
		#include <asm/cpu_has_feature.h>
		#else
		#include <asm/cputable.h>
		#endif


int
main (void)
{

		return cpu_has_feature(CPU_FTR_ALTIVEC) ? 0 : 1;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_has_feature || mkdir -p build/cpu_has_feature

	file=build/cpu_has_feature/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_has_feature

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_has_feature.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_has_feature/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/cpu_has_feature_license || mkdir -p build/cpu_has_feature_license
cat confdefs.h - <<_ACEOF >build/cpu_has_feature_license/cpu_has_feature_license.c

#include <linux/module.h>

		#include <linux/version.h>
		#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 7, 0)
		#include <asm/cpu_has_feature.h>
		#else
		#include <asm/cputable.h>
		#endif


int
main (void)
{

		return cpu_has_feature(CPU_FTR_ALTIVEC) ? 0 : 1;

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/cpu_has_feature_license || mkdir -p build/cpu_has_feature_license

	file=build/cpu_has_feature_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/cpu_has_feature_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := cpu_has_feature_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += cpu_has_feature_license/" >>build/Makefile
fi


fi





test -d build/flush_dcache_page || mkdir -p build/flush_dcache_page
cat confdefs.h - <<_ACEOF >build/flush_dcache_page/flush_dcache_page.c

#include <linux/module.h>

		#include <asm/cacheflush.h>


int
main (void)
{

		flush_dcache_page(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE("Dual BSD/GPL");

_ACEOF


	test -d build || mkdir -p build
	test -d build/flush_dcache_page || mkdir -p build/flush_dcache_page

	file=build/flush_dcache_page/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/flush_dcache_page

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := flush_dcache_page.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += flush_dcache_page/" >>build/Makefile
fi


	if  test -n "ZFS_META_LICENSE"
then :


test -d build/flush_dcache_page_license || mkdir -p build/flush_dcache_page_license
cat confdefs.h - <<_ACEOF >build/flush_dcache_page_license/flush_dcache_page_license.c

#include <linux/module.h>

		#include <asm/cacheflush.h>


int
main (void)
{

		flush_dcache_page(0);

	;
	return 0;
}

MODULE_DESCRIPTION("conftest");
MODULE_AUTHOR(ZFS_META_AUTHOR);
MODULE_VERSION(ZFS_META_VERSION "-" ZFS_META_RELEASE);
MODULE_LICENSE(ZFS_META_LICENSE);

_ACEOF


	test -d build || mkdir -p build
	test -d build/flush_dcache_page_license || mkdir -p build/flush_dcache_page_license

	file=build/flush_dcache_page_license/Makefile

		cat - <<_ACEOF >$file
# Example command line to manually build source
# make modules -C $LINUX_OBJ $ARCH_UM M=$PWD/build/flush_dcache_page_license

ccflags-y := -Werror $FRAME_LARGER_THAN
_ACEOF



		echo "obj-m := flush_dcache_page_license.o" >>$file

	if test "xyes" = "xyes"
then :
  echo "obj-m += flush_dcache_page_license/" >>build/Makefile
fi


fi


			;;
	esac

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for available kernel interfaces" >&5
printf %s "checking for available kernel interfaces... " >&6; }






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="yes" KBUILD_MODPOST_WARN=""
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.compile.kabi
		mv build/build.log build/build.log.kabi

else $as_nop

	        as_fn_error $? "
        *** Unable to compile test source to determine kernel interfaces." "$LINENO" 5

fi



																		if test "x$enable_linux_builtin" = "xno"
then :

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.kabi); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				if test "${name##*_}" = "license"
then :






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build/$name >build/$name/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/$name/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/$name/Makefile build/$name/Makefile.modpost.kabi
		cat build/$name/build.log >>build/build.log.kabi

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi


					echo "obj-n += $dir" >>build/Makefile

else $as_nop

					echo "obj-m += $dir" >>build/Makefile

fi

else $as_nop

				echo "obj-n += $dir" >>build/Makefile

fi
		done






	{ ac_try='
	    KBUILD_MODPOST_NOFINAL="" KBUILD_MODPOST_WARN="yes"
	    make modules -k -j$TEST_JOBS ${KERNEL_CC:+CC=$KERNEL_CC}
	    ${KERNEL_LD:+LD=$KERNEL_LD} ${KERNEL_LLVM:+LLVM=$KERNEL_LLVM}
	    CONFIG_MODULES=y CFLAGS_MODULE=-DCONFIG_MODULES
	    -C $LINUX_OBJ $ARCH_UM M=$PWD/build >build/build.log 2>&1'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
	if { ac_try='test -f build/build.log'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		mv build/Makefile build/Makefile.modpost.kabi
		cat build/build.log >>build/build.log.kabi

else $as_nop

	        as_fn_error $? "
        *** Unable to modpost test source to determine kernel interfaces." "$LINENO" 5

fi



else $as_nop

		for dir in $(awk '/^obj-m/ { print $3 }' \
		    build/Makefile.compile.kabi); do
			name=${dir%/}
			if test -f build/$name/$name.o
then :

				touch build/$name/$name.ko

fi
		done

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether access_ok() has 'type' parameter" >&5
printf %s "checking whether access_ok() has 'type' parameter... " >&6; }

	if test -d build/access_ok_type
then :

		if test -f build/access_ok_type/access_ok_type.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ACCESS_OK_TYPE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"access_ok_type\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether global_node_page_state() exists" >&5
printf %s "checking whether global_node_page_state() exists... " >&6; }

	if test -d build/global_node_page_state
then :

		if test -f build/global_node_page_state/global_node_page_state.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GLOBAL_NODE_PAGE_STATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"global_node_page_state\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether global_zone_page_state() exists" >&5
printf %s "checking whether global_zone_page_state() exists... " >&6; }

	if test -d build/global_zone_page_state
then :

		if test -f build/global_zone_page_state/global_zone_page_state.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GLOBAL_ZONE_PAGE_STATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"global_zone_page_state\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum node_stat_item contains NR_FILE_PAGES" >&5
printf %s "checking whether enum node_stat_item contains NR_FILE_PAGES... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "node_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_FILE_PAGES'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_NODE_STAT_ITEM_NR_FILE_PAGES 1" >>confdefs.h

		ZFS_ENUM_NODE_STAT_ITEM_NR_FILE_PAGES=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum node_stat_item contains NR_INACTIVE_ANON" >&5
printf %s "checking whether enum node_stat_item contains NR_INACTIVE_ANON... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "node_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_ANON'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_ANON 1" >>confdefs.h

		ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_ANON=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum node_stat_item contains NR_INACTIVE_FILE" >&5
printf %s "checking whether enum node_stat_item contains NR_INACTIVE_FILE... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "node_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_FILE'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_FILE 1" >>confdefs.h

		ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_FILE=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum zone_stat_item contains NR_FILE_PAGES" >&5
printf %s "checking whether enum zone_stat_item contains NR_FILE_PAGES... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "zone_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_FILE_PAGES'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_ZONE_STAT_ITEM_NR_FILE_PAGES 1" >>confdefs.h

		ZFS_ENUM_ZONE_STAT_ITEM_NR_FILE_PAGES=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum zone_stat_item contains NR_INACTIVE_ANON" >&5
printf %s "checking whether enum zone_stat_item contains NR_INACTIVE_ANON... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "zone_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_ANON'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_ANON 1" >>confdefs.h

		ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_ANON=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether enum zone_stat_item contains NR_INACTIVE_FILE" >&5
printf %s "checking whether enum zone_stat_item contains NR_INACTIVE_FILE... " >&6; }
	if { ac_try='"${srcdir}/scripts/enum-extract.pl" "zone_stat_item" "$LINUX/include/linux/mmzone.h" | grep -Eqx NR_INACTIVE_FILE'
  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_FILE 1" >>confdefs.h

		ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_FILE=1

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether global_page_state enums are sane" >&5
printf %s "checking whether global_page_state enums are sane... " >&6; }


	enum_check_a="$ZFS_ENUM_NODE_STAT_ITEM_NR_FILE_PAGES"
	enum_check_b="$ZFS_ENUM_ZONE_STAT_ITEM_NR_FILE_PAGES"
	if test -n "$enum_check_a" -a -n "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_FILE_PAGES in either node_stat_item or zone_stat_item: DUPLICATE" >&5
printf "%s\n" "NR_FILE_PAGES in either node_stat_item or zone_stat_item: DUPLICATE" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi
	if test -z "$enum_check_a" -a -z "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_FILE_PAGES in either node_stat_item or zone_stat_item: NOT FOUND" >&5
printf "%s\n" "NR_FILE_PAGES in either node_stat_item or zone_stat_item: NOT FOUND" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi


	enum_check_a="$ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_ANON"
	enum_check_b="$ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_ANON"
	if test -n "$enum_check_a" -a -n "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: DUPLICATE" >&5
printf "%s\n" "NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: DUPLICATE" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi
	if test -z "$enum_check_a" -a -z "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: NOT FOUND" >&5
printf "%s\n" "NR_INACTIVE_ANON in either node_stat_item or zone_stat_item: NOT FOUND" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi


	enum_check_a="$ZFS_ENUM_NODE_STAT_ITEM_NR_INACTIVE_FILE"
	enum_check_b="$ZFS_ENUM_ZONE_STAT_ITEM_NR_INACTIVE_FILE"
	if test -n "$enum_check_a" -a -n "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: DUPLICATE" >&5
printf "%s\n" "NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: DUPLICATE" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi
	if test -z "$enum_check_a" -a -z "$enum_check_b"
then :


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: NOT FOUND" >&5
printf "%s\n" "NR_INACTIVE_FILE in either node_stat_item or zone_stat_item: NOT FOUND" >&6; }

	as_fn_error $? "
	*** None of the expected \"global page state\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether compile-time stack validation (objtool) is available" >&5
printf %s "checking whether compile-time stack validation (objtool) is available... " >&6; }

	if test -d build/objtool
then :

		if test -f build/objtool/objtool.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_OBJTOOL 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether STACK_FRAME_NON_STANDARD is defined" >&5
printf %s "checking whether STACK_FRAME_NON_STANDARD is defined... " >&6; }

	if test -d build/stack_frame_non_standard
then :

		if test -f build/stack_frame_non_standard/stack_frame_non_standard.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_STACK_FRAME_NON_STANDARD 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"stack_frame_non_standard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"objtool\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether pde_data() is lowercase" >&5
printf %s "checking whether pde_data() is lowercase... " >&6; }

	if test -d build/pde_data
then :

		if test -f build/pde_data/pde_data.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define SPL_PDE_DATA pde_data" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

printf "%s\n" "#define SPL_PDE_DATA PDE_DATA" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"pde_data\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fallocate() exists" >&5
printf %s "checking whether fops->fallocate() exists... " >&6; }

	if test -d build/file_fallocate
then :

		if test -f build/file_fallocate/file_fallocate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether FALLOC_FL_ZERO_RANGE exists" >&5
printf %s "checking whether FALLOC_FL_ZERO_RANGE exists... " >&6; }

	if test -d build/falloc_fl_zero_range
then :

		if test -f build/falloc_fl_zero_range/falloc_fl_zero_range.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FALLOC_FL_ZERO_RANGE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"falloc_fl_zero_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop


	as_fn_error $? "
	*** None of the expected \"file_fallocate\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_fallocate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fadvise() exists" >&5
printf %s "checking whether fops->fadvise() exists... " >&6; }

	if test -d build/file_fadvise
then :

		if test -f build/file_fadvise/file_fadvise.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_FADVISE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_fadvise\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_fadvise() is available" >&5
printf %s "checking whether generic_fadvise() is available... " >&6; }

	if  ! test -f build/generic_fadvise/generic_fadvise.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_fadvise[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/fadvise.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_fadvise)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FADVISE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FADVISE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FADVISE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether zlib_deflate_workspacesize() wants 2 args" >&5
printf %s "checking whether zlib_deflate_workspacesize() wants 2 args... " >&6; }

	if test -d build/2args_zlib_deflate_workspacesize
then :

		if test -f build/2args_zlib_deflate_workspacesize/2args_zlib_deflate_workspacesize.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_ZLIB_DEFLATE_WORKSPACESIZE 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"zlib_deflate_workspacesize()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"2args_zlib_deflate_workspacesize\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct rw_semaphore has member activity" >&5
printf %s "checking whether struct rw_semaphore has member activity... " >&6; }

	if test -d build/rwsem_activity
then :

		if test -f build/rwsem_activity/rwsem_activity.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RWSEM_ACTIVITY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"rwsem_activity\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct rw_semaphore has atomic_long_t member count" >&5
printf %s "checking whether struct rw_semaphore has atomic_long_t member count... " >&6; }

	if test -d build/rwsem_atomic_long_count
then :

		if test -f build/rwsem_atomic_long_count/rwsem_atomic_long_count.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RWSEM_ATOMIC_LONG_COUNT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"rwsem_atomic_long_count\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether header linux/sched/rt.h exists" >&5
printf %s "checking whether header linux/sched/rt.h exists... " >&6; }

	if test -d build/sched_rt_header
then :

		if test -f build/sched_rt_header/sched_rt_header.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sched_rt_header\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sched_rt_header\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether header linux/sched/signal.h exists" >&5
printf %s "checking whether header linux/sched/signal.h exists... " >&6; }

	if test -d build/sched_signal_header
then :

		if test -f build/sched_signal_header/sched_signal_header.ko
then :


printf "%s\n" "#define HAVE_SCHED_SIGNAL_HEADER 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sched_signal_header\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether io_schedule_timeout() is available" >&5
printf %s "checking whether io_schedule_timeout() is available... " >&6; }

	if  ! test -f build/io_schedule_timeout/io_schedule_timeout.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]io_schedule_timeout[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in ; do
			grep -q -E "EXPORT_SYMBOL.*(io_schedule_timeout)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IO_SCHEDULE_TIMEOUT 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IO_SCHEDULE_TIMEOUT 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IO_SCHEDULE_TIMEOUT 1" >>confdefs.h



fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether usleep_range() is available" >&5
printf %s "checking whether usleep_range() is available... " >&6; }

	if test -d build/usleep_range
then :

		if test -f build/usleep_range/usleep_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"usleep_range()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"usleep_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kmem_cache_create_usercopy() exists" >&5
printf %s "checking whether kmem_cache_create_usercopy() exists... " >&6; }

	if test -d build/kmem_cache_create_usercopy
then :

		if test -f build/kmem_cache_create_usercopy/kmem_cache_create_usercopy.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KMEM_CACHE_CREATE_USERCOPY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kmem_cache_create_usercopy\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kvmalloc(ptr, flags) is available" >&5
printf %s "checking whether kvmalloc(ptr, flags) is available... " >&6; }

	if test -d build/kvmalloc
then :

		if test -f build/kvmalloc/kvmalloc.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KVMALLOC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kvmalloc\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __vmalloc(ptr, flags, pageflags) is available" >&5
printf %s "checking whether __vmalloc(ptr, flags, pageflags) is available... " >&6; }

	if test -d build/__vmalloc
then :

		if test -f build/__vmalloc/__vmalloc.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VMALLOC_PAGE_KERNEL 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"__vmalloc\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether wait_on_bit() takes an action" >&5
printf %s "checking whether wait_on_bit() takes an action... " >&6; }

	if test -d build/wait_on_bit
then :

		if test -f build/wait_on_bit/wait_on_bit.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_ON_BIT_ACTION 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"wait_on_bit\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether wq_head->head and wq_entry->entry exist" >&5
printf %s "checking whether wq_head->head and wq_entry->entry exist... " >&6; }

	if test -d build/wait_queue_head_entry
then :

		if test -f build/wait_queue_head_entry/wait_queue_head_entry.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WAIT_QUEUE_HEAD_ENTRY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"wait_queue_head_entry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether timestamp_truncate() exists" >&5
printf %s "checking whether timestamp_truncate() exists... " >&6; }

	if test -d build/timestamp_truncate
then :

		if test -f build/timestamp_truncate/timestamp_truncate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_TIMESTAMP_TRUNCATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timestamp_truncate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode->i_*time's are timespec64" >&5
printf %s "checking whether inode->i_*time's are timespec64... " >&6; }

	if test -d build/inode_times
then :

		if test -f build/inode_times/inode_times.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_TIMESPEC64_TIMES 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_times\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_lock_shared() exists" >&5
printf %s "checking whether inode_lock_shared() exists... " >&6; }

	if test -d build/inode_lock
then :

		if test -f build/inode_lock/inode_lock.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_LOCK_SHARED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_lock\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether group_info->gid exists" >&5
printf %s "checking whether group_info->gid exists... " >&6; }

	if test -d build/group_info_gid
then :

		if test -f build/group_info_gid/group_info_gid.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GROUP_INFO_GID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"group_info_gid\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel_write() takes loff_t pointer" >&5
printf %s "checking whether kernel_write() takes loff_t pointer... " >&6; }

	if test -d build/kernel_write
then :

		if test -f build/kernel_write/kernel_write.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_WRITE_PPOS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kernel_write\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel_read() takes loff_t pointer" >&5
printf %s "checking whether kernel_read() takes loff_t pointer... " >&6; }

	if test -d build/kernel_read
then :

		if test -f build/kernel_read/kernel_read.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_READ_PPOS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kernel_read\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether timer_setup() is available" >&5
printf %s "checking whether timer_setup() is available... " >&6; }

	if test -d build/timer_setup
then :

		if test -f build/timer_setup/timer_setup.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_TIMER_SETUP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timer_setup\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether timer function expects timer_list" >&5
printf %s "checking whether timer function expects timer_list... " >&6; }

	if test -d build/timer_list_function
then :

		if test -f build/timer_list_function/timer_list_function.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_TIMER_FUNCTION_TIMER_LIST 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timer_list_function\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct timer_list has flags" >&5
printf %s "checking whether struct timer_list has flags... " >&6; }

	if test -d build/timer_list_flags
then :

		if test -f build/timer_list_flags/timer_list_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_TIMER_LIST_FLAGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"timer_list_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block->s_user_ns exists" >&5
printf %s "checking whether super_block->s_user_ns exists... " >&6; }

	if test -d build/super_user_ns
then :

		if test -f build/super_user_ns/super_user_ns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_USER_NS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_user_ns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether proc_ops structure exists" >&5
printf %s "checking whether proc_ops structure exists... " >&6; }

	if test -d build/proc_ops_struct
then :

		if test -f build/proc_ops_struct/proc_ops_struct.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PROC_OPS_STRUCT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"proc_ops_struct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->check_events() exists" >&5
printf %s "checking whether bops->check_events() exists... " >&6; }

	if test -d build/block_device_operations_check_events
then :

		if test -f build/block_device_operations_check_events/block_device_operations_check_events.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bops->check_events()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_check_events\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->release() is void and takes 2 args" >&5
printf %s "checking whether bops->release() is void and takes 2 args... " >&6; }

	if test -d build/block_device_operations_release_void
then :

		if test -f build/block_device_operations_release_void/block_device_operations_release_void.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->release() is void and takes 1 arg" >&5
printf %s "checking whether bops->release() is void and takes 1 arg... " >&6; }

	if test -d build/block_device_operations_release_void_1arg
then :

		if test -f build/block_device_operations_release_void_1arg/block_device_operations_release_void_1arg.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLOCK_DEVICE_OPERATIONS_RELEASE_1ARG 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"bops->release()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_release_void_1arg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_release_void\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bops->revalidate_disk() exists" >&5
printf %s "checking whether bops->revalidate_disk() exists... " >&6; }

	if test -d build/block_device_operations_revalidate_disk
then :

		if test -f build/block_device_operations_revalidate_disk/block_device_operations_revalidate_disk.ko
then :


printf "%s\n" "#define HAVE_BLOCK_DEVICE_OPERATIONS_REVALIDATE_DISK 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_revalidate_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_FAILFAST_MASK is defined" >&5
printf %s "checking whether REQ_FAILFAST_MASK is defined... " >&6; }

	if test -d build/req_failfast_mask
then :

		if test -f build/req_failfast_mask/req_failfast_mask.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"REQ_FAILFAST_MASK\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_failfast_mask\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_DISCARD is defined" >&5
printf %s "checking whether REQ_DISCARD is defined... " >&6; }

	if test -d build/req_discard
then :

		if test -f build/req_discard/req_discard.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_DISCARD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_discard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_FLUSH is defined" >&5
printf %s "checking whether REQ_FLUSH is defined... " >&6; }

	if test -d build/req_flush
then :

		if test -f build/req_flush/req_flush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_FLUSH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_flush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_PREFLUSH is defined" >&5
printf %s "checking whether REQ_PREFLUSH is defined... " >&6; }

	if test -d build/req_preflush
then :

		if test -f build/req_preflush/req_preflush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_PREFLUSH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_preflush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_OP_DISCARD is defined" >&5
printf %s "checking whether REQ_OP_DISCARD is defined... " >&6; }

	if test -d build/req_op_discard
then :

		if test -f build/req_op_discard/req_op_discard.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_OP_DISCARD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_op_discard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_OP_SECURE_ERASE is defined" >&5
printf %s "checking whether REQ_OP_SECURE_ERASE is defined... " >&6; }

	if test -d build/req_op_secure_erase
then :

		if test -f build/req_op_secure_erase/req_op_secure_erase.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_OP_SECURE_ERASE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_op_secure_erase\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether REQ_OP_FLUSH is defined" >&5
printf %s "checking whether REQ_OP_FLUSH is defined... " >&6; }

	if test -d build/req_op_flush
then :

		if test -f build/req_op_flush/req_op_flush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REQ_OP_FLUSH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"req_op_flush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio->bi_opf is defined" >&5
printf %s "checking whether bio->bi_opf is defined... " >&6; }

	if test -d build/bio_bi_opf
then :

		if test -f build/bio_bi_opf/bio_bi_opf.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BI_OPF 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bi_opf\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_op_attrs is available" >&5
printf %s "checking whether bio_set_op_attrs is available... " >&6; }

	if test -d build/bio_set_op_attrs
then :

		if test -f build/bio_set_op_attrs/bio_set_op_attrs.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_OP_ATTRS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_op_attrs\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_dev() is available" >&5
printf %s "checking whether bio_set_dev() is available... " >&6; }

	if test -d build/bio_set_dev
then :

		if test -f build/bio_set_dev/bio_set_dev.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_DEV 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_dev() is GPL-only" >&5
printf %s "checking whether bio_set_dev() is GPL-only... " >&6; }

	if test -d build/bio_set_dev_license
then :

		if test -f build/bio_set_dev_license/bio_set_dev_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_DEV_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_dev_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_set_dev() is a macro" >&5
printf %s "checking whether bio_set_dev() is a macro... " >&6; }

	if test -d build/bio_set_dev_macro
then :

		if test -f build/bio_set_dev_macro/bio_set_dev_macro.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_SET_DEV_MACRO 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_dev_macro\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_set_dev\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_end_io_t wants 1 arg" >&5
printf %s "checking whether bio_end_io_t wants 1 arg... " >&6; }

	if test -d build/bio_end_io_t_args
then :

		if test -f build/bio_end_io_t_args/bio_end_io_t_args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_BIO_END_IO_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_end_io_t_args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio->bi_status exists" >&5
printf %s "checking whether bio->bi_status exists... " >&6; }

	if test -d build/bio_bi_status
then :

		if test -f build/bio_bi_status/bio_bi_status.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BI_STATUS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bi_status\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio has bi_iter" >&5
printf %s "checking whether bio has bi_iter... " >&6; }

	if test -d build/bio_bvec_iter
then :

		if test -f build/bio_bvec_iter/bio_bvec_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BVEC_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bvec_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether submit_bio() wants 1 arg" >&5
printf %s "checking whether submit_bio() wants 1 arg... " >&6; }

	if test -d build/submit_bio
then :

		if test -f build/submit_bio/submit_bio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_SUBMIT_BIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"submit_bio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether current->bio_list exists" >&5
printf %s "checking whether current->bio_list exists... " >&6; }

	if test -d build/current_bio_list
then :

		if test -f build/current_bio_list/current_bio_list.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bio_list\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"current_bio_list\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkg_tryget() is available" >&5
printf %s "checking whether blkg_tryget() is available... " >&6; }

	if test -d build/blkg_tryget
then :

		if test -f build/blkg_tryget/blkg_tryget.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKG_TRYGET 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkg_tryget() is GPL-only" >&5
printf %s "checking whether blkg_tryget() is GPL-only... " >&6; }

	if test -d build/blkg_tryget_license
then :

		if test -f build/blkg_tryget_license/blkg_tryget_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKG_TRYGET_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkg_tryget_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkg_tryget\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio->bi_bdev->bd_disk exists" >&5
printf %s "checking whether bio->bi_bdev->bd_disk exists... " >&6; }

	if test -d build/bio_bdev_disk
then :

		if test -f build/bio_bdev_disk/bio_bdev_disk.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_BDEV_DISK 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bdev_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether block_device_operations->submit_bio() returns void" >&5
printf %s "checking whether block_device_operations->submit_bio() returns void... " >&6; }

	if test -d build/bio_bdev_submit_bio_void
then :

		if test -f build/bio_bdev_submit_bio_void/bio_bdev_submit_bio_void.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_SUBMIT_BIO_RETURNS_VOID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_bdev_submit_bio_void\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether linux/blk-cgroup.h exists" >&5
printf %s "checking whether linux/blk-cgroup.h exists... " >&6; }

	if test -d build/blk_cgroup_header
then :

		if test -f build/blk_cgroup_header/blk_cgroup_header.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LINUX_BLK_CGROUP_HEADER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_cgroup_header\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_alloc() wants 4 args" >&5
printf %s "checking whether bio_alloc() wants 4 args... " >&6; }

	if test -d build/bio_alloc_4arg
then :

		if test -f build/bio_alloc_4arg/bio_alloc_4arg.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_ALLOC_4ARG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_alloc_4arg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_get_by_path() exists and takes 3 args" >&5
printf %s "checking whether blkdev_get_by_path() exists and takes 3 args... " >&6; }

	if test -d build/blkdev_get_by_path
then :

		if test -f build/blkdev_get_by_path/blkdev_get_by_path.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_get_by_path() exists and takes 4 args" >&5
printf %s "checking whether blkdev_get_by_path() exists and takes 4 args... " >&6; }

	if test -d build/blkdev_get_by_path_4arg
then :

		if test -f build/blkdev_get_by_path_4arg/blkdev_get_by_path_4arg.ko
then :


printf "%s\n" "#define HAVE_BLKDEV_GET_BY_PATH_4ARG 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blkdev_get_by_path()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_get_by_path_4arg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_get_by_path\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_put() exists" >&5
printf %s "checking whether blkdev_put() exists... " >&6; }

	if test -d build/blkdev_put
then :

		if test -f build/blkdev_put/blkdev_put.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_put() accepts void* as arg 2" >&5
printf %s "checking whether blkdev_put() accepts void* as arg 2... " >&6; }

	if test -d build/blkdev_put_holder
then :

		if test -f build/blkdev_put_holder/blkdev_put_holder.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_PUT_HOLDER 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blkdev_put()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_put_holder\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_put\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_reread_part() exists" >&5
printf %s "checking whether blkdev_reread_part() exists... " >&6; }

	if test -d build/blkdev_reread_part
then :

		if test -f build/blkdev_reread_part/blkdev_reread_part.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_REREAD_PART 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_reread_part\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether invalidate_bdev() exists" >&5
printf %s "checking whether invalidate_bdev() exists... " >&6; }

	if test -d build/invalidate_bdev
then :

		if test -f build/invalidate_bdev/invalidate_bdev.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"invalidate_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"invalidate_bdev\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants dev_t arg" >&5
printf %s "checking whether lookup_bdev() wants dev_t arg... " >&6; }

	if  ! test -f build/lookup_bdev_devt/lookup_bdev_devt.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants 1 arg" >&5
printf %s "checking whether lookup_bdev() wants 1 arg... " >&6; }

	if  ! test -f build/lookup_bdev_1arg/lookup_bdev_1arg.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants 1 arg" >&5
printf %s "checking whether lookup_bdev() wants 1 arg... " >&6; }

	if  ! test -f build/lookup_bdev_1arg/lookup_bdev_1arg.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lookup_bdev() wants mode arg" >&5
printf %s "checking whether lookup_bdev() wants mode arg... " >&6; }

	if  ! test -f build/lookup_bdev_mode/lookup_bdev_mode.ko
then :



	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lookup_bdev[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/block_dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(lookup_bdev)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"lookup_bdev()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MODE_LOOKUP_BDEV 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_1ARG_LOOKUP_BDEV 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEVT_LOOKUP_BDEV 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEVT_LOOKUP_BDEV 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEVT_LOOKUP_BDEV 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_logical_block_size() is available" >&5
printf %s "checking whether bdev_logical_block_size() is available... " >&6; }

	if test -d build/bdev_logical_block_size
then :

		if test -f build/bdev_logical_block_size/bdev_logical_block_size.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bdev_logical_block_size()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_logical_block_size\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_physical_block_size() is available" >&5
printf %s "checking whether bdev_physical_block_size() is available... " >&6; }

	if test -d build/bdev_physical_block_size
then :

		if test -f build/bdev_physical_block_size/bdev_physical_block_size.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"bdev_physical_block_size()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_physical_block_size\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether check_disk_change() exists" >&5
printf %s "checking whether check_disk_change() exists... " >&6; }

	if test -d build/check_disk_change
then :

		if test -f build/check_disk_change/check_disk_change.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CHECK_DISK_CHANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"check_disk_change\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_check_media_change() exists" >&5
printf %s "checking whether bdev_check_media_change() exists... " >&6; }

	if test -d build/bdev_check_media_change
then :

		if test -f build/bdev_check_media_change/bdev_check_media_change.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_CHECK_MEDIA_CHANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_check_media_change\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_whole() is available" >&5
printf %s "checking whether bdev_whole() is available... " >&6; }

	if test -d build/bdev_whole
then :

		if test -f build/bdev_whole/bdev_whole.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_WHOLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_whole\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdevname() exists" >&5
printf %s "checking whether bdevname() exists... " >&6; }

	if test -d build/bdevname
then :

		if test -f build/bdevname/bdevname.ko
then :


printf "%s\n" "#define HAVE_BDEVNAME 1" >>confdefs.h

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdevname\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_get_by_path() handles ERESTARTSYS" >&5
printf %s "checking whether blkdev_get_by_path() handles ERESTARTSYS... " >&6; }
	as_arg_v1=$LINUX_VERSION
as_arg_v2=5.13.0
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_GET_ERESTARTSYS 1" >>confdefs.h

	 ;; #(
  0) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  2) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  *) :
     ;;
esac


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_issue_secure_erase() is available" >&5
printf %s "checking whether blkdev_issue_secure_erase() is available... " >&6; }

	if test -d build/blkdev_issue_secure_erase
then :

		if test -f build/blkdev_issue_secure_erase/blkdev_issue_secure_erase.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_ISSUE_SECURE_ERASE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blkdev_issue_discard() is available" >&5
printf %s "checking whether blkdev_issue_discard() is available... " >&6; }

	if test -d build/blkdev_issue_discard_flags
then :

		if test -f build/blkdev_issue_discard_flags/blkdev_issue_discard_flags.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLKDEV_ISSUE_DISCARD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blkdev_issue_discard()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_issue_discard_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blkdev_issue_secure_erase\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_kobj() exists" >&5
printf %s "checking whether bdev_kobj() exists... " >&6; }

	if test -d build/bdev_kobj
then :

		if test -f build/bdev_kobj/bdev_kobj.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_KOBJ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_kobj\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether part_to_dev() exists" >&5
printf %s "checking whether part_to_dev() exists... " >&6; }

	if test -d build/part_to_dev
then :

		if test -f build/part_to_dev/part_to_dev.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PART_TO_DEV 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"part_to_dev\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether disk_check_media_change() exists" >&5
printf %s "checking whether disk_check_media_change() exists... " >&6; }

	if test -d build/disk_check_media_change
then :

		if test -f build/disk_check_media_change/disk_check_media_change.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DISK_CHECK_MEDIA_CHANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"disk_check_media_change\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether BLK_STS_RESV_CONFLICT is defined" >&5
printf %s "checking whether BLK_STS_RESV_CONFLICT is defined... " >&6; }

	if test -d build/blk_sts_resv_conflict
then :

		if test -f build/blk_sts_resv_conflict/blk_sts_resv_conflict.ko
then :


printf "%s\n" "#define HAVE_BLK_STS_RESV_CONFLICT 1" >>confdefs.h

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_sts_resv_conflict\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_mode_t is defined" >&5
printf %s "checking whether blk_mode_t is defined... " >&6; }

	if test -d build/blk_mode_t
then :

		if test -f build/blk_mode_t/blk_mode_t.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_MODE_T 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_mode_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct blk_plug is available" >&5
printf %s "checking whether struct blk_plug is available... " >&6; }

	if test -d build/blk_plug
then :

		if test -f build/blk_plug/blk_plug.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_plug\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_plug\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue bdi is dynamic" >&5
printf %s "checking whether blk_queue bdi is dynamic... " >&6; }

	if test -d build/blk_queue_bdi
then :

		if test -f build/blk_queue_bdi/blk_queue_bdi.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_BDI_DYNAMIC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_bdi\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_update_readahead() exists" >&5
printf %s "checking whether blk_queue_update_readahead() exists... " >&6; }

	if test -d build/blk_queue_update_readahead
then :

		if test -f build/blk_queue_update_readahead/blk_queue_update_readahead.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_UPDATE_READAHEAD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether disk_update_readahead() exists" >&5
printf %s "checking whether disk_update_readahead() exists... " >&6; }

	if test -d build/disk_update_readahead
then :

		if test -f build/disk_update_readahead/disk_update_readahead.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DISK_UPDATE_READAHEAD 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"disk_update_readahead\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_update_readahead\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_max_discard_sectors() is available" >&5
printf %s "checking whether bdev_max_discard_sectors() is available... " >&6; }

	if test -d build/bdev_max_discard_sectors
then :

		if test -f build/bdev_max_discard_sectors/bdev_max_discard_sectors.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_MAX_DISCARD_SECTORS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_discard() is available" >&5
printf %s "checking whether blk_queue_discard() is available... " >&6; }

	if test -d build/blk_queue_discard
then :

		if test -f build/blk_queue_discard/blk_queue_discard.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_DISCARD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_discard\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_discard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_max_discard_sectors\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdev_max_secure_erase_sectors() is available" >&5
printf %s "checking whether bdev_max_secure_erase_sectors() is available... " >&6; }

	if test -d build/bdev_max_secure_erase_sectors
then :

		if test -f build/bdev_max_secure_erase_sectors/bdev_max_secure_erase_sectors.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_MAX_SECURE_ERASE_SECTORS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_secure_erase() is available" >&5
printf %s "checking whether blk_queue_secure_erase() is available... " >&6; }

	if test -d build/blk_queue_secure_erase
then :

		if test -f build/blk_queue_secure_erase/blk_queue_secure_erase.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_SECURE_ERASE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_secdiscard() is available" >&5
printf %s "checking whether blk_queue_secdiscard() is available... " >&6; }

	if test -d build/blk_queue_secdiscard
then :

		if test -f build/blk_queue_secdiscard/blk_queue_secdiscard.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_SECDISCARD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_secure_erase\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_secdiscard\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_secure_erase\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_max_secure_erase_sectors\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flag_set() exists" >&5
printf %s "checking whether blk_queue_flag_set() exists... " >&6; }

	if test -d build/blk_queue_flag_set
then :

		if test -f build/blk_queue_flag_set/blk_queue_flag_set.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLAG_SET 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flag_set\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flag_clear() exists" >&5
printf %s "checking whether blk_queue_flag_clear() exists... " >&6; }

	if test -d build/blk_queue_flag_clear
then :

		if test -f build/blk_queue_flag_clear/blk_queue_flag_clear.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLAG_CLEAR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flag_clear\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flush() is available" >&5
printf %s "checking whether blk_queue_flush() is available... " >&6; }

	if test -d build/blk_queue_flush
then :

		if test -f build/blk_queue_flush/blk_queue_flush.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLUSH 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_flush() is GPL-only" >&5
printf %s "checking whether blk_queue_flush() is GPL-only... " >&6; }

	if test -d build/blk_queue_flush_license
then :

		if test -f build/blk_queue_flush_license/blk_queue_flush_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_FLUSH_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flush_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_flush\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_write_cache() exists" >&5
printf %s "checking whether blk_queue_write_cache() exists... " >&6; }

	if test -d build/blk_queue_write_cache
then :

		if test -f build/blk_queue_write_cache/blk_queue_write_cache.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_WRITE_CACHE 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_write_cache() is GPL-only" >&5
printf %s "checking whether blk_queue_write_cache() is GPL-only... " >&6; }

	if test -d build/blk_queue_write_cache_license
then :

		if test -f build/blk_queue_write_cache_license/blk_queue_write_cache_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_QUEUE_WRITE_CACHE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_write_cache_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_write_cache\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_max_hw_sectors() is available" >&5
printf %s "checking whether blk_queue_max_hw_sectors() is available... " >&6; }

	if test -d build/blk_queue_max_hw_sectors
then :

		if test -f build/blk_queue_max_hw_sectors/blk_queue_max_hw_sectors.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_max_hw_sectors\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_max_hw_sectors\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_queue_max_segments() is available" >&5
printf %s "checking whether blk_queue_max_segments() is available... " >&6; }

	if test -d build/blk_queue_max_segments
then :

		if test -f build/blk_queue_max_segments/blk_queue_max_segments.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"blk_queue_max_segments\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_queue_max_segments\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether block multiqueue with blk_status_t is available" >&5
printf %s "checking whether block multiqueue with blk_status_t is available... " >&6; }

	if test -d build/blk_mq
then :

		if test -f build/blk_mq/blk_mq.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_MQ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_mq\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether GENHD_FL_EXT_DEVT flag is available" >&5
printf %s "checking whether GENHD_FL_EXT_DEVT flag is available... " >&6; }

	if test -d build/genhd_fl_ext_devt
then :

		if test -f build/genhd_fl_ext_devt/genhd_fl_ext_devt.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_EXT_DEVT GENHD_FL_EXT_DEVT" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_EXT_DEVT 0" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"genhd_fl_ext_devt\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether GENHD_FL_NO_PART flag is available" >&5
printf %s "checking whether GENHD_FL_NO_PART flag is available... " >&6; }

	if test -d build/genhd_fl_no_part
then :

		if test -f build/genhd_fl_no_part/genhd_fl_no_part.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_NO_PART GENHD_FL_NO_PART" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether GENHD_FL_NO_PART_SCAN flag is available" >&5
printf %s "checking whether GENHD_FL_NO_PART_SCAN flag is available... " >&6; }

	if test -d build/genhd_fl_no_part_scan
then :

		if test -f build/genhd_fl_no_part_scan/genhd_fl_no_part_scan.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_GENHD_FL_NO_PART GENHD_FL_NO_PART_SCAN" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"GENHD_FL_NO_PART|GENHD_FL_NO_PART_SCAN\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"genhd_fl_no_part_scan\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"genhd_fl_no_part\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether revalidate_disk_size() is available" >&5
printf %s "checking whether revalidate_disk_size() is available... " >&6; }

	if  ! test -f build/revalidate_disk_size/revalidate_disk_size.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether revalidate_disk() is available" >&5
printf %s "checking whether revalidate_disk() is available... " >&6; }

	if  ! test -f build/revalidate_disk/revalidate_disk.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]revalidate_disk[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/genhd.c; do
			grep -q -E "EXPORT_SYMBOL.*(revalidate_disk)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]revalidate_disk_size[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/genhd.c; do
			grep -q -E "EXPORT_SYMBOL.*(revalidate_disk_size)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether revalidate_disk() is available" >&5
printf %s "checking whether revalidate_disk() is available... " >&6; }

	if  ! test -f build/revalidate_disk/revalidate_disk.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]revalidate_disk[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/genhd.c; do
			grep -q -E "EXPORT_SYMBOL.*(revalidate_disk)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK_SIZE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK_SIZE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REVALIDATE_DISK_SIZE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether get_disk_ro() is available" >&5
printf %s "checking whether get_disk_ro() is available... " >&6; }

	if test -d build/get_disk_ro
then :

		if test -f build/get_disk_ro/get_disk_ro.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"get_disk_ro()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"get_disk_ro\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_readlink is global" >&5
printf %s "checking whether generic_readlink is global... " >&6; }

	if test -d build/generic_readlink_global
then :

		if test -f build/generic_readlink_global/generic_readlink_global.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_READLINK 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_readlink_global\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ql->discard_granularity is available" >&5
printf %s "checking whether ql->discard_granularity is available... " >&6; }

	if test -d build/discard_granularity
then :

		if test -f build/discard_granularity/discard_granularity.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"ql->discard_granularity\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"discard_granularity\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_owner_or_capable() exists" >&5
printf %s "checking whether inode_owner_or_capable() exists... " >&6; }

	if test -d build/inode_owner_or_capable
then :

		if test -f build/inode_owner_or_capable/inode_owner_or_capable.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_OWNER_OR_CAPABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_owner_or_capable() takes user_ns" >&5
printf %s "checking whether inode_owner_or_capable() takes user_ns... " >&6; }

	if test -d build/inode_owner_or_capable_userns
then :

		if test -f build/inode_owner_or_capable_userns/inode_owner_or_capable_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_OWNER_OR_CAPABLE_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_owner_or_capable() takes mnt_idmap" >&5
printf %s "checking whether inode_owner_or_capable() takes mnt_idmap... " >&6; }

	if test -d build/inode_owner_or_capable_mnt_idmap
then :

		if test -f build/inode_owner_or_capable_mnt_idmap/inode_owner_or_capable_mnt_idmap.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_OWNER_OR_CAPABLE_IDMAP 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"capability\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_owner_or_capable_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_owner_or_capable_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_owner_or_capable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block uses const struct xattr_handler" >&5
printf %s "checking whether super_block uses const struct xattr_handler... " >&6; }

	if test -d build/const_xattr_handler
then :

		if test -f build/const_xattr_handler/const_xattr_handler.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"const xattr_handler\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"const_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler has name" >&5
printf %s "checking whether xattr_handler has name... " >&6; }

	if test -d build/xattr_handler_name
then :

		if test -f build/xattr_handler_name/xattr_handler_name.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_HANDLER_NAME 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_name\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants dentry and inode" >&5
printf %s "checking whether xattr_handler->get() wants dentry and inode... " >&6; }

	if test -d build/xattr_handler_get_dentry_inode
then :

		if test -f build/xattr_handler_get_dentry_inode/xattr_handler_get_dentry_inode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_DENTRY_INODE 1" >>confdefs.h


else $as_nop

														{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants xattr_handler" >&5
printf %s "checking whether xattr_handler->get() wants xattr_handler... " >&6; }

	if test -d build/xattr_handler_get_xattr_handler
then :

		if test -f build/xattr_handler_get_xattr_handler/xattr_handler_get_xattr_handler.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_HANDLER 1" >>confdefs.h


else $as_nop

																					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants dentry" >&5
printf %s "checking whether xattr_handler->get() wants dentry... " >&6; }

	if test -d build/xattr_handler_get_dentry
then :

		if test -f build/xattr_handler_get_dentry/xattr_handler_get_dentry.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_DENTRY 1" >>confdefs.h


else $as_nop

																								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->get() wants dentry and inode and flags" >&5
printf %s "checking whether xattr_handler->get() wants dentry and inode and flags... " >&6; }

	if test -d build/xattr_handler_get_dentry_inode_flags
then :

		if test -f build/xattr_handler_get_dentry_inode_flags/xattr_handler_get_dentry_inode_flags.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_GET_DENTRY_INODE_FLAGS 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"xattr get()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_dentry_inode_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_get_dentry_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



									{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry, inode, and mnt_idmap" >&5
printf %s "checking whether xattr_handler->set() wants dentry, inode, and mnt_idmap... " >&6; }

	if test -d build/xattr_handler_set_mnt_idmap
then :

		if test -f build/xattr_handler_set_mnt_idmap/xattr_handler_set_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry, inode, and user_namespace" >&5
printf %s "checking whether xattr_handler->set() wants dentry, inode, and user_namespace... " >&6; }

	if test -d build/xattr_handler_set_userns
then :

		if test -f build/xattr_handler_set_userns/xattr_handler_set_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_USERNS 1" >>confdefs.h


else $as_nop

																		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry and inode" >&5
printf %s "checking whether xattr_handler->set() wants dentry and inode... " >&6; }

	if test -d build/xattr_handler_set_dentry_inode
then :

		if test -f build/xattr_handler_set_dentry_inode/xattr_handler_set_dentry_inode.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_DENTRY_INODE 1" >>confdefs.h


else $as_nop

																												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants xattr_handler" >&5
printf %s "checking whether xattr_handler->set() wants xattr_handler... " >&6; }

	if test -d build/xattr_handler_set_xattr_handler
then :

		if test -f build/xattr_handler_set_xattr_handler/xattr_handler_set_xattr_handler.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_HANDLER 1" >>confdefs.h


else $as_nop

																																			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->set() wants dentry" >&5
printf %s "checking whether xattr_handler->set() wants dentry... " >&6; }

	if test -d build/xattr_handler_set_dentry
then :

		if test -f build/xattr_handler_set_dentry/xattr_handler_set_dentry.ko
then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_SET_DENTRY 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"xattr set()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_dentry_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_set_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->list() wants simple" >&5
printf %s "checking whether xattr_handler->list() wants simple... " >&6; }

	if test -d build/xattr_handler_list_simple
then :

		if test -f build/xattr_handler_list_simple/xattr_handler_list_simple.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_LIST_SIMPLE 1" >>confdefs.h


else $as_nop

														{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->list() wants xattr_handler" >&5
printf %s "checking whether xattr_handler->list() wants xattr_handler... " >&6; }

	if test -d build/xattr_handler_list_xattr_handler
then :

		if test -f build/xattr_handler_list_xattr_handler/xattr_handler_list_xattr_handler.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_LIST_HANDLER 1" >>confdefs.h


else $as_nop

																					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether xattr_handler->list() wants dentry" >&5
printf %s "checking whether xattr_handler->list() wants dentry... " >&6; }

	if test -d build/xattr_handler_list_dentry
then :

		if test -f build/xattr_handler_list_dentry/xattr_handler_list_dentry.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_XATTR_LIST_DENTRY 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"xattr list()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_list_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_list_xattr_handler\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"xattr_handler_list_simple\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_from_xattr() needs user_ns" >&5
printf %s "checking whether posix_acl_from_xattr() needs user_ns... " >&6; }

	if test -d build/posix_acl_from_xattr_userns
then :

		if test -f build/posix_acl_from_xattr_userns/posix_acl_from_xattr_userns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_FROM_XATTR_USERNS 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"posix_acl_from_xattr()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_from_xattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_setxattr() exists" >&5
printf %s "checking whether generic_setxattr() exists... " >&6; }

	if test -d build/have_generic_setxattr
then :

		if test -f build/have_generic_setxattr/have_generic_setxattr.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_SETXATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"have_generic_setxattr\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi





	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_release() is available" >&5
printf %s "checking whether posix_acl_release() is available... " >&6; }

	if test -d build/posix_acl_release
then :

		if test -f build/posix_acl_release/posix_acl_release.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_RELEASE 1" >>confdefs.h


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_release() is GPL-only" >&5
printf %s "checking whether posix_acl_release() is GPL-only... " >&6; }

	if test -d build/posix_acl_release_license
then :

		if test -f build/posix_acl_release_license/posix_acl_release_license.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_RELEASE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_release_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_release\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether set_cached_acl() is usable" >&5
printf %s "checking whether set_cached_acl() is usable... " >&6; }

	if test -d build/set_cached_acl_license
then :

		if test -f build/set_cached_acl_license/set_cached_acl_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_CACHED_ACL_USABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"set_cached_acl_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __posix_acl_chmod exists" >&5
printf %s "checking whether __posix_acl_chmod exists... " >&6; }

	if test -d build/__posix_acl_chmod
then :

		if test -f build/__posix_acl_chmod/__posix_acl_chmod.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE___POSIX_ACL_CHMOD 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_chmod exists" >&5
printf %s "checking whether posix_acl_chmod exists... " >&6; }

	if test -d build/posix_acl_chmod
then :

		if test -f build/posix_acl_chmod/posix_acl_chmod.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_CHMOD 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"posix_acl_chmod()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_chmod\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"__posix_acl_chmod\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_equiv_mode() wants umode_t" >&5
printf %s "checking whether posix_acl_equiv_mode() wants umode_t... " >&6; }

	if test -d build/posix_acl_equiv_mode
then :

		if test -f build/posix_acl_equiv_mode/posix_acl_equiv_mode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"posix_acl_equiv_mode()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_equiv_mode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl_valid() wants user namespace" >&5
printf %s "checking whether posix_acl_valid() wants user namespace... " >&6; }

	if test -d build/posix_acl_valid_with_ns
then :

		if test -f build/posix_acl_valid_with_ns/posix_acl_valid_with_ns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_POSIX_ACL_VALID_WITH_NS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"posix_acl_valid_with_ns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->get_acl() exists" >&5
printf %s "checking whether iops->get_acl() exists... " >&6; }

	if test -d build/inode_operations_get_acl
then :

		if test -f build/inode_operations_get_acl/inode_operations_get_acl.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_ACL 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_get_acl_rcu
then :

		if test -f build/inode_operations_get_acl_rcu/inode_operations_get_acl_rcu.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_ACL_RCU 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_get_inode_acl
then :

		if test -f build/inode_operations_get_inode_acl/inode_operations_get_inode_acl.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_INODE_ACL 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"iops->get_acl() or iops->get_inode_acl()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_inode_acl\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_acl_rcu\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_acl\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->set_acl() exists" >&5
printf %s "checking whether iops->set_acl() exists... " >&6; }

	if test -d build/inode_operations_set_acl_userns
then :

		if test -f build/inode_operations_set_acl_userns/inode_operations_set_acl_userns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


printf "%s\n" "#define HAVE_SET_ACL_USERNS 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_set_acl_mnt_idmap_dentry
then :

		if test -f build/inode_operations_set_acl_mnt_idmap_dentry/inode_operations_set_acl_mnt_idmap_dentry.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


printf "%s\n" "#define HAVE_SET_ACL_IDMAP_DENTRY 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_set_acl_userns_dentry
then :

		if test -f build/inode_operations_set_acl_userns_dentry/inode_operations_set_acl_userns_dentry.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


printf "%s\n" "#define HAVE_SET_ACL_USERNS_DENTRY_ARG2 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_set_acl
then :

		if test -f build/inode_operations_set_acl/inode_operations_set_acl.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_ACL 1" >>confdefs.h


else $as_nop



	as_arg_v1=3.14
as_arg_v2=$kernsrcver
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		as_fn_error $? "
		*** None of the expected \"i_op->set_acl()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.14\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  0) :

		as_fn_error $? "
		*** None of the expected \"i_op->set_acl()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.14\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  2) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  *) :
     ;;
esac



fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl_userns_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl_mnt_idmap_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_set_acl_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether uncached_acl_sentinel() exists" >&5
printf %s "checking whether uncached_acl_sentinel() exists... " >&6; }

	if test -d build/get_acl_handle_cache
then :

		if test -f build/get_acl_handle_cache/get_acl_handle_cache.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KERNEL_GET_ACL_HANDLE_CACHE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"get_acl_handle_cache\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether posix_acl has refcount_t" >&5
printf %s "checking whether posix_acl has refcount_t... " >&6; }

	if test -d build/acl_refcount
then :

		if test -f build/acl_refcount/acl_refcount.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ACL_REFCOUNT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"acl_refcount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->setattr() takes mnt_idmap" >&5
printf %s "checking whether iops->setattr() takes mnt_idmap... " >&6; }

	if test -d build/inode_operations_setattr_mnt_idmap
then :

		if test -f build/inode_operations_setattr_mnt_idmap/inode_operations_setattr_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IDMAP_IOPS_SETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->setattr() takes user_namespace" >&5
printf %s "checking whether iops->setattr() takes user_namespace... " >&6; }

	if test -d build/inode_operations_setattr_userns
then :

		if test -f build/inode_operations_setattr_userns/inode_operations_setattr_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_USERNS_IOPS_SETATTR 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->setattr() exists" >&5
printf %s "checking whether iops->setattr() exists... " >&6; }

	if test -d build/inode_operations_setattr
then :

		if test -f build/inode_operations_setattr/inode_operations_setattr.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_SETATTR 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_setattr\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_setattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_setattr_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes mnt_idmap" >&5
printf %s "checking whether iops->getattr() takes mnt_idmap... " >&6; }

	if test -d build/inode_operations_getattr_mnt_idmap
then :

		if test -f build/inode_operations_getattr_mnt_idmap/inode_operations_getattr_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IDMAP_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes user_namespace" >&5
printf %s "checking whether iops->getattr() takes user_namespace... " >&6; }

	if test -d build/inode_operations_getattr_userns
then :

		if test -f build/inode_operations_getattr_userns/inode_operations_getattr_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_USERNS_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes a path" >&5
printf %s "checking whether iops->getattr() takes a path... " >&6; }

	if test -d build/inode_operations_getattr_path
then :

		if test -f build/inode_operations_getattr_path/inode_operations_getattr_path.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PATH_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->getattr() takes a vfsmount" >&5
printf %s "checking whether iops->getattr() takes a vfsmount... " >&6; }

	if test -d build/inode_operations_getattr_vfsmount
then :

		if test -f build/inode_operations_getattr_vfsmount/inode_operations_getattr_vfsmount.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFSMOUNT_IOPS_GETATTR 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_vfsmount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_path\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_getattr_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_set_flags() exists" >&5
printf %s "checking whether inode_set_flags() exists... " >&6; }

	if test -d build/inode_set_flags
then :

		if test -f build/inode_set_flags/inode_set_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_SET_FLAGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_set_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether inode_set_iversion() exists" >&5
printf %s "checking whether inode_set_iversion() exists... " >&6; }

	if test -d build/inode_set_iversion
then :

		if test -f build/inode_set_iversion/inode_set_iversion.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_INODE_SET_IVERSION 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_set_iversion\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sops->show_options() wants dentry" >&5
printf %s "checking whether sops->show_options() wants dentry... " >&6; }

	if test -d build/super_operations_show_options
then :

		if test -f build/super_operations_show_options/super_operations_show_options.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sops->show_options()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_operations_show_options\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether file_inode() is available" >&5
printf %s "checking whether file_inode() is available... " >&6; }

	if test -d build/file_inode
then :

		if test -f build/file_inode/file_inode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_INODE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether file_dentry() is available" >&5
printf %s "checking whether file_dentry() is available... " >&6; }

	if test -d build/file_dentry
then :

		if test -f build/file_dentry/file_dentry.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_DENTRY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fsync() wants no dentry" >&5
printf %s "checking whether fops->fsync() wants no dentry... " >&6; }

	if test -d build/fsync_without_dentry
then :

		if test -f build/fsync_without_dentry/fsync_without_dentry.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FSYNC_WITHOUT_DENTRY 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->fsync() wants range" >&5
printf %s "checking whether fops->fsync() wants range... " >&6; }

	if test -d build/fsync_range
then :

		if test -f build/fsync_range/fsync_range.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: range" >&5
printf "%s\n" "range" >&6; }

printf "%s\n" "#define HAVE_FSYNC_RANGE 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"fops->fsync\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"fsync_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"fsync_without_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->aio_fsync() exists" >&5
printf %s "checking whether fops->aio_fsync() exists... " >&6; }

	if test -d build/aio_fsync
then :

		if test -f build/aio_fsync/aio_fsync.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILE_AIO_FSYNC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"aio_fsync\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sops->evict_inode() exists" >&5
printf %s "checking whether sops->evict_inode() exists... " >&6; }

	if test -d build/evict_inode
then :

		if test -f build/evict_inode/evict_inode.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_EVICT_INODE 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"evict_inode\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"evict_inode\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sops->dirty_inode() wants flags" >&5
printf %s "checking whether sops->dirty_inode() wants flags... " >&6; }

	if test -d build/dirty_inode_with_flags
then :

		if test -f build/dirty_inode_with_flags/dirty_inode_with_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DIRTY_INODE_WITH_FLAGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dirty_inode_with_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block has s_shrink" >&5
printf %s "checking whether super_block has s_shrink... " >&6; }

	if test -d build/super_block_s_shrink
then :

		if test -f build/super_block_s_shrink/super_block_s_shrink.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sb->s_shrink()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_block_s_shrink\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether shrink_control has nid" >&5
printf %s "checking whether shrink_control has nid... " >&6; }

	if test -d build/shrink_control_nid
then :

		if test -f build/shrink_control_nid/shrink_control_nid.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define SHRINK_CONTROL_HAS_NID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrink_control_nid\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether new var-arg register_shrinker() exists" >&5
printf %s "checking whether new var-arg register_shrinker() exists... " >&6; }

	if test -d build/register_shrinker_vararg
then :

		if test -f build/register_shrinker_vararg/register_shrinker_vararg.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REGISTER_SHRINKER_VARARG 1" >>confdefs.h



printf "%s\n" "#define HAVE_SPLIT_SHRINKER_CALLBACK 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether new 2-argument shrinker exists" >&5
printf %s "checking whether new 2-argument shrinker exists... " >&6; }

	if test -d build/shrinker_cb_shrink_control
then :

		if test -f build/shrinker_cb_shrink_control/shrinker_cb_shrink_control.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SINGLE_SHRINKER_CALLBACK 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if cs->count_objects callback exists" >&5
printf %s "checking if cs->count_objects callback exists... " >&6; }

	if test -d build/shrinker_cb_shrink_control_split
then :

		if test -f build/shrinker_cb_shrink_control_split/shrinker_cb_shrink_control_split.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SPLIT_SHRINKER_CALLBACK 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"shrinker\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrinker_cb_shrink_control_split\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrinker_cb_shrink_control\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"register_shrinker_vararg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct shrink_control exists" >&5
printf %s "checking whether struct shrink_control exists... " >&6; }

	if test -d build/shrink_control_struct
then :

		if test -f build/shrink_control_struct/shrink_control_struct.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SHRINK_CONTROL_STRUCT 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"shrink_control\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"shrink_control_struct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mkdir() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->mkdir() takes struct mnt_idmap*... " >&6; }

	if test -d build/mkdir_mnt_idmap
then :

		if test -f build/mkdir_mnt_idmap/mkdir_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKDIR_IDMAP 1" >>confdefs.h


else $as_nop

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mkdir() takes struct user_namespace*" >&5
printf %s "checking whether iops->mkdir() takes struct user_namespace*... " >&6; }

	if test -d build/mkdir_user_namespace
then :

		if test -f build/mkdir_user_namespace/mkdir_user_namespace.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKDIR_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mkdir() takes umode_t" >&5
printf %s "checking whether iops->mkdir() takes umode_t... " >&6; }

	if test -d build/inode_operations_mkdir
then :

		if test -f build/inode_operations_mkdir/inode_operations_mkdir.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_MKDIR_UMODE_T 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"mkdir()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_mkdir\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mkdir_user_namespace\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mkdir_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->lookup() passes flags" >&5
printf %s "checking whether iops->lookup() passes flags... " >&6; }

	if test -d build/lookup_flags
then :

		if test -f build/lookup_flags/lookup_flags.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"iops->lookup()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"lookup_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->create() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->create() takes struct mnt_idmap*... " >&6; }

	if test -d build/create_mnt_idmap
then :

		if test -f build/create_mnt_idmap/create_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_CREATE_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->create() takes struct user_namespace*" >&5
printf %s "checking whether iops->create() takes struct user_namespace*... " >&6; }

	if test -d build/create_userns
then :

		if test -f build/create_userns/create_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_CREATE_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->create() passes flags" >&5
printf %s "checking whether iops->create() passes flags... " >&6; }

	if test -d build/create_flags
then :

		if test -f build/create_flags/create_flags.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"iops->create()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"create_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"create_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"create_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->permission() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->permission() takes struct mnt_idmap*... " >&6; }

	if test -d build/permission_mnt_idmap
then :

		if test -f build/permission_mnt_idmap/permission_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_PERMISSION_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->permission() takes struct user_namespace*" >&5
printf %s "checking whether iops->permission() takes struct user_namespace*... " >&6; }

	if test -d build/permission_userns
then :

		if test -f build/permission_userns/permission_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_PERMISSION_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"permission_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"permission_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->get_link() passes delayed" >&5
printf %s "checking whether iops->get_link() passes delayed... " >&6; }

	if test -d build/inode_operations_get_link
then :

		if test -f build/inode_operations_get_link/inode_operations_get_link.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_LINK_DELAYED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->get_link() passes cookie" >&5
printf %s "checking whether iops->get_link() passes cookie... " >&6; }

	if test -d build/inode_operations_get_link_cookie
then :

		if test -f build/inode_operations_get_link_cookie/inode_operations_get_link_cookie.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GET_LINK_COOKIE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->follow_link() passes cookie" >&5
printf %s "checking whether iops->follow_link() passes cookie... " >&6; }

	if test -d build/inode_operations_follow_link
then :

		if test -f build/inode_operations_follow_link/inode_operations_follow_link.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FOLLOW_LINK_COOKIE 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->follow_link() passes nameidata" >&5
printf %s "checking whether iops->follow_link() passes nameidata... " >&6; }

	if test -d build/inode_operations_follow_link_nameidata
then :

		if test -f build/inode_operations_follow_link_nameidata/inode_operations_follow_link_nameidata.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FOLLOW_LINK_NAMEIDATA 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"get_link\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_follow_link_nameidata\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_follow_link\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_link_cookie\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_link\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	if test -d build/inode_operations_get_link
then :

		if test -f build/inode_operations_get_link/inode_operations_get_link.ko
then :


printf "%s\n" "#define HAVE_PUT_LINK_DELAYED 1" >>confdefs.h


else $as_nop

										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->put_link() passes cookie" >&5
printf %s "checking whether iops->put_link() passes cookie... " >&6; }

	if test -d build/put_link_cookie
then :

		if test -f build/put_link_cookie/put_link_cookie.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PUT_LINK_COOKIE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->put_link() passes nameidata" >&5
printf %s "checking whether iops->put_link() passes nameidata... " >&6; }

	if test -d build/put_link_nameidata
then :

		if test -f build/put_link_nameidata/put_link_nameidata.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PUT_LINK_NAMEIDATA 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"put_link\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"put_link_nameidata\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"put_link_cookie\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_get_link\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether i_op->tmpfile() exists" >&5
printf %s "checking whether i_op->tmpfile() exists... " >&6; }

	if test -d build/inode_operations_tmpfile_mnt_idmap
then :

		if test -f build/inode_operations_tmpfile_mnt_idmap/inode_operations_tmpfile_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_IDMAP 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_tmpfile
then :

		if test -f build/inode_operations_tmpfile/inode_operations_tmpfile.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_USERNS 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_tmpfile_dentry_userns
then :

		if test -f build/inode_operations_tmpfile_dentry_userns/inode_operations_tmpfile_dentry_userns.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_USERNS 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_DENTRY 1" >>confdefs.h


else $as_nop


	if test -d build/inode_operations_tmpfile_dentry
then :

		if test -f build/inode_operations_tmpfile_dentry/inode_operations_tmpfile_dentry.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TMPFILE 1" >>confdefs.h


printf "%s\n" "#define HAVE_TMPFILE_DENTRY 1" >>confdefs.h


else $as_nop



	as_arg_v1=3.11
as_arg_v2=$kernsrcver
awk "$as_awk_strverscmp" v1="$as_arg_v1" v2="$as_arg_v2" /dev/null
case $? in #(
  1) :

		as_fn_error $? "
		*** None of the expected \"i_op->tmpfile()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.11\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  0) :

		as_fn_error $? "
		*** None of the expected \"i_op->tmpfile()\" interfaces were detected. This
		*** interface is expected for kernels version \"3.11\" and above.
		*** This may be because your kernel version is newer than what is
		*** supported, or you are using a patched custom kernel with
		*** incompatible modifications.  Newer kernels may have incompatible
		*** APIs.
		***
		*** ZFS Version: $ZFS_META_ALIAS
		*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
		" "$LINENO" 5
	 ;; #(
  2) :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	 ;; #(
  *) :
     ;;
esac



fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile_dentry\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile_dentry_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_tmpfile_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dops->d_automount() exists" >&5
printf %s "checking whether dops->d_automount() exists... " >&6; }

	if test -d build/dentry_operations_d_automount
then :

		if test -f build/dentry_operations_d_automount/dentry_operations_d_automount.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"dops->d_automount()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_operations_d_automount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether eops->encode_fh() wants inode" >&5
printf %s "checking whether eops->encode_fh() wants inode... " >&6; }

	if test -d build/export_operations_encode_fh
then :

		if test -f build/export_operations_encode_fh/export_operations_encode_fh.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ENCODE_FH_WITH_INODE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"export_operations_encode_fh\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether eops->commit_metadata() exists" >&5
printf %s "checking whether eops->commit_metadata() exists... " >&6; }

	if test -d build/export_operations_commit_metadata
then :

		if test -f build/export_operations_commit_metadata/export_operations_commit_metadata.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"eops->commit_metadata()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"export_operations_commit_metadata\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether clear_inode() is available" >&5
printf %s "checking whether clear_inode() is available... " >&6; }

	if  ! test -f build/clear_inode/clear_inode.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]clear_inode[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/inode.c; do
			grep -q -E "EXPORT_SYMBOL.*(clear_inode)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CLEAR_INODE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CLEAR_INODE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CLEAR_INODE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available and accepts struct mnt_idmap*" >&5
printf %s "checking whether setattr_prepare() is available and accepts struct mnt_idmap*... " >&6; }

	if  ! test -f build/setattr_prepare_mnt_idmap/setattr_prepare_mnt_idmap.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available and accepts struct user_namespace*" >&5
printf %s "checking whether setattr_prepare() is available and accepts struct user_namespace*... " >&6; }

	if  ! test -f build/setattr_prepare_userns/setattr_prepare_userns.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available and accepts struct user_namespace*" >&5
printf %s "checking whether setattr_prepare() is available and accepts struct user_namespace*... " >&6; }

	if  ! test -f build/setattr_prepare_userns/setattr_prepare_userns.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether setattr_prepare() is available, doesn't accept user_namespace" >&5
printf %s "checking whether setattr_prepare() is available, doesn't accept user_namespace... " >&6; }

	if  ! test -f build/setattr_prepare/setattr_prepare.ko
then :


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]setattr_prepare[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/attr.c; do
			grep -q -E "EXPORT_SYMBOL.*(setattr_prepare)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_NO_USERNS 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_USERNS 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_IDMAP 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_IDMAP 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SETATTR_PREPARE_IDMAP 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether insert_inode_locked() is available" >&5
printf %s "checking whether insert_inode_locked() is available... " >&6; }

	if  ! test -f build/insert_inode_locked/insert_inode_locked.ko
then :



	as_fn_error $? "
	*** None of the expected \"insert_inode_locked()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]insert_inode_locked[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/inode.c; do
			grep -q -E "EXPORT_SYMBOL.*(insert_inode_locked)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"insert_inode_locked()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_make_root() is available" >&5
printf %s "checking whether d_make_root() is available... " >&6; }

	if  ! test -f build/d_make_root/d_make_root.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_make_root[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_make_root)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_MAKE_ROOT 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_MAKE_ROOT 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_MAKE_ROOT 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_obtain_alias() is available" >&5
printf %s "checking whether d_obtain_alias() is available... " >&6; }

	if  ! test -f build/d_obtain_alias/d_obtain_alias.ko
then :



	as_fn_error $? "
	*** None of the expected \"d_obtain_alias()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_obtain_alias[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_obtain_alias)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"d_obtain_alias()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_prune_aliases() is available" >&5
printf %s "checking whether d_prune_aliases() is available... " >&6; }

	if  ! test -f build/d_prune_aliases/d_prune_aliases.ko
then :



	as_fn_error $? "
	*** None of the expected \"d_prune_aliases()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_prune_aliases[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_prune_aliases)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"d_prune_aliases()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_PRUNE_ALIASES 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_PRUNE_ALIASES 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_PRUNE_ALIASES 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether d_set_d_op() is available" >&5
printf %s "checking whether d_set_d_op() is available... " >&6; }

	if  ! test -f build/d_set_d_op/d_set_d_op.ko
then :



	as_fn_error $? "
	*** None of the expected \"d_set_d_op\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]d_set_d_op[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/dcache.c; do
			grep -q -E "EXPORT_SYMBOL.*(d_set_d_op)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"d_set_d_op\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dops->d_revalidate() takes struct nameidata" >&5
printf %s "checking whether dops->d_revalidate() takes struct nameidata... " >&6; }

	if test -d build/dentry_operations_revalidate
then :

		if test -f build/dentry_operations_revalidate/dentry_operations_revalidate.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_D_REVALIDATE_NAMEIDATA 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_operations_revalidate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dentry uses const struct dentry_operations" >&5
printf %s "checking whether dentry uses const struct dentry_operations... " >&6; }

	if test -d build/dentry_operations_const
then :

		if test -f build/dentry_operations_const/dentry_operations_const.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CONST_DENTRY_OPERATIONS 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"const dentry_operations\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_operations_const\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_block has s_d_op" >&5
printf %s "checking whether super_block has s_d_op... " >&6; }

	if test -d build/super_block_s_d_op
then :

		if test -f build/super_block_s_d_op/super_block_s_d_op.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"super_block s_d_op\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"super_block_s_d_op\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dentry aliases are in d_u member" >&5
printf %s "checking whether dentry aliases are in d_u member... " >&6; }

	if test -d build/dentry_alias_d_u
then :

		if test -f build/dentry_alias_d_u/dentry_alias_d_u.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DENTRY_D_U_ALIASES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dentry_alias_d_u\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether truncate_setsize() is available" >&5
printf %s "checking whether truncate_setsize() is available... " >&6; }

	if  ! test -f build/truncate_setsize/truncate_setsize.ko
then :



	as_fn_error $? "
	*** None of the expected \"truncate_setsize\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]truncate_setsize[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/truncate.c; do
			grep -q -E "EXPORT_SYMBOL.*(truncate_setsize)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"truncate_setsize\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether security_inode_init_security wants callback" >&5
printf %s "checking whether security_inode_init_security wants callback... " >&6; }

	if test -d build/security_inode_init_security
then :

		if test -f build/security_inode_init_security/security_inode_init_security.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"security_inode_init_security callback\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"security_inode_init_security\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fst->mount() exists" >&5
printf %s "checking whether fst->mount() exists... " >&6; }

	if test -d build/file_system_type_mount
then :

		if test -f build/file_system_type_mount/file_system_type_mount.ko
then :

                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"fst->mount()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_system_type_mount\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether super_setup_bdi_name() exists" >&5
printf %s "checking whether super_setup_bdi_name() exists... " >&6; }

	if  ! test -f build/super_setup_bdi_name/super_setup_bdi_name.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 2 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 2 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register/bdi_setup_and_register.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]super_setup_bdi_name[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/super.c; do
			grep -q -E "EXPORT_SYMBOL.*(super_setup_bdi_name)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 2 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 2 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register/bdi_setup_and_register.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bdi_setup_and_register() wants 3 args" >&5
printf %s "checking whether bdi_setup_and_register() wants 3 args... " >&6; }

	if  ! test -f build/bdi_setup_and_register_3args/bdi_setup_and_register_3args.ko
then :



	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]bdi_setup_and_register[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in mm/backing-dev.c; do
			grep -q -E "EXPORT_SYMBOL.*(bdi_setup_and_register)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :


	as_fn_error $? "
	*** None of the expected \"bdi_setup\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


		else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_BDI_SETUP_AND_REGISTER 1" >>confdefs.h



fi

fi


		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_SETUP_BDI_NAME 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_SETUP_BDI_NAME 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SUPER_SETUP_BDI_NAME 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether set_nlink() is available" >&5
printf %s "checking whether set_nlink() is available... " >&6; }

	if test -d build/set_nlink
then :

		if test -f build/set_nlink/set_nlink.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"set_nlink()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"set_nlink\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether sget() wants 5 args" >&5
printf %s "checking whether sget() wants 5 args... " >&6; }

	if test -d build/sget_5args
then :

		if test -f build/sget_5args/sget_5args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"sget()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sget_5args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether lseek_execute() is available" >&5
printf %s "checking whether lseek_execute() is available... " >&6; }

	if  ! test -f build/lseek_execute/lseek_execute.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]lseek_exclusive[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/read_write.c; do
			grep -q -E "EXPORT_SYMBOL.*(lseek_exclusive)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LSEEK_EXECUTE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LSEEK_EXECUTE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_LSEEK_EXECUTE 1" >>confdefs.h



fi

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether filemap_dirty_folio exists" >&5
printf %s "checking whether filemap_dirty_folio exists... " >&6; }

	if test -d build/vfs_has_filemap_dirty_folio
then :

		if test -f build/vfs_has_filemap_dirty_folio/vfs_has_filemap_dirty_folio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_FILEMAP_DIRTY_FOLIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_filemap_dirty_folio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether read_folio exists" >&5
printf %s "checking whether read_folio exists... " >&6; }

	if test -d build/vfs_has_read_folio
then :

		if test -f build/vfs_has_read_folio/vfs_has_read_folio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_READ_FOLIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_read_folio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_getattr() wants 4 args" >&5
printf %s "checking whether vfs_getattr() wants 4 args... " >&6; }

	if test -d build/vfs_getattr_4args
then :

		if test -f build/vfs_getattr_4args/vfs_getattr_4args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_4ARGS_VFS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_getattr_4args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_getattr() wants 2 args" >&5
printf %s "checking whether vfs_getattr() wants 2 args... " >&6; }

	if test -d build/vfs_getattr_2args
then :

		if test -f build/vfs_getattr_2args/vfs_getattr_2args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_2ARGS_VFS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_getattr_2args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_getattr() wants 3 args" >&5
printf %s "checking whether vfs_getattr() wants 3 args... " >&6; }

	if test -d build/vfs_getattr_3args
then :

		if test -f build/vfs_getattr_3args/vfs_getattr_3args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_3ARGS_VFS_GETATTR 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_getattr_3args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether vfs_fsync() wants 2 args" >&5
printf %s "checking whether vfs_fsync() wants 2 args... " >&6; }

	if test -d build/vfs_fsync_2args
then :

		if test -f build/vfs_fsync_2args/vfs_fsync_2args.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"vfs_fsync()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_fsync_2args\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->iterate_shared() is available" >&5
printf %s "checking whether fops->iterate_shared() is available... " >&6; }

	if test -d build/file_operations_iterate_shared
then :

		if test -f build/file_operations_iterate_shared/file_operations_iterate_shared.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_ITERATE_SHARED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->iterate() is available" >&5
printf %s "checking whether fops->iterate() is available... " >&6; }

	if test -d build/file_operations_iterate
then :

		if test -f build/file_operations_iterate/file_operations_iterate.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_ITERATE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->readdir() is available" >&5
printf %s "checking whether fops->readdir() is available... " >&6; }

	if test -d build/file_operations_readdir
then :

		if test -f build/file_operations_readdir/file_operations_readdir.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_READDIR 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"vfs_iterate\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_readdir\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_iterate\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_iterate_shared\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses iov_iter" >&5
printf %s "checking whether aops->direct_IO() uses iov_iter... " >&6; }

	if test -d build/direct_io_iter
then :

		if test -f build/direct_io_iter/direct_io_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses offset" >&5
printf %s "checking whether aops->direct_IO() uses offset... " >&6; }

	if test -d build/direct_io_iter_offset
then :

		if test -f build/direct_io_iter_offset/direct_io_iter_offset.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_ITER_OFFSET 1" >>confdefs.h



else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses rw and offset" >&5
printf %s "checking whether aops->direct_IO() uses rw and offset... " >&6; }

	if test -d build/direct_io_iter_rw_offset
then :

		if test -f build/direct_io_iter_rw_offset/direct_io_iter_rw_offset.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_ITER_RW_OFFSET 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->direct_IO() uses iovec" >&5
printf %s "checking whether aops->direct_IO() uses iovec... " >&6; }

	if test -d build/direct_io_iovec
then :

		if test -f build/direct_io_iovec/direct_io_iovec.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DIRECT_IO_IOVEC 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"direct IO\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iovec\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iter_rw_offset\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iter_offset\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"direct_io_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether aops->readpages exists" >&5
printf %s "checking whether aops->readpages exists... " >&6; }

	if test -d build/vfs_has_readpages
then :

		if test -f build/vfs_has_readpages/vfs_has_readpages.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_READPAGES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_readpages\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __set_page_dirty_nobuffers exists" >&5
printf %s "checking whether __set_page_dirty_nobuffers exists... " >&6; }

	if test -d build/vfs_has_set_page_dirty_nobuffers
then :

		if test -f build/vfs_has_set_page_dirty_nobuffers/vfs_has_set_page_dirty_nobuffers.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_SET_PAGE_DIRTY_NOBUFFERS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_has_set_page_dirty_nobuffers\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->read/write_iter() are available" >&5
printf %s "checking whether fops->read/write_iter() are available... " >&6; }

	if test -d build/file_operations_rw
then :

		if test -f build/file_operations_rw/file_operations_rw.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_RW_ITERATE 1" >>confdefs.h


								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether new_sync_read/write() are available" >&5
printf %s "checking whether new_sync_read/write() are available... " >&6; }

	if test -d build/new_sync_rw
then :

		if test -f build/new_sync_rw/new_sync_rw.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_NEW_SYNC_READ 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"new_sync_rw\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"file_operations_rw\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_write_checks() takes kiocb" >&5
printf %s "checking whether generic_write_checks() takes kiocb... " >&6; }

	if test -d build/generic_write_checks
then :

		if test -f build/generic_write_checks/generic_write_checks.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_WRITE_CHECKS_KIOCB 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_write_checks\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	enable_vfs_iov_iter="yes"

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter types are available" >&5
printf %s "checking whether iov_iter types are available... " >&6; }

	if test -d build/iov_iter_types
then :

		if test -f build/iov_iter_types/iov_iter_types.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_TYPES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_types\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_advance() is available" >&5
printf %s "checking whether iov_iter_advance() is available... " >&6; }

	if test -d build/iov_iter_advance
then :

		if test -f build/iov_iter_advance/iov_iter_advance.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_ADVANCE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_advance\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_revert() is available" >&5
printf %s "checking whether iov_iter_revert() is available... " >&6; }

	if test -d build/iov_iter_revert
then :

		if test -f build/iov_iter_revert/iov_iter_revert.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_REVERT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_revert\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_fault_in_readable() is available" >&5
printf %s "checking whether iov_iter_fault_in_readable() is available... " >&6; }

	if test -d build/iov_iter_fault_in_readable
then :

		if test -f build/iov_iter_fault_in_readable/iov_iter_fault_in_readable.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_FAULT_IN_READABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fault_in_iov_iter_readable() is available" >&5
printf %s "checking whether fault_in_iov_iter_readable() is available... " >&6; }

	if test -d build/fault_in_iov_iter_readable
then :

		if test -f build/fault_in_iov_iter_readable/fault_in_iov_iter_readable.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FAULT_IN_IOV_ITER_READABLE 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
			enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"fault_in_iov_iter_readable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_fault_in_readable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_count() is available" >&5
printf %s "checking whether iov_iter_count() is available... " >&6; }

	if test -d build/iov_iter_count
then :

		if test -f build/iov_iter_count/iov_iter_count.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_COUNT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_count\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether copy_to_iter() is available" >&5
printf %s "checking whether copy_to_iter() is available... " >&6; }

	if test -d build/copy_to_iter
then :

		if test -f build/copy_to_iter/copy_to_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_COPY_TO_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"copy_to_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether copy_from_iter() is available" >&5
printf %s "checking whether copy_from_iter() is available... " >&6; }

	if test -d build/copy_from_iter
then :

		if test -f build/copy_from_iter/copy_from_iter.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_COPY_FROM_ITER 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		enable_vfs_iov_iter="no"

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"copy_from_iter\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iov_iter_type() is available" >&5
printf %s "checking whether iov_iter_type() is available... " >&6; }

	if test -d build/iov_iter_type
then :

		if test -f build/iov_iter_type/iov_iter_type.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOV_ITER_TYPE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iov_iter_type\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


							if test "x$enable_vfs_iov_iter" = "xyes"
then :


printf "%s\n" "#define HAVE_VFS_IOV_ITER 1" >>confdefs.h


fi

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iter_iov() is available" >&5
printf %s "checking whether iter_iov() is available... " >&6; }

	if test -d build/iter_iov
then :

		if test -f build/iter_iov/iter_iov.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ITER_IOV 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iter_iov\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->copy_file_range() is available" >&5
printf %s "checking whether fops->copy_file_range() is available... " >&6; }

	if test -d build/vfs_copy_file_range
then :

		if test -f build/vfs_copy_file_range/vfs_copy_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_COPY_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_copy_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_copy_file_range() is available" >&5
printf %s "checking whether generic_copy_file_range() is available... " >&6; }

	if  ! test -f build/generic_copy_file_range/generic_copy_file_range.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_copy_file_range[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/read_write.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_copy_file_range)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_GENERIC_COPY_FILE_RANGE 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_GENERIC_COPY_FILE_RANGE 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_GENERIC_COPY_FILE_RANGE 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->remap_file_range() is available" >&5
printf %s "checking whether fops->remap_file_range() is available... " >&6; }

	if test -d build/vfs_remap_file_range
then :

		if test -f build/vfs_remap_file_range/vfs_remap_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_REMAP_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_remap_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->clone_file_range() is available" >&5
printf %s "checking whether fops->clone_file_range() is available... " >&6; }

	if test -d build/vfs_clone_file_range
then :

		if test -f build/vfs_clone_file_range/vfs_clone_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_CLONE_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_clone_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether fops->dedupe_file_range() is available" >&5
printf %s "checking whether fops->dedupe_file_range() is available... " >&6; }

	if test -d build/vfs_dedupe_file_range
then :

		if test -f build/vfs_dedupe_file_range/vfs_dedupe_file_range.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_DEDUPE_FILE_RANGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_dedupe_file_range\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether file_operations_extend takes \
.copy_file_range() and .clone_file_range()" >&5
printf %s "checking whether file_operations_extend takes \
.copy_file_range() and .clone_file_range()... " >&6; }

	if test -d build/vfs_file_operations_extend
then :

		if test -f build/vfs_file_operations_extend/vfs_file_operations_extend.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_VFS_FILE_OPERATIONS_EXTEND 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"vfs_file_operations_extend\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kmap_atomic wants 1 args" >&5
printf %s "checking whether kmap_atomic wants 1 args... " >&6; }

	if test -d build/kmap_atomic
then :

		if test -f build/kmap_atomic/kmap_atomic.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"kmap_atomic()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kmap_atomic\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether follow_down_one() is available" >&5
printf %s "checking whether follow_down_one() is available... " >&6; }

	if test -d build/follow_down_one
then :

		if test -f build/follow_down_one/follow_down_one.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"follow_down_one()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"follow_down_one\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether submit_bio is member of struct block_device_operations" >&5
printf %s "checking whether submit_bio is member of struct block_device_operations... " >&6; }

	if test -d build/block_device_operations_submit_bio
then :

		if test -f build/block_device_operations_submit_bio/block_device_operations_submit_bio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_SUBMIT_BIO_IN_BLOCK_DEVICE_OPERATIONS 1" >>confdefs.h


												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_alloc_disk() exists" >&5
printf %s "checking whether blk_alloc_disk() exists... " >&6; }

	if test -d build/blk_alloc_disk
then :

		if test -f build/blk_alloc_disk/blk_alloc_disk.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_ALLOC_DISK 1" >>confdefs.h


															{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_cleanup_disk() exists" >&5
printf %s "checking whether blk_cleanup_disk() exists... " >&6; }

	if test -d build/blk_cleanup_disk
then :

		if test -f build/blk_cleanup_disk/blk_cleanup_disk.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BLK_CLEANUP_DISK 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_cleanup_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_alloc_disk\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

												{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether blk_alloc_queue() expects request function" >&5
printf %s "checking whether blk_alloc_queue() expects request function... " >&6; }

	if test -d build/blk_alloc_queue_request_fn
then :

		if test -f build/blk_alloc_queue_request_fn/blk_alloc_queue_request_fn.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn() returns blk_qc_t" >&5
printf %s "checking whether make_request_fn() returns blk_qc_t... " >&6; }
			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_BLK_ALLOC_QUEUE_REQUEST_FN 1" >>confdefs.h


printf "%s\n" "#define MAKE_REQUEST_FN_RET blk_qc_t" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_QC 1" >>confdefs.h


else $as_nop


	if test -d build/blk_alloc_queue_request_fn_rh
then :

		if test -f build/blk_alloc_queue_request_fn_rh/blk_alloc_queue_request_fn_rh.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn_rh() returns blk_qc_t" >&5
printf %s "checking whether make_request_fn_rh() returns blk_qc_t... " >&6; }
				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_BLK_ALLOC_QUEUE_REQUEST_FN_RH 1" >>confdefs.h


printf "%s\n" "#define MAKE_REQUEST_FN_RET blk_qc_t" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_QC 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn() returns void" >&5
printf %s "checking whether make_request_fn() returns void... " >&6; }

	if test -d build/make_request_fn_void
then :

		if test -f build/make_request_fn_void/make_request_fn_void.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define MAKE_REQUEST_FN_RET void" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_VOID 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																									{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether make_request_fn() returns blk_qc_t" >&5
printf %s "checking whether make_request_fn() returns blk_qc_t... " >&6; }

	if test -d build/make_request_fn_blk_qc_t
then :

		if test -f build/make_request_fn_blk_qc_t/make_request_fn_blk_qc_t.ko
then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define MAKE_REQUEST_FN_RET blk_qc_t" >>confdefs.h


printf "%s\n" "#define HAVE_MAKE_REQUEST_FN_RET_QC 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"make_request_fn\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"make_request_fn_blk_qc_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"make_request_fn_void\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_alloc_queue_request_fn_rh\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"blk_alloc_queue_request_fn\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"block_device_operations_submit_bio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether 6.3+ bdev_*_io_acct() are available" >&5
printf %s "checking whether 6.3+ bdev_*_io_acct() are available... " >&6; }

	if test -d build/bdev_io_acct_63
then :

		if test -f build/bdev_io_acct_63/bdev_io_acct_63.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_IO_ACCT_63 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

														{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether pre-6.3 bdev_*_io_acct() are available" >&5
printf %s "checking whether pre-6.3 bdev_*_io_acct() are available... " >&6; }

	if test -d build/bdev_io_acct_old
then :

		if test -f build/bdev_io_acct_old/bdev_io_acct_old.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BDEV_IO_ACCT_OLD 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
																					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic disk_*_io_acct() are available" >&5
printf %s "checking whether generic disk_*_io_acct() are available... " >&6; }

	if test -d build/disk_io_acct
then :

		if test -f build/disk_io_acct/disk_io_acct.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DISK_IO_ACCT 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic bio_*_io_acct() are available" >&5
printf %s "checking whether generic bio_*_io_acct() are available... " >&6; }

	if test -d build/bio_io_acct
then :

		if test -f build/bio_io_acct/bio_io_acct.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_BIO_IO_ACCT 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																																								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_*_io_acct wants 4 args" >&5
printf %s "checking whether generic_*_io_acct wants 4 args... " >&6; }

	if  ! test -f build/generic_acct_4args/generic_acct_4args.ko
then :


						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																																										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_*_io_acct wants 3 args" >&5
printf %s "checking whether generic_*_io_acct wants 3 args... " >&6; }

	if  ! test -f build/generic_acct_3args/generic_acct_3args.ko
then :


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_start_io_acct[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/bio.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_start_io_acct)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


		fi
	else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


	fi


else $as_nop


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h



fi

fi



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_start_io_acct[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/bio.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_start_io_acct)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

																																										{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_*_io_acct wants 3 args" >&5
printf %s "checking whether generic_*_io_acct wants 3 args... " >&6; }

	if  ! test -f build/generic_acct_3args/generic_acct_3args.ko
then :


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]generic_start_io_acct[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in block/bio.c; do
			grep -q -E "EXPORT_SYMBOL.*(generic_start_io_acct)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


		fi
	else :

							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h


	fi


else $as_nop


							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_3ARG 1" >>confdefs.h



fi

fi


		else :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_4ARG 1" >>confdefs.h


		fi
	else :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_4ARG 1" >>confdefs.h


	fi


else $as_nop


						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_IO_ACCT_4ARG 1" >>confdefs.h



fi

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_io_acct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"disk_io_acct\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_io_acct_old\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bdev_io_acct_63\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel fpu is available" >&5
printf %s "checking whether kernel fpu is available... " >&6; }

	if test -d build/kernel_fpu_license
then :

		if test -f build/kernel_fpu_license/kernel_fpu_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: kernel_fpu_*" >&5
printf "%s\n" "kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h


else $as_nop


	if  ! test -f build/__kernel_fpu_license/__kernel_fpu_license.ko
then :


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: internal" >&5
printf "%s\n" "internal" >&6; }

printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL 1" >>confdefs.h



else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]__kernel_fpu_begin[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in arch/x86/kernel/fpu/core.c arch/x86/kernel/i387.c; do
			grep -q -E "EXPORT_SYMBOL.*(__kernel_fpu_begin)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: internal" >&5
printf "%s\n" "internal" >&6; }

printf "%s\n" "#define HAVE_KERNEL_FPU_INTERNAL 1" >>confdefs.h


		else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: __kernel_fpu_*" >&5
printf "%s\n" "__kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_UNDERSCORE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h


		fi
	else :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: __kernel_fpu_*" >&5
printf "%s\n" "__kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_UNDERSCORE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h


	fi


else $as_nop


			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: __kernel_fpu_*" >&5
printf "%s\n" "__kernel_fpu_*" >&6; }

printf "%s\n" "#define HAVE_UNDERSCORE_KERNEL_FPU 1" >>confdefs.h


printf "%s\n" "#define KERNEL_EXPORTS_X86_FPU 1" >>confdefs.h



fi

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kernel_fpu_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel defines fmode_t" >&5
printf %s "checking whether kernel defines fmode_t... " >&6; }

	if test -d build/type_fmode_t
then :

		if test -f build/type_fmode_t/type_fmode_t.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"type_fmode_t\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"type_fmode_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kuid_t/kgid_t is available" >&5
printf %s "checking whether kuid_t/kgid_t is available... " >&6; }

	if test -d build/kuidgid_t
then :

		if test -f build/kuidgid_t/kuidgid_t.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"kuid_t/kgid_t\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kuidgid_t\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether i_(uid|gid)_(read|write) exist" >&5
printf %s "checking whether i_(uid|gid)_(read|write) exist... " >&6; }

	if test -d build/i_uid_read
then :

		if test -f build/i_uid_read/i_uid_read.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"i_uid_read\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"i_uid_read\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->rename() takes struct mnt_idmap*... " >&6; }

	if test -d build/inode_operations_rename_mnt_idmap
then :

		if test -f build/inode_operations_rename_mnt_idmap/inode_operations_rename_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_RENAME_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename() takes struct user_namespace*" >&5
printf %s "checking whether iops->rename() takes struct user_namespace*... " >&6; }

	if test -d build/inode_operations_rename_userns
then :

		if test -f build/inode_operations_rename_userns/inode_operations_rename_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_RENAME_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename2() exists" >&5
printf %s "checking whether iops->rename2() exists... " >&6; }

	if test -d build/inode_operations_rename2
then :

		if test -f build/inode_operations_rename2/inode_operations_rename2.ko
then :

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RENAME2 1" >>confdefs.h


else $as_nop

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

				{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->rename() wants flags" >&5
printf %s "checking whether iops->rename() wants flags... " >&6; }

	if test -d build/inode_operations_rename_flags
then :

		if test -f build/inode_operations_rename_flags/inode_operations_rename_flags.ko
then :

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RENAME_WANTS_FLAGS 1" >>confdefs.h


else $as_nop

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct inode_operations_wrapper takes .rename2()" >&5
printf %s "checking whether struct inode_operations_wrapper takes .rename2()... " >&6; }

	if test -d build/dir_inode_operations_wrapper_rename2
then :

		if test -f build/dir_inode_operations_wrapper_rename2/dir_inode_operations_wrapper_rename2.ko
then :

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RENAME2_OPERATIONS_WRAPPER 1" >>confdefs.h


else $as_nop

						{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"dir_inode_operations_wrapper_rename2\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename_flags\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename2\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"inode_operations_rename_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether current_time() exists" >&5
printf %s "checking whether current_time() exists... " >&6; }

	if  ! test -f build/current_time/current_time.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]current_time[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in fs/inode.c; do
			grep -q -E "EXPORT_SYMBOL.*(current_time)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CURRENT_TIME 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CURRENT_TIME 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CURRENT_TIME 1" >>confdefs.h



fi

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ns_capable exists" >&5
printf %s "checking whether ns_capable exists... " >&6; }

	if test -d build/ns_capable
then :

		if test -f build/ns_capable/ns_capable.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"ns_capable()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"ns_capable\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether has_capability() is available" >&5
printf %s "checking whether has_capability() is available... " >&6; }

	if  ! test -f build/has_capability/has_capability.ko
then :


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }


else $as_nop

		if test "x$enable_linux_builtin" != "xyes"
then :


	grep -q -E '[[:space:]]has_capability[[:space:]]' \
		$LINUX_OBJ/$LINUX_SYMBOLS 2>/dev/null
	rc=$?
	if test $rc -ne 0; then
		export=0
		for file in kernel/capability.c; do
			grep -q -E "EXPORT_SYMBOL.*(has_capability)" \
				"$LINUX/$file" 2>/dev/null
			rc=$?
			if test $rc -eq 0; then
				export=1
				break;
			fi
		done
		if test $export -eq 0; then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

		else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_HAS_CAPABILITY 1" >>confdefs.h


		fi
	else :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_HAS_CAPABILITY 1" >>confdefs.h


	fi


else $as_nop


		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_HAS_CAPABILITY 1" >>confdefs.h



fi

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether cred_t->user_ns exists" >&5
printf %s "checking whether cred_t->user_ns exists... " >&6; }

	if test -d build/cred_user_ns
then :

		if test -f build/cred_user_ns/cred_user_ns.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"cred_t->user_ns()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"cred_user_ns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kuid_has_mapping/kgid_has_mapping exist" >&5
printf %s "checking whether kuid_has_mapping/kgid_has_mapping exist... " >&6; }

	if test -d build/kuid_has_mapping
then :

		if test -f build/kuid_has_mapping/kuid_has_mapping.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop


	as_fn_error $? "
	*** None of the expected \"kuid_has_mapping()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kuid_has_mapping\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether in_compat_syscall() is available" >&5
printf %s "checking whether in_compat_syscall() is available... " >&6; }

	if test -d build/in_compat_syscall
then :

		if test -f build/in_compat_syscall/in_compat_syscall.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IN_COMPAT_SYSCALL 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"in_compat_syscall\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ktime_get_coarse_real_ts64() exists" >&5
printf %s "checking whether ktime_get_coarse_real_ts64() exists... " >&6; }

	if test -d build/ktime_get_coarse_real_ts64
then :

		if test -f build/ktime_get_coarse_real_ts64/ktime_get_coarse_real_ts64.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KTIME_GET_COARSE_REAL_TS64 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"ktime_get_coarse_real_ts64\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ktime_get_raw_ts64() exists" >&5
printf %s "checking whether ktime_get_raw_ts64() exists... " >&6; }

	if test -d build/ktime_get_raw_ts64
then :

		if test -f build/ktime_get_raw_ts64/ktime_get_raw_ts64.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KTIME_GET_RAW_TS64 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"ktime_get_raw_ts64\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether totalram_pages() exists" >&5
printf %s "checking whether totalram_pages() exists... " >&6; }

	if test -d build/totalram_pages
then :

		if test -f build/totalram_pages/totalram_pages.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TOTALRAM_PAGES_FUNC 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"totalram_pages\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether totalhigh_pages() exists" >&5
printf %s "checking whether totalhigh_pages() exists... " >&6; }

	if test -d build/totalhigh_pages
then :

		if test -f build/totalhigh_pages/totalhigh_pages.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_TOTALHIGH_PAGES 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"totalhigh_pages\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kstrtoul() exists" >&5
printf %s "checking whether kstrtoul() exists... " >&6; }

	if test -d build/kstrtoul
then :

		if test -f build/kstrtoul/kstrtoul.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_KSTRTOUL 1" >>confdefs.h


else $as_nop


	as_fn_error $? "
	*** None of the expected \"kstrtoul()\" interfaces were detected.
	*** This may be because your kernel version is newer than what is
	*** supported, or you are using a patched custom kernel with
	*** incompatible modifications.
	***
	*** ZFS Version: $ZFS_META_ALIAS
	*** Compatible Kernels: $ZFS_META_KVER_MIN - $ZFS_META_KVER_MAX
	" "$LINENO" 5


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kstrtoul\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether percpu_counter_init() wants gfp_t" >&5
printf %s "checking whether percpu_counter_init() wants gfp_t... " >&6; }

	if test -d build/percpu_counter_init_with_gfp
then :

		if test -f build/percpu_counter_init_with_gfp/percpu_counter_init_with_gfp.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PERCPU_COUNTER_INIT_WITH_GFP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"percpu_counter_init_with_gfp\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether percpu_counter_add_batch() is defined" >&5
printf %s "checking whether percpu_counter_add_batch() is defined... " >&6; }

	if test -d build/percpu_counter_add_batch
then :

		if test -f build/percpu_counter_add_batch/percpu_counter_add_batch.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PERCPU_COUNTER_ADD_BATCH 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"percpu_counter_add_batch\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether is inside percpu_ref.data" >&5
printf %s "checking whether is inside percpu_ref.data... " >&6; }

	if test -d build/percpu_ref_count_in_data
then :

		if test -f build/percpu_ref_count_in_data/percpu_ref_count_in_data.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define ZFS_PERCPU_REF_COUNT_IN_DATA 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"percpu_ref_count_in_data\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether CPU hotplug APIs exist" >&5
printf %s "checking whether CPU hotplug APIs exist... " >&6; }

	if test -d build/cpu_hotplug
then :

		if test -f build/cpu_hotplug/cpu_hotplug.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CPU_HOTPLUG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"cpu_hotplug\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_fillattr requires struct mnt_idmap*" >&5
printf %s "checking whether generic_fillattr requires struct mnt_idmap*... " >&6; }

	if test -d build/generic_fillattr_mnt_idmap
then :

		if test -f build/generic_fillattr_mnt_idmap/generic_fillattr_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FILLATTR_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether generic_fillattr requires struct user_namespace*" >&5
printf %s "checking whether generic_fillattr requires struct user_namespace*... " >&6; }

	if test -d build/generic_fillattr_userns
then :

		if test -f build/generic_fillattr_userns/generic_fillattr_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_GENERIC_FILLATTR_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_fillattr_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"generic_fillattr_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mknod() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->mknod() takes struct mnt_idmap*... " >&6; }

	if test -d build/mknod_mnt_idmap
then :

		if test -f build/mknod_mnt_idmap/mknod_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKNOD_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->mknod() takes struct user_namespace*" >&5
printf %s "checking whether iops->mknod() takes struct user_namespace*... " >&6; }

	if test -d build/mknod_userns
then :

		if test -f build/mknod_userns/mknod_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_MKNOD_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mknod_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"mknod_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->symlink() takes struct mnt_idmap*" >&5
printf %s "checking whether iops->symlink() takes struct mnt_idmap*... " >&6; }

	if test -d build/symlink_mnt_idmap
then :

		if test -f build/symlink_mnt_idmap/symlink_mnt_idmap.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_SYMLINK_IDMAP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iops->symlink() takes struct user_namespace*" >&5
printf %s "checking whether iops->symlink() takes struct user_namespace*... " >&6; }

	if test -d build/symlink_userns
then :

		if test -f build/symlink_userns/symlink_userns.ko
then :

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IOPS_SYMLINK_USERNS 1" >>confdefs.h


else $as_nop

			{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"symlink_userns\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"symlink_mnt_idmap\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether bio_max_segs() exists" >&5
printf %s "checking whether bio_max_segs() exists... " >&6; }

	if test -d build/bio_max_segs
then :

		if test -f build/bio_max_segs/bio_max_segs.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }


printf "%s\n" "#define HAVE_BIO_MAX_SEGS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"bio_max_segs\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether signal_stop() exists" >&5
printf %s "checking whether signal_stop() exists... " >&6; }

	if test -d build/signal_stop
then :

		if test -f build/signal_stop/signal_stop.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SIGNAL_STOP 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"signal_stop\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kernel_siginfo_t tyepedef exists" >&5
printf %s "checking whether kernel_siginfo_t tyepedef exists... " >&6; }

	if test -d build/siginfo
then :

		if test -f build/siginfo/siginfo.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SIGINFO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"siginfo\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct kobj_type.default_groups exists" >&5
printf %s "checking whether struct kobj_type.default_groups exists... " >&6; }

	if test -d build/sysfs_default_groups
then :

		if test -f build/sysfs_default_groups/sysfs_default_groups.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SYSFS_DEFAULT_GROUPS 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"sysfs_default_groups\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether set_special_state() exists" >&5
printf %s "checking whether set_special_state() exists... " >&6; }

	if test -d build/set_special_state
then :

		if test -f build/set_special_state/set_special_state.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_SET_SPECIAL_STATE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"set_special_state\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



					{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether standalone <linux/stdarg.h> exists" >&5
printf %s "checking whether standalone <linux/stdarg.h> exists... " >&6; }

	if test -d build/has_standalone_linux_stdarg
then :

		if test -f build/has_standalone_linux_stdarg/has_standalone_linux_stdarg.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_STANDALONE_LINUX_STDARG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"has_standalone_linux_stdarg\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether folio_wait_bit() exists" >&5
printf %s "checking whether folio_wait_bit() exists... " >&6; }

	if test -d build/pagemap_has_folio_wait_bit
then :

		if test -f build/pagemap_has_folio_wait_bit/pagemap_has_folio_wait_bit.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_PAGEMAP_FOLIO_WAIT_BIT 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"pagemap_has_folio_wait_bit\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether add_disk() returns int" >&5
printf %s "checking whether add_disk() returns int... " >&6; }

	if test -d build/add_disk_ret
then :

		if test -f build/add_disk_ret/add_disk_ret.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ADD_DISK_RET 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"add_disk_ret\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




							{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether kthread_complete_and_exit() is available" >&5
printf %s "checking whether kthread_complete_and_exit() is available... " >&6; }

	if test -d build/kthread_complete_and_exit
then :

		if test -f build/kthread_complete_and_exit/kthread_complete_and_exit.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define SPL_KTHREAD_COMPLETE_AND_EXIT kthread_complete_and_exit" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

printf "%s\n" "#define SPL_KTHREAD_COMPLETE_AND_EXIT complete_and_exit" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kthread_complete_and_exit\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



								{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether dequeue_signal() takes 4 arguments" >&5
printf %s "checking whether dequeue_signal() takes 4 arguments... " >&6; }

	if test -d build/kthread_dequeue_signal
then :

		if test -f build/kthread_dequeue_signal/kthread_dequeue_signal.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_DEQUEUE_SIGNAL_4ARG 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"kthread_dequeue_signal\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether ZERO_PAGE() is GPL-only" >&5
printf %s "checking whether ZERO_PAGE() is GPL-only... " >&6; }

	if test -d build/zero_page_license
then :

		if test -f build/zero_page_license/zero_page_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_ZERO_PAGE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"zero_page_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether __copy_from_user_inatomic is available" >&5
printf %s "checking whether __copy_from_user_inatomic is available... " >&6; }

	if test -d build/__copy_from_user_inatomic_license
then :

		if test -f build/__copy_from_user_inatomic_license/__copy_from_user_inatomic_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
		as_fn_error $? "
	*** The \`__copy_from_user_inatomic()\` Linux kernel function is
	*** incompatible with the CDDL license and will prevent the module
	*** linking stage from succeeding.  OpenZFS cannot be compiled.
		" "$LINENO" 5

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"__copy_from_user_inatomic_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether user_namespace->ns.inum exists" >&5
printf %s "checking whether user_namespace->ns.inum exists... " >&6; }

	if test -d build/user_ns_common_inum
then :

		if test -f build/user_ns_common_inum/user_ns_common_inum.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_USER_NS_COMMON_INUM 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"user_ns_common_inum\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



        { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether APIs for idmapped mount are present" >&5
printf %s "checking whether APIs for idmapped mount are present... " >&6; }

	if test -d build/idmap_mnt_api
then :

		if test -f build/idmap_mnt_api/idmap_mnt_api.ko
then :

                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IDMAP_MNT_API 1" >>confdefs.h


else $as_nop

                { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"idmap_mnt_api\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether iattr->ia_vfsuid and iattr->ia_vfsgid exist" >&5
printf %s "checking whether iattr->ia_vfsuid and iattr->ia_vfsgid exist... " >&6; }

	if test -d build/iattr_vfsid
then :

		if test -f build/iattr_vfsid/iattr_vfsid.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_IATTR_VFSID 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"iattr_vfsid\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether filemap_range_has_page() is available" >&5
printf %s "checking whether filemap_range_has_page() is available... " >&6; }

	if test -d build/filemap_range_has_page
then :

		if test -f build/filemap_range_has_page/filemap_range_has_page.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FILEMAP_RANGE_HAS_PAGE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"filemap_range_has_page\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether int (*writepage_t)() takes struct folio*" >&5
printf %s "checking whether int (*writepage_t)() takes struct folio*... " >&6; }

	if test -d build/writepage_t_folio
then :

		if test -f build/writepage_t_folio/writepage_t_folio.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_WRITEPAGE_T_FOLIO 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"writepage_t_folio\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether struct reclaim_state has reclaimed field" >&5
printf %s "checking whether struct reclaim_state has reclaimed field... " >&6; }

	if test -d build/reclaim_state_reclaimed
then :

		if test -f build/reclaim_state_reclaimed/reclaim_state_reclaimed.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_RECLAIM_STATE_RECLAIMED 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"reclaim_state_reclaimed\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether register_sysctl_table exists" >&5
printf %s "checking whether register_sysctl_table exists... " >&6; }

	if test -d build/has_register_sysctl_table
then :

		if test -f build/has_register_sysctl_table/has_register_sysctl_table.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_REGISTER_SYSCTL_TABLE 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"has_register_sysctl_table\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether copy_splice_read() exists" >&5
printf %s "checking whether copy_splice_read() exists... " >&6; }

	if test -d build/has_copy_splice_read
then :

		if test -f build/has_copy_splice_read/has_copy_splice_read.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_COPY_SPLICE_READ 1" >>confdefs.h


else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"has_copy_splice_read\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


	case "$host_cpu" in
		powerpc*)

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether cpu_has_feature() is GPL-only" >&5
printf %s "checking whether cpu_has_feature() is GPL-only... " >&6; }

	if test -d build/cpu_has_feature_license
then :

		if test -f build/cpu_has_feature_license/cpu_has_feature_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_CPU_HAS_FEATURE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"cpu_has_feature_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi



	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether flush_dcache_page() is GPL-only" >&5
printf %s "checking whether flush_dcache_page() is GPL-only... " >&6; }

	if test -d build/flush_dcache_page_license
then :

		if test -f build/flush_dcache_page_license/flush_dcache_page_license.ko
then :

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }

else $as_nop

		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }

printf "%s\n" "#define HAVE_FLUSH_DCACHE_PAGE_GPL_ONLY 1" >>confdefs.h


fi

else $as_nop

		as_fn_error $? "
	*** No matching source for the \"flush_dcache_page_license\" test, check that
	*** both the test source and result macros refer to the same name.
		" "$LINENO" 5

fi


			;;
	esac


		if test "$LINUX_OBJ" != "$LINUX"
then :

			KERNEL_MAKE="$KERNEL_MAKE O=$LINUX_OBJ"

fi



fi
 ;;
		dist)                        ;;
		srpm)                        ;;
		*)
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: Error!" >&5
printf "%s\n" "Error!" >&6; }
		as_fn_error $? "Bad value \"$ZFS_CONFIG\" for --with-config,
		              user kernel|user|all|srpm" "$LINENO" 5 ;;
	esac

	 if test "x$ZFS_INIT_SYSV" = "xyes"; then
  INIT_SYSV_TRUE=
  INIT_SYSV_FALSE='#'
else
  INIT_SYSV_TRUE='#'
  INIT_SYSV_FALSE=
fi

	 if test "x$ZFS_INIT_SYSTEMD" = "xyes"; then
  INIT_SYSTEMD_TRUE=
  INIT_SYSTEMD_FALSE='#'
else
  INIT_SYSTEMD_TRUE='#'
  INIT_SYSTEMD_FALSE=
fi

	 if test "x$ZFS_WANT_MODULES_LOAD_D" = "xyes"; then
  WANT_MODULES_LOAD_D_TRUE=
  WANT_MODULES_LOAD_D_FALSE='#'
else
  WANT_MODULES_LOAD_D_TRUE='#'
  WANT_MODULES_LOAD_D_FALSE=
fi


	 if test "$ZFS_CONFIG" = user -o "$ZFS_CONFIG" = all; then
  CONFIG_USER_TRUE=
  CONFIG_USER_FALSE='#'
else
  CONFIG_USER_TRUE='#'
  CONFIG_USER_FALSE=
fi

	 if test "$ZFS_CONFIG" = kernel -o "$ZFS_CONFIG" = all &&
	    test "x$enable_linux_builtin" != xyes ; then
  CONFIG_KERNEL_TRUE=
  CONFIG_KERNEL_FALSE='#'
else
  CONFIG_KERNEL_TRUE='#'
  CONFIG_KERNEL_FALSE=
fi

	 if test "$ZFS_CONFIG" = kernel -o "$ZFS_CONFIG" = all &&
	    test "x$qatsrc" != x ; then
  CONFIG_QAT_TRUE=
  CONFIG_QAT_FALSE='#'
else
  CONFIG_QAT_TRUE='#'
  CONFIG_QAT_FALSE=
fi

	 if test "x$user_libudev" = xyes ; then
  WANT_DEVNAME2DEVID_TRUE=
  WANT_DEVNAME2DEVID_FALSE='#'
else
  WANT_DEVNAME2DEVID_TRUE='#'
  WANT_DEVNAME2DEVID_FALSE=
fi

	 if test "x$user_libaio" = xyes ; then
  WANT_MMAP_LIBAIO_TRUE=
  WANT_MMAP_LIBAIO_FALSE='#'
else
  WANT_MMAP_LIBAIO_TRUE='#'
  WANT_MMAP_LIBAIO_FALSE=
fi

	 if test "x$enable_pam" = xyes; then
  PAM_ZFS_ENABLED_TRUE=
  PAM_ZFS_ENABLED_FALSE='#'
else
  PAM_ZFS_ENABLED_TRUE='#'
  PAM_ZFS_ENABLED_FALSE=
fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking os distribution" >&5
printf %s "checking os distribution... " >&6; }

# Check whether --with-vendor was given.
if test ${with_vendor+y}
then :
  withval=$with_vendor; with_vendor=$withval
else $as_nop
  with_vendor=check
fi

	if test "x$with_vendor" = "xcheck"
then :

		if test -f /etc/toss-release ; then
			VENDOR=toss ;
		elif test -f /etc/fedora-release ; then
			VENDOR=fedora ;
		elif test -f /etc/redhat-release ; then
			VENDOR=redhat ;
		elif test -f /etc/gentoo-release ; then
			VENDOR=gentoo ;
		elif test -f /etc/arch-release ; then
			VENDOR=arch ;
		elif test -f /etc/SuSE-release ; then
			VENDOR=sles ;
		elif test -f /etc/slackware-version ; then
			VENDOR=slackware ;
		elif test -f /etc/lunar.release ; then
			VENDOR=lunar ;
		elif test -f /etc/lsb-release ; then
			VENDOR=ubuntu ;
		elif test -f /etc/debian_version ; then
			VENDOR=debian ;
		elif test -f /etc/alpine-release ; then
			VENDOR=alpine ;
		elif test -f /bin/freebsd-version ; then
			VENDOR=freebsd ;
		elif test -f /etc/openEuler-release ; then
			VENDOR=openeuler ;
		else
			VENDOR= ;
		fi
elif  test "x${with_vendor}" != x
then :

			VENDOR="$with_vendor"
else $as_nop
   VENDOR= ;

fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $VENDOR" >&5
printf "%s\n" "$VENDOR" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking default package type" >&5
printf %s "checking default package type... " >&6; }
	case "$VENDOR" in
		toss)       DEFAULT_PACKAGE=rpm  ;;
		redhat)     DEFAULT_PACKAGE=rpm  ;;
		fedora)     DEFAULT_PACKAGE=rpm  ;;
		gentoo)     DEFAULT_PACKAGE=tgz  ;;
		alpine)     DEFAULT_PACKAGE=tgz  ;;
		arch)       DEFAULT_PACKAGE=tgz  ;;
		sles)       DEFAULT_PACKAGE=rpm  ;;
		slackware)  DEFAULT_PACKAGE=tgz  ;;
		lunar)      DEFAULT_PACKAGE=tgz  ;;
		ubuntu)     DEFAULT_PACKAGE=deb  ;;
		debian)     DEFAULT_PACKAGE=deb  ;;
		freebsd)    DEFAULT_PACKAGE=pkg  ;;
		openeuler)  DEFAULT_PACKAGE=rpm  ;;
		*)          DEFAULT_PACKAGE=rpm  ;;
	esac
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DEFAULT_PACKAGE" >&5
printf "%s\n" "$DEFAULT_PACKAGE" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking default init directory" >&5
printf %s "checking default init directory... " >&6; }
	case "$VENDOR" in
		freebsd)    initdir=$sysconfdir/rc.d  ;;
		*)          initdir=$sysconfdir/init.d;;
	esac
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $initdir" >&5
printf "%s\n" "$initdir" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking default shell" >&5
printf %s "checking default shell... " >&6; }
	case "$VENDOR" in
		gentoo)     DEFAULT_INIT_SHELL="/sbin/openrc-run";;
		alpine)     DEFAULT_INIT_SHELL="/sbin/openrc-run";;
		*)          DEFAULT_INIT_SHELL="/bin/sh"         ;;
	esac

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DEFAULT_INIT_SHELL" >&5
printf "%s\n" "$DEFAULT_INIT_SHELL" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking default nfs server init script" >&5
printf %s "checking default nfs server init script... " >&6; }
	if test "$VENDOR" = "debian"
then :
  DEFAULT_INIT_NFS_SERVER="nfs-kernel-server"
else $as_nop
  DEFAULT_INIT_NFS_SERVER="nfs"

fi
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $DEFAULT_INIT_NFS_SERVER" >&5
printf "%s\n" "$DEFAULT_INIT_NFS_SERVER" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking default init config directory" >&5
printf %s "checking default init config directory... " >&6; }
	case "$VENDOR" in
		alpine)     initconfdir=/etc/conf.d    ;;
		gentoo)     initconfdir=/etc/conf.d    ;;
		toss)       initconfdir=/etc/sysconfig ;;
		redhat)     initconfdir=/etc/sysconfig ;;
		fedora)     initconfdir=/etc/sysconfig ;;
		sles)       initconfdir=/etc/sysconfig ;;
		openeuler)  initconfdir=/etc/sysconfig ;;
		ubuntu)     initconfdir=/etc/default   ;;
		debian)     initconfdir=/etc/default   ;;
		freebsd)    initconfdir=$sysconfdir/rc.conf.d;;
		*)          initconfdir=/etc/default   ;;
	esac
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $initconfdir" >&5
printf "%s\n" "$initconfdir" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether initramfs-tools is available" >&5
printf %s "checking whether initramfs-tools is available... " >&6; }
	if test -d /usr/share/initramfs-tools ; then
		RPM_DEFINE_INITRAMFS='--define "_initramfs 1"'
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes" >&5
printf "%s\n" "yes" >&6; }
	else
		RPM_DEFINE_INITRAMFS=''
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: no" >&5
printf "%s\n" "no" >&6; }
	fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking default bash completion directory" >&5
printf %s "checking default bash completion directory... " >&6; }
	case "$VENDOR" in
		ubuntu)     bashcompletiondir=/usr/share/bash-completion/completions   ;;
		debian)     bashcompletiondir=/usr/share/bash-completion/completions   ;;
		freebsd)    bashcompletiondir=$sysconfdir/bash_completion.d;;
		gentoo)     bashcompletiondir=/usr/share/bash-completion/completions   ;;
		*)          bashcompletiondir=/etc/bash_completion.d   ;;
	esac
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $bashcompletiondir" >&5
printf "%s\n" "$bashcompletiondir" >&6; }



	if test x$VENDOR != xfreebsd
then :


	RPM=rpm
	RPMBUILD=rpmbuild

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $RPM is available" >&5
printf %s "checking whether $RPM is available... " >&6; }
	if tmp=$($RPM --version 2>/dev/null)
then :

		RPM_VERSION=$(echo $tmp | $AWK '/RPM/ { print $3 }')
		HAVE_RPM=yes
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_RPM ($RPM_VERSION)" >&5
printf "%s\n" "$HAVE_RPM ($RPM_VERSION)" >&6; }

else $as_nop

		HAVE_RPM=no
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_RPM" >&5
printf "%s\n" "$HAVE_RPM" >&6; }

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $RPMBUILD is available" >&5
printf %s "checking whether $RPMBUILD is available... " >&6; }
	if tmp=$($RPMBUILD --version 2>/dev/null)
then :

		RPMBUILD_VERSION=$(echo $tmp | $AWK '/RPM/ { print $3 }')
		HAVE_RPMBUILD=yes
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_RPMBUILD ($RPMBUILD_VERSION)" >&5
printf "%s\n" "$HAVE_RPMBUILD ($RPMBUILD_VERSION)" >&6; }

else $as_nop

		HAVE_RPMBUILD=no
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_RPMBUILD" >&5
printf "%s\n" "$HAVE_RPMBUILD" >&6; }

fi

	RPM_DEFINE_COMMON='--define "$(DEBUG_ZFS) 1"'
	RPM_DEFINE_COMMON=${RPM_DEFINE_COMMON}' --define "$(DEBUGINFO_ZFS) 1"'
	RPM_DEFINE_COMMON=${RPM_DEFINE_COMMON}' --define "$(DEBUG_KMEM_ZFS) 1"'
	RPM_DEFINE_COMMON=${RPM_DEFINE_COMMON}' --define "$(DEBUG_KMEM_TRACKING_ZFS) 1"'
	RPM_DEFINE_COMMON=${RPM_DEFINE_COMMON}' --define "$(ASAN_ZFS) 1"'
	RPM_DEFINE_COMMON=${RPM_DEFINE_COMMON}' --define "$(UBSAN_ZFS) 1"'

	if test "x$enable_debuginfo" = xyes
then :

		RPM_DEFINE_COMMON=${RPM_DEFINE_COMMON}' --define "__strip /bin/true"'

fi

	RPM_DEFINE_UTIL=' --define "_initconfdir $(initconfdir)"'

						if test -n "$dracutdir"
then :

		RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' --define "_dracutdir $(dracutdir)"'

fi
	if test -n "$udevdir"
then :

		RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' --define "_udevdir $(udevdir)"'

fi
	if test -n "$udevruledir"
then :

		RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' --define "_udevruledir $(udevruledir)"'

fi
	if test -n "$bashcompletiondir"
then :

		RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' --define "_bashcompletiondir $(bashcompletiondir)"'

fi
	RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' $(DEFINE_SYSTEMD)'
	RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' $(DEFINE_PYZFS)'
	RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' $(DEFINE_PAM)'
	RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' $(DEFINE_PYTHON_VERSION)'
	RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' $(DEFINE_PYTHON_PKG_VERSION)'

									if test "$DEFAULT_PACKAGE" = "deb"
then :

		MULTIARCH_LIBDIR="lib/$(dpkg-architecture -qDEB_HOST_MULTIARCH)"
		RPM_DEFINE_UTIL=${RPM_DEFINE_UTIL}' --define "_lib $(MULTIARCH_LIBDIR)"'


fi

					RPM_DEFINE_KMOD='--define "_wrong_version_format_terminate_build 0"'
	if test -z "$CONFIG_KERNEL_TRUE"; then :

		RPM_DEFINE_KMOD=${RPM_DEFINE_KMOD}' --define "kernels $(LINUX_VERSION)"'
		RPM_DEFINE_KMOD=${RPM_DEFINE_KMOD}' --define "ksrc $(LINUX)"'
		RPM_DEFINE_KMOD=${RPM_DEFINE_KMOD}' --define "kobj $(LINUX_OBJ)"'
		RPM_DEFINE_KMOD=${RPM_DEFINE_KMOD}' --define "kernel_cc KERNEL_CC=$(KERNEL_CC)"'
		RPM_DEFINE_KMOD=${RPM_DEFINE_KMOD}' --define "kernel_ld KERNEL_LD=$(KERNEL_LD)"'
		RPM_DEFINE_KMOD=${RPM_DEFINE_KMOD}' --define "kernel_llvm KERNEL_LLVM=$(KERNEL_LLVM)"'

fi

	RPM_DEFINE_DKMS=''

	SRPM_DEFINE_COMMON='--define "build_src_rpm 1"'
	SRPM_DEFINE_UTIL=
	SRPM_DEFINE_KMOD=
	SRPM_DEFINE_DKMS=

	RPM_SPEC_DIR="rpm/generic"

# Check whether --with-spec was given.
if test ${with_spec+y}
then :
  withval=$with_spec; RPM_SPEC_DIR="rpm/$withval"
fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether spec files are available" >&5
printf %s "checking whether spec files are available... " >&6; }
	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: yes ($RPM_SPEC_DIR/*.spec.in)" >&5
printf "%s\n" "yes ($RPM_SPEC_DIR/*.spec.in)" >&6; }




















	DPKG=dpkg
	DPKGBUILD=dpkg-buildpackage

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $DPKG is available" >&5
printf %s "checking whether $DPKG is available... " >&6; }
	if tmp=$($DPKG --version 2>/dev/null)
then :

		DPKG_VERSION=$(echo $tmp | $AWK '/Debian/ { print $7 }')
		HAVE_DPKG=yes
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_DPKG ($DPKG_VERSION)" >&5
printf "%s\n" "$HAVE_DPKG ($DPKG_VERSION)" >&6; }

else $as_nop

		HAVE_DPKG=no
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_DPKG" >&5
printf "%s\n" "$HAVE_DPKG" >&6; }

fi

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $DPKGBUILD is available" >&5
printf %s "checking whether $DPKGBUILD is available... " >&6; }
	if tmp=$($DPKGBUILD --version 2>/dev/null)
then :

		DPKGBUILD_VERSION=$(echo $tmp | \
		    $AWK '/Debian/ { print $4 }' | cut -f-4 -d'.')
		HAVE_DPKGBUILD=yes
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_DPKGBUILD ($DPKGBUILD_VERSION)" >&5
printf "%s\n" "$HAVE_DPKGBUILD ($DPKGBUILD_VERSION)" >&6; }

else $as_nop

		HAVE_DPKGBUILD=no
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_DPKGBUILD" >&5
printf "%s\n" "$HAVE_DPKGBUILD" >&6; }

fi








	CFGOPTS="$CFGOPTS"



	ALIEN=alien

	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether $ALIEN is available" >&5
printf %s "checking whether $ALIEN is available... " >&6; }
	if tmp=$($ALIEN --version 2>/dev/null)
then :

		ALIEN_VERSION=$(echo $tmp | $AWK '{ print $3 }')
		ALIEN_MAJOR=$(echo ${ALIEN_VERSION} | $AWK -F'.' '{ print $1 }')
		ALIEN_MINOR=$(echo ${ALIEN_VERSION} | $AWK -F'.' '{ print $2 }')
		ALIEN_POINT=$(echo ${ALIEN_VERSION} | $AWK -F'.' '{ print $3 }')
		HAVE_ALIEN=yes
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_ALIEN ($ALIEN_VERSION)" >&5
printf "%s\n" "$HAVE_ALIEN ($ALIEN_VERSION)" >&6; }

else $as_nop

		HAVE_ALIEN=no
		{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $HAVE_ALIEN" >&5
printf "%s\n" "$HAVE_ALIEN" >&6; }

fi









fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether assertion support will be enabled" >&5
printf %s "checking whether assertion support will be enabled... " >&6; }
	# Check whether --enable-debug was given.
if test ${enable_debug+y}
then :
  enableval=$enable_debug;
else $as_nop
  enable_debug=no
fi


	case "x$enable_debug" in #(
  "xyes") :

	DEBUG_CFLAGS="-Werror"
	DEBUG_CPPFLAGS="-DDEBUG -UNDEBUG"
	DEBUG_LDFLAGS=""
	DEBUG_ZFS="_with_debug"
	WITH_DEBUG="true"

printf "%s\n" "#define ZFS_DEBUG 1" >>confdefs.h


	KERNEL_DEBUG_CFLAGS="-Werror"
	KERNEL_DEBUG_CPPFLAGS="-DDEBUG -UNDEBUG"
 ;; #(
  "xno") :

	DEBUG_CFLAGS=""
	DEBUG_CPPFLAGS="-UDEBUG -DNDEBUG"
	DEBUG_LDFLAGS=""
	DEBUG_ZFS="_without_debug"
	WITH_DEBUG=""

	KERNEL_DEBUG_CFLAGS=""
	KERNEL_DEBUG_CPPFLAGS="-UDEBUG -DNDEBUG"
 ;; #(
  *) :
    as_fn_error $? "Unknown option $enable_debug" "$LINENO" 5 ;;
esac

	case "x$enable_invariants" in #(
  "xyes") :
     ;; #(
  "xno") :
     ;; #(
  *) :

	if test -z "$BUILD_FREEBSD_TRUE"; then :

	if sysctl -n kern.conftxt | grep -Fqx $'options\tINVARIANTS'
then :
  enable_invariants="yes"
else $as_nop
  enable_invariants="no"
fi

else
  enable_invariants="no"
fi
 ;;
esac

	case "x$enable_invariants" in #(
  "xyes") :

	DEBUG_CFLAGS="-Werror"
	DEBUG_CPPFLAGS="-DDEBUG -UNDEBUG"
	DEBUG_LDFLAGS=""
	DEBUG_ZFS="_with_debug"
	WITH_DEBUG="true"

printf "%s\n" "#define ZFS_DEBUG 1" >>confdefs.h


	KERNEL_DEBUG_CFLAGS="-Werror"
	KERNEL_DEBUG_CPPFLAGS="-DDEBUG -UNDEBUG"
 ;; #(
  "xno") :
     ;; #(
  *) :
    as_fn_error $? "Unknown option $enable_invariants" "$LINENO" 5 ;;
esac










	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_debug" >&5
printf "%s\n" "$enable_debug" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether debuginfo support will be forced" >&5
printf %s "checking whether debuginfo support will be forced... " >&6; }
	# Check whether --enable-debuginfo was given.
if test ${enable_debuginfo+y}
then :
  enableval=$enable_debuginfo;
else $as_nop
  enable_debuginfo=no
fi


	case "x$enable_debuginfo" in #(
  "xyes") :

	DEBUG_CFLAGS="$DEBUG_CFLAGS -g -fno-inline $NO_IPA_SRA"

	KERNEL_DEBUG_CFLAGS="$KERNEL_DEBUG_CFLAGS -fno-inline $KERNEL_NO_IPA_SRA"
	KERNEL_MAKE="$KERNEL_MAKE CONFIG_DEBUG_INFO=y"

	DEBUGINFO_ZFS="_with_debuginfo"
 ;; #(
  "xno") :

	DEBUGINFO_ZFS="_without_debuginfo"
 ;; #(
  *) :
    as_fn_error $? "Unknown option $enable_debuginfo" "$LINENO" 5 ;;
esac







	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_debuginfo" >&5
printf "%s\n" "$enable_debuginfo" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether basic kmem accounting is enabled" >&5
printf %s "checking whether basic kmem accounting is enabled... " >&6; }
	# Check whether --enable-debug-kmem was given.
if test ${enable_debug_kmem+y}
then :
  enableval=$enable_debug_kmem;
else $as_nop
  enable_debug_kmem=no
fi


	if test "x$enable_debug_kmem" = xyes
then :

		KERNEL_DEBUG_CPPFLAGS="${KERNEL_DEBUG_CPPFLAGS} -DDEBUG_KMEM"
		DEBUG_KMEM_ZFS="_with_debug_kmem"

else $as_nop

		DEBUG_KMEM_ZFS="_without_debug_kmem"

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_debug_kmem" >&5
printf "%s\n" "$enable_debug_kmem" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether detailed kmem tracking is enabled" >&5
printf %s "checking whether detailed kmem tracking is enabled... " >&6; }
	# Check whether --enable-debug-kmem-tracking was given.
if test ${enable_debug_kmem_tracking+y}
then :
  enableval=$enable_debug_kmem_tracking;
else $as_nop
  enable_debug_kmem_tracking=no
fi


	if test "x$enable_debug_kmem_tracking" = xyes
then :

		KERNEL_DEBUG_CPPFLAGS="${KERNEL_DEBUG_CPPFLAGS} -DDEBUG_KMEM_TRACKING"
		DEBUG_KMEM_TRACKING_ZFS="_with_debug_kmem_tracking"

else $as_nop

		DEBUG_KMEM_TRACKING_ZFS="_without_debug_kmem_tracking"

fi




	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_debug_kmem_tracking" >&5
printf "%s\n" "$enable_debug_kmem_tracking" >&6; }


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking whether FreeBSD kernel INVARIANTS checks are enabled" >&5
printf %s "checking whether FreeBSD kernel INVARIANTS checks are enabled... " >&6; }
	# Check whether --enable-invariants was given.
if test ${enable_invariants+y}
then :
  enableval=$enable_invariants;
else $as_nop

	if test -z "$BUILD_FREEBSD_TRUE"; then :

	if sysctl -n kern.conftxt | grep -Fqx $'options\tINVARIANTS'
then :
  enable_invariants="yes"
else $as_nop
  enable_invariants="no"
fi

else
  enable_invariants="no"
fi

fi


	if test "x$enable_invariants" = xyes
then :
  WITH_INVARIANTS="true"
else $as_nop
  WITH_INVARIANTS=""
fi


	{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $enable_invariants" >&5
printf "%s\n" "$enable_invariants" >&6; }


ac_config_files="$ac_config_files contrib/debian/rules Makefile include/Makefile lib/libzfs/libzfs.pc lib/libzfs_core/libzfs_core.pc lib/libzfsbootenv/libzfsbootenv.pc module/Kbuild module/Makefile rpm/generic/zfs-dkms.spec rpm/generic/zfs-kmod.spec rpm/generic/zfs.spec rpm/redhat/zfs-dkms.spec rpm/redhat/zfs-kmod.spec rpm/redhat/zfs.spec tests/zfs-tests/tests/Makefile zfs.release"



cat >confcache <<\_ACEOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs, see configure's option --config-cache.
# It is not useful on other systems.  If it contains results you don't
# want to keep, you may remove or edit it.
#
# config.status only pays attention to the cache file if you give it
# the --recheck option to rerun configure.
#
# `ac_cv_env_foo' variables (set or unset) will be overridden when
# loading this file, other *unset* `ac_cv_foo' will be assigned the
# following values.

_ACEOF

# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, we kill variables containing newlines.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
(
  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
printf "%s\n" "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done

  (set) 2>&1 |
    case $as_nl`(ac_space=' '; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      # `set' does not quote correctly, so add quotes: double-quote
      # substitution turns \\\\ into \\, and sed turns \\ into \.
      sed -n \
	"s/'/'\\\\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
      ;; #(
    *)
      # `set' quotes correctly as required by POSIX, so do not add quotes.
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
) |
  sed '
     /^ac_cv_env_/b end
     t clear
     :clear
     s/^\([^=]*\)=\(.*[{}].*\)$/test ${\1+y} || &/
     t end
     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
     :end' >>confcache
if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
  if test -w "$cache_file"; then
    if test "x$cache_file" != "x/dev/null"; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
printf "%s\n" "$as_me: updating cache $cache_file" >&6;}
      if test ! -f "$cache_file" || test -h "$cache_file"; then
	cat confcache >"$cache_file"
      else
        case $cache_file in #(
        */* | ?:*)
	  mv -f confcache "$cache_file"$$ &&
	  mv -f "$cache_file"$$ "$cache_file" ;; #(
        *)
	  mv -f confcache "$cache_file" ;;
	esac
      fi
    fi
  else
    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
printf "%s\n" "$as_me: not updating unwritable cache $cache_file" >&6;}
  fi
fi
rm -f confcache

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

DEFS=-DHAVE_CONFIG_H

ac_libobjs=
ac_ltlibobjs=
U=
for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
  ac_i=`printf "%s\n" "$ac_i" | sed "$ac_script"`
  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
  #    will be set to the directory where LIBOBJS objects are built.
  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
done
LIBOBJS=$ac_libobjs

LTLIBOBJS=$ac_ltlibobjs


if test -z "${MAINTAINER_MODE_TRUE}" && test -z "${MAINTAINER_MODE_FALSE}"; then
  as_fn_error $? "conditional \"MAINTAINER_MODE\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking that generated files are newer than configure" >&5
printf %s "checking that generated files are newer than configure... " >&6; }
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
printf "%s\n" "done" >&6; }
 if test -n "$EXEEXT"; then
  am__EXEEXT_TRUE=
  am__EXEEXT_FALSE='#'
else
  am__EXEEXT_TRUE='#'
  am__EXEEXT_FALSE=
fi

if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
  as_fn_error $? "conditional \"AMDEP\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
  as_fn_error $? "conditional \"am__fastdepCC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
  as_fn_error $? "conditional \"am__fastdepCC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${am__fastdepCCAS_TRUE}" && test -z "${am__fastdepCCAS_FALSE}"; then
  as_fn_error $? "conditional \"am__fastdepCCAS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CODE_COVERAGE_ENABLED_TRUE}" && test -z "${CODE_COVERAGE_ENABLED_FALSE}"; then
  as_fn_error $? "conditional \"CODE_COVERAGE_ENABLED\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${ASAN_ENABLED_TRUE}" && test -z "${ASAN_ENABLED_FALSE}"; then
  as_fn_error $? "conditional \"ASAN_ENABLED\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${UBSAN_ENABLED_TRUE}" && test -z "${UBSAN_ENABLED_FALSE}"; then
  as_fn_error $? "conditional \"UBSAN_ENABLED\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${BUILD_LINUX_TRUE}" && test -z "${BUILD_LINUX_FALSE}"; then
  as_fn_error $? "conditional \"BUILD_LINUX\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${BUILD_FREEBSD_TRUE}" && test -z "${BUILD_FREEBSD_FALSE}"; then
  as_fn_error $? "conditional \"BUILD_FREEBSD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${TARGET_CPU_AARCH64_TRUE}" && test -z "${TARGET_CPU_AARCH64_FALSE}"; then
  as_fn_error $? "conditional \"TARGET_CPU_AARCH64\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${TARGET_CPU_X86_64_TRUE}" && test -z "${TARGET_CPU_X86_64_FALSE}"; then
  as_fn_error $? "conditional \"TARGET_CPU_X86_64\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${TARGET_CPU_POWERPC_TRUE}" && test -z "${TARGET_CPU_POWERPC_FALSE}"; then
  as_fn_error $? "conditional \"TARGET_CPU_POWERPC\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${TARGET_CPU_SPARC64_TRUE}" && test -z "${TARGET_CPU_SPARC64_FALSE}"; then
  as_fn_error $? "conditional \"TARGET_CPU_SPARC64\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${TARGET_CPU_ARM_TRUE}" && test -z "${TARGET_CPU_ARM_FALSE}"; then
  as_fn_error $? "conditional \"TARGET_CPU_ARM\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${USING_PYTHON_TRUE}" && test -z "${USING_PYTHON_FALSE}"; then
  as_fn_error $? "conditional \"USING_PYTHON\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${PYZFS_ENABLED_TRUE}" && test -z "${PYZFS_ENABLED_FALSE}"; then
  as_fn_error $? "conditional \"PYZFS_ENABLED\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_SHELLCHECK_TRUE}" && test -z "${HAVE_SHELLCHECK_FALSE}"; then
  as_fn_error $? "conditional \"HAVE_SHELLCHECK\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_CHECKBASHISMS_TRUE}" && test -z "${HAVE_CHECKBASHISMS_FALSE}"; then
  as_fn_error $? "conditional \"HAVE_CHECKBASHISMS\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${HAVE_PARALLEL_TRUE}" && test -z "${HAVE_PARALLEL_FALSE}"; then
  as_fn_error $? "conditional \"HAVE_PARALLEL\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${INIT_SYSV_TRUE}" && test -z "${INIT_SYSV_FALSE}"; then
  as_fn_error $? "conditional \"INIT_SYSV\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${INIT_SYSTEMD_TRUE}" && test -z "${INIT_SYSTEMD_FALSE}"; then
  as_fn_error $? "conditional \"INIT_SYSTEMD\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_MODULES_LOAD_D_TRUE}" && test -z "${WANT_MODULES_LOAD_D_FALSE}"; then
  as_fn_error $? "conditional \"WANT_MODULES_LOAD_D\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CONFIG_USER_TRUE}" && test -z "${CONFIG_USER_FALSE}"; then
  as_fn_error $? "conditional \"CONFIG_USER\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CONFIG_KERNEL_TRUE}" && test -z "${CONFIG_KERNEL_FALSE}"; then
  as_fn_error $? "conditional \"CONFIG_KERNEL\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${CONFIG_QAT_TRUE}" && test -z "${CONFIG_QAT_FALSE}"; then
  as_fn_error $? "conditional \"CONFIG_QAT\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_DEVNAME2DEVID_TRUE}" && test -z "${WANT_DEVNAME2DEVID_FALSE}"; then
  as_fn_error $? "conditional \"WANT_DEVNAME2DEVID\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${WANT_MMAP_LIBAIO_TRUE}" && test -z "${WANT_MMAP_LIBAIO_FALSE}"; then
  as_fn_error $? "conditional \"WANT_MMAP_LIBAIO\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi
if test -z "${PAM_ZFS_ENABLED_TRUE}" && test -z "${PAM_ZFS_ENABLED_FALSE}"; then
  as_fn_error $? "conditional \"PAM_ZFS_ENABLED\" was never defined.
Usually this means the macro was only invoked conditionally." "$LINENO" 5
fi

: "${CONFIG_STATUS=./config.status}"
ac_write_fail=0
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files $CONFIG_STATUS"
{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
printf "%s\n" "$as_me: creating $CONFIG_STATUS" >&6;}
as_write_fail=0
cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
#! $SHELL
# Generated by $as_me.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=\${CONFIG_SHELL-$SHELL}
export SHELL
_ASEOF
cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi



# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error



# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
_ASEOF
test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by zfs $as_me 2.2.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

_ACEOF

case $ac_config_files in *"
"*) set x $ac_config_files; shift; ac_config_files=$*;;
esac

case $ac_config_headers in *"
"*) set x $ac_config_headers; shift; ac_config_headers=$*;;
esac


cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
# Files that config.status was made for.
config_files="$ac_config_files"
config_headers="$ac_config_headers"
config_commands="$ac_config_commands"

_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to the package provider."

_ACEOF
ac_cs_config=`printf "%s\n" "$ac_configure_args" | sed "$ac_safe_unquote"`
ac_cs_config_escaped=`printf "%s\n" "$ac_cs_config" | sed "s/^ //; s/'/'\\\\\\\\''/g"`
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_cs_config='$ac_cs_config_escaped'
ac_cs_version="\\
zfs config.status 2.2.0
configured by $0, generated by GNU Autoconf 2.71,
  with options \\"\$ac_cs_config\\"

Copyright (C) 2021 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='$ac_pwd'
srcdir='$srcdir'
INSTALL='$INSTALL'
MKDIR_P='$MKDIR_P'
AWK='$AWK'
test -n "\$AWK" || AWK=awk
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    printf "%s\n" "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    printf "%s\n" "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    printf "%s\n" "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
if \$ac_cs_recheck; then
  set X $SHELL '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
  shift
  \printf "%s\n" "running CONFIG_SHELL=$SHELL \$*" >&6
  CONFIG_SHELL='$SHELL'
  export CONFIG_SHELL
  exec "\$@"
fi

_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  printf "%s\n" "$ac_log"
} >&5

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
#
# INIT-COMMANDS
#
AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='$sed_quote_subst'
double_quote_subst='$double_quote_subst'
delay_variable_subst='$delay_variable_subst'
macro_version='`$ECHO "$macro_version" | $SED "$delay_single_quote_subst"`'
macro_revision='`$ECHO "$macro_revision" | $SED "$delay_single_quote_subst"`'
enable_shared='`$ECHO "$enable_shared" | $SED "$delay_single_quote_subst"`'
enable_static='`$ECHO "$enable_static" | $SED "$delay_single_quote_subst"`'
pic_mode='`$ECHO "$pic_mode" | $SED "$delay_single_quote_subst"`'
enable_fast_install='`$ECHO "$enable_fast_install" | $SED "$delay_single_quote_subst"`'
shared_archive_member_spec='`$ECHO "$shared_archive_member_spec" | $SED "$delay_single_quote_subst"`'
SHELL='`$ECHO "$SHELL" | $SED "$delay_single_quote_subst"`'
ECHO='`$ECHO "$ECHO" | $SED "$delay_single_quote_subst"`'
PATH_SEPARATOR='`$ECHO "$PATH_SEPARATOR" | $SED "$delay_single_quote_subst"`'
host_alias='`$ECHO "$host_alias" | $SED "$delay_single_quote_subst"`'
host='`$ECHO "$host" | $SED "$delay_single_quote_subst"`'
host_os='`$ECHO "$host_os" | $SED "$delay_single_quote_subst"`'
build_alias='`$ECHO "$build_alias" | $SED "$delay_single_quote_subst"`'
build='`$ECHO "$build" | $SED "$delay_single_quote_subst"`'
build_os='`$ECHO "$build_os" | $SED "$delay_single_quote_subst"`'
SED='`$ECHO "$SED" | $SED "$delay_single_quote_subst"`'
Xsed='`$ECHO "$Xsed" | $SED "$delay_single_quote_subst"`'
GREP='`$ECHO "$GREP" | $SED "$delay_single_quote_subst"`'
EGREP='`$ECHO "$EGREP" | $SED "$delay_single_quote_subst"`'
FGREP='`$ECHO "$FGREP" | $SED "$delay_single_quote_subst"`'
LD='`$ECHO "$LD" | $SED "$delay_single_quote_subst"`'
NM='`$ECHO "$NM" | $SED "$delay_single_quote_subst"`'
LN_S='`$ECHO "$LN_S" | $SED "$delay_single_quote_subst"`'
max_cmd_len='`$ECHO "$max_cmd_len" | $SED "$delay_single_quote_subst"`'
ac_objext='`$ECHO "$ac_objext" | $SED "$delay_single_quote_subst"`'
exeext='`$ECHO "$exeext" | $SED "$delay_single_quote_subst"`'
lt_unset='`$ECHO "$lt_unset" | $SED "$delay_single_quote_subst"`'
lt_SP2NL='`$ECHO "$lt_SP2NL" | $SED "$delay_single_quote_subst"`'
lt_NL2SP='`$ECHO "$lt_NL2SP" | $SED "$delay_single_quote_subst"`'
lt_cv_to_host_file_cmd='`$ECHO "$lt_cv_to_host_file_cmd" | $SED "$delay_single_quote_subst"`'
lt_cv_to_tool_file_cmd='`$ECHO "$lt_cv_to_tool_file_cmd" | $SED "$delay_single_quote_subst"`'
reload_flag='`$ECHO "$reload_flag" | $SED "$delay_single_quote_subst"`'
reload_cmds='`$ECHO "$reload_cmds" | $SED "$delay_single_quote_subst"`'
FILECMD='`$ECHO "$FILECMD" | $SED "$delay_single_quote_subst"`'
OBJDUMP='`$ECHO "$OBJDUMP" | $SED "$delay_single_quote_subst"`'
deplibs_check_method='`$ECHO "$deplibs_check_method" | $SED "$delay_single_quote_subst"`'
file_magic_cmd='`$ECHO "$file_magic_cmd" | $SED "$delay_single_quote_subst"`'
file_magic_glob='`$ECHO "$file_magic_glob" | $SED "$delay_single_quote_subst"`'
want_nocaseglob='`$ECHO "$want_nocaseglob" | $SED "$delay_single_quote_subst"`'
DLLTOOL='`$ECHO "$DLLTOOL" | $SED "$delay_single_quote_subst"`'
sharedlib_from_linklib_cmd='`$ECHO "$sharedlib_from_linklib_cmd" | $SED "$delay_single_quote_subst"`'
AR='`$ECHO "$AR" | $SED "$delay_single_quote_subst"`'
lt_ar_flags='`$ECHO "$lt_ar_flags" | $SED "$delay_single_quote_subst"`'
AR_FLAGS='`$ECHO "$AR_FLAGS" | $SED "$delay_single_quote_subst"`'
archiver_list_spec='`$ECHO "$archiver_list_spec" | $SED "$delay_single_quote_subst"`'
STRIP='`$ECHO "$STRIP" | $SED "$delay_single_quote_subst"`'
RANLIB='`$ECHO "$RANLIB" | $SED "$delay_single_quote_subst"`'
old_postinstall_cmds='`$ECHO "$old_postinstall_cmds" | $SED "$delay_single_quote_subst"`'
old_postuninstall_cmds='`$ECHO "$old_postuninstall_cmds" | $SED "$delay_single_quote_subst"`'
old_archive_cmds='`$ECHO "$old_archive_cmds" | $SED "$delay_single_quote_subst"`'
lock_old_archive_extraction='`$ECHO "$lock_old_archive_extraction" | $SED "$delay_single_quote_subst"`'
CC='`$ECHO "$CC" | $SED "$delay_single_quote_subst"`'
CFLAGS='`$ECHO "$CFLAGS" | $SED "$delay_single_quote_subst"`'
compiler='`$ECHO "$compiler" | $SED "$delay_single_quote_subst"`'
GCC='`$ECHO "$GCC" | $SED "$delay_single_quote_subst"`'
lt_cv_sys_global_symbol_pipe='`$ECHO "$lt_cv_sys_global_symbol_pipe" | $SED "$delay_single_quote_subst"`'
lt_cv_sys_global_symbol_to_cdecl='`$ECHO "$lt_cv_sys_global_symbol_to_cdecl" | $SED "$delay_single_quote_subst"`'
lt_cv_sys_global_symbol_to_import='`$ECHO "$lt_cv_sys_global_symbol_to_import" | $SED "$delay_single_quote_subst"`'
lt_cv_sys_global_symbol_to_c_name_address='`$ECHO "$lt_cv_sys_global_symbol_to_c_name_address" | $SED "$delay_single_quote_subst"`'
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='`$ECHO "$lt_cv_sys_global_symbol_to_c_name_address_lib_prefix" | $SED "$delay_single_quote_subst"`'
lt_cv_nm_interface='`$ECHO "$lt_cv_nm_interface" | $SED "$delay_single_quote_subst"`'
nm_file_list_spec='`$ECHO "$nm_file_list_spec" | $SED "$delay_single_quote_subst"`'
lt_sysroot='`$ECHO "$lt_sysroot" | $SED "$delay_single_quote_subst"`'
lt_cv_truncate_bin='`$ECHO "$lt_cv_truncate_bin" | $SED "$delay_single_quote_subst"`'
objdir='`$ECHO "$objdir" | $SED "$delay_single_quote_subst"`'
MAGIC_CMD='`$ECHO "$MAGIC_CMD" | $SED "$delay_single_quote_subst"`'
lt_prog_compiler_no_builtin_flag='`$ECHO "$lt_prog_compiler_no_builtin_flag" | $SED "$delay_single_quote_subst"`'
lt_prog_compiler_pic='`$ECHO "$lt_prog_compiler_pic" | $SED "$delay_single_quote_subst"`'
lt_prog_compiler_wl='`$ECHO "$lt_prog_compiler_wl" | $SED "$delay_single_quote_subst"`'
lt_prog_compiler_static='`$ECHO "$lt_prog_compiler_static" | $SED "$delay_single_quote_subst"`'
lt_cv_prog_compiler_c_o='`$ECHO "$lt_cv_prog_compiler_c_o" | $SED "$delay_single_quote_subst"`'
need_locks='`$ECHO "$need_locks" | $SED "$delay_single_quote_subst"`'
MANIFEST_TOOL='`$ECHO "$MANIFEST_TOOL" | $SED "$delay_single_quote_subst"`'
DSYMUTIL='`$ECHO "$DSYMUTIL" | $SED "$delay_single_quote_subst"`'
NMEDIT='`$ECHO "$NMEDIT" | $SED "$delay_single_quote_subst"`'
LIPO='`$ECHO "$LIPO" | $SED "$delay_single_quote_subst"`'
OTOOL='`$ECHO "$OTOOL" | $SED "$delay_single_quote_subst"`'
OTOOL64='`$ECHO "$OTOOL64" | $SED "$delay_single_quote_subst"`'
libext='`$ECHO "$libext" | $SED "$delay_single_quote_subst"`'
shrext_cmds='`$ECHO "$shrext_cmds" | $SED "$delay_single_quote_subst"`'
extract_expsyms_cmds='`$ECHO "$extract_expsyms_cmds" | $SED "$delay_single_quote_subst"`'
archive_cmds_need_lc='`$ECHO "$archive_cmds_need_lc" | $SED "$delay_single_quote_subst"`'
enable_shared_with_static_runtimes='`$ECHO "$enable_shared_with_static_runtimes" | $SED "$delay_single_quote_subst"`'
export_dynamic_flag_spec='`$ECHO "$export_dynamic_flag_spec" | $SED "$delay_single_quote_subst"`'
whole_archive_flag_spec='`$ECHO "$whole_archive_flag_spec" | $SED "$delay_single_quote_subst"`'
compiler_needs_object='`$ECHO "$compiler_needs_object" | $SED "$delay_single_quote_subst"`'
old_archive_from_new_cmds='`$ECHO "$old_archive_from_new_cmds" | $SED "$delay_single_quote_subst"`'
old_archive_from_expsyms_cmds='`$ECHO "$old_archive_from_expsyms_cmds" | $SED "$delay_single_quote_subst"`'
archive_cmds='`$ECHO "$archive_cmds" | $SED "$delay_single_quote_subst"`'
archive_expsym_cmds='`$ECHO "$archive_expsym_cmds" | $SED "$delay_single_quote_subst"`'
module_cmds='`$ECHO "$module_cmds" | $SED "$delay_single_quote_subst"`'
module_expsym_cmds='`$ECHO "$module_expsym_cmds" | $SED "$delay_single_quote_subst"`'
with_gnu_ld='`$ECHO "$with_gnu_ld" | $SED "$delay_single_quote_subst"`'
allow_undefined_flag='`$ECHO "$allow_undefined_flag" | $SED "$delay_single_quote_subst"`'
no_undefined_flag='`$ECHO "$no_undefined_flag" | $SED "$delay_single_quote_subst"`'
hardcode_libdir_flag_spec='`$ECHO "$hardcode_libdir_flag_spec" | $SED "$delay_single_quote_subst"`'
hardcode_libdir_separator='`$ECHO "$hardcode_libdir_separator" | $SED "$delay_single_quote_subst"`'
hardcode_direct='`$ECHO "$hardcode_direct" | $SED "$delay_single_quote_subst"`'
hardcode_direct_absolute='`$ECHO "$hardcode_direct_absolute" | $SED "$delay_single_quote_subst"`'
hardcode_minus_L='`$ECHO "$hardcode_minus_L" | $SED "$delay_single_quote_subst"`'
hardcode_shlibpath_var='`$ECHO "$hardcode_shlibpath_var" | $SED "$delay_single_quote_subst"`'
hardcode_automatic='`$ECHO "$hardcode_automatic" | $SED "$delay_single_quote_subst"`'
inherit_rpath='`$ECHO "$inherit_rpath" | $SED "$delay_single_quote_subst"`'
link_all_deplibs='`$ECHO "$link_all_deplibs" | $SED "$delay_single_quote_subst"`'
always_export_symbols='`$ECHO "$always_export_symbols" | $SED "$delay_single_quote_subst"`'
export_symbols_cmds='`$ECHO "$export_symbols_cmds" | $SED "$delay_single_quote_subst"`'
exclude_expsyms='`$ECHO "$exclude_expsyms" | $SED "$delay_single_quote_subst"`'
include_expsyms='`$ECHO "$include_expsyms" | $SED "$delay_single_quote_subst"`'
prelink_cmds='`$ECHO "$prelink_cmds" | $SED "$delay_single_quote_subst"`'
postlink_cmds='`$ECHO "$postlink_cmds" | $SED "$delay_single_quote_subst"`'
file_list_spec='`$ECHO "$file_list_spec" | $SED "$delay_single_quote_subst"`'
variables_saved_for_relink='`$ECHO "$variables_saved_for_relink" | $SED "$delay_single_quote_subst"`'
need_lib_prefix='`$ECHO "$need_lib_prefix" | $SED "$delay_single_quote_subst"`'
need_version='`$ECHO "$need_version" | $SED "$delay_single_quote_subst"`'
version_type='`$ECHO "$version_type" | $SED "$delay_single_quote_subst"`'
runpath_var='`$ECHO "$runpath_var" | $SED "$delay_single_quote_subst"`'
shlibpath_var='`$ECHO "$shlibpath_var" | $SED "$delay_single_quote_subst"`'
shlibpath_overrides_runpath='`$ECHO "$shlibpath_overrides_runpath" | $SED "$delay_single_quote_subst"`'
libname_spec='`$ECHO "$libname_spec" | $SED "$delay_single_quote_subst"`'
library_names_spec='`$ECHO "$library_names_spec" | $SED "$delay_single_quote_subst"`'
soname_spec='`$ECHO "$soname_spec" | $SED "$delay_single_quote_subst"`'
install_override_mode='`$ECHO "$install_override_mode" | $SED "$delay_single_quote_subst"`'
postinstall_cmds='`$ECHO "$postinstall_cmds" | $SED "$delay_single_quote_subst"`'
postuninstall_cmds='`$ECHO "$postuninstall_cmds" | $SED "$delay_single_quote_subst"`'
finish_cmds='`$ECHO "$finish_cmds" | $SED "$delay_single_quote_subst"`'
finish_eval='`$ECHO "$finish_eval" | $SED "$delay_single_quote_subst"`'
hardcode_into_libs='`$ECHO "$hardcode_into_libs" | $SED "$delay_single_quote_subst"`'
sys_lib_search_path_spec='`$ECHO "$sys_lib_search_path_spec" | $SED "$delay_single_quote_subst"`'
configure_time_dlsearch_path='`$ECHO "$configure_time_dlsearch_path" | $SED "$delay_single_quote_subst"`'
configure_time_lt_sys_library_path='`$ECHO "$configure_time_lt_sys_library_path" | $SED "$delay_single_quote_subst"`'
hardcode_action='`$ECHO "$hardcode_action" | $SED "$delay_single_quote_subst"`'
enable_dlopen='`$ECHO "$enable_dlopen" | $SED "$delay_single_quote_subst"`'
enable_dlopen_self='`$ECHO "$enable_dlopen_self" | $SED "$delay_single_quote_subst"`'
enable_dlopen_self_static='`$ECHO "$enable_dlopen_self_static" | $SED "$delay_single_quote_subst"`'
old_striplib='`$ECHO "$old_striplib" | $SED "$delay_single_quote_subst"`'
striplib='`$ECHO "$striplib" | $SED "$delay_single_quote_subst"`'

LTCC='$LTCC'
LTCFLAGS='$LTCFLAGS'
compiler='$compiler_DEFAULT'

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
\$1
_LTECHO_EOF'
}

# Quote evaled strings.
for var in SHELL \
ECHO \
PATH_SEPARATOR \
SED \
GREP \
EGREP \
FGREP \
LD \
NM \
LN_S \
lt_SP2NL \
lt_NL2SP \
reload_flag \
FILECMD \
OBJDUMP \
deplibs_check_method \
file_magic_cmd \
file_magic_glob \
want_nocaseglob \
DLLTOOL \
sharedlib_from_linklib_cmd \
AR \
archiver_list_spec \
STRIP \
RANLIB \
CC \
CFLAGS \
compiler \
lt_cv_sys_global_symbol_pipe \
lt_cv_sys_global_symbol_to_cdecl \
lt_cv_sys_global_symbol_to_import \
lt_cv_sys_global_symbol_to_c_name_address \
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix \
lt_cv_nm_interface \
nm_file_list_spec \
lt_cv_truncate_bin \
lt_prog_compiler_no_builtin_flag \
lt_prog_compiler_pic \
lt_prog_compiler_wl \
lt_prog_compiler_static \
lt_cv_prog_compiler_c_o \
need_locks \
MANIFEST_TOOL \
DSYMUTIL \
NMEDIT \
LIPO \
OTOOL \
OTOOL64 \
shrext_cmds \
export_dynamic_flag_spec \
whole_archive_flag_spec \
compiler_needs_object \
with_gnu_ld \
allow_undefined_flag \
no_undefined_flag \
hardcode_libdir_flag_spec \
hardcode_libdir_separator \
exclude_expsyms \
include_expsyms \
file_list_spec \
variables_saved_for_relink \
libname_spec \
library_names_spec \
soname_spec \
install_override_mode \
finish_eval \
old_striplib \
striplib; do
    case \`eval \\\\\$ECHO \\\\""\\\\\$\$var"\\\\"\` in
    *[\\\\\\\`\\"\\\$]*)
      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED \\"\\\$sed_quote_subst\\"\\\`\\\\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds \
old_postinstall_cmds \
old_postuninstall_cmds \
old_archive_cmds \
extract_expsyms_cmds \
old_archive_from_new_cmds \
old_archive_from_expsyms_cmds \
archive_cmds \
archive_expsym_cmds \
module_cmds \
module_expsym_cmds \
export_symbols_cmds \
prelink_cmds \
postlink_cmds \
postinstall_cmds \
postuninstall_cmds \
finish_cmds \
sys_lib_search_path_spec \
configure_time_dlsearch_path \
configure_time_lt_sys_library_path; do
    case \`eval \\\\\$ECHO \\\\""\\\\\$\$var"\\\\"\` in
    *[\\\\\\\`\\"\\\$]*)
      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
      ;;
    esac
done

ac_aux_dir='$ac_aux_dir'

# See if we are running on zsh, and set the options that allow our
# commands through without removal of \ escapes INIT.
if test -n "\${ZSH_VERSION+set}"; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='$PACKAGE'
    VERSION='$VERSION'
    RM='$RM'
    ofile='$ofile'



# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS.
    OBSOLETE_ALL_LINGUAS="$ALL_LINGUAS"
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="${LINGUAS-%UNSET%}"


_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1

# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "zfs_config.h") CONFIG_HEADERS="$CONFIG_HEADERS zfs_config.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "po-directories") CONFIG_COMMANDS="$CONFIG_COMMANDS po-directories" ;;
    "contrib/debian/rules") CONFIG_FILES="$CONFIG_FILES contrib/debian/rules" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "include/Makefile") CONFIG_FILES="$CONFIG_FILES include/Makefile" ;;
    "lib/libzfs/libzfs.pc") CONFIG_FILES="$CONFIG_FILES lib/libzfs/libzfs.pc" ;;
    "lib/libzfs_core/libzfs_core.pc") CONFIG_FILES="$CONFIG_FILES lib/libzfs_core/libzfs_core.pc" ;;
    "lib/libzfsbootenv/libzfsbootenv.pc") CONFIG_FILES="$CONFIG_FILES lib/libzfsbootenv/libzfsbootenv.pc" ;;
    "module/Kbuild") CONFIG_FILES="$CONFIG_FILES module/Kbuild" ;;
    "module/Makefile") CONFIG_FILES="$CONFIG_FILES module/Makefile" ;;
    "rpm/generic/zfs-dkms.spec") CONFIG_FILES="$CONFIG_FILES rpm/generic/zfs-dkms.spec" ;;
    "rpm/generic/zfs-kmod.spec") CONFIG_FILES="$CONFIG_FILES rpm/generic/zfs-kmod.spec" ;;
    "rpm/generic/zfs.spec") CONFIG_FILES="$CONFIG_FILES rpm/generic/zfs.spec" ;;
    "rpm/redhat/zfs-dkms.spec") CONFIG_FILES="$CONFIG_FILES rpm/redhat/zfs-dkms.spec" ;;
    "rpm/redhat/zfs-kmod.spec") CONFIG_FILES="$CONFIG_FILES rpm/redhat/zfs-kmod.spec" ;;
    "rpm/redhat/zfs.spec") CONFIG_FILES="$CONFIG_FILES rpm/redhat/zfs.spec" ;;
    "tests/zfs-tests/tests/Makefile") CONFIG_FILES="$CONFIG_FILES tests/zfs-tests/tests/Makefile" ;;
    "zfs.release") CONFIG_FILES="$CONFIG_FILES zfs.release" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test ${CONFIG_FILES+y} || CONFIG_FILES=$config_files
  test ${CONFIG_HEADERS+y} || CONFIG_HEADERS=$config_headers
  test ${CONFIG_COMMANDS+y} || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
_ACEOF


{
  echo "cat >conf$$subs.awk <<_ACEOF" &&
  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
  echo "_ACEOF"
} >conf$$subs.sh ||
  as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
ac_delim_num=`echo "$ac_subst_vars" | grep -c '^'`
ac_delim='%!_!# '
for ac_last_try in false false false false false :; do
  . ./conf$$subs.sh ||
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5

  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
  if test $ac_delim_n = $ac_delim_num; then
    break
  elif $ac_last_try; then
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done
rm -f conf$$subs.sh

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
cat >>"\$ac_tmp/subs1.awk" <<\\_ACAWK &&
_ACEOF
sed -n '
h
s/^/S["/; s/!.*/"]=/
p
g
s/^[^!]*!//
:repl
t repl
s/'"$ac_delim"'$//
t delim
:nl
h
s/\(.\{148\}\)..*/\1/
t more1
s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
p
n
b repl
:more1
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t nl
:delim
h
s/\(.\{148\}\)..*/\1/
t more2
s/["\\]/\\&/g; s/^/"/; s/$/"/
p
b
:more2
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t delim
' <conf$$subs.awk | sed '
/^[^""]/{
  N
  s/\n//
}
' >>$CONFIG_STATUS || ac_write_fail=1
rm -f conf$$subs.awk
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACAWK
cat >>"\$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
_ACEOF

# VPATH may cause trouble with some makes, so we remove sole $(srcdir),
# ${srcdir} and @srcdir@ entries from VPATH if srcdir is ".", strip leading and
# trailing colons and then remove the whole line if VPATH becomes empty
# (actually we leave an empty line to preserve line numbers).
if test "x$srcdir" = x.; then
  ac_vpsub='/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}'
fi

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
_ACEOF

# Transform confdefs.h into an awk script `defines.awk', embedded as
# here-document in config.status, that substitutes the proper values into
# config.h.in to produce config.h.

# Create a delimiter string that does not exist in confdefs.h, to ease
# handling of long lines.
ac_delim='%!_!# '
for ac_last_try in false false :; do
  ac_tt=`sed -n "/$ac_delim/p" confdefs.h`
  if test -z "$ac_tt"; then
    break
  elif $ac_last_try; then
    as_fn_error $? "could not make $CONFIG_HEADERS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done

# For the awk script, D is an array of macro values keyed by name,
# likewise P contains macro parameters if any.  Preserve backslash
# newline sequences.

ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
sed -n '
s/.\{148\}/&'"$ac_delim"'/g
t rset
:rset
s/^[	 ]*#[	 ]*define[	 ][	 ]*/ /
t def
d
:def
s/\\$//
t bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3"/p
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2"/p
d
:bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3\\\\\\n"\\/p
t cont
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2\\\\\\n"\\/p
t cont
d
:cont
n
s/.\{148\}/&'"$ac_delim"'/g
t clear
:clear
s/\\$//
t bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/"/p
d
:bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/\\\\\\n"\\/p
b cont
' <confdefs.h | sed '
s/'"$ac_delim"'/"\\\
"/g' >>$CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+$ac_word_re([\t (]|\$)/ {
  line = \$ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`printf "%s\n" "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  printf "%s\n" "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
printf "%s\n" "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`printf "%s\n" "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
printf "%s\n" "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  ac_datarootdir_hack='
  s&@datadir@&$datadir&g
  s&@docdir@&$docdir&g
  s&@infodir@&$infodir&g
  s&@localedir@&$localedir&g
  s&@mandir@&$mandir&g
  s&\\\${datarootdir}&$datarootdir&g' ;;
esac
_ACEOF

# Neutralize VPATH when `$srcdir' = `.'.
# Shell code in configure.ac might set extrasub.
# FIXME: do we really want to maintain this feature?
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_sed_extra="$ac_vpsub
$extrasub
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
printf "%s\n" "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
printf "%s\n" "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
printf "%s\n" "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "zfs_config.h":H)
	sed -nri~ -e '/^$/be' -e 'N;N;/#define (PACKAGE|VERSION|STDC_HEADERS)/d' -e ':e' -e 'p' zfs_config.h && rm zfs_config.h~ || exit ;;
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  case $CONFIG_FILES in #(
  *\'*) :
    eval set x "$CONFIG_FILES" ;; #(
  *) :
    set x $CONFIG_FILES ;; #(
  *) :
     ;;
esac
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`printf "%s\n" "$am_mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`$as_dirname -- "$am_mf" ||
$as_expr X"$am_mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$am_mf" : 'X\(//\)[^/]' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$am_mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    am_filepart=`$as_basename -- "$am_mf" ||
$as_expr X/"$am_mf" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$am_mf" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    { echo "$as_me:$LINENO: cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles" >&5
   (cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } || am_rc=$?
  done
  if test $am_rc -ne 0; then
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE=\"gmake\" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).
See \`config.log' for more details" "$LINENO" 5; }
  fi
  { am_dirpart=; unset am_dirpart;}
  { am_filepart=; unset am_filepart;}
  { am_mf=; unset am_mf;}
  { am_rc=; unset am_rc;}
  rm -f conftest-deps.mk
}
 ;;
    "libtool":C)

    # See if we are running on zsh, and set the options that allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}"; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile=${ofile}T
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL
# Generated automatically by $as_me ($PACKAGE) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.

# Provide generalized library-building support services.
# Written by Gordon Matzigkeit, 1996

# Copyright (C) 2014 Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.  There is NO
# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# GNU Libtool is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of of the License, or
# (at your option) any later version.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program or library that is built
# using GNU Libtool, you may include this file under the  same
# distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# The names of the tagged configurations supported by this script.
available_tags=''

# Configured defaults for sys_lib_dlsearch_path munging.
: \${LT_SYS_LIBRARY_PATH="$configure_time_lt_sys_library_path"}

# ### BEGIN LIBTOOL CONFIG

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# Shared archive member basename,for filename based shared library versioning on AIX.
shared_archive_member_spec=$shared_archive_member_spec

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that protects backslashes.
ECHO=$lt_ECHO

# The PATH separator for the build system.
PATH_SEPARATOR=$lt_PATH_SEPARATOR

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# convert \$build file names to \$host format.
to_host_file_cmd=$lt_cv_to_host_file_cmd

# convert \$build files to toolchain format.
to_tool_file_cmd=$lt_cv_to_tool_file_cmd

# A file(cmd) program that detects file types.
FILECMD=$lt_FILECMD

# An object symbol dumper.
OBJDUMP=$lt_OBJDUMP

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method = "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# How to find potential files when deplibs_check_method = "file_magic".
file_magic_glob=$lt_file_magic_glob

# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
want_nocaseglob=$lt_want_nocaseglob

# DLL creation program.
DLLTOOL=$lt_DLLTOOL

# Command to associate shared and link libraries.
sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd

# The archiver.
AR=$lt_AR

# Flags to create an archive (by configure).
lt_ar_flags=$lt_ar_flags

# Flags to create an archive.
AR_FLAGS=\${ARFLAGS-"\$lt_ar_flags"}

# How to feed a file listing to the archiver.
archiver_list_spec=$lt_archiver_list_spec

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# Whether to use a lock for old archive extraction.
lock_old_archive_extraction=$lock_old_archive_extraction

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm into a list of symbols to manually relocate.
global_symbol_to_import=$lt_lt_cv_sys_global_symbol_to_import

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# The name lister interface.
nm_interface=$lt_lt_cv_nm_interface

# Specify filename containing input files for \$NM.
nm_file_list_spec=$lt_nm_file_list_spec

# The root where to search for dependent libraries,and where our libraries should be installed.
lt_sysroot=$lt_sysroot

# Command to truncate a binary pipe.
lt_truncate_bin=$lt_lt_cv_truncate_bin

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Manifest tool.
MANIFEST_TOOL=$lt_MANIFEST_TOOL

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Permission mode override for installation of shared libraries.
install_override_mode=$lt_install_override_mode

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Detected run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_configure_time_dlsearch_path

# Explicit LT_SYS_LIBRARY_PATH set during ./configure time.
configure_time_lt_sys_library_path=$lt_configure_time_lt_sys_library_path

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# ### END LIBTOOL CONFIG

_LT_EOF

    cat <<'_LT_EOF' >> "$cfgfile"

# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE

# func_munge_path_list VARIABLE PATH
# -----------------------------------
# VARIABLE is name of variable containing _space_ separated list of
# directories to be munged by the contents of PATH, which is string
# having a format:
# "DIR[:DIR]:"
#       string "DIR[ DIR]" will be prepended to VARIABLE
# ":DIR[:DIR]"
#       string "DIR[ DIR]" will be appended to VARIABLE
# "DIRP[:DIRP]::[DIRA:]DIRA"
#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
#       "DIRA[ DIRA]" will be appended to VARIABLE
# "DIR[:DIR]"
#       VARIABLE will be replaced by "DIR[ DIR]"
func_munge_path_list ()
{
    case x$2 in
    x)
        ;;
    *:)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'` \$$1\"
        ;;
    x:*)
        eval $1=\"\$$1 `$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    *::*)
        eval $1=\"\$$1\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
        eval $1=\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \$$1\"
        ;;
    *)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    esac
}


# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
func_cc_basename ()
{
    for cc_temp in $*""; do
      case $cc_temp in
        compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
        distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
        \-*) ;;
        *) break;;
      esac
    done
    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
}


# ### END FUNCTIONS SHARED WITH CONFIGURE

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test set != "${COLLECT_NAMES+set}"; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac



ltmain=$ac_aux_dir/ltmain.sh


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  $SED '$q' "$ltmain" >> "$cfgfile" \
     || (rm -f "$cfgfile"; exit 1)

   mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"

 ;;
    "po-directories":C)
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          gt_tab=`printf '\t'`
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ ${gt_tab}]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            ALL_LINGUAS=$OBSOLETE_ALL_LINGUAS
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang"*) useit=yes;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done ;;

  esac
done # for ac_tag


as_fn_exit 0
_ACEOF
ac_clean_files=$ac_clean_files_save

test $ac_write_fail = 0 ||
  as_fn_error $? "write failure creating $CONFIG_STATUS" "$LINENO" 5


# configure is writing to config.log, and then calls config.status.
# config.status does its own redirection, appending to config.log.
# Unfortunately, on DOS this fails, as config.log is still kept open
# by configure, so config.status won't be able to write to it; its
# output is simply discarded.  So we exec the FD to /dev/null,
# effectively closing config.log, so it can be properly (re)opened and
# appended to by config.status.  When coming back to configure, we
# need to make the FD available again.
if test "$no_create" != yes; then
  ac_cs_success=:
  ac_config_status_args=
  test "$silent" = yes &&
    ac_config_status_args="$ac_config_status_args --quiet"
  exec 5>/dev/null
  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
  exec 5>>config.log
  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
  # would make configure fail if this is the last instruction.
  $ac_cs_success || as_fn_exit 1
fi
if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
printf "%s\n" "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
fi


